<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Core">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Diagnostics.Eventing.Reader">
      <topicdata group="api" />
      <apidata name="System.Diagnostics.Eventing.Reader" group="namespace" />
      <elements>
        <element api="T:System.Diagnostics.Eventing.Reader.EventBookmark" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventLogType" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventLogMode" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventLogLink" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventLogStatus" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventProperty" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventRecord" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventKeyword" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventLevel" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventLogReader" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" />
        <element api="T:System.Diagnostics.Eventing.Reader.SessionAuthentication" />
        <element api="T:System.Diagnostics.Eventing.Reader.PathType" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventLogSession" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventMetadata" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventOpcode" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventTask" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventLogException" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" />
        <element api="T:System.Diagnostics.Eventing.Reader.EventLogInformation" />
        <element api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" />
        <element api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" />
        <element api="T:System.Diagnostics.Eventing.Reader.StandardEventTask" />
        <element api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" />
        <element api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" />
      </elements>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventBookmark">
      <topicdata group="api" />
      <apidata name="EventBookmark" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventBookmark.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventBookmark.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventBookmark.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventBookmark">
      <topicdata name="EventBookmark" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventBookmark" />
      <apidata name="EventBookmark" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventBookmark.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventBookmark.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventBookmark" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventBookmark.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventBookmark" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventBookmark.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventBookmark" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventBookmark.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventBookmark" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventKeyword">
      <topicdata group="api" />
      <apidata name="EventKeyword" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventKeyword.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventKeyword.Name" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventKeyword.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventKeyword">
      <topicdata name="EventKeyword" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventKeyword" />
      <apidata name="EventKeyword" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventKeyword" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventKeyword">
      <topicdata name="EventKeyword" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventKeyword" />
      <apidata name="EventKeyword" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventKeyword.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventKeyword.Name" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventKeyword.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventKeyword" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventKeyword.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventKeyword" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventKeyword.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventKeyword" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventKeyword.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventKeyword" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLevel">
      <topicdata group="api" />
      <apidata name="EventLevel" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLevel.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLevel.Name" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLevel.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLevel">
      <topicdata name="EventLevel" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLevel" />
      <apidata name="EventLevel" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLevel" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLevel">
      <topicdata name="EventLevel" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLevel" />
      <apidata name="EventLevel" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLevel.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLevel.Name" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLevel.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLevel" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLevel.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLevel" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLevel.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLevel" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLevel.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLevel" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration">
      <topicdata group="api" />
      <apidata name="EventLogConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogConfiguration">
      <topicdata name="EventLogConfiguration" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />
      <apidata name="EventLogConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogConfiguration">
      <topicdata name="EventLogConfiguration" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />
      <apidata name="EventLogConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor" />
      <parameters>
        <parameter name="logName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor" />
      <parameters>
        <parameter name="logName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="session">
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog">
      <topicdata group="api" />
      <apidata name="IsClassicLog" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsClassicLog" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled">
      <topicdata group="api" />
      <apidata name="IsEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsEnabled" />
      <setter name="set_IsEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath">
      <topicdata group="api" />
      <apidata name="LogFilePath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LogFilePath" />
      <setter name="set_LogFilePath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation">
      <topicdata group="api" />
      <apidata name="LogIsolation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LogIsolation" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode">
      <topicdata group="api" />
      <apidata name="LogMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LogMode" />
      <setter name="set_LogMode" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName">
      <topicdata group="api" />
      <apidata name="LogName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LogName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType">
      <topicdata group="api" />
      <apidata name="LogType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LogType" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes">
      <topicdata group="api" />
      <apidata name="MaximumSizeInBytes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaximumSizeInBytes" />
      <setter name="set_MaximumSizeInBytes" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName">
      <topicdata group="api" />
      <apidata name="OwningProviderName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OwningProviderName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize">
      <topicdata group="api" />
      <apidata name="ProviderBufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProviderBufferSize" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid">
      <topicdata group="api" />
      <apidata name="ProviderControlGuid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProviderControlGuid" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords">
      <topicdata group="api" />
      <apidata name="ProviderKeywords" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProviderKeywords" />
      <setter name="set_ProviderKeywords" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency">
      <topicdata group="api" />
      <apidata name="ProviderLatency" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProviderLatency" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel">
      <topicdata group="api" />
      <apidata name="ProviderLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProviderLevel" />
      <setter name="set_ProviderLevel" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers">
      <topicdata group="api" />
      <apidata name="ProviderMaximumNumberOfBuffers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProviderMaximumNumberOfBuffers" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers">
      <topicdata group="api" />
      <apidata name="ProviderMinimumNumberOfBuffers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProviderMinimumNumberOfBuffers" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames">
      <topicdata group="api" />
      <apidata name="ProviderNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProviderNames" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges">
      <topicdata group="api" />
      <apidata name="SaveChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor">
      <topicdata group="api" />
      <apidata name="SecurityDescriptor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SecurityDescriptor" />
      <setter name="set_SecurityDescriptor" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogException">
      <topicdata group="api" />
      <apidata name="EventLogException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" ref="true" />
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" ref="true" />
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" ref="true" />
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogException.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogException.Message" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogException">
      <topicdata name="EventLogException" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogException" />
      <apidata name="EventLogException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogException">
      <topicdata name="EventLogException" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogException" />
      <apidata name="EventLogException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogException.Message" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" />
      </containers>
    </api>
    <api id="Events.T:System.Diagnostics.Eventing.Reader.EventLogException">
      <topicdata name="EventLogException" group="list" subgroup="Events" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogException" />
      <apidata name="EventLogException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogException.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogException.#ctor" />
      <parameters>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogException.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogException.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Exception.Message">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Message">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Runtime.InteropServices._Exception.Message">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogInformation">
      <topicdata group="api" />
      <apidata name="EventLogInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.Attributes" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.CreationTime" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.FileSize" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.IsLogFull" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastAccessTime" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastWriteTime" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.OldestRecordNumber" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.RecordCount" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogInformation">
      <topicdata name="EventLogInformation" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogInformation" />
      <apidata name="EventLogInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInformation" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogInformation">
      <topicdata name="EventLogInformation" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogInformation" />
      <apidata name="EventLogInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.Attributes" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.CreationTime" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.FileSize" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.IsLogFull" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastAccessTime" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastWriteTime" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.OldestRecordNumber" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.RecordCount" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInformation" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogInformation.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Attributes" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogInformation.CreationTime">
      <topicdata group="api" />
      <apidata name="CreationTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CreationTime" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogInformation.FileSize">
      <topicdata group="api" />
      <apidata name="FileSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FileSize" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogInformation.IsLogFull">
      <topicdata group="api" />
      <apidata name="IsLogFull" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsLogFull" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastAccessTime">
      <topicdata group="api" />
      <apidata name="LastAccessTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LastAccessTime" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastWriteTime">
      <topicdata group="api" />
      <apidata name="LastWriteTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LastWriteTime" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogInformation.OldestRecordNumber">
      <topicdata group="api" />
      <apidata name="OldestRecordNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OldestRecordNumber" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogInformation.RecordCount">
      <topicdata group="api" />
      <apidata name="RecordCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RecordCount" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInformation" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException">
      <topicdata group="api" />
      <apidata name="EventLogInvalidDataException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogException.Message" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException">
      <topicdata name="EventLogInvalidDataException" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" />
      <apidata name="EventLogInvalidDataException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException">
      <topicdata name="EventLogInvalidDataException" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" />
      <apidata name="EventLogInvalidDataException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogException.Message" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" />
      </containers>
    </api>
    <api id="Events.T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException">
      <topicdata name="EventLogInvalidDataException" group="list" subgroup="Events" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" />
      <apidata name="EventLogInvalidDataException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogIsolation">
      <topicdata group="api" />
      <apidata name="EventLogIsolation" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Application" />
        <element api="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.System" />
        <element api="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Custom" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Application">
      <topicdata group="api" notopic="" />
      <apidata name="Application" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Custom">
      <topicdata group="api" notopic="" />
      <apidata name="Custom" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.System">
      <topicdata group="api" notopic="" />
      <apidata name="System" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogLink">
      <topicdata group="api" />
      <apidata name="EventLogLink" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogLink.IsImported" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogLink.LogName" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogLink">
      <topicdata name="EventLogLink" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogLink" />
      <apidata name="EventLogLink" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogLink" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogLink">
      <topicdata name="EventLogLink" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogLink" />
      <apidata name="EventLogLink" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogLink.IsImported" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogLink.LogName" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogLink" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogLink" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogLink.IsImported">
      <topicdata group="api" />
      <apidata name="IsImported" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsImported" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogLink" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogLink.LogName">
      <topicdata group="api" />
      <apidata name="LogName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LogName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogLink" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogMode">
      <topicdata group="api" />
      <apidata name="EventLogMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.Eventing.Reader.EventLogMode.Circular" />
        <element api="F:System.Diagnostics.Eventing.Reader.EventLogMode.AutoBackup" />
        <element api="F:System.Diagnostics.Eventing.Reader.EventLogMode.Retain" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.EventLogMode.AutoBackup">
      <topicdata group="api" notopic="" />
      <apidata name="AutoBackup" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.EventLogMode.Circular">
      <topicdata group="api" notopic="" />
      <apidata name="Circular" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.EventLogMode.Retain">
      <topicdata group="api" notopic="" />
      <apidata name="Retain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException">
      <topicdata group="api" />
      <apidata name="EventLogNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogException.Message" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException">
      <topicdata name="EventLogNotFoundException" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" />
      <apidata name="EventLogNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException">
      <topicdata name="EventLogNotFoundException" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" />
      <apidata name="EventLogNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogException.Message" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" />
      </containers>
    </api>
    <api id="Events.T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException">
      <topicdata name="EventLogNotFoundException" group="list" subgroup="Events" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" />
      <apidata name="EventLogNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector">
      <topicdata group="api" />
      <apidata name="EventLogPropertySelector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.#ctor(System.Collections.Generic.IEnumerable{System.String})" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector">
      <topicdata name="EventLogPropertySelector" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" />
      <apidata name="EventLogPropertySelector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="propertyQueries">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException">
      <topicdata group="api" />
      <apidata name="EventLogProviderDisabledException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogException.Message" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException">
      <topicdata name="EventLogProviderDisabledException" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" />
      <apidata name="EventLogProviderDisabledException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException">
      <topicdata name="EventLogProviderDisabledException" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" />
      <apidata name="EventLogProviderDisabledException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogException.Message" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" />
      </containers>
    </api>
    <api id="Events.T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException">
      <topicdata name="EventLogProviderDisabledException" group="list" subgroup="Events" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" />
      <apidata name="EventLogProviderDisabledException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogQuery">
      <topicdata group="api" />
      <apidata name="EventLogQuery" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogQuery.Session" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogQuery">
      <topicdata name="EventLogQuery" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogQuery" />
      <apidata name="EventLogQuery" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogQuery">
      <topicdata name="EventLogQuery" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogQuery" />
      <apidata name="EventLogQuery" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogQuery.Session" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pathType">
          <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pathType">
          <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
        </parameter>
        <parameter name="query">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection">
      <topicdata group="api" />
      <apidata name="ReverseDirection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReverseDirection" />
      <setter name="set_ReverseDirection" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogQuery.Session">
      <topicdata group="api" />
      <apidata name="Session" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Session" />
      <setter name="set_Session" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors">
      <topicdata group="api" />
      <apidata name="TolerateQueryErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TolerateQueryErrors" />
      <setter name="set_TolerateQueryErrors" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogReader">
      <topicdata group="api" />
      <apidata name="EventLogReader" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)" />
        </element>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Seek">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogReader">
      <topicdata name="EventLogReader" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogReader" />
      <apidata name="EventLogReader" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Seek">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogReader">
      <topicdata name="EventLogReader" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogReader" />
      <apidata name="EventLogReader" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent">
      <topicdata name="ReadEvent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReadEvent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Seek">
      <topicdata name="Seek" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Seek" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor" />
      <parameters>
        <parameter name="eventQuery">
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor" />
      <parameters>
        <parameter name="eventQuery">
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
        </parameter>
        <parameter name="bookmark">
          <type api="T:System.Diagnostics.Eventing.Reader.EventBookmark" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pathType">
          <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize">
      <topicdata group="api" />
      <apidata name="BatchSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BatchSize" />
      <setter name="set_BatchSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading">
      <topicdata group="api" />
      <apidata name="CancelReading" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus">
      <topicdata group="api" />
      <apidata name="LogStatus" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LogStatus">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventLogStatus" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent">
      <topicdata group="api" />
      <apidata name="ReadEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="ReadEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)">
      <topicdata group="api" />
      <apidata name="Seek" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Seek" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bookmark">
          <type api="T:System.Diagnostics.Eventing.Reader.EventBookmark" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)">
      <topicdata group="api" />
      <apidata name="Seek" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Seek" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bookmark">
          <type api="T:System.Diagnostics.Eventing.Reader.EventBookmark" ref="true" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)">
      <topicdata group="api" />
      <apidata name="Seek" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Seek" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="origin">
          <type api="T:System.IO.SeekOrigin" ref="false" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogReadingException">
      <topicdata group="api" />
      <apidata name="EventLogReadingException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogException.Message" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogReadingException">
      <topicdata name="EventLogReadingException" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" />
      <apidata name="EventLogReadingException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogReadingException">
      <topicdata name="EventLogReadingException" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" />
      <apidata name="EventLogReadingException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogException.Message" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" />
      </containers>
    </api>
    <api id="Events.T:System.Diagnostics.Eventing.Reader.EventLogReadingException">
      <topicdata name="EventLogReadingException" group="list" subgroup="Events" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" />
      <apidata name="EventLogReadingException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogRecord">
      <topicdata group="api" />
      <apidata name="EventLogRecord" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})" />
        </element>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues(System.Diagnostics.Eventing.Reader.EventLogPropertySelector)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Id" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Level" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LogName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Properties" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Task" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.UserId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Version" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogRecord">
      <topicdata name="EventLogRecord" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogRecord" />
      <apidata name="EventLogRecord" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})" />
        </element>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues(System.Diagnostics.Eventing.Reader.EventLogPropertySelector)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogRecord">
      <topicdata name="EventLogRecord" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogRecord" />
      <apidata name="EventLogRecord" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Id" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Level" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LogName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Properties" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Task" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.UserId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Version" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription">
      <topicdata name="FormatDescription" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FormatDescription" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId">
      <topicdata group="api" />
      <apidata name="ActivityId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.ActivityId">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ActivityId" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark">
      <topicdata group="api" />
      <apidata name="Bookmark" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.Bookmark">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Bookmark" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventBookmark" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog">
      <topicdata group="api" />
      <apidata name="ContainerLog" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContainerLog" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose(System.Boolean)">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription">
      <topicdata group="api" />
      <apidata name="FormatDescription" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <topicdata group="api" />
      <apidata name="FormatDescription" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="values">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues(System.Diagnostics.Eventing.Reader.EventLogPropertySelector)">
      <topicdata group="api" />
      <apidata name="GetPropertyValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertySelector">
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.Id">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords">
      <topicdata group="api" />
      <apidata name="Keywords" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.Keywords">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Keywords" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames">
      <topicdata group="api" />
      <apidata name="KeywordsDisplayNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_KeywordsDisplayNames" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Level">
      <topicdata group="api" />
      <apidata name="Level" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.Level">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Level" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Byte" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName">
      <topicdata group="api" />
      <apidata name="LevelDisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_LevelDisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LogName">
      <topicdata group="api" />
      <apidata name="LogName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.LogName">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_LogName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName">
      <topicdata group="api" />
      <apidata name="MachineName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.MachineName">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_MachineName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds">
      <topicdata group="api" />
      <apidata name="MatchedQueryIds" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MatchedQueryIds" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode">
      <topicdata group="api" />
      <apidata name="Opcode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.Opcode">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Opcode" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int16" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName">
      <topicdata group="api" />
      <apidata name="OpcodeDisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_OpcodeDisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId">
      <topicdata group="api" />
      <apidata name="ProcessId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.ProcessId">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ProcessId" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.Properties">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventProperty" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId">
      <topicdata group="api" />
      <apidata name="ProviderId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderId">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ProviderId" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName">
      <topicdata group="api" />
      <apidata name="ProviderName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderName">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ProviderName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers">
      <topicdata group="api" />
      <apidata name="Qualifiers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.Qualifiers">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Qualifiers" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId">
      <topicdata group="api" />
      <apidata name="RecordId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.RecordId">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_RecordId" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId">
      <topicdata group="api" />
      <apidata name="RelatedActivityId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.RelatedActivityId">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_RelatedActivityId" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Task">
      <topicdata group="api" />
      <apidata name="Task" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.Task">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Task" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName">
      <topicdata group="api" />
      <apidata name="TaskDisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TaskDisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId">
      <topicdata group="api" />
      <apidata name="ThreadId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.ThreadId">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ThreadId" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated">
      <topicdata group="api" />
      <apidata name="TimeCreated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.TimeCreated">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TimeCreated" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml">
      <topicdata group="api" />
      <apidata name="ToXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.Eventing.Reader.EventRecord.ToXml">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.UserId">
      <topicdata group="api" />
      <apidata name="UserId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.UserId">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_UserId" />
      <returns>
        <type api="T:System.Security.Principal.SecurityIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.Version">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Version" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Byte" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogSession">
      <topicdata group="api" />
      <apidata name="EventLogSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)" />
        </element>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogSession">
      <topicdata name="EventLogSession" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogSession" />
      <apidata name="EventLogSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogSession">
      <topicdata name="EventLogSession" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogSession" />
      <apidata name="EventLogSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog">
      <topicdata name="ClearLog" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ClearLog" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog">
      <topicdata name="ExportLog" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ExportLog" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages">
      <topicdata name="ExportLogAndMessages" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ExportLogAndMessages" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor" />
      <parameters>
        <parameter name="server">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor" />
      <parameters>
        <parameter name="server">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="domain">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="user">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.Security.SecureString" ref="true" />
        </parameter>
        <parameter name="logOnType">
          <type api="T:System.Diagnostics.Eventing.Reader.SessionAuthentication" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations">
      <topicdata group="api" />
      <apidata name="CancelCurrentOperations" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)">
      <topicdata group="api" />
      <apidata name="ClearLog" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="logName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ClearLog" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="logName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="backupPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ExportLog" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pathType">
          <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
        </parameter>
        <parameter name="query">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetFilePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ExportLog" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pathType">
          <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
        </parameter>
        <parameter name="query">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetFilePath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tolerateQueryErrors">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ExportLogAndMessages" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pathType">
          <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
        </parameter>
        <parameter name="query">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetFilePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="ExportLogAndMessages" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pathType">
          <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
        </parameter>
        <parameter name="query">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetFilePath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tolerateQueryErrors">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="targetCultureInfo">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <topicdata group="api" />
      <apidata name="GetLogInformation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="logName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pathType">
          <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames">
      <topicdata group="api" />
      <apidata name="GetLogNames" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames">
      <topicdata group="api" />
      <apidata name="GetProviderNames" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession">
      <topicdata group="api" />
      <apidata name="GlobalSession" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GlobalSession" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogStatus">
      <topicdata group="api" />
      <apidata name="EventLogStatus" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogStatus.LogName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogStatus">
      <topicdata name="EventLogStatus" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogStatus" />
      <apidata name="EventLogStatus" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogStatus" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogStatus">
      <topicdata name="EventLogStatus" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogStatus" />
      <apidata name="EventLogStatus" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogStatus.LogName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogStatus" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogStatus.LogName">
      <topicdata group="api" />
      <apidata name="LogName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LogName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogStatus" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode">
      <topicdata group="api" />
      <apidata name="StatusCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StatusCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogStatus" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogType">
      <topicdata group="api" />
      <apidata name="EventLogType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.Eventing.Reader.EventLogType.Administrative" />
        <element api="F:System.Diagnostics.Eventing.Reader.EventLogType.Operational" />
        <element api="F:System.Diagnostics.Eventing.Reader.EventLogType.Analytical" />
        <element api="F:System.Diagnostics.Eventing.Reader.EventLogType.Debug" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.EventLogType.Administrative">
      <topicdata group="api" notopic="" />
      <apidata name="Administrative" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.EventLogType.Analytical">
      <topicdata group="api" notopic="" />
      <apidata name="Analytical" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.EventLogType.Debug">
      <topicdata group="api" notopic="" />
      <apidata name="Debug" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.EventLogType.Operational">
      <topicdata group="api" notopic="" />
      <apidata name="Operational" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogType" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogWatcher">
      <topicdata group="api" />
      <apidata name="EventLogWatcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogWatcher">
      <topicdata name="EventLogWatcher" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />
      <apidata name="EventLogWatcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogWatcher">
      <topicdata name="EventLogWatcher" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />
      <apidata name="EventLogWatcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />
      </containers>
    </api>
    <api id="Events.T:System.Diagnostics.Eventing.Reader.EventLogWatcher">
      <topicdata name="EventLogWatcher" group="list" subgroup="Events" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />
      <apidata name="EventLogWatcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor" />
      <parameters>
        <parameter name="eventQuery">
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor" />
      <parameters>
        <parameter name="eventQuery">
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
        </parameter>
        <parameter name="bookmark">
          <type api="T:System.Diagnostics.Eventing.Reader.EventBookmark" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor" />
      <parameters>
        <parameter name="eventQuery">
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
        </parameter>
        <parameter name="bookmark">
          <type api="T:System.Diagnostics.Eventing.Reader.EventBookmark" ref="true" />
        </parameter>
        <parameter name="readExistingEvents">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled">
      <topicdata group="api" />
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Enabled" />
      <setter name="set_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" ref="true" />
      </containers>
    </api>
    <api id="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten">
      <topicdata group="api" />
      <apidata name="EventRecordWritten" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_EventRecordWritten" />
      <remover name="remove_EventRecordWritten" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventMetadata">
      <topicdata group="api" />
      <apidata name="EventMetadata" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Description" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Id" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Keywords" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Level" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.LogLink" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Opcode" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Task" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Template" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Version" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventMetadata">
      <topicdata name="EventMetadata" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventMetadata" />
      <apidata name="EventMetadata" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventMetadata">
      <topicdata name="EventMetadata" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventMetadata" />
      <apidata name="EventMetadata" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Description" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Id" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Keywords" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Level" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.LogLink" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Opcode" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Task" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Template" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Version" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventMetadata.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventMetadata.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventMetadata.Keywords">
      <topicdata group="api" />
      <apidata name="Keywords" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Keywords" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventKeyword" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventMetadata.Level">
      <topicdata group="api" />
      <apidata name="Level" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Level" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLevel" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventMetadata.LogLink">
      <topicdata group="api" />
      <apidata name="LogLink" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LogLink" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogLink" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventMetadata.Opcode">
      <topicdata group="api" />
      <apidata name="Opcode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Opcode" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventOpcode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventMetadata.Task">
      <topicdata group="api" />
      <apidata name="Task" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Task" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventTask" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventMetadata.Template">
      <topicdata group="api" />
      <apidata name="Template" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Template" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventMetadata.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Version" />
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventOpcode">
      <topicdata group="api" />
      <apidata name="EventOpcode" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventOpcode.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventOpcode.Name" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventOpcode.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventOpcode">
      <topicdata name="EventOpcode" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventOpcode" />
      <apidata name="EventOpcode" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventOpcode" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventOpcode">
      <topicdata name="EventOpcode" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventOpcode" />
      <apidata name="EventOpcode" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventOpcode.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventOpcode.Name" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventOpcode.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventOpcode" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventOpcode.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventOpcode" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventOpcode.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventOpcode" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventOpcode.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventOpcode" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventProperty">
      <topicdata group="api" />
      <apidata name="EventProperty" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventProperty.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventProperty">
      <topicdata name="EventProperty" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventProperty" />
      <apidata name="EventProperty" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventProperty" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventProperty">
      <topicdata name="EventProperty" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventProperty" />
      <apidata name="EventProperty" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventProperty.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventProperty" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventProperty.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventProperty" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventRecord">
      <topicdata group="api" />
      <apidata name="EventRecord" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.#ctor" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventRecord.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription">
          <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})" />
        </element>
        <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.ToXml" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.ActivityId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Bookmark" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Id" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Keywords" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Level" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.LogName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.MachineName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Opcode" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.ProcessId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Properties" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Qualifiers" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.RecordId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.RelatedActivityId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Task" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.ThreadId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.TimeCreated" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.UserId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Version" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventRecord">
      <topicdata name="EventRecord" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventRecord" />
      <apidata name="EventRecord" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventRecord.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription">
          <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})" />
        </element>
        <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.ToXml" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventRecord">
      <topicdata name="EventRecord" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventRecord" />
      <apidata name="EventRecord" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.ActivityId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Bookmark" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Id" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Keywords" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Level" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.LogName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.MachineName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Opcode" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.ProcessId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Properties" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Qualifiers" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.RecordId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.RelatedActivityId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Task" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.ThreadId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.TimeCreated" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.UserId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Version" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventRecord.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription">
      <topicdata name="FormatDescription" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FormatDescription" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventRecord.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.ActivityId">
      <topicdata group="api" />
      <apidata name="ActivityId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ActivityId" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.Bookmark">
      <topicdata group="api" />
      <apidata name="Bookmark" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Bookmark" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventBookmark" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventRecord.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.Eventing.Reader.EventRecord.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription">
      <topicdata group="api" />
      <apidata name="FormatDescription" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <topicdata group="api" />
      <apidata name="FormatDescription" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="values">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.Keywords">
      <topicdata group="api" />
      <apidata name="Keywords" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Keywords" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames">
      <topicdata group="api" />
      <apidata name="KeywordsDisplayNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_KeywordsDisplayNames" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.Level">
      <topicdata group="api" />
      <apidata name="Level" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Level" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Byte" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName">
      <topicdata group="api" />
      <apidata name="LevelDisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_LevelDisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.LogName">
      <topicdata group="api" />
      <apidata name="LogName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_LogName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.MachineName">
      <topicdata group="api" />
      <apidata name="MachineName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_MachineName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.Opcode">
      <topicdata group="api" />
      <apidata name="Opcode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Opcode" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int16" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName">
      <topicdata group="api" />
      <apidata name="OpcodeDisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_OpcodeDisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.ProcessId">
      <topicdata group="api" />
      <apidata name="ProcessId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ProcessId" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventProperty" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderId">
      <topicdata group="api" />
      <apidata name="ProviderId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ProviderId" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderName">
      <topicdata group="api" />
      <apidata name="ProviderName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ProviderName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.Qualifiers">
      <topicdata group="api" />
      <apidata name="Qualifiers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Qualifiers" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.RecordId">
      <topicdata group="api" />
      <apidata name="RecordId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RecordId" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.RelatedActivityId">
      <topicdata group="api" />
      <apidata name="RelatedActivityId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RelatedActivityId" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.Task">
      <topicdata group="api" />
      <apidata name="Task" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Task" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName">
      <topicdata group="api" />
      <apidata name="TaskDisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_TaskDisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.ThreadId">
      <topicdata group="api" />
      <apidata name="ThreadId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ThreadId" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.TimeCreated">
      <topicdata group="api" />
      <apidata name="TimeCreated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_TimeCreated" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventRecord.ToXml">
      <topicdata group="api" />
      <apidata name="ToXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.UserId">
      <topicdata group="api" />
      <apidata name="UserId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_UserId" />
      <returns>
        <type api="T:System.Security.Principal.SecurityIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Version" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Byte" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs">
      <topicdata group="api" />
      <apidata name="EventRecordWrittenEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs">
      <topicdata name="EventRecordWrittenEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" />
      <apidata name="EventRecordWrittenEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs">
      <topicdata name="EventRecordWrittenEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" />
      <apidata name="EventRecordWrittenEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException">
      <topicdata group="api" />
      <apidata name="EventException" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EventException" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord">
      <topicdata group="api" />
      <apidata name="EventRecord" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EventRecord" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventTask">
      <topicdata group="api" />
      <apidata name="EventTask" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventTask.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventTask.EventGuid" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventTask.Name" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventTask.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventTask">
      <topicdata name="EventTask" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventTask" />
      <apidata name="EventTask" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventTask" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventTask">
      <topicdata name="EventTask" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventTask" />
      <apidata name="EventTask" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventTask.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventTask.EventGuid" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventTask.Name" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventTask.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventTask" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventTask.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventTask" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventTask.EventGuid">
      <topicdata group="api" />
      <apidata name="EventGuid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EventGuid" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventTask" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventTask.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventTask" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventTask.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventTask" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.PathType">
      <topicdata group="api" />
      <apidata name="PathType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.Eventing.Reader.PathType.LogName" />
        <element api="F:System.Diagnostics.Eventing.Reader.PathType.FilePath" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.PathType.FilePath">
      <topicdata group="api" notopic="" />
      <apidata name="FilePath" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.PathType.LogName">
      <topicdata group="api" notopic="" />
      <apidata name="LogName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.ProviderMetadata">
      <topicdata group="api" />
      <apidata name="ProviderMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession,System.Globalization.CultureInfo)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Events" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.HelpLink" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Id" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Keywords" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Levels" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.LogLinks" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.MessageFilePath" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Name" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Opcodes" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ParameterFilePath" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ResourceFilePath" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Tasks" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.ProviderMetadata">
      <topicdata name="ProviderMetadata" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" />
      <apidata name="ProviderMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.ProviderMetadata">
      <topicdata name="ProviderMetadata" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" />
      <apidata name="ProviderMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Events" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.HelpLink" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Id" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Keywords" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Levels" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.LogLinks" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.MessageFilePath" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Name" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Opcodes" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ParameterFilePath" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ResourceFilePath" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Tasks" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession,System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose" />
        <element api="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor" />
      <parameters>
        <parameter name="providerName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession,System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor" />
      <parameters>
        <parameter name="providerName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="session">
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
        </parameter>
        <parameter name="targetCultureInfo">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DisplayName">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Events">
      <topicdata group="api" />
      <apidata name="Events" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Events">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.HelpLink">
      <topicdata group="api" />
      <apidata name="HelpLink" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HelpLink" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Keywords">
      <topicdata group="api" />
      <apidata name="Keywords" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Keywords" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventKeyword" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Levels">
      <topicdata group="api" />
      <apidata name="Levels" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Levels" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventLevel" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.LogLinks">
      <topicdata group="api" />
      <apidata name="LogLinks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LogLinks">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventLogLink" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.MessageFilePath">
      <topicdata group="api" />
      <apidata name="MessageFilePath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MessageFilePath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Opcodes">
      <topicdata group="api" />
      <apidata name="Opcodes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Opcodes" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventOpcode" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ParameterFilePath">
      <topicdata group="api" />
      <apidata name="ParameterFilePath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParameterFilePath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ResourceFilePath">
      <topicdata group="api" />
      <apidata name="ResourceFilePath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ResourceFilePath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Tasks">
      <topicdata group="api" />
      <apidata name="Tasks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Tasks" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventTask" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.SessionAuthentication">
      <topicdata group="api" />
      <apidata name="SessionAuthentication" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Default" />
        <element api="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Negotiate" />
        <element api="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Kerberos" />
        <element api="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Ntlm" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.SessionAuthentication" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.SessionAuthentication" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Kerberos">
      <topicdata group="api" notopic="" />
      <apidata name="Kerberos" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.SessionAuthentication" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.SessionAuthentication" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Negotiate">
      <topicdata group="api" notopic="" />
      <apidata name="Negotiate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.SessionAuthentication" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.SessionAuthentication" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Ntlm">
      <topicdata group="api" notopic="" />
      <apidata name="Ntlm" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.SessionAuthentication" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.SessionAuthentication" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords">
      <topicdata group="api" />
      <apidata name="StandardEventKeywords" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <enumerationbase>
        <type api="T:System.Int64" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.None" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.ResponseTime" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiContext" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiDiagnostic" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.Sqm" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditFailure" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditSuccess" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint2" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.EventLogClassic" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditFailure">
      <topicdata group="api" notopic="" />
      <apidata name="AuditFailure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </returns>
      <value>4503599627370496</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditSuccess">
      <topicdata group="api" notopic="" />
      <apidata name="AuditSuccess" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </returns>
      <value>9007199254740992</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint">
      <topicdata group="api" notopic="" />
      <apidata name="CorrelationHint" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </returns>
      <value>4503599627370496</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Incorrect value: use CorrelationHint2 instead</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint2">
      <topicdata group="api" notopic="" />
      <apidata name="CorrelationHint2" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </returns>
      <value>18014398509481984</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.EventLogClassic">
      <topicdata group="api" notopic="" />
      <apidata name="EventLogClassic" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </returns>
      <value>36028797018963968</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.ResponseTime">
      <topicdata group="api" notopic="" />
      <apidata name="ResponseTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </returns>
      <value>281474976710656</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.Sqm">
      <topicdata group="api" notopic="" />
      <apidata name="Sqm" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </returns>
      <value>2251799813685248</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiContext">
      <topicdata group="api" notopic="" />
      <apidata name="WdiContext" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </returns>
      <value>562949953421312</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiDiagnostic">
      <topicdata group="api" notopic="" />
      <apidata name="WdiDiagnostic" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </returns>
      <value>1125899906842624</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.StandardEventLevel">
      <topicdata group="api" />
      <apidata name="StandardEventLevel" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.LogAlways" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Critical" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Error" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Warning" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Informational" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Verbose" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Critical">
      <topicdata group="api" notopic="" />
      <apidata name="Critical" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Error">
      <topicdata group="api" notopic="" />
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Informational">
      <topicdata group="api" notopic="" />
      <apidata name="Informational" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.LogAlways">
      <topicdata group="api" notopic="" />
      <apidata name="LogAlways" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Verbose">
      <topicdata group="api" notopic="" />
      <apidata name="Verbose" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Warning">
      <topicdata group="api" notopic="" />
      <apidata name="Warning" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode">
      <topicdata group="api" />
      <apidata name="StandardEventOpcode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Info" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Start" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Stop" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStart" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStop" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Extension" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Reply" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Resume" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Suspend" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Send" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Receive" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStart">
      <topicdata group="api" notopic="" />
      <apidata name="DataCollectionStart" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStop">
      <topicdata group="api" notopic="" />
      <apidata name="DataCollectionStop" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Extension">
      <topicdata group="api" notopic="" />
      <apidata name="Extension" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Info">
      <topicdata group="api" notopic="" />
      <apidata name="Info" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Receive">
      <topicdata group="api" notopic="" />
      <apidata name="Receive" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>240</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Reply">
      <topicdata group="api" notopic="" />
      <apidata name="Reply" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Resume">
      <topicdata group="api" notopic="" />
      <apidata name="Resume" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Send">
      <topicdata group="api" notopic="" />
      <apidata name="Send" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Start">
      <topicdata group="api" notopic="" />
      <apidata name="Start" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Stop">
      <topicdata group="api" notopic="" />
      <apidata name="Stop" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Suspend">
      <topicdata group="api" notopic="" />
      <apidata name="Suspend" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.StandardEventTask">
      <topicdata group="api" />
      <apidata name="StandardEventTask" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventTask.None" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventTask.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventTask" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventTask" ref="false" />
      </containers>
    </api>
  </apis>
</reflection>