<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Web">
      <assemblydata version="4.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>add_permissions_for_users.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>properties_security_tab_w_user.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>properties_security_tab.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WebForms.js</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>application/x-javascript</value>
          </argument>
          <assignment name="CdnSupportsSecureConnection">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="CdnPath">
            <type api="T:System.String" ref="true" />
            <value>http://ajax.aspnetcdn.com/ajax/4.6/1/WebForms.js</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Focus.js</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>application/x-javascript</value>
          </argument>
          <assignment name="CdnSupportsSecureConnection">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="CdnPath">
            <type api="T:System.String" ref="true" />
            <value>http://ajax.aspnetcdn.com/ajax/4.6/1/Focus.js</value>
          </assignment>
          <assignment name="LoadSuccessExpression">
            <type api="T:System.String" ref="true" />
            <value>window.WebForm_FindFirstFocusableChild</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SmartNav.htm</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>text/html</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SmartNav.js</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>application/x-javascript</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WebUIValidation.js</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>application/x-javascript</value>
          </argument>
          <assignment name="CdnSupportsSecureConnection">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="CdnPath">
            <type api="T:System.String" ref="true" />
            <value>http://ajax.aspnetcdn.com/ajax/4.6/1/WebUIValidation.js</value>
          </assignment>
          <assignment name="LoadSuccessExpression">
            <type api="T:System.String" ref="true" />
            <value>window.Page_ValidationVer</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView.js</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>application/x-javascript</value>
          </argument>
          <assignment name="CdnSupportsSecureConnection">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="CdnPath">
            <type api="T:System.String" ref="true" />
            <value>http://ajax.aspnetcdn.com/ajax/4.6/1/TreeView.js</value>
          </assignment>
          <assignment name="LoadSuccessExpression">
            <type api="T:System.String" ref="true" />
            <value>window.TreeView_HoverNode</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Menu.js</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>application/x-javascript</value>
          </argument>
          <assignment name="CdnSupportsSecureConnection">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="CdnPath">
            <type api="T:System.String" ref="true" />
            <value>http://ajax.aspnetcdn.com/ajax/4.6/1/Menu.js</value>
          </assignment>
          <assignment name="LoadSuccessExpression">
            <type api="T:System.String" ref="true" />
            <value>window.Menu_ClearInterval</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>MenuStandards.js</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>application/x-javascript</value>
          </argument>
          <assignment name="CdnSupportsSecureConnection">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="CdnPath">
            <type api="T:System.String" ref="true" />
            <value>http://ajax.aspnetcdn.com/ajax/4.6/1/MenuStandards.js</value>
          </assignment>
          <assignment name="LoadSuccessExpression">
            <type api="T:System.String" ref="true" />
            <value>window.Sys &amp;&amp; Sys.WebForms &amp;&amp; Sys.WebForms.Menu</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WebParts.js</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>application/x-javascript</value>
          </argument>
          <assignment name="CdnSupportsSecureConnection">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="CdnPath">
            <type api="T:System.String" ref="true" />
            <value>http://ajax.aspnetcdn.com/ajax/4.6/1/WebParts.js</value>
          </assignment>
          <assignment name="LoadSuccessExpression">
            <type api="T:System.String" ref="true" />
            <value>window.WebPart</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GridView.js</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>application/x-javascript</value>
          </argument>
          <assignment name="CdnSupportsSecureConnection">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="CdnPath">
            <type api="T:System.String" ref="true" />
            <value>http://ajax.aspnetcdn.com/ajax/4.6/1/GridView.js</value>
          </assignment>
          <assignment name="LoadSuccessExpression">
            <type api="T:System.String" ref="true" />
            <value>window.GridView</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DetailsView.js</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>application/x-javascript</value>
          </argument>
          <assignment name="CdnSupportsSecureConnection">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="CdnPath">
            <type api="T:System.String" ref="true" />
            <value>http://ajax.aspnetcdn.com/ajax/4.6/1/DetailsView.js</value>
          </assignment>
          <assignment name="LoadSuccessExpression">
            <type api="T:System.String" ref="true" />
            <value>window.DetailsView</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Spacer.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Menu_Default_Separator.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Menu_Popout.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Menu_ScrollDown.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Menu_ScrollUp.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Default_Dash.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Default_DashCollapse.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Default_DashExpand.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Default_I.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Default_L.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Default_LCollapse.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Default_LExpand.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Default_R.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Default_RCollapse.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Default_RExpand.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Default_T.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Default_TCollapse.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Default_TExpand.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Default_Expand.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Default_Collapse.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Default_NoExpand.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_XP_Explorer_Expand.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_XP_Explorer_Collapse.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_XP_Explorer_NoExpand.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_XP_Explorer_RootNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_XP_Explorer_ParentNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_XP_Explorer_LeafNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_MSDN_Expand.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_MSDN_Collapse.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_MSDN_NoExpand.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Windows_Help_Expand.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Windows_Help_Collapse.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Windows_Help_NoExpand.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Arrows_Collapse.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Arrows_Expand.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Arrows_NoExpand.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_BulletedList2_LeafNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_BulletedList2_ParentNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_BulletedList2_RootNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_BulletedList3_LeafNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_BulletedList3_ParentNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_BulletedList3_RootNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_BulletedList4_LeafNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_BulletedList4_ParentNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_BulletedList4_RootNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_BulletedList_LeafNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_BulletedList_ParentNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_BulletedList_RootNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Contacts_Collapse.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Contacts_Expand.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Contacts_NoExpand.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Events_LeafNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Events_ParentNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Events_RootNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_FAQ_LeafNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_FAQ_ParentNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_FAQ_RootNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Inbox_LeafNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Inbox_ParentNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Inbox_RootNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_News_LeafNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_News_ParentNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_News_RootNode.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Simple2_NoExpand.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TreeView_Simple_NoExpand.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.UI.WebResourceAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WebPartMenu_Check.gif</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>image/gif</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
          <assignment name="PartialTrustVisibilityLevel">
            <type api="T:System.Security.PartialTrustVisibilityLevel" ref="false" />
            <enumValue>
              <field name="NotVisibleByDefault" />
            </enumValue>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Web.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Web.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Web.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.Web.ApplicationServices">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
          <assignment name="PartialTrustVisibilityLevel">
            <type api="T:System.Security.PartialTrustVisibilityLevel" ref="false" />
            <enumValue>
              <field name="NotVisibleByDefault" />
            </enumValue>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Web.ApplicationServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Web.ApplicationServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Web.ApplicationServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\35MSSharedLib1024.snk</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Web.Hosting">
      <topicdata group="api" />
      <apidata name="System.Web.Hosting" group="namespace" />
      <elements>
        <element api="T:System.Web.Hosting.IApplicationMonitor" />
        <element api="T:System.Web.Hosting.ApplicationMonitors" />
        <element api="T:System.Web.Hosting.RecycleLimitNotificationFrequency" />
        <element api="T:System.Web.Hosting.RecycleLimitInfo" />
        <element api="T:System.Web.Hosting.LowPhysicalMemoryInfo" />
        <element api="T:System.Web.Hosting.AspNetMemoryMonitor" />
        <element api="T:System.Web.Hosting.RecycleLimitObserver" />
        <element api="T:System.Web.Hosting.RecycleLimitMonitor" />
        <element api="T:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton" />
        <element api="T:System.Web.Hosting.LowPhysicalMemoryObserver" />
        <element api="T:System.Web.Hosting.ISuspendibleRegisteredObject" />
        <element api="T:System.Web.Hosting.IProcessHostSupportFunctions" />
        <element api="T:System.Web.Hosting.IProcessPingCallback" />
        <element api="T:System.Web.Hosting.IListenerChannelCallback" />
        <element api="T:System.Web.Hosting.IStopListeningRegisteredObject" />
        <element api="T:System.Web.Hosting.IAppDomainFactory" />
        <element api="T:System.Web.Hosting.AppDomainFactory" />
        <element api="T:System.Web.Hosting.IAppManagerAppDomainFactory" />
        <element api="T:System.Web.Hosting.AppManagerAppDomainFactory" />
        <element api="T:System.Web.Hosting.AppDomainProtocolHandler" />
        <element api="T:System.Web.Hosting.ApplicationHost" />
        <element api="T:System.Web.Hosting.ApplicationInfo" />
        <element api="T:System.Web.Hosting.HostSecurityPolicyResults" />
        <element api="T:System.Web.Hosting.HostSecurityPolicyResolver" />
        <element api="T:System.Web.Hosting.ApplicationManager" />
        <element api="T:System.Web.Hosting.HostingEnvironment" />
        <element api="T:System.Web.Hosting.IApplicationHost" />
        <element api="T:System.Web.Hosting.IProcessHostPreloadClient" />
        <element api="T:System.Web.Hosting.IRegisteredObject" />
        <element api="T:System.Web.Hosting.IISAPIRuntime" />
        <element api="T:System.Web.Hosting.ISAPIRuntime" />
        <element api="T:System.Web.Hosting.IProcessHost" />
        <element api="T:System.Web.Hosting.IAdphManager" />
        <element api="T:System.Web.Hosting.IPphManager" />
        <element api="T:System.Web.Hosting.IProcessHostIdleAndHealthCheck" />
        <element api="T:System.Web.Hosting.IAppDomainInfo" />
        <element api="T:System.Web.Hosting.IAppDomainInfoEnum" />
        <element api="T:System.Web.Hosting.AppDomainInfoEnum" />
        <element api="T:System.Web.Hosting.AppDomainInfo" />
        <element api="T:System.Web.Hosting.IApplicationPreloadManager" />
        <element api="T:System.Web.Hosting.IApplicationPreloadUtil" />
        <element api="T:System.Web.Hosting.ProcessHost" />
        <element api="T:System.Web.Hosting.IProcessHostFactoryHelper" />
        <element api="T:System.Web.Hosting.ProcessHostFactoryHelper" />
        <element api="T:System.Web.Hosting.ProcessProtocolHandler" />
        <element api="T:System.Web.Hosting.SimpleWorkerRequest" />
        <element api="T:System.Web.Hosting.VirtualPathProvider" />
        <element api="T:System.Web.Hosting.VirtualFileBase" />
        <element api="T:System.Web.Hosting.VirtualFile" />
        <element api="T:System.Web.Hosting.VirtualDirectory" />
        <element api="T:System.Web.Hosting.CustomLoaderAttribute" />
      </elements>
    </api>
    <api id="T:System.Web.Hosting.AppDomainFactory">
      <topicdata group="api" />
      <apidata name="AppDomainFactory" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Web.Hosting.AppDomainFactory.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Web.Hosting.IAppDomainFactory" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.AppDomainFactory.#ctor" />
        <element api="M:System.Web.Hosting.AppDomainFactory.Create(System.String,System.String,System.String,System.String,System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.AppDomainFactory">
      <topicdata name="AppDomainFactory" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.AppDomainFactory" />
      <apidata name="AppDomainFactory" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Web.Hosting.AppDomainFactory.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.AppDomainFactory.Create(System.String,System.String,System.String,System.String,System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppDomainFactory" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AppDomainFactory.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppDomainFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AppDomainFactory.Create(System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="module">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="appId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="appPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="strUrlOfAppOrigin">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="iZone">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Web.Hosting.IAppDomainFactory.Create(System.String,System.String,System.String,System.String,System.String,System.Int32)">
          <type api="T:System.Web.Hosting.IAppDomainFactory" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppDomainFactory" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.AppDomainInfo">
      <topicdata group="api" />
      <apidata name="AppDomainInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Web.Hosting.IAppDomainInfo" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.AppDomainInfo.GetId" />
        <element api="M:System.Web.Hosting.AppDomainInfo.GetPhysicalPath" />
        <element api="M:System.Web.Hosting.AppDomainInfo.GetSiteId" />
        <element api="M:System.Web.Hosting.AppDomainInfo.GetVirtualPath" />
        <element api="M:System.Web.Hosting.AppDomainInfo.IsIdle" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.AppDomainInfo">
      <topicdata name="AppDomainInfo" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.AppDomainInfo" />
      <apidata name="AppDomainInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.AppDomainInfo.GetId" />
        <element api="M:System.Web.Hosting.AppDomainInfo.GetPhysicalPath" />
        <element api="M:System.Web.Hosting.AppDomainInfo.GetSiteId" />
        <element api="M:System.Web.Hosting.AppDomainInfo.GetVirtualPath" />
        <element api="M:System.Web.Hosting.AppDomainInfo.IsIdle" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppDomainInfo" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AppDomainInfo.GetId">
      <topicdata group="api" />
      <apidata name="GetId" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Web.Hosting.IAppDomainInfo.GetId">
          <type api="T:System.Web.Hosting.IAppDomainInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppDomainInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AppDomainInfo.GetPhysicalPath">
      <topicdata group="api" />
      <apidata name="GetPhysicalPath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Web.Hosting.IAppDomainInfo.GetPhysicalPath">
          <type api="T:System.Web.Hosting.IAppDomainInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppDomainInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AppDomainInfo.GetSiteId">
      <topicdata group="api" />
      <apidata name="GetSiteId" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Web.Hosting.IAppDomainInfo.GetSiteId">
          <type api="T:System.Web.Hosting.IAppDomainInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppDomainInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AppDomainInfo.GetVirtualPath">
      <topicdata group="api" />
      <apidata name="GetVirtualPath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Web.Hosting.IAppDomainInfo.GetVirtualPath">
          <type api="T:System.Web.Hosting.IAppDomainInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppDomainInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AppDomainInfo.IsIdle">
      <topicdata group="api" />
      <apidata name="IsIdle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Web.Hosting.IAppDomainInfo.IsIdle">
          <type api="T:System.Web.Hosting.IAppDomainInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppDomainInfo" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.AppDomainInfoEnum">
      <topicdata group="api" />
      <apidata name="AppDomainInfoEnum" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Web.Hosting.IAppDomainInfoEnum" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.AppDomainInfoEnum.Count" />
        <element api="M:System.Web.Hosting.AppDomainInfoEnum.GetData" />
        <element api="M:System.Web.Hosting.AppDomainInfoEnum.MoveNext" />
        <element api="M:System.Web.Hosting.AppDomainInfoEnum.Reset" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.AppDomainInfoEnum">
      <topicdata name="AppDomainInfoEnum" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.AppDomainInfoEnum" />
      <apidata name="AppDomainInfoEnum" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.AppDomainInfoEnum.Count" />
        <element api="M:System.Web.Hosting.AppDomainInfoEnum.GetData" />
        <element api="M:System.Web.Hosting.AppDomainInfoEnum.MoveNext" />
        <element api="M:System.Web.Hosting.AppDomainInfoEnum.Reset" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppDomainInfoEnum" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AppDomainInfoEnum.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Web.Hosting.IAppDomainInfoEnum.Count">
          <type api="T:System.Web.Hosting.IAppDomainInfoEnum" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppDomainInfoEnum" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AppDomainInfoEnum.GetData">
      <topicdata group="api" />
      <apidata name="GetData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Web.Hosting.IAppDomainInfo" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Web.Hosting.IAppDomainInfoEnum.GetData">
          <type api="T:System.Web.Hosting.IAppDomainInfoEnum" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppDomainInfoEnum" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AppDomainInfoEnum.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Web.Hosting.IAppDomainInfoEnum.MoveNext">
          <type api="T:System.Web.Hosting.IAppDomainInfoEnum" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppDomainInfoEnum" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AppDomainInfoEnum.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Web.Hosting.IAppDomainInfoEnum.Reset">
          <type api="T:System.Web.Hosting.IAppDomainInfoEnum" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppDomainInfoEnum" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.AppDomainProtocolHandler">
      <topicdata group="api" />
      <apidata name="AppDomainProtocolHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Web.Hosting.IRegisteredObject" ref="true" />
      </implements>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="Overload:System.Web.Hosting.AppDomainProtocolHandler.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.AppDomainProtocolHandler.#ctor" />
        <element api="M:System.Web.Hosting.AppDomainProtocolHandler.InitializeLifetimeService" />
        <element api="M:System.Web.Hosting.AppDomainProtocolHandler.StartListenerChannel(System.Web.Hosting.IListenerChannelCallback)" />
        <element api="M:System.Web.Hosting.AppDomainProtocolHandler.Stop(System.Boolean)" />
        <element api="M:System.Web.Hosting.AppDomainProtocolHandler.StopListenerChannel(System.Int32,System.Boolean)" />
        <element api="M:System.Web.Hosting.AppDomainProtocolHandler.StopProtocol(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.AppDomainProtocolHandler">
      <topicdata name="AppDomainProtocolHandler" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.AppDomainProtocolHandler" />
      <apidata name="AppDomainProtocolHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="Overload:System.Web.Hosting.AppDomainProtocolHandler.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.AppDomainProtocolHandler.InitializeLifetimeService" />
        <element api="M:System.Web.Hosting.AppDomainProtocolHandler.StartListenerChannel(System.Web.Hosting.IListenerChannelCallback)" />
        <element api="M:System.Web.Hosting.AppDomainProtocolHandler.Stop(System.Boolean)" />
        <element api="M:System.Web.Hosting.AppDomainProtocolHandler.StopListenerChannel(System.Int32,System.Boolean)" />
        <element api="M:System.Web.Hosting.AppDomainProtocolHandler.StopProtocol(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppDomainProtocolHandler" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AppDomainProtocolHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppDomainProtocolHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AppDomainProtocolHandler.InitializeLifetimeService">
      <topicdata group="api" />
      <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <type api="T:System.MarshalByRefObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppDomainProtocolHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AppDomainProtocolHandler.StartListenerChannel(System.Web.Hosting.IListenerChannelCallback)">
      <topicdata group="api" />
      <apidata name="StartListenerChannel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="listenerChannelCallback">
          <type api="T:System.Web.Hosting.IListenerChannelCallback" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppDomainProtocolHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AppDomainProtocolHandler.Stop(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="immediate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)">
          <type api="T:System.Web.Hosting.IRegisteredObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppDomainProtocolHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AppDomainProtocolHandler.StopListenerChannel(System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="StopListenerChannel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="listenerChannelId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="immediate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppDomainProtocolHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AppDomainProtocolHandler.StopProtocol(System.Boolean)">
      <topicdata group="api" />
      <apidata name="StopProtocol" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="immediate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppDomainProtocolHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.ApplicationHost">
      <topicdata group="api" />
      <apidata name="ApplicationHost" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.ApplicationHost.CreateApplicationHost(System.Type,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.ApplicationHost">
      <topicdata name="ApplicationHost" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.ApplicationHost" />
      <apidata name="ApplicationHost" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.ApplicationHost.CreateApplicationHost(System.Type,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationHost" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ApplicationHost.CreateApplicationHost(System.Type,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateApplicationHost" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="hostType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="virtualDir">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="physicalDir">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationHost" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.ApplicationInfo">
      <topicdata group="api" />
      <apidata name="ApplicationInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Web.Hosting.ApplicationInfo.ID" />
        <element api="P:System.Web.Hosting.ApplicationInfo.PhysicalPath" />
        <element api="P:System.Web.Hosting.ApplicationInfo.VirtualPath" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.ApplicationInfo">
      <topicdata name="ApplicationInfo" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.ApplicationInfo" />
      <apidata name="ApplicationInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationInfo" />
      </containers>
    </api>
    <api id="Properties.T:System.Web.Hosting.ApplicationInfo">
      <topicdata name="ApplicationInfo" group="list" subgroup="Properties" typeTopicId="T:System.Web.Hosting.ApplicationInfo" />
      <apidata name="ApplicationInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Web.Hosting.ApplicationInfo.ID" />
        <element api="P:System.Web.Hosting.ApplicationInfo.PhysicalPath" />
        <element api="P:System.Web.Hosting.ApplicationInfo.VirtualPath" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationInfo" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.ApplicationInfo.ID">
      <topicdata group="api" />
      <apidata name="ID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ID" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.ApplicationInfo.PhysicalPath">
      <topicdata group="api" />
      <apidata name="PhysicalPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PhysicalPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.ApplicationInfo.VirtualPath">
      <topicdata group="api" />
      <apidata name="VirtualPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_VirtualPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationInfo" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.ApplicationManager">
      <topicdata group="api" />
      <apidata name="ApplicationManager" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.ApplicationManager.Close" />
        <element api="Overload:System.Web.Hosting.ApplicationManager.CreateObject">
          <element api="M:System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)" />
          <element api="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
          <element api="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)" />
        </element>
        <element api="Overload:System.Web.Hosting.ApplicationManager.GetAppDomain">
          <element api="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)" />
          <element api="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)" />
        </element>
        <element api="M:System.Web.Hosting.ApplicationManager.GetApplicationManager" />
        <element api="M:System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)" />
        <element api="M:System.Web.Hosting.ApplicationManager.GetRunningApplications" />
        <element api="M:System.Web.Hosting.ApplicationManager.InitializeLifetimeService" />
        <element api="M:System.Web.Hosting.ApplicationManager.IsIdle" />
        <element api="M:System.Web.Hosting.ApplicationManager.Open" />
        <element api="M:System.Web.Hosting.ApplicationManager.ShutdownAll" />
        <element api="M:System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)" />
        <element api="M:System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.ApplicationManager">
      <topicdata name="ApplicationManager" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.ApplicationManager" />
      <apidata name="ApplicationManager" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.ApplicationManager.Close" />
        <element api="Overload:System.Web.Hosting.ApplicationManager.CreateObject">
          <element api="M:System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)" />
          <element api="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
          <element api="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)" />
        </element>
        <element api="Overload:System.Web.Hosting.ApplicationManager.GetAppDomain">
          <element api="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)" />
          <element api="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)" />
        </element>
        <element api="M:System.Web.Hosting.ApplicationManager.GetApplicationManager" />
        <element api="M:System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)" />
        <element api="M:System.Web.Hosting.ApplicationManager.GetRunningApplications" />
        <element api="M:System.Web.Hosting.ApplicationManager.InitializeLifetimeService" />
        <element api="M:System.Web.Hosting.ApplicationManager.IsIdle" />
        <element api="M:System.Web.Hosting.ApplicationManager.Open" />
        <element api="M:System.Web.Hosting.ApplicationManager.ShutdownAll" />
        <element api="M:System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)" />
        <element api="M:System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationManager" />
      </containers>
    </api>
    <api id="Overload:System.Web.Hosting.ApplicationManager.CreateObject">
      <topicdata name="CreateObject" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateObject" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)" />
        <element api="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
        <element api="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationManager" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Web.Hosting.ApplicationManager.GetAppDomain">
      <topicdata name="GetAppDomain" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetAppDomain" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)" />
        <element api="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ApplicationManager.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="CreateObject" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Web.Hosting.ApplicationManager.CreateObject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="appId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="virtualPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="physicalPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="failIfExists">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Web.Hosting.IRegisteredObject" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="CreateObject" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Web.Hosting.ApplicationManager.CreateObject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="appId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="virtualPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="physicalPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="failIfExists">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="throwOnError">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Web.Hosting.IRegisteredObject" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)">
      <topicdata group="api" />
      <apidata name="CreateObject" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Web.Hosting.ApplicationManager.CreateObject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="appHost">
          <type api="T:System.Web.Hosting.IApplicationHost" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Web.Hosting.IRegisteredObject" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)">
      <topicdata group="api" />
      <apidata name="GetAppDomain" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Web.Hosting.ApplicationManager.GetAppDomain" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="appId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AppDomain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)">
      <topicdata group="api" />
      <apidata name="GetAppDomain" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Web.Hosting.ApplicationManager.GetAppDomain" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="appHost">
          <type api="T:System.Web.Hosting.IApplicationHost" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AppDomain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ApplicationManager.GetApplicationManager">
      <topicdata group="api" />
      <apidata name="GetApplicationManager" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Web.Hosting.ApplicationManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name="GetObject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="appId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Web.Hosting.IRegisteredObject" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ApplicationManager.GetRunningApplications">
      <topicdata group="api" />
      <apidata name="GetRunningApplications" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Web.Hosting.ApplicationInfo" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ApplicationManager.InitializeLifetimeService">
      <topicdata group="api" />
      <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <type api="T:System.MarshalByRefObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ApplicationManager.IsIdle">
      <topicdata group="api" />
      <apidata name="IsIdle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ApplicationManager.Open">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ApplicationManager.ShutdownAll">
      <topicdata group="api" />
      <apidata name="ShutdownAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)">
      <topicdata group="api" />
      <apidata name="ShutdownApplication" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="appId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name="StopObject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="appId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.ApplicationMonitors">
      <topicdata group="api" />
      <apidata name="ApplicationMonitors" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Web.Hosting.ApplicationMonitors.MemoryMonitor" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.ApplicationMonitors">
      <topicdata name="ApplicationMonitors" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.ApplicationMonitors" />
      <apidata name="ApplicationMonitors" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationMonitors" />
      </containers>
    </api>
    <api id="Properties.T:System.Web.Hosting.ApplicationMonitors">
      <topicdata name="ApplicationMonitors" group="list" subgroup="Properties" typeTopicId="T:System.Web.Hosting.ApplicationMonitors" />
      <apidata name="ApplicationMonitors" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Web.Hosting.ApplicationMonitors.MemoryMonitor" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationMonitors" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.ApplicationMonitors.MemoryMonitor">
      <topicdata group="api" />
      <apidata name="MemoryMonitor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MemoryMonitor" />
      <setter name="set_MemoryMonitor" />
      <returns>
        <type api="T:System.Web.Hosting.IApplicationMonitor" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ApplicationMonitors" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.AppManagerAppDomainFactory">
      <topicdata group="api" />
      <apidata name="AppManagerAppDomainFactory" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Web.Hosting.AppManagerAppDomainFactory.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Web.Hosting.IAppManagerAppDomainFactory" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.AppManagerAppDomainFactory.#ctor" />
        <element api="M:System.Web.Hosting.AppManagerAppDomainFactory.Create(System.String,System.String)" />
        <element api="M:System.Web.Hosting.AppManagerAppDomainFactory.Stop" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.AppManagerAppDomainFactory">
      <topicdata name="AppManagerAppDomainFactory" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.AppManagerAppDomainFactory" />
      <apidata name="AppManagerAppDomainFactory" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Web.Hosting.AppManagerAppDomainFactory.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.AppManagerAppDomainFactory.Create(System.String,System.String)" />
        <element api="M:System.Web.Hosting.AppManagerAppDomainFactory.Stop" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppManagerAppDomainFactory" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AppManagerAppDomainFactory.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppManagerAppDomainFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AppManagerAppDomainFactory.Create(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="appId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="appPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Web.Hosting.IAppManagerAppDomainFactory.Create(System.String,System.String)">
          <type api="T:System.Web.Hosting.IAppManagerAppDomainFactory" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppManagerAppDomainFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AppManagerAppDomainFactory.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Web.Hosting.IAppManagerAppDomainFactory.Stop">
          <type api="T:System.Web.Hosting.IAppManagerAppDomainFactory" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AppManagerAppDomainFactory" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.AspNetMemoryMonitor">
      <topicdata group="api" />
      <apidata name="AspNetMemoryMonitor" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Web.Hosting.IApplicationMonitor" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:System.IObservable`1" ref="true">
          <specialization>
            <type api="T:System.Web.Hosting.RecycleLimitInfo" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IObservable`1" ref="true">
          <specialization>
            <type api="T:System.Web.Hosting.LowPhysicalMemoryInfo" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.AspNetMemoryMonitor.Dispose" />
        <element api="M:System.Web.Hosting.AspNetMemoryMonitor.Start" />
        <element api="M:System.Web.Hosting.AspNetMemoryMonitor.Stop" />
        <element api="Overload:System.Web.Hosting.AspNetMemoryMonitor.Subscribe">
          <element api="M:System.Web.Hosting.AspNetMemoryMonitor.Subscribe(System.IObserver{System.Web.Hosting.LowPhysicalMemoryInfo})" />
          <element api="M:System.Web.Hosting.AspNetMemoryMonitor.Subscribe(System.IObserver{System.Web.Hosting.RecycleLimitInfo})" />
        </element>
        <element api="P:System.Web.Hosting.AspNetMemoryMonitor.DefaultLowPhysicalMemoryObserver" />
        <element api="P:System.Web.Hosting.AspNetMemoryMonitor.DefaultRecycleLimitObserver" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.AspNetMemoryMonitor">
      <topicdata name="AspNetMemoryMonitor" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.AspNetMemoryMonitor" />
      <apidata name="AspNetMemoryMonitor" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.AspNetMemoryMonitor.Dispose" />
        <element api="M:System.Web.Hosting.AspNetMemoryMonitor.Start" />
        <element api="M:System.Web.Hosting.AspNetMemoryMonitor.Stop" />
        <element api="Overload:System.Web.Hosting.AspNetMemoryMonitor.Subscribe">
          <element api="M:System.Web.Hosting.AspNetMemoryMonitor.Subscribe(System.IObserver{System.Web.Hosting.LowPhysicalMemoryInfo})" />
          <element api="M:System.Web.Hosting.AspNetMemoryMonitor.Subscribe(System.IObserver{System.Web.Hosting.RecycleLimitInfo})" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AspNetMemoryMonitor" />
      </containers>
    </api>
    <api id="Properties.T:System.Web.Hosting.AspNetMemoryMonitor">
      <topicdata name="AspNetMemoryMonitor" group="list" subgroup="Properties" typeTopicId="T:System.Web.Hosting.AspNetMemoryMonitor" />
      <apidata name="AspNetMemoryMonitor" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Web.Hosting.AspNetMemoryMonitor.DefaultLowPhysicalMemoryObserver" />
        <element api="P:System.Web.Hosting.AspNetMemoryMonitor.DefaultRecycleLimitObserver" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AspNetMemoryMonitor" />
      </containers>
    </api>
    <api id="Overload:System.Web.Hosting.AspNetMemoryMonitor.Subscribe">
      <topicdata name="Subscribe" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Subscribe" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Web.Hosting.AspNetMemoryMonitor.Subscribe(System.IObserver{System.Web.Hosting.LowPhysicalMemoryInfo})" />
        <element api="M:System.Web.Hosting.AspNetMemoryMonitor.Subscribe(System.IObserver{System.Web.Hosting.RecycleLimitInfo})" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AspNetMemoryMonitor" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.AspNetMemoryMonitor.DefaultLowPhysicalMemoryObserver">
      <topicdata group="api" />
      <apidata name="DefaultLowPhysicalMemoryObserver" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultLowPhysicalMemoryObserver" />
      <setter name="set_DefaultLowPhysicalMemoryObserver" />
      <returns>
        <type api="T:System.IObserver`1" ref="true">
          <specialization>
            <type api="T:System.Web.Hosting.LowPhysicalMemoryInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AspNetMemoryMonitor" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.AspNetMemoryMonitor.DefaultRecycleLimitObserver">
      <topicdata group="api" />
      <apidata name="DefaultRecycleLimitObserver" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultRecycleLimitObserver" />
      <setter name="set_DefaultRecycleLimitObserver" />
      <returns>
        <type api="T:System.IObserver`1" ref="true">
          <specialization>
            <type api="T:System.Web.Hosting.RecycleLimitInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AspNetMemoryMonitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AspNetMemoryMonitor.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AspNetMemoryMonitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AspNetMemoryMonitor.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Web.Hosting.IApplicationMonitor.Start">
          <type api="T:System.Web.Hosting.IApplicationMonitor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AspNetMemoryMonitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AspNetMemoryMonitor.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Web.Hosting.IApplicationMonitor.Stop">
          <type api="T:System.Web.Hosting.IApplicationMonitor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AspNetMemoryMonitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AspNetMemoryMonitor.Subscribe(System.IObserver{System.Web.Hosting.LowPhysicalMemoryInfo})">
      <topicdata group="api" />
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Web.Hosting.AspNetMemoryMonitor.Subscribe" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="observer">
          <type api="T:System.IObserver`1" ref="true">
            <specialization>
              <type api="T:System.Web.Hosting.LowPhysicalMemoryInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <type api="T:System.IObservable`1" ref="true">
            <specialization>
              <type api="T:System.Web.Hosting.LowPhysicalMemoryInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AspNetMemoryMonitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.AspNetMemoryMonitor.Subscribe(System.IObserver{System.Web.Hosting.RecycleLimitInfo})">
      <topicdata group="api" />
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Web.Hosting.AspNetMemoryMonitor.Subscribe" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="observer">
          <type api="T:System.IObserver`1" ref="true">
            <specialization>
              <type api="T:System.Web.Hosting.RecycleLimitInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <type api="T:System.IObservable`1" ref="true">
            <specialization>
              <type api="T:System.Web.Hosting.RecycleLimitInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.AspNetMemoryMonitor" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.CustomLoaderAttribute">
      <topicdata group="api" />
      <apidata name="CustomLoaderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.CustomLoaderAttribute.#ctor(System.Type)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Web.Hosting.CustomLoaderAttribute.CustomLoaderType" />
      </elements>
      <containers>
        <library assembly="System.Web.ApplicationServices" module="System.Web.ApplicationServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Web.Hosting.CustomLoaderAttribute">
      <topicdata name="CustomLoaderAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.CustomLoaderAttribute" />
      <apidata name="CustomLoaderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Web.ApplicationServices" module="System.Web.ApplicationServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.CustomLoaderAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Web.Hosting.CustomLoaderAttribute">
      <topicdata name="CustomLoaderAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Web.Hosting.CustomLoaderAttribute" />
      <apidata name="CustomLoaderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Web.Hosting.CustomLoaderAttribute.CustomLoaderType" />
      </elements>
      <containers>
        <library assembly="System.Web.ApplicationServices" module="System.Web.ApplicationServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.CustomLoaderAttribute" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.CustomLoaderAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="customLoaderType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web.ApplicationServices" module="System.Web.ApplicationServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.CustomLoaderAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.CustomLoaderAttribute.CustomLoaderType">
      <topicdata group="api" />
      <apidata name="CustomLoaderType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CustomLoaderType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web.ApplicationServices" module="System.Web.ApplicationServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.CustomLoaderAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.HostingEnvironment">
      <topicdata group="api" />
      <apidata name="HostingEnvironment" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Web.Hosting.HostingEnvironment.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Web.Hosting.HostingEnvironment.StopListening" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.HostingEnvironment.#ctor" />
        <element api="M:System.Web.Hosting.HostingEnvironment.DecrementBusyCount" />
        <element api="Overload:System.Web.Hosting.HostingEnvironment.Impersonate">
          <element api="M:System.Web.Hosting.HostingEnvironment.Impersonate" />
          <element api="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr)" />
          <element api="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)" />
        </element>
        <element api="M:System.Web.Hosting.HostingEnvironment.IncrementBusyCount" />
        <element api="M:System.Web.Hosting.HostingEnvironment.InitializeLifetimeService" />
        <element api="M:System.Web.Hosting.HostingEnvironment.InitiateShutdown" />
        <element api="M:System.Web.Hosting.HostingEnvironment.MapPath(System.String)" />
        <element api="M:System.Web.Hosting.HostingEnvironment.MessageReceived" />
        <element api="Overload:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem">
          <element api="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})" />
          <element api="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})" />
        </element>
        <element api="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)" />
        <element api="M:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)" />
        <element api="Overload:System.Web.Hosting.HostingEnvironment.SetCultures">
          <element api="M:System.Web.Hosting.HostingEnvironment.SetCultures" />
          <element api="M:System.Web.Hosting.HostingEnvironment.SetCultures(System.String)" />
        </element>
        <element api="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)" />
        <element api="P:System.Web.Hosting.HostingEnvironment.ApplicationHost" />
        <element api="P:System.Web.Hosting.HostingEnvironment.ApplicationID" />
        <element api="P:System.Web.Hosting.HostingEnvironment.ApplicationMonitors" />
        <element api="P:System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath" />
        <element api="P:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath" />
        <element api="P:System.Web.Hosting.HostingEnvironment.Cache" />
        <element api="P:System.Web.Hosting.HostingEnvironment.InClientBuildManager" />
        <element api="P:System.Web.Hosting.HostingEnvironment.InitializationException" />
        <element api="P:System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment" />
        <element api="P:System.Web.Hosting.HostingEnvironment.IsHosted" />
        <element api="P:System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU" />
        <element api="P:System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU" />
        <element api="P:System.Web.Hosting.HostingEnvironment.ShutdownReason" />
        <element api="P:System.Web.Hosting.HostingEnvironment.SiteName" />
        <element api="P:System.Web.Hosting.HostingEnvironment.VirtualPathProvider" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.HostingEnvironment">
      <topicdata name="HostingEnvironment" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.HostingEnvironment" />
      <apidata name="HostingEnvironment" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Web.Hosting.HostingEnvironment.#ctor" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.HostingEnvironment.DecrementBusyCount" />
        <element api="Overload:System.Web.Hosting.HostingEnvironment.Impersonate">
          <element api="M:System.Web.Hosting.HostingEnvironment.Impersonate" />
          <element api="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr)" />
          <element api="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)" />
        </element>
        <element api="M:System.Web.Hosting.HostingEnvironment.IncrementBusyCount" />
        <element api="M:System.Web.Hosting.HostingEnvironment.InitializeLifetimeService" />
        <element api="M:System.Web.Hosting.HostingEnvironment.InitiateShutdown" />
        <element api="M:System.Web.Hosting.HostingEnvironment.MapPath(System.String)" />
        <element api="M:System.Web.Hosting.HostingEnvironment.MessageReceived" />
        <element api="Overload:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem">
          <element api="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})" />
          <element api="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})" />
        </element>
        <element api="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)" />
        <element api="M:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)" />
        <element api="Overload:System.Web.Hosting.HostingEnvironment.SetCultures">
          <element api="M:System.Web.Hosting.HostingEnvironment.SetCultures" />
          <element api="M:System.Web.Hosting.HostingEnvironment.SetCultures(System.String)" />
        </element>
        <element api="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" />
      </containers>
    </api>
    <api id="Properties.T:System.Web.Hosting.HostingEnvironment">
      <topicdata name="HostingEnvironment" group="list" subgroup="Properties" typeTopicId="T:System.Web.Hosting.HostingEnvironment" />
      <apidata name="HostingEnvironment" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Web.Hosting.HostingEnvironment.#ctor" />
      <elements>
        <element api="P:System.Web.Hosting.HostingEnvironment.ApplicationHost" />
        <element api="P:System.Web.Hosting.HostingEnvironment.ApplicationID" />
        <element api="P:System.Web.Hosting.HostingEnvironment.ApplicationMonitors" />
        <element api="P:System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath" />
        <element api="P:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath" />
        <element api="P:System.Web.Hosting.HostingEnvironment.Cache" />
        <element api="P:System.Web.Hosting.HostingEnvironment.InClientBuildManager" />
        <element api="P:System.Web.Hosting.HostingEnvironment.InitializationException" />
        <element api="P:System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment" />
        <element api="P:System.Web.Hosting.HostingEnvironment.IsHosted" />
        <element api="P:System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU" />
        <element api="P:System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU" />
        <element api="P:System.Web.Hosting.HostingEnvironment.ShutdownReason" />
        <element api="P:System.Web.Hosting.HostingEnvironment.SiteName" />
        <element api="P:System.Web.Hosting.HostingEnvironment.VirtualPathProvider" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" />
      </containers>
    </api>
    <api id="Events.T:System.Web.Hosting.HostingEnvironment">
      <topicdata name="HostingEnvironment" group="list" subgroup="Events" typeTopicId="T:System.Web.Hosting.HostingEnvironment" />
      <apidata name="HostingEnvironment" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Web.Hosting.HostingEnvironment.#ctor" />
      <elements>
        <element api="E:System.Web.Hosting.HostingEnvironment.StopListening" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" />
      </containers>
    </api>
    <api id="Overload:System.Web.Hosting.HostingEnvironment.Impersonate">
      <topicdata name="Impersonate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Impersonate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Web.Hosting.HostingEnvironment.Impersonate" />
        <element api="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr)" />
        <element api="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem">
      <topicdata name="QueueBackgroundWorkItem" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="QueueBackgroundWorkItem" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})" />
        <element api="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Web.Hosting.HostingEnvironment.SetCultures">
      <topicdata name="SetCultures" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetCultures" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Web.Hosting.HostingEnvironment.SetCultures" />
        <element api="M:System.Web.Hosting.HostingEnvironment.SetCultures(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.HostingEnvironment.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.HostingEnvironment.ApplicationHost">
      <topicdata group="api" />
      <apidata name="ApplicationHost" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ApplicationHost" />
      <returns>
        <type api="T:System.Web.Hosting.IApplicationHost" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.HostingEnvironment.ApplicationID">
      <topicdata group="api" />
      <apidata name="ApplicationID" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ApplicationID" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.HostingEnvironment.ApplicationMonitors">
      <topicdata group="api" />
      <apidata name="ApplicationMonitors" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ApplicationMonitors" />
      <returns>
        <type api="T:System.Web.Hosting.ApplicationMonitors" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath">
      <topicdata group="api" />
      <apidata name="ApplicationPhysicalPath" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ApplicationPhysicalPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath">
      <topicdata group="api" />
      <apidata name="ApplicationVirtualPath" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ApplicationVirtualPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.HostingEnvironment.Cache">
      <topicdata group="api" />
      <apidata name="Cache" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Cache" />
      <returns>
        <type api="T:System.Web.Caching.Cache" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.HostingEnvironment.DecrementBusyCount">
      <topicdata group="api" />
      <apidata name="DecrementBusyCount" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.HostingEnvironment.Impersonate">
      <topicdata group="api" />
      <apidata name="Impersonate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Web.Hosting.HostingEnvironment.Impersonate" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr)">
      <topicdata group="api" />
      <apidata name="Impersonate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Web.Hosting.HostingEnvironment.Impersonate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)">
      <topicdata group="api" />
      <apidata name="Impersonate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Web.Hosting.HostingEnvironment.Impersonate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userToken">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="virtualPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.HostingEnvironment.InClientBuildManager">
      <topicdata group="api" />
      <apidata name="InClientBuildManager" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InClientBuildManager" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.HostingEnvironment.IncrementBusyCount">
      <topicdata group="api" />
      <apidata name="IncrementBusyCount" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.HostingEnvironment.InitializationException">
      <topicdata group="api" />
      <apidata name="InitializationException" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InitializationException" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.HostingEnvironment.InitializeLifetimeService">
      <topicdata group="api" />
      <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <type api="T:System.MarshalByRefObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.HostingEnvironment.InitiateShutdown">
      <topicdata group="api" />
      <apidata name="InitiateShutdown" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment">
      <topicdata group="api" />
      <apidata name="IsDevelopmentEnvironment" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDevelopmentEnvironment" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.HostingEnvironment.IsHosted">
      <topicdata group="api" />
      <apidata name="IsHosted" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsHosted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.HostingEnvironment.MapPath(System.String)">
      <topicdata group="api" />
      <apidata name="MapPath" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="virtualPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU">
      <topicdata group="api" />
      <apidata name="MaxConcurrentRequestsPerCPU" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxConcurrentRequestsPerCPU" />
      <setter name="set_MaxConcurrentRequestsPerCPU" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU">
      <topicdata group="api" />
      <apidata name="MaxConcurrentThreadsPerCPU" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxConcurrentThreadsPerCPU" />
      <setter name="set_MaxConcurrentThreadsPerCPU" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.HostingEnvironment.MessageReceived">
      <topicdata group="api" />
      <apidata name="MessageReceived" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})">
      <topicdata group="api" />
      <apidata name="QueueBackgroundWorkItem" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="workItem">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
      <topicdata group="api" />
      <apidata name="QueueBackgroundWorkItem" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="workItem">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.CancellationToken" ref="false" />
              <type api="T:System.Threading.Tasks.Task" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)">
      <topicdata group="api" />
      <apidata name="RegisterObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Web.Hosting.IRegisteredObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)">
      <topicdata group="api" />
      <apidata name="RegisterVirtualPathProvider" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="virtualPathProvider">
          <type api="T:System.Web.Hosting.VirtualPathProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.HostingEnvironment.SetCultures">
      <topicdata group="api" />
      <apidata name="SetCultures" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Web.Hosting.HostingEnvironment.SetCultures" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.HostingEnvironment.SetCultures(System.String)">
      <topicdata group="api" />
      <apidata name="SetCultures" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Web.Hosting.HostingEnvironment.SetCultures" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="virtualPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.HostingEnvironment.ShutdownReason">
      <topicdata group="api" />
      <apidata name="ShutdownReason" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ShutdownReason" />
      <returns>
        <type api="T:System.Web.ApplicationShutdownReason" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.HostingEnvironment.SiteName">
      <topicdata group="api" />
      <apidata name="SiteName" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SiteName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="E:System.Web.Hosting.HostingEnvironment.StopListening">
      <topicdata group="api" />
      <apidata name="StopListening" group="member" subgroup="event" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_StopListening" />
      <remover name="remove_StopListening" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)">
      <topicdata group="api" />
      <apidata name="UnregisterObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Web.Hosting.IRegisteredObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.HostingEnvironment.VirtualPathProvider">
      <topicdata group="api" />
      <apidata name="VirtualPathProvider" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_VirtualPathProvider" />
      <returns>
        <type api="T:System.Web.Hosting.VirtualPathProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostingEnvironment" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.HostSecurityPolicyResolver">
      <topicdata group="api" />
      <apidata name="HostSecurityPolicyResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Web.Hosting.HostSecurityPolicyResolver.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.HostSecurityPolicyResolver.#ctor" />
        <element api="M:System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy(System.Security.Policy.Evidence)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.HostSecurityPolicyResolver">
      <topicdata name="HostSecurityPolicyResolver" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.HostSecurityPolicyResolver" />
      <apidata name="HostSecurityPolicyResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Web.Hosting.HostSecurityPolicyResolver.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy(System.Security.Policy.Evidence)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostSecurityPolicyResolver" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.HostSecurityPolicyResolver.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostSecurityPolicyResolver" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy(System.Security.Policy.Evidence)">
      <topicdata group="api" />
      <apidata name="ResolvePolicy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="evidence">
          <type api="T:System.Security.Policy.Evidence" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Web.Hosting.HostSecurityPolicyResults" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostSecurityPolicyResolver" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.HostSecurityPolicyResults">
      <topicdata group="api" />
      <apidata name="HostSecurityPolicyResults" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Web.Hosting.HostSecurityPolicyResults.DefaultPolicy" />
        <element api="F:System.Web.Hosting.HostSecurityPolicyResults.FullTrust" />
        <element api="F:System.Web.Hosting.HostSecurityPolicyResults.AppDomainTrust" />
        <element api="F:System.Web.Hosting.HostSecurityPolicyResults.Nothing" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="F:System.Web.Hosting.HostSecurityPolicyResults.AppDomainTrust">
      <topicdata group="api" notopic="" />
      <apidata name="AppDomainTrust" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Web.Hosting.HostSecurityPolicyResults" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostSecurityPolicyResults" ref="false" />
      </containers>
    </api>
    <api id="F:System.Web.Hosting.HostSecurityPolicyResults.DefaultPolicy">
      <topicdata group="api" notopic="" />
      <apidata name="DefaultPolicy" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Web.Hosting.HostSecurityPolicyResults" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostSecurityPolicyResults" ref="false" />
      </containers>
    </api>
    <api id="F:System.Web.Hosting.HostSecurityPolicyResults.FullTrust">
      <topicdata group="api" notopic="" />
      <apidata name="FullTrust" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Web.Hosting.HostSecurityPolicyResults" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostSecurityPolicyResults" ref="false" />
      </containers>
    </api>
    <api id="F:System.Web.Hosting.HostSecurityPolicyResults.Nothing">
      <topicdata group="api" notopic="" />
      <apidata name="Nothing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Web.Hosting.HostSecurityPolicyResults" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.HostSecurityPolicyResults" ref="false" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.IAdphManager">
      <topicdata group="api" />
      <apidata name="IAdphManager" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Web.Hosting.ProcessHost" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Web.Hosting.IAdphManager.StartAppDomainProtocolListenerChannel(System.String,System.String,System.Web.Hosting.IListenerChannelCallback)" />
        <element api="M:System.Web.Hosting.IAdphManager.StopAppDomainProtocol(System.String,System.String,System.Boolean)" />
        <element api="M:System.Web.Hosting.IAdphManager.StopAppDomainProtocolListenerChannel(System.String,System.String,System.Int32,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.IAdphManager">
      <topicdata name="IAdphManager" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.IAdphManager" />
      <apidata name="IAdphManager" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Web.Hosting.IAdphManager.StartAppDomainProtocolListenerChannel(System.String,System.String,System.Web.Hosting.IListenerChannelCallback)" />
        <element api="M:System.Web.Hosting.IAdphManager.StopAppDomainProtocol(System.String,System.String,System.Boolean)" />
        <element api="M:System.Web.Hosting.IAdphManager.StopAppDomainProtocolListenerChannel(System.String,System.String,System.Int32,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IAdphManager" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IAdphManager.StartAppDomainProtocolListenerChannel(System.String,System.String,System.Web.Hosting.IListenerChannelCallback)">
      <topicdata group="api" />
      <apidata name="StartAppDomainProtocolListenerChannel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="appId" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="protocolId" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="listenerChannelCallback">
          <type api="T:System.Web.Hosting.IListenerChannelCallback" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IAdphManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IAdphManager.StopAppDomainProtocol(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="StopAppDomainProtocol" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="appId" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="protocolId" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="immediate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IAdphManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IAdphManager.StopAppDomainProtocolListenerChannel(System.String,System.String,System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="StopAppDomainProtocolListenerChannel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="appId" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="protocolId" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="listenerChannelId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="immediate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IAdphManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.IAppDomainFactory">
      <topicdata group="api" />
      <apidata name="IAppDomainFactory" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <implementors>
        <type api="T:System.Web.Hosting.AppDomainFactory" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Web.Hosting.IAppDomainFactory.Create(System.String,System.String,System.String,System.String,System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>e6e21054-a7dc-4378-877d-b7f4a2d7e8ba</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.InterfaceTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ComInterfaceType" ref="false" />
            <enumValue>
              <field name="InterfaceIsIUnknown" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Web.Hosting.IAppDomainFactory">
      <topicdata name="IAppDomainFactory" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.IAppDomainFactory" />
      <apidata name="IAppDomainFactory" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <elements>
        <element api="M:System.Web.Hosting.IAppDomainFactory.Create(System.String,System.String,System.String,System.String,System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IAppDomainFactory" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IAppDomainFactory.Create(System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="module" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="typeName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="appId" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="appPath" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="strUrlOfAppOrigin" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="iZone" in="true">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IAppDomainFactory" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.IAppDomainInfo">
      <topicdata group="api" />
      <apidata name="IAppDomainInfo" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <implementors>
        <type api="T:System.Web.Hosting.AppDomainInfo" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Web.Hosting.IAppDomainInfo.GetId" />
        <element api="M:System.Web.Hosting.IAppDomainInfo.GetPhysicalPath" />
        <element api="M:System.Web.Hosting.IAppDomainInfo.GetSiteId" />
        <element api="M:System.Web.Hosting.IAppDomainInfo.GetVirtualPath" />
        <element api="M:System.Web.Hosting.IAppDomainInfo.IsIdle" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>5BC9C234-6CD7-49bf-A07A-6FDB7F22DFFF</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.InterfaceTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ComInterfaceType" ref="false" />
            <enumValue>
              <field name="InterfaceIsIUnknown" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Web.Hosting.IAppDomainInfo">
      <topicdata name="IAppDomainInfo" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.IAppDomainInfo" />
      <apidata name="IAppDomainInfo" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <elements>
        <element api="M:System.Web.Hosting.IAppDomainInfo.GetId" />
        <element api="M:System.Web.Hosting.IAppDomainInfo.GetPhysicalPath" />
        <element api="M:System.Web.Hosting.IAppDomainInfo.GetSiteId" />
        <element api="M:System.Web.Hosting.IAppDomainInfo.GetVirtualPath" />
        <element api="M:System.Web.Hosting.IAppDomainInfo.IsIdle" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IAppDomainInfo" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IAppDomainInfo.GetId">
      <topicdata group="api" />
      <apidata name="GetId" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IAppDomainInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IAppDomainInfo.GetPhysicalPath">
      <topicdata group="api" />
      <apidata name="GetPhysicalPath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IAppDomainInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IAppDomainInfo.GetSiteId">
      <topicdata group="api" />
      <apidata name="GetSiteId" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IAppDomainInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IAppDomainInfo.GetVirtualPath">
      <topicdata group="api" />
      <apidata name="GetVirtualPath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IAppDomainInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IAppDomainInfo.IsIdle">
      <topicdata group="api" />
      <apidata name="IsIdle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IAppDomainInfo" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.IAppDomainInfoEnum">
      <topicdata group="api" />
      <apidata name="IAppDomainInfoEnum" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <implementors>
        <type api="T:System.Web.Hosting.AppDomainInfoEnum" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Web.Hosting.IAppDomainInfoEnum.Count" />
        <element api="M:System.Web.Hosting.IAppDomainInfoEnum.GetData" />
        <element api="M:System.Web.Hosting.IAppDomainInfoEnum.MoveNext" />
        <element api="M:System.Web.Hosting.IAppDomainInfoEnum.Reset" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>F79648FB-558B-4a09-88F1-1E3BCB30E34F</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.InterfaceTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ComInterfaceType" ref="false" />
            <enumValue>
              <field name="InterfaceIsIUnknown" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Web.Hosting.IAppDomainInfoEnum">
      <topicdata name="IAppDomainInfoEnum" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.IAppDomainInfoEnum" />
      <apidata name="IAppDomainInfoEnum" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <elements>
        <element api="M:System.Web.Hosting.IAppDomainInfoEnum.Count" />
        <element api="M:System.Web.Hosting.IAppDomainInfoEnum.GetData" />
        <element api="M:System.Web.Hosting.IAppDomainInfoEnum.MoveNext" />
        <element api="M:System.Web.Hosting.IAppDomainInfoEnum.Reset" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IAppDomainInfoEnum" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IAppDomainInfoEnum.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IAppDomainInfoEnum" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IAppDomainInfoEnum.GetData">
      <topicdata group="api" />
      <apidata name="GetData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Web.Hosting.IAppDomainInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IAppDomainInfoEnum" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IAppDomainInfoEnum.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IAppDomainInfoEnum" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IAppDomainInfoEnum.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IAppDomainInfoEnum" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.IApplicationHost">
      <topicdata group="api" />
      <apidata name="IApplicationHost" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Web.Hosting.IApplicationHost.GetConfigMapPathFactory" />
        <element api="M:System.Web.Hosting.IApplicationHost.GetConfigToken" />
        <element api="M:System.Web.Hosting.IApplicationHost.GetPhysicalPath" />
        <element api="M:System.Web.Hosting.IApplicationHost.GetSiteID" />
        <element api="M:System.Web.Hosting.IApplicationHost.GetSiteName" />
        <element api="M:System.Web.Hosting.IApplicationHost.GetVirtualPath" />
        <element api="M:System.Web.Hosting.IApplicationHost.MessageReceived" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.IApplicationHost">
      <topicdata name="IApplicationHost" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.IApplicationHost" />
      <apidata name="IApplicationHost" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Web.Hosting.IApplicationHost.GetConfigMapPathFactory" />
        <element api="M:System.Web.Hosting.IApplicationHost.GetConfigToken" />
        <element api="M:System.Web.Hosting.IApplicationHost.GetPhysicalPath" />
        <element api="M:System.Web.Hosting.IApplicationHost.GetSiteID" />
        <element api="M:System.Web.Hosting.IApplicationHost.GetSiteName" />
        <element api="M:System.Web.Hosting.IApplicationHost.GetVirtualPath" />
        <element api="M:System.Web.Hosting.IApplicationHost.MessageReceived" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IApplicationHost" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IApplicationHost.GetConfigMapPathFactory">
      <topicdata group="api" />
      <apidata name="GetConfigMapPathFactory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Web.Configuration.IConfigMapPathFactory" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IApplicationHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IApplicationHost.GetConfigToken">
      <topicdata group="api" />
      <apidata name="GetConfigToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IApplicationHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IApplicationHost.GetPhysicalPath">
      <topicdata group="api" />
      <apidata name="GetPhysicalPath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IApplicationHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IApplicationHost.GetSiteID">
      <topicdata group="api" />
      <apidata name="GetSiteID" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IApplicationHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IApplicationHost.GetSiteName">
      <topicdata group="api" />
      <apidata name="GetSiteName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IApplicationHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IApplicationHost.GetVirtualPath">
      <topicdata group="api" />
      <apidata name="GetVirtualPath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IApplicationHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IApplicationHost.MessageReceived">
      <topicdata group="api" />
      <apidata name="MessageReceived" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IApplicationHost" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.IApplicationMonitor">
      <topicdata group="api" />
      <apidata name="IApplicationMonitor" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Web.Hosting.AspNetMemoryMonitor" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.IDisposable.Dispose" />
        <element api="M:System.Web.Hosting.IApplicationMonitor.Start" />
        <element api="M:System.Web.Hosting.IApplicationMonitor.Stop" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.IApplicationMonitor">
      <topicdata name="IApplicationMonitor" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.IApplicationMonitor" />
      <apidata name="IApplicationMonitor" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IDisposable.Dispose" />
        <element api="M:System.Web.Hosting.IApplicationMonitor.Start" />
        <element api="M:System.Web.Hosting.IApplicationMonitor.Stop" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IApplicationMonitor" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IApplicationMonitor.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IApplicationMonitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IApplicationMonitor.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IApplicationMonitor" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.IApplicationPreloadManager">
      <topicdata group="api" />
      <apidata name="IApplicationPreloadManager" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <implementors>
        <type api="T:System.Web.Hosting.ProcessHost" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadState(System.String,System.String,System.Boolean)" />
        <element api="M:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AE54F424-71BC-4da5-AA2F-8C0CD53496FC</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.InterfaceTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ComInterfaceType" ref="false" />
            <enumValue>
              <field name="InterfaceIsIUnknown" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Web.Hosting.IApplicationPreloadManager">
      <topicdata name="IApplicationPreloadManager" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.IApplicationPreloadManager" />
      <apidata name="IApplicationPreloadManager" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <elements>
        <element api="M:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadState(System.String,System.String,System.Boolean)" />
        <element api="M:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IApplicationPreloadManager" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadState(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetApplicationPreloadState" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="appId" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="enabled" in="true">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IApplicationPreloadManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)">
      <topicdata group="api" />
      <apidata name="SetApplicationPreloadUtil" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="preloadUtil" in="true">
          <type api="T:System.Web.Hosting.IApplicationPreloadUtil" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IApplicationPreloadManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.IApplicationPreloadUtil">
      <topicdata group="api" />
      <apidata name="IApplicationPreloadUtil" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <elements>
        <element api="M:System.Web.Hosting.IApplicationPreloadUtil.GetApplicationPreloadInfo(System.String,System.Boolean@,System.String@,System.String[]@)" />
        <element api="M:System.Web.Hosting.IApplicationPreloadUtil.ReportApplicationPreloadFailure(System.String,System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>940D8ADD-9E40-4475-9A67-2CDCDF57995C</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.InterfaceTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ComInterfaceType" ref="false" />
            <enumValue>
              <field name="InterfaceIsIUnknown" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Web.Hosting.IApplicationPreloadUtil">
      <topicdata name="IApplicationPreloadUtil" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.IApplicationPreloadUtil" />
      <apidata name="IApplicationPreloadUtil" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <elements>
        <element api="M:System.Web.Hosting.IApplicationPreloadUtil.GetApplicationPreloadInfo(System.String,System.Boolean@,System.String@,System.String[]@)" />
        <element api="M:System.Web.Hosting.IApplicationPreloadUtil.ReportApplicationPreloadFailure(System.String,System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IApplicationPreloadUtil" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IApplicationPreloadUtil.GetApplicationPreloadInfo(System.String,System.Boolean@,System.String@,System.String[]@)">
      <topicdata group="api" />
      <apidata name="GetApplicationPreloadInfo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="enabled" out="true">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="startupObjType" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="parametersForStartupObj" out="true">
          <referenceTo>
            <arrayOf rank="1">
              <type api="T:System.String" ref="true" />
            </arrayOf>
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IApplicationPreloadUtil" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IApplicationPreloadUtil.ReportApplicationPreloadFailure(System.String,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="ReportApplicationPreloadFailure" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="errorCode" in="true">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="errorMessage" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IApplicationPreloadUtil" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.IAppManagerAppDomainFactory">
      <topicdata group="api" />
      <apidata name="IAppManagerAppDomainFactory" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <implementors>
        <type api="T:System.Web.Hosting.AppManagerAppDomainFactory" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Web.Hosting.IAppManagerAppDomainFactory.Create(System.String,System.String)" />
        <element api="M:System.Web.Hosting.IAppManagerAppDomainFactory.Stop" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>02998279-7175-4d59-aa5a-fb8e44d4ca9d</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.InterfaceTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ComInterfaceType" ref="false" />
            <enumValue>
              <field name="InterfaceIsIUnknown" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Web.Hosting.IAppManagerAppDomainFactory">
      <topicdata name="IAppManagerAppDomainFactory" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.IAppManagerAppDomainFactory" />
      <apidata name="IAppManagerAppDomainFactory" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <elements>
        <element api="M:System.Web.Hosting.IAppManagerAppDomainFactory.Create(System.String,System.String)" />
        <element api="M:System.Web.Hosting.IAppManagerAppDomainFactory.Stop" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IAppManagerAppDomainFactory" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IAppManagerAppDomainFactory.Create(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="appId" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="appPath" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IAppManagerAppDomainFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IAppManagerAppDomainFactory.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IAppManagerAppDomainFactory" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.IISAPIRuntime">
      <topicdata group="api" />
      <apidata name="IISAPIRuntime" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <implementors>
        <type api="T:System.Web.Hosting.ISAPIRuntime" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Web.Hosting.IISAPIRuntime.DoGCCollect" />
        <element api="M:System.Web.Hosting.IISAPIRuntime.ProcessRequest(System.IntPtr,System.Int32)" />
        <element api="M:System.Web.Hosting.IISAPIRuntime.StartProcessing" />
        <element api="M:System.Web.Hosting.IISAPIRuntime.StopProcessing" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>08a2c56f-7c16-41c1-a8be-432917a1a2d1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.InterfaceTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ComInterfaceType" ref="false" />
            <enumValue>
              <field name="InterfaceIsIUnknown" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Web.Hosting.IISAPIRuntime">
      <topicdata name="IISAPIRuntime" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.IISAPIRuntime" />
      <apidata name="IISAPIRuntime" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <elements>
        <element api="M:System.Web.Hosting.IISAPIRuntime.DoGCCollect" />
        <element api="M:System.Web.Hosting.IISAPIRuntime.ProcessRequest(System.IntPtr,System.Int32)" />
        <element api="M:System.Web.Hosting.IISAPIRuntime.StartProcessing" />
        <element api="M:System.Web.Hosting.IISAPIRuntime.StopProcessing" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IISAPIRuntime" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IISAPIRuntime.DoGCCollect">
      <topicdata group="api" />
      <apidata name="DoGCCollect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IISAPIRuntime" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IISAPIRuntime.ProcessRequest(System.IntPtr,System.Int32)">
      <topicdata group="api" />
      <apidata name="ProcessRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ecb" in="true">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="useProcessModel" in="true">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IISAPIRuntime" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IISAPIRuntime.StartProcessing">
      <topicdata group="api" />
      <apidata name="StartProcessing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IISAPIRuntime" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IISAPIRuntime.StopProcessing">
      <topicdata group="api" />
      <apidata name="StopProcessing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IISAPIRuntime" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.IListenerChannelCallback">
      <topicdata group="api" />
      <apidata name="IListenerChannelCallback" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <elements>
        <element api="M:System.Web.Hosting.IListenerChannelCallback.GetBlob(System.Byte[],System.Int32@)" />
        <element api="M:System.Web.Hosting.IListenerChannelCallback.GetBlobLength" />
        <element api="M:System.Web.Hosting.IListenerChannelCallback.GetId" />
        <element api="M:System.Web.Hosting.IListenerChannelCallback.ReportMessageReceived" />
        <element api="M:System.Web.Hosting.IListenerChannelCallback.ReportStarted" />
        <element api="M:System.Web.Hosting.IListenerChannelCallback.ReportStopped(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>dc3b0a85-9da7-47e4-ba1b-e27da9db8a1e</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.InterfaceTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ComInterfaceType" ref="false" />
            <enumValue>
              <field name="InterfaceIsIUnknown" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Web.Hosting.IListenerChannelCallback">
      <topicdata name="IListenerChannelCallback" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.IListenerChannelCallback" />
      <apidata name="IListenerChannelCallback" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <elements>
        <element api="M:System.Web.Hosting.IListenerChannelCallback.GetBlob(System.Byte[],System.Int32@)" />
        <element api="M:System.Web.Hosting.IListenerChannelCallback.GetBlobLength" />
        <element api="M:System.Web.Hosting.IListenerChannelCallback.GetId" />
        <element api="M:System.Web.Hosting.IListenerChannelCallback.ReportMessageReceived" />
        <element api="M:System.Web.Hosting.IListenerChannelCallback.ReportStarted" />
        <element api="M:System.Web.Hosting.IListenerChannelCallback.ReportStopped(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IListenerChannelCallback" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IListenerChannelCallback.GetBlob(System.Byte[],System.Int32@)">
      <topicdata group="api" />
      <apidata name="GetBlob" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="buffer" in="true" out="true">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="bufferSize">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IListenerChannelCallback" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IListenerChannelCallback.GetBlobLength">
      <topicdata group="api" />
      <apidata name="GetBlobLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IListenerChannelCallback" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IListenerChannelCallback.GetId">
      <topicdata group="api" />
      <apidata name="GetId" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IListenerChannelCallback" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IListenerChannelCallback.ReportMessageReceived">
      <topicdata group="api" />
      <apidata name="ReportMessageReceived" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IListenerChannelCallback" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IListenerChannelCallback.ReportStarted">
      <topicdata group="api" />
      <apidata name="ReportStarted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IListenerChannelCallback" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IListenerChannelCallback.ReportStopped(System.Int32)">
      <topicdata group="api" />
      <apidata name="ReportStopped" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="hr">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IListenerChannelCallback" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.IPphManager">
      <topicdata group="api" />
      <apidata name="IPphManager" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <implementors>
        <type api="T:System.Web.Hosting.ProcessHost" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Web.Hosting.IPphManager.StartProcessProtocolListenerChannel(System.String,System.Web.Hosting.IListenerChannelCallback)" />
        <element api="M:System.Web.Hosting.IPphManager.StopProcessProtocol(System.String,System.Boolean)" />
        <element api="M:System.Web.Hosting.IPphManager.StopProcessProtocolListenerChannel(System.String,System.Int32,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1cc9099d-0a8d-41cb-87d6-845e4f8c4e91</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.InterfaceTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ComInterfaceType" ref="false" />
            <enumValue>
              <field name="InterfaceIsIUnknown" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Web.Hosting.IPphManager">
      <topicdata name="IPphManager" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.IPphManager" />
      <apidata name="IPphManager" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <elements>
        <element api="M:System.Web.Hosting.IPphManager.StartProcessProtocolListenerChannel(System.String,System.Web.Hosting.IListenerChannelCallback)" />
        <element api="M:System.Web.Hosting.IPphManager.StopProcessProtocol(System.String,System.Boolean)" />
        <element api="M:System.Web.Hosting.IPphManager.StopProcessProtocolListenerChannel(System.String,System.Int32,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IPphManager" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IPphManager.StartProcessProtocolListenerChannel(System.String,System.Web.Hosting.IListenerChannelCallback)">
      <topicdata group="api" />
      <apidata name="StartProcessProtocolListenerChannel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="protocolId" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="listenerChannelCallback">
          <type api="T:System.Web.Hosting.IListenerChannelCallback" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IPphManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IPphManager.StopProcessProtocol(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="StopProcessProtocol" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="protocolId" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="immediate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IPphManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IPphManager.StopProcessProtocolListenerChannel(System.String,System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="StopProcessProtocolListenerChannel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="protocolId" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="listenerChannelId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="immediate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IPphManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.IProcessHost">
      <topicdata group="api" />
      <apidata name="IProcessHost" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <implementors>
        <type api="T:System.Web.Hosting.ProcessHost" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Web.Hosting.IProcessHost.EnumerateAppDomains(System.Web.Hosting.IAppDomainInfoEnum@)" />
        <element api="M:System.Web.Hosting.IProcessHost.Shutdown" />
        <element api="M:System.Web.Hosting.IProcessHost.ShutdownApplication(System.String)" />
        <element api="M:System.Web.Hosting.IProcessHost.StartApplication(System.String,System.String,System.Object@)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>0ccd465e-3114-4ca3-ad50-cea561307e93</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.InterfaceTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ComInterfaceType" ref="false" />
            <enumValue>
              <field name="InterfaceIsIUnknown" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Web.Hosting.IProcessHost">
      <topicdata name="IProcessHost" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.IProcessHost" />
      <apidata name="IProcessHost" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <elements>
        <element api="M:System.Web.Hosting.IProcessHost.EnumerateAppDomains(System.Web.Hosting.IAppDomainInfoEnum@)" />
        <element api="M:System.Web.Hosting.IProcessHost.Shutdown" />
        <element api="M:System.Web.Hosting.IProcessHost.ShutdownApplication(System.String)" />
        <element api="M:System.Web.Hosting.IProcessHost.StartApplication(System.String,System.String,System.Object@)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IProcessHost" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IProcessHost.EnumerateAppDomains(System.Web.Hosting.IAppDomainInfoEnum@)">
      <topicdata group="api" />
      <apidata name="EnumerateAppDomains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="appDomainInfoEnum" out="true">
          <referenceTo>
            <type api="T:System.Web.Hosting.IAppDomainInfoEnum" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IProcessHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IProcessHost.Shutdown">
      <topicdata group="api" />
      <apidata name="Shutdown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IProcessHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IProcessHost.ShutdownApplication(System.String)">
      <topicdata group="api" />
      <apidata name="ShutdownApplication" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="appId" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IProcessHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IProcessHost.StartApplication(System.String,System.String,System.Object@)">
      <topicdata group="api" />
      <apidata name="StartApplication" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="appId" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="appPath" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="runtimeInterface" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IProcessHost" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.IProcessHostFactoryHelper">
      <topicdata group="api" />
      <apidata name="IProcessHostFactoryHelper" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <implementors>
        <type api="T:System.Web.Hosting.ProcessHostFactoryHelper" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Web.Hosting.IProcessHostFactoryHelper.GetProcessHost(System.Web.Hosting.IProcessHostSupportFunctions)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>02fd465d-5c5d-4b7e-95b6-82faa031b74a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.InterfaceTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ComInterfaceType" ref="false" />
            <enumValue>
              <field name="InterfaceIsIUnknown" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Web.Hosting.IProcessHostFactoryHelper">
      <topicdata name="IProcessHostFactoryHelper" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.IProcessHostFactoryHelper" />
      <apidata name="IProcessHostFactoryHelper" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <elements>
        <element api="M:System.Web.Hosting.IProcessHostFactoryHelper.GetProcessHost(System.Web.Hosting.IProcessHostSupportFunctions)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IProcessHostFactoryHelper" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IProcessHostFactoryHelper.GetProcessHost(System.Web.Hosting.IProcessHostSupportFunctions)">
      <topicdata group="api" />
      <apidata name="GetProcessHost" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="functions">
          <type api="T:System.Web.Hosting.IProcessHostSupportFunctions" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IProcessHostFactoryHelper" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.IProcessHostIdleAndHealthCheck">
      <topicdata group="api" />
      <apidata name="IProcessHostIdleAndHealthCheck" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <implementors>
        <type api="T:System.Web.Hosting.ProcessHost" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Web.Hosting.IProcessHostIdleAndHealthCheck.IsIdle" />
        <element api="M:System.Web.Hosting.IProcessHostIdleAndHealthCheck.Ping(System.Web.Hosting.IProcessPingCallback)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>9d98b251-453e-44f6-9cec-8b5aed970129</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.InterfaceTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ComInterfaceType" ref="false" />
            <enumValue>
              <field name="InterfaceIsIUnknown" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Web.Hosting.IProcessHostIdleAndHealthCheck">
      <topicdata name="IProcessHostIdleAndHealthCheck" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.IProcessHostIdleAndHealthCheck" />
      <apidata name="IProcessHostIdleAndHealthCheck" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <elements>
        <element api="M:System.Web.Hosting.IProcessHostIdleAndHealthCheck.IsIdle" />
        <element api="M:System.Web.Hosting.IProcessHostIdleAndHealthCheck.Ping(System.Web.Hosting.IProcessPingCallback)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IProcessHostIdleAndHealthCheck" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IProcessHostIdleAndHealthCheck.IsIdle">
      <topicdata group="api" />
      <apidata name="IsIdle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IProcessHostIdleAndHealthCheck" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IProcessHostIdleAndHealthCheck.Ping(System.Web.Hosting.IProcessPingCallback)">
      <topicdata group="api" />
      <apidata name="Ping" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.Web.Hosting.IProcessPingCallback" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IProcessHostIdleAndHealthCheck" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.IProcessHostPreloadClient">
      <topicdata group="api" />
      <apidata name="IProcessHostPreloadClient" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Web.Hosting.IProcessHostPreloadClient.Preload(System.String[])" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.IProcessHostPreloadClient">
      <topicdata name="IProcessHostPreloadClient" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.IProcessHostPreloadClient" />
      <apidata name="IProcessHostPreloadClient" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Web.Hosting.IProcessHostPreloadClient.Preload(System.String[])" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IProcessHostPreloadClient" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IProcessHostPreloadClient.Preload(System.String[])">
      <topicdata group="api" />
      <apidata name="Preload" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IProcessHostPreloadClient" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.IProcessHostSupportFunctions">
      <topicdata group="api" />
      <apidata name="IProcessHostSupportFunctions" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <elements>
        <element api="M:System.Web.Hosting.IProcessHostSupportFunctions.GetAppHostConfigFilename" />
        <element api="M:System.Web.Hosting.IProcessHostSupportFunctions.GetApplicationProperties(System.String,System.String@,System.String@,System.String@,System.String@)" />
        <element api="M:System.Web.Hosting.IProcessHostSupportFunctions.GetConfigToken(System.String)" />
        <element api="M:System.Web.Hosting.IProcessHostSupportFunctions.GetNativeConfigurationSystem" />
        <element api="M:System.Web.Hosting.IProcessHostSupportFunctions.GetRootWebConfigFilename" />
        <element api="M:System.Web.Hosting.IProcessHostSupportFunctions.MapPath(System.String,System.String,System.String@)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>35f9c4c1-3800-4d17-99bc-018a62243687</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.InterfaceTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ComInterfaceType" ref="false" />
            <enumValue>
              <field name="InterfaceIsIUnknown" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Web.Hosting.IProcessHostSupportFunctions">
      <topicdata name="IProcessHostSupportFunctions" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.IProcessHostSupportFunctions" />
      <apidata name="IProcessHostSupportFunctions" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <elements>
        <element api="M:System.Web.Hosting.IProcessHostSupportFunctions.GetAppHostConfigFilename" />
        <element api="M:System.Web.Hosting.IProcessHostSupportFunctions.GetApplicationProperties(System.String,System.String@,System.String@,System.String@,System.String@)" />
        <element api="M:System.Web.Hosting.IProcessHostSupportFunctions.GetConfigToken(System.String)" />
        <element api="M:System.Web.Hosting.IProcessHostSupportFunctions.GetNativeConfigurationSystem" />
        <element api="M:System.Web.Hosting.IProcessHostSupportFunctions.GetRootWebConfigFilename" />
        <element api="M:System.Web.Hosting.IProcessHostSupportFunctions.MapPath(System.String,System.String,System.String@)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IProcessHostSupportFunctions" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IProcessHostSupportFunctions.GetAppHostConfigFilename">
      <topicdata group="api" />
      <apidata name="GetAppHostConfigFilename" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IProcessHostSupportFunctions" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IProcessHostSupportFunctions.GetApplicationProperties(System.String,System.String@,System.String@,System.String@,System.String@)">
      <topicdata group="api" />
      <apidata name="GetApplicationProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="appId" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="virtualPath" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="physicalPath" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="siteName" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="siteId" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IProcessHostSupportFunctions" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IProcessHostSupportFunctions.GetConfigToken(System.String)">
      <topicdata group="api" />
      <apidata name="GetConfigToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="appId" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IProcessHostSupportFunctions" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IProcessHostSupportFunctions.GetNativeConfigurationSystem">
      <topicdata group="api" />
      <apidata name="GetNativeConfigurationSystem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IProcessHostSupportFunctions" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IProcessHostSupportFunctions.GetRootWebConfigFilename">
      <topicdata group="api" />
      <apidata name="GetRootWebConfigFilename" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IProcessHostSupportFunctions" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IProcessHostSupportFunctions.MapPath(System.String,System.String,System.String@)">
      <topicdata group="api" />
      <apidata name="MapPath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="appId" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="virtualPath" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="physicalPath" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IProcessHostSupportFunctions" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.IProcessPingCallback">
      <topicdata group="api" />
      <apidata name="IProcessPingCallback" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <elements>
        <element api="M:System.Web.Hosting.IProcessPingCallback.Respond" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f11dc4c9-ddd1-4566-ad53-cf6f3a28fefe</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.InterfaceTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ComInterfaceType" ref="false" />
            <enumValue>
              <field name="InterfaceIsIUnknown" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Web.Hosting.IProcessPingCallback">
      <topicdata name="IProcessPingCallback" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.IProcessPingCallback" />
      <apidata name="IProcessPingCallback" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <elements>
        <element api="M:System.Web.Hosting.IProcessPingCallback.Respond" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IProcessPingCallback" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IProcessPingCallback.Respond">
      <topicdata group="api" />
      <apidata name="Respond" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IProcessPingCallback" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.IRegisteredObject">
      <topicdata group="api" />
      <apidata name="IRegisteredObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Web.Hosting.ISuspendibleRegisteredObject" ref="true" />
        <type api="T:System.Web.Hosting.IStopListeningRegisteredObject" ref="true" />
        <type api="T:System.Web.Hosting.AppDomainProtocolHandler" ref="true" />
        <type api="T:System.Web.Hosting.ISAPIRuntime" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.IRegisteredObject">
      <topicdata name="IRegisteredObject" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.IRegisteredObject" />
      <apidata name="IRegisteredObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IRegisteredObject" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="immediate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IRegisteredObject" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.ISAPIRuntime">
      <topicdata group="api" />
      <apidata name="ISAPIRuntime" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Web.Hosting.ISAPIRuntime.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Web.Hosting.IISAPIRuntime" ref="true" />
        <type api="T:System.Web.Hosting.IRegisteredObject" ref="true" />
      </implements>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.ISAPIRuntime.#ctor" />
        <element api="M:System.Web.Hosting.ISAPIRuntime.DoGCCollect" />
        <element api="M:System.Web.Hosting.ISAPIRuntime.InitializeLifetimeService" />
        <element api="M:System.Web.Hosting.ISAPIRuntime.ProcessRequest(System.IntPtr,System.Int32)" />
        <element api="M:System.Web.Hosting.ISAPIRuntime.StartProcessing" />
        <element api="M:System.Web.Hosting.ISAPIRuntime.StopProcessing" />
        <element api="M:System.Web.Hosting.ISAPIRuntime.System#Web#Hosting#IRegisteredObject#Stop(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.ISAPIRuntime">
      <topicdata name="ISAPIRuntime" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.ISAPIRuntime" />
      <apidata name="ISAPIRuntime" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Web.Hosting.ISAPIRuntime.#ctor" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.ISAPIRuntime.DoGCCollect" />
        <element api="M:System.Web.Hosting.ISAPIRuntime.InitializeLifetimeService" />
        <element api="M:System.Web.Hosting.ISAPIRuntime.ProcessRequest(System.IntPtr,System.Int32)" />
        <element api="M:System.Web.Hosting.ISAPIRuntime.StartProcessing" />
        <element api="M:System.Web.Hosting.ISAPIRuntime.StopProcessing" />
        <element api="M:System.Web.Hosting.ISAPIRuntime.System#Web#Hosting#IRegisteredObject#Stop(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ISAPIRuntime" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ISAPIRuntime.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ISAPIRuntime" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ISAPIRuntime.DoGCCollect">
      <topicdata group="api" />
      <apidata name="DoGCCollect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Web.Hosting.IISAPIRuntime.DoGCCollect">
          <type api="T:System.Web.Hosting.IISAPIRuntime" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ISAPIRuntime" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ISAPIRuntime.InitializeLifetimeService">
      <topicdata group="api" />
      <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <type api="T:System.MarshalByRefObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ISAPIRuntime" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ISAPIRuntime.ProcessRequest(System.IntPtr,System.Int32)">
      <topicdata group="api" />
      <apidata name="ProcessRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ecb">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="iWRType">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Web.Hosting.IISAPIRuntime.ProcessRequest(System.IntPtr,System.Int32)">
          <type api="T:System.Web.Hosting.IISAPIRuntime" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ISAPIRuntime" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ISAPIRuntime.StartProcessing">
      <topicdata group="api" />
      <apidata name="StartProcessing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Web.Hosting.IISAPIRuntime.StartProcessing">
          <type api="T:System.Web.Hosting.IISAPIRuntime" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ISAPIRuntime" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ISAPIRuntime.StopProcessing">
      <topicdata group="api" />
      <apidata name="StopProcessing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Web.Hosting.IISAPIRuntime.StopProcessing">
          <type api="T:System.Web.Hosting.IISAPIRuntime" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ISAPIRuntime" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ISAPIRuntime.System#Web#Hosting#IRegisteredObject#Stop(System.Boolean)">
      <topicdata group="api" eiiName="IRegisteredObject.Stop" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="immediate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)">
          <type api="T:System.Web.Hosting.IRegisteredObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ISAPIRuntime" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.IStopListeningRegisteredObject">
      <topicdata group="api" />
      <apidata name="IStopListeningRegisteredObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Web.Hosting.IRegisteredObject" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)" />
        <element api="M:System.Web.Hosting.IStopListeningRegisteredObject.StopListening" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.IStopListeningRegisteredObject">
      <topicdata name="IStopListeningRegisteredObject" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.IStopListeningRegisteredObject" />
      <apidata name="IStopListeningRegisteredObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)" />
        <element api="M:System.Web.Hosting.IStopListeningRegisteredObject.StopListening" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IStopListeningRegisteredObject" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.IStopListeningRegisteredObject.StopListening">
      <topicdata group="api" />
      <apidata name="StopListening" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.IStopListeningRegisteredObject" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.ISuspendibleRegisteredObject">
      <topicdata group="api" />
      <apidata name="ISuspendibleRegisteredObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Web.Hosting.IRegisteredObject" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)" />
        <element api="M:System.Web.Hosting.ISuspendibleRegisteredObject.Suspend" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.ISuspendibleRegisteredObject">
      <topicdata name="ISuspendibleRegisteredObject" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.ISuspendibleRegisteredObject" />
      <apidata name="ISuspendibleRegisteredObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)" />
        <element api="M:System.Web.Hosting.ISuspendibleRegisteredObject.Suspend" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ISuspendibleRegisteredObject" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ISuspendibleRegisteredObject.Suspend">
      <topicdata group="api" />
      <apidata name="Suspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Action" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ISuspendibleRegisteredObject" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.LowPhysicalMemoryInfo">
      <topicdata group="api" />
      <apidata name="LowPhysicalMemoryInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.LowPhysicalMemoryInfo.#ctor(System.Int32,System.Int32)" />
        <element api="P:System.Web.Hosting.LowPhysicalMemoryInfo.CurrentPercentUsed" />
        <element api="P:System.Web.Hosting.LowPhysicalMemoryInfo.PercentLimit" />
        <element api="P:System.Web.Hosting.LowPhysicalMemoryInfo.RequestGC" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.LowPhysicalMemoryInfo">
      <topicdata name="LowPhysicalMemoryInfo" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.LowPhysicalMemoryInfo" />
      <apidata name="LowPhysicalMemoryInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.LowPhysicalMemoryInfo" />
      </containers>
    </api>
    <api id="Properties.T:System.Web.Hosting.LowPhysicalMemoryInfo">
      <topicdata name="LowPhysicalMemoryInfo" group="list" subgroup="Properties" typeTopicId="T:System.Web.Hosting.LowPhysicalMemoryInfo" />
      <apidata name="LowPhysicalMemoryInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Web.Hosting.LowPhysicalMemoryInfo.CurrentPercentUsed" />
        <element api="P:System.Web.Hosting.LowPhysicalMemoryInfo.PercentLimit" />
        <element api="P:System.Web.Hosting.LowPhysicalMemoryInfo.RequestGC" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.LowPhysicalMemoryInfo" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.LowPhysicalMemoryInfo.#ctor(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="currentPercentUsed">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="percentLimit">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.LowPhysicalMemoryInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.LowPhysicalMemoryInfo.CurrentPercentUsed">
      <topicdata group="api" />
      <apidata name="CurrentPercentUsed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentPercentUsed" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.LowPhysicalMemoryInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.LowPhysicalMemoryInfo.PercentLimit">
      <topicdata group="api" />
      <apidata name="PercentLimit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PercentLimit" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.LowPhysicalMemoryInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.LowPhysicalMemoryInfo.RequestGC">
      <topicdata group="api" />
      <apidata name="RequestGC" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RequestGC" />
      <setter name="set_RequestGC" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.LowPhysicalMemoryInfo" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.LowPhysicalMemoryObserver">
      <topicdata group="api" />
      <apidata name="LowPhysicalMemoryObserver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Web.Hosting.LowPhysicalMemoryObserver.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IObserver`1" ref="true">
          <specialization>
            <type api="T:System.Web.Hosting.LowPhysicalMemoryInfo" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.LowPhysicalMemoryObserver.#ctor" />
        <element api="M:System.Web.Hosting.LowPhysicalMemoryObserver.OnCompleted" />
        <element api="M:System.Web.Hosting.LowPhysicalMemoryObserver.OnError(System.Exception)" />
        <element api="M:System.Web.Hosting.LowPhysicalMemoryObserver.OnNext(System.Web.Hosting.LowPhysicalMemoryInfo)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.LowPhysicalMemoryObserver">
      <topicdata name="LowPhysicalMemoryObserver" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.LowPhysicalMemoryObserver" />
      <apidata name="LowPhysicalMemoryObserver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Web.Hosting.LowPhysicalMemoryObserver.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.LowPhysicalMemoryObserver.OnCompleted" />
        <element api="M:System.Web.Hosting.LowPhysicalMemoryObserver.OnError(System.Exception)" />
        <element api="M:System.Web.Hosting.LowPhysicalMemoryObserver.OnNext(System.Web.Hosting.LowPhysicalMemoryInfo)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.LowPhysicalMemoryObserver" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.LowPhysicalMemoryObserver.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.LowPhysicalMemoryObserver" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.LowPhysicalMemoryObserver.OnCompleted">
      <topicdata group="api" />
      <apidata name="OnCompleted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IObserver`1.OnCompleted">
          <type api="T:System.IObserver`1" ref="true">
            <specialization>
              <type api="T:System.Web.Hosting.LowPhysicalMemoryInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.LowPhysicalMemoryObserver" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.LowPhysicalMemoryObserver.OnError(System.Exception)">
      <topicdata group="api" />
      <apidata name="OnError" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="error">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.IObserver`1.OnError(System.Exception)">
          <type api="T:System.IObserver`1" ref="true">
            <specialization>
              <type api="T:System.Web.Hosting.LowPhysicalMemoryInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.LowPhysicalMemoryObserver" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.LowPhysicalMemoryObserver.OnNext(System.Web.Hosting.LowPhysicalMemoryInfo)">
      <topicdata group="api" />
      <apidata name="OnNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="lowMemoryInfo">
          <type api="T:System.Web.Hosting.LowPhysicalMemoryInfo" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.IObserver`1.OnNext(`0)">
          <type api="T:System.IObserver`1" ref="true">
            <specialization>
              <type api="T:System.Web.Hosting.LowPhysicalMemoryInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.LowPhysicalMemoryObserver" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.ProcessHost">
      <topicdata group="api" />
      <apidata name="ProcessHost" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Web.Hosting.IProcessHost" ref="true" />
        <type api="T:System.Web.Hosting.IAdphManager" ref="true" />
        <type api="T:System.Web.Hosting.IPphManager" ref="true" />
        <type api="T:System.Web.Hosting.IProcessHostIdleAndHealthCheck" ref="true" />
        <type api="T:System.Web.Hosting.IApplicationPreloadManager" ref="true" />
      </implements>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.ProcessHost.EnumerateAppDomains(System.Web.Hosting.IAppDomainInfoEnum@)" />
        <element api="M:System.Web.Hosting.ProcessHost.InitializeLifetimeService" />
        <element api="M:System.Web.Hosting.ProcessHost.IsIdle" />
        <element api="M:System.Web.Hosting.ProcessHost.Ping(System.Web.Hosting.IProcessPingCallback)" />
        <element api="M:System.Web.Hosting.ProcessHost.SetApplicationPreloadState(System.String,System.String,System.Boolean)" />
        <element api="M:System.Web.Hosting.ProcessHost.SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)" />
        <element api="M:System.Web.Hosting.ProcessHost.Shutdown" />
        <element api="M:System.Web.Hosting.ProcessHost.ShutdownApplication(System.String)" />
        <element api="M:System.Web.Hosting.ProcessHost.StartAppDomainProtocolListenerChannel(System.String,System.String,System.Web.Hosting.IListenerChannelCallback)" />
        <element api="M:System.Web.Hosting.ProcessHost.StartApplication(System.String,System.String,System.Object@)" />
        <element api="M:System.Web.Hosting.ProcessHost.StartProcessProtocolListenerChannel(System.String,System.Web.Hosting.IListenerChannelCallback)" />
        <element api="M:System.Web.Hosting.ProcessHost.StopAppDomainProtocol(System.String,System.String,System.Boolean)" />
        <element api="M:System.Web.Hosting.ProcessHost.StopAppDomainProtocolListenerChannel(System.String,System.String,System.Int32,System.Boolean)" />
        <element api="M:System.Web.Hosting.ProcessHost.StopProcessProtocol(System.String,System.Boolean)" />
        <element api="M:System.Web.Hosting.ProcessHost.StopProcessProtocolListenerChannel(System.String,System.Int32,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.ProcessHost">
      <topicdata name="ProcessHost" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.ProcessHost" />
      <apidata name="ProcessHost" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.ProcessHost.EnumerateAppDomains(System.Web.Hosting.IAppDomainInfoEnum@)" />
        <element api="M:System.Web.Hosting.ProcessHost.InitializeLifetimeService" />
        <element api="M:System.Web.Hosting.ProcessHost.IsIdle" />
        <element api="M:System.Web.Hosting.ProcessHost.Ping(System.Web.Hosting.IProcessPingCallback)" />
        <element api="M:System.Web.Hosting.ProcessHost.SetApplicationPreloadState(System.String,System.String,System.Boolean)" />
        <element api="M:System.Web.Hosting.ProcessHost.SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)" />
        <element api="M:System.Web.Hosting.ProcessHost.Shutdown" />
        <element api="M:System.Web.Hosting.ProcessHost.ShutdownApplication(System.String)" />
        <element api="M:System.Web.Hosting.ProcessHost.StartAppDomainProtocolListenerChannel(System.String,System.String,System.Web.Hosting.IListenerChannelCallback)" />
        <element api="M:System.Web.Hosting.ProcessHost.StartApplication(System.String,System.String,System.Object@)" />
        <element api="M:System.Web.Hosting.ProcessHost.StartProcessProtocolListenerChannel(System.String,System.Web.Hosting.IListenerChannelCallback)" />
        <element api="M:System.Web.Hosting.ProcessHost.StopAppDomainProtocol(System.String,System.String,System.Boolean)" />
        <element api="M:System.Web.Hosting.ProcessHost.StopAppDomainProtocolListenerChannel(System.String,System.String,System.Int32,System.Boolean)" />
        <element api="M:System.Web.Hosting.ProcessHost.StopProcessProtocol(System.String,System.Boolean)" />
        <element api="M:System.Web.Hosting.ProcessHost.StopProcessProtocolListenerChannel(System.String,System.Int32,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessHost" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessHost.EnumerateAppDomains(System.Web.Hosting.IAppDomainInfoEnum@)">
      <topicdata group="api" />
      <apidata name="EnumerateAppDomains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="appDomainInfoEnum" out="true">
          <referenceTo>
            <type api="T:System.Web.Hosting.IAppDomainInfoEnum" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Web.Hosting.IProcessHost.EnumerateAppDomains(System.Web.Hosting.IAppDomainInfoEnum@)">
          <type api="T:System.Web.Hosting.IProcessHost" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessHost.InitializeLifetimeService">
      <topicdata group="api" />
      <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <type api="T:System.MarshalByRefObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessHost.IsIdle">
      <topicdata group="api" />
      <apidata name="IsIdle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Web.Hosting.IProcessHostIdleAndHealthCheck.IsIdle">
          <type api="T:System.Web.Hosting.IProcessHostIdleAndHealthCheck" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessHost.Ping(System.Web.Hosting.IProcessPingCallback)">
      <topicdata group="api" />
      <apidata name="Ping" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.Web.Hosting.IProcessPingCallback" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Web.Hosting.IProcessHostIdleAndHealthCheck.Ping(System.Web.Hosting.IProcessPingCallback)">
          <type api="T:System.Web.Hosting.IProcessHostIdleAndHealthCheck" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessHost.SetApplicationPreloadState(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetApplicationPreloadState" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="appId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="enabled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadState(System.String,System.String,System.Boolean)">
          <type api="T:System.Web.Hosting.IApplicationPreloadManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessHost.SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)">
      <topicdata group="api" />
      <apidata name="SetApplicationPreloadUtil" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="applicationPreloadUtil">
          <type api="T:System.Web.Hosting.IApplicationPreloadUtil" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)">
          <type api="T:System.Web.Hosting.IApplicationPreloadManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessHost.Shutdown">
      <topicdata group="api" />
      <apidata name="Shutdown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Web.Hosting.IProcessHost.Shutdown">
          <type api="T:System.Web.Hosting.IProcessHost" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessHost.ShutdownApplication(System.String)">
      <topicdata group="api" />
      <apidata name="ShutdownApplication" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="appId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Web.Hosting.IProcessHost.ShutdownApplication(System.String)">
          <type api="T:System.Web.Hosting.IProcessHost" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessHost.StartAppDomainProtocolListenerChannel(System.String,System.String,System.Web.Hosting.IListenerChannelCallback)">
      <topicdata group="api" />
      <apidata name="StartAppDomainProtocolListenerChannel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="appId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="protocolId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="listenerChannelCallback">
          <type api="T:System.Web.Hosting.IListenerChannelCallback" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Web.Hosting.IAdphManager.StartAppDomainProtocolListenerChannel(System.String,System.String,System.Web.Hosting.IListenerChannelCallback)">
          <type api="T:System.Web.Hosting.IAdphManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessHost.StartApplication(System.String,System.String,System.Object@)">
      <topicdata group="api" />
      <apidata name="StartApplication" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="appId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="appPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="runtimeInterface" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Web.Hosting.IProcessHost.StartApplication(System.String,System.String,System.Object@)">
          <type api="T:System.Web.Hosting.IProcessHost" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessHost.StartProcessProtocolListenerChannel(System.String,System.Web.Hosting.IListenerChannelCallback)">
      <topicdata group="api" />
      <apidata name="StartProcessProtocolListenerChannel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="protocolId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="listenerChannelCallback">
          <type api="T:System.Web.Hosting.IListenerChannelCallback" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Web.Hosting.IPphManager.StartProcessProtocolListenerChannel(System.String,System.Web.Hosting.IListenerChannelCallback)">
          <type api="T:System.Web.Hosting.IPphManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessHost.StopAppDomainProtocol(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="StopAppDomainProtocol" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="appId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="protocolId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="immediate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Web.Hosting.IAdphManager.StopAppDomainProtocol(System.String,System.String,System.Boolean)">
          <type api="T:System.Web.Hosting.IAdphManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessHost.StopAppDomainProtocolListenerChannel(System.String,System.String,System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="StopAppDomainProtocolListenerChannel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="appId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="protocolId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="listenerChannelId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="immediate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Web.Hosting.IAdphManager.StopAppDomainProtocolListenerChannel(System.String,System.String,System.Int32,System.Boolean)">
          <type api="T:System.Web.Hosting.IAdphManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessHost.StopProcessProtocol(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="StopProcessProtocol" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="protocolId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="immediate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Web.Hosting.IPphManager.StopProcessProtocol(System.String,System.Boolean)">
          <type api="T:System.Web.Hosting.IPphManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessHost.StopProcessProtocolListenerChannel(System.String,System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="StopProcessProtocolListenerChannel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="protocolId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="listenerChannelId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="immediate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Web.Hosting.IPphManager.StopProcessProtocolListenerChannel(System.String,System.Int32,System.Boolean)">
          <type api="T:System.Web.Hosting.IPphManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessHost" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.ProcessHostFactoryHelper">
      <topicdata group="api" />
      <apidata name="ProcessHostFactoryHelper" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Web.Hosting.ProcessHostFactoryHelper.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Web.Hosting.IProcessHostFactoryHelper" ref="true" />
      </implements>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.ProcessHostFactoryHelper.#ctor" />
        <element api="M:System.Web.Hosting.ProcessHostFactoryHelper.GetProcessHost(System.Web.Hosting.IProcessHostSupportFunctions)" />
        <element api="M:System.Web.Hosting.ProcessHostFactoryHelper.InitializeLifetimeService" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.ProcessHostFactoryHelper">
      <topicdata name="ProcessHostFactoryHelper" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.ProcessHostFactoryHelper" />
      <apidata name="ProcessHostFactoryHelper" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Web.Hosting.ProcessHostFactoryHelper.#ctor" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.ProcessHostFactoryHelper.GetProcessHost(System.Web.Hosting.IProcessHostSupportFunctions)" />
        <element api="M:System.Web.Hosting.ProcessHostFactoryHelper.InitializeLifetimeService" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessHostFactoryHelper" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessHostFactoryHelper.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessHostFactoryHelper" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessHostFactoryHelper.GetProcessHost(System.Web.Hosting.IProcessHostSupportFunctions)">
      <topicdata group="api" />
      <apidata name="GetProcessHost" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="functions">
          <type api="T:System.Web.Hosting.IProcessHostSupportFunctions" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Web.Hosting.IProcessHostFactoryHelper.GetProcessHost(System.Web.Hosting.IProcessHostSupportFunctions)">
          <type api="T:System.Web.Hosting.IProcessHostFactoryHelper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessHostFactoryHelper" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessHostFactoryHelper.InitializeLifetimeService">
      <topicdata group="api" />
      <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <type api="T:System.MarshalByRefObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessHostFactoryHelper" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.ProcessProtocolHandler">
      <topicdata group="api" />
      <apidata name="ProcessProtocolHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="Overload:System.Web.Hosting.ProcessProtocolHandler.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.ProcessProtocolHandler.#ctor" />
        <element api="M:System.Web.Hosting.ProcessProtocolHandler.InitializeLifetimeService" />
        <element api="M:System.Web.Hosting.ProcessProtocolHandler.StartListenerChannel(System.Web.Hosting.IListenerChannelCallback,System.Web.Hosting.IAdphManager)" />
        <element api="M:System.Web.Hosting.ProcessProtocolHandler.StopListenerChannel(System.Int32,System.Boolean)" />
        <element api="M:System.Web.Hosting.ProcessProtocolHandler.StopProtocol(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.ProcessProtocolHandler">
      <topicdata name="ProcessProtocolHandler" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.ProcessProtocolHandler" />
      <apidata name="ProcessProtocolHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="Overload:System.Web.Hosting.ProcessProtocolHandler.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.ProcessProtocolHandler.InitializeLifetimeService" />
        <element api="M:System.Web.Hosting.ProcessProtocolHandler.StartListenerChannel(System.Web.Hosting.IListenerChannelCallback,System.Web.Hosting.IAdphManager)" />
        <element api="M:System.Web.Hosting.ProcessProtocolHandler.StopListenerChannel(System.Int32,System.Boolean)" />
        <element api="M:System.Web.Hosting.ProcessProtocolHandler.StopProtocol(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessProtocolHandler" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessProtocolHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessProtocolHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessProtocolHandler.InitializeLifetimeService">
      <topicdata group="api" />
      <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <type api="T:System.MarshalByRefObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessProtocolHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessProtocolHandler.StartListenerChannel(System.Web.Hosting.IListenerChannelCallback,System.Web.Hosting.IAdphManager)">
      <topicdata group="api" />
      <apidata name="StartListenerChannel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="listenerChannelCallback">
          <type api="T:System.Web.Hosting.IListenerChannelCallback" ref="true" />
        </parameter>
        <parameter name="AdphManager">
          <type api="T:System.Web.Hosting.IAdphManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessProtocolHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessProtocolHandler.StopListenerChannel(System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="StopListenerChannel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="listenerChannelId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="immediate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessProtocolHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.ProcessProtocolHandler.StopProtocol(System.Boolean)">
      <topicdata group="api" />
      <apidata name="StopProtocol" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="immediate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.ProcessProtocolHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.RecycleLimitInfo">
      <topicdata group="api" />
      <apidata name="RecycleLimitInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.RecycleLimitInfo.#ctor(System.Int64,System.Int64,System.Web.Hosting.RecycleLimitNotificationFrequency)" />
        <element api="P:System.Web.Hosting.RecycleLimitInfo.CurrentPrivateBytes" />
        <element api="P:System.Web.Hosting.RecycleLimitInfo.RecycleLimit" />
        <element api="P:System.Web.Hosting.RecycleLimitInfo.RequestGC" />
        <element api="P:System.Web.Hosting.RecycleLimitInfo.TrimFrequency" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.RecycleLimitInfo">
      <topicdata name="RecycleLimitInfo" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.RecycleLimitInfo" />
      <apidata name="RecycleLimitInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitInfo" />
      </containers>
    </api>
    <api id="Properties.T:System.Web.Hosting.RecycleLimitInfo">
      <topicdata name="RecycleLimitInfo" group="list" subgroup="Properties" typeTopicId="T:System.Web.Hosting.RecycleLimitInfo" />
      <apidata name="RecycleLimitInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Web.Hosting.RecycleLimitInfo.CurrentPrivateBytes" />
        <element api="P:System.Web.Hosting.RecycleLimitInfo.RecycleLimit" />
        <element api="P:System.Web.Hosting.RecycleLimitInfo.RequestGC" />
        <element api="P:System.Web.Hosting.RecycleLimitInfo.TrimFrequency" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitInfo" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.RecycleLimitInfo.#ctor(System.Int64,System.Int64,System.Web.Hosting.RecycleLimitNotificationFrequency)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="currentPrivateBytes">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="recycleLimit">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="recycleLimitNearFrequency">
          <type api="T:System.Web.Hosting.RecycleLimitNotificationFrequency" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.RecycleLimitInfo.CurrentPrivateBytes">
      <topicdata group="api" />
      <apidata name="CurrentPrivateBytes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentPrivateBytes" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.RecycleLimitInfo.RecycleLimit">
      <topicdata group="api" />
      <apidata name="RecycleLimit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RecycleLimit" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.RecycleLimitInfo.RequestGC">
      <topicdata group="api" />
      <apidata name="RequestGC" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RequestGC" />
      <setter name="set_RequestGC" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.RecycleLimitInfo.TrimFrequency">
      <topicdata group="api" />
      <apidata name="TrimFrequency" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TrimFrequency" />
      <returns>
        <type api="T:System.Web.Hosting.RecycleLimitNotificationFrequency" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitInfo" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.RecycleLimitMonitor">
      <topicdata group="api" />
      <apidata name="RecycleLimitMonitor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="Overload:System.Web.Hosting.RecycleLimitMonitor.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.RecycleLimitMonitor.Dispose" />
        <element api="M:System.Web.Hosting.RecycleLimitMonitor.InitializeLifetimeService" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.RecycleLimitMonitor">
      <topicdata name="RecycleLimitMonitor" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.RecycleLimitMonitor" />
      <apidata name="RecycleLimitMonitor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="Overload:System.Web.Hosting.RecycleLimitMonitor.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.RecycleLimitMonitor.Dispose" />
        <element api="M:System.Web.Hosting.RecycleLimitMonitor.InitializeLifetimeService" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitMonitor" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.RecycleLimitMonitor.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitMonitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.RecycleLimitMonitor.InitializeLifetimeService">
      <topicdata group="api" />
      <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <type api="T:System.MarshalByRefObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitMonitor" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton">
      <topicdata group="api" />
      <apidata name="RecycleLimitMonitorSingleton" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="Overload:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton.Dispose" />
        <element api="M:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton.EnsureCreated" />
        <element api="M:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton.InitializeLifetimeService" />
        <element api="M:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton.RegisterProxyAndStart(System.Web.Hosting.RecycleLimitMonitor,System.String)" />
        <element api="M:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton.UnregisterProxyAndStop(System.Web.Hosting.RecycleLimitMonitor)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitMonitor" ref="true" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton">
      <topicdata name="RecycleLimitMonitorSingleton" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton" />
      <apidata name="RecycleLimitMonitorSingleton" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="Overload:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton.Dispose" />
        <element api="M:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton.EnsureCreated" />
        <element api="M:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton.InitializeLifetimeService" />
        <element api="M:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton.RegisterProxyAndStart(System.Web.Hosting.RecycleLimitMonitor,System.String)" />
        <element api="M:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton.UnregisterProxyAndStop(System.Web.Hosting.RecycleLimitMonitor)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton" ref="true">
          <type api="T:System.Web.Hosting.RecycleLimitMonitor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton.EnsureCreated">
      <topicdata group="api" />
      <apidata name="EnsureCreated" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton" ref="true">
          <type api="T:System.Web.Hosting.RecycleLimitMonitor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton.InitializeLifetimeService">
      <topicdata group="api" />
      <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <type api="T:System.MarshalByRefObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton" ref="true">
          <type api="T:System.Web.Hosting.RecycleLimitMonitor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton.RegisterProxyAndStart(System.Web.Hosting.RecycleLimitMonitor,System.String)">
      <topicdata group="api" />
      <apidata name="RegisterProxyAndStart" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="proxy">
          <type api="T:System.Web.Hosting.RecycleLimitMonitor" ref="true" />
        </parameter>
        <parameter name="applicationID">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton" ref="true">
          <type api="T:System.Web.Hosting.RecycleLimitMonitor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton.UnregisterProxyAndStop(System.Web.Hosting.RecycleLimitMonitor)">
      <topicdata group="api" />
      <apidata name="UnregisterProxyAndStop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="proxy">
          <type api="T:System.Web.Hosting.RecycleLimitMonitor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton" ref="true">
          <type api="T:System.Web.Hosting.RecycleLimitMonitor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:System.Web.Hosting.RecycleLimitNotificationFrequency">
      <topicdata group="api" />
      <apidata name="RecycleLimitNotificationFrequency" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Web.Hosting.RecycleLimitNotificationFrequency.High" />
        <element api="F:System.Web.Hosting.RecycleLimitNotificationFrequency.Medium" />
        <element api="F:System.Web.Hosting.RecycleLimitNotificationFrequency.Low" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="F:System.Web.Hosting.RecycleLimitNotificationFrequency.High">
      <topicdata group="api" notopic="" />
      <apidata name="High" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Web.Hosting.RecycleLimitNotificationFrequency" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitNotificationFrequency" ref="false" />
      </containers>
    </api>
    <api id="F:System.Web.Hosting.RecycleLimitNotificationFrequency.Low">
      <topicdata group="api" notopic="" />
      <apidata name="Low" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Web.Hosting.RecycleLimitNotificationFrequency" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitNotificationFrequency" ref="false" />
      </containers>
    </api>
    <api id="F:System.Web.Hosting.RecycleLimitNotificationFrequency.Medium">
      <topicdata group="api" notopic="" />
      <apidata name="Medium" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Web.Hosting.RecycleLimitNotificationFrequency" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitNotificationFrequency" ref="false" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.RecycleLimitObserver">
      <topicdata group="api" />
      <apidata name="RecycleLimitObserver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Web.Hosting.RecycleLimitObserver.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IObserver`1" ref="true">
          <specialization>
            <type api="T:System.Web.Hosting.RecycleLimitInfo" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.RecycleLimitObserver.#ctor" />
        <element api="M:System.Web.Hosting.RecycleLimitObserver.OnCompleted" />
        <element api="M:System.Web.Hosting.RecycleLimitObserver.OnError(System.Exception)" />
        <element api="M:System.Web.Hosting.RecycleLimitObserver.OnNext(System.Web.Hosting.RecycleLimitInfo)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.RecycleLimitObserver">
      <topicdata name="RecycleLimitObserver" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.RecycleLimitObserver" />
      <apidata name="RecycleLimitObserver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Web.Hosting.RecycleLimitObserver.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.RecycleLimitObserver.OnCompleted" />
        <element api="M:System.Web.Hosting.RecycleLimitObserver.OnError(System.Exception)" />
        <element api="M:System.Web.Hosting.RecycleLimitObserver.OnNext(System.Web.Hosting.RecycleLimitInfo)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitObserver" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.RecycleLimitObserver.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitObserver" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.RecycleLimitObserver.OnCompleted">
      <topicdata group="api" />
      <apidata name="OnCompleted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IObserver`1.OnCompleted">
          <type api="T:System.IObserver`1" ref="true">
            <specialization>
              <type api="T:System.Web.Hosting.RecycleLimitInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitObserver" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.RecycleLimitObserver.OnError(System.Exception)">
      <topicdata group="api" />
      <apidata name="OnError" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="error">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.IObserver`1.OnError(System.Exception)">
          <type api="T:System.IObserver`1" ref="true">
            <specialization>
              <type api="T:System.Web.Hosting.RecycleLimitInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitObserver" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.RecycleLimitObserver.OnNext(System.Web.Hosting.RecycleLimitInfo)">
      <topicdata group="api" />
      <apidata name="OnNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="recycleLimitInfo">
          <type api="T:System.Web.Hosting.RecycleLimitInfo" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.IObserver`1.OnNext(`0)">
          <type api="T:System.IObserver`1" ref="true">
            <specialization>
              <type api="T:System.Web.Hosting.RecycleLimitInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.RecycleLimitObserver" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.SimpleWorkerRequest">
      <topicdata group="api" />
      <apidata name="SimpleWorkerRequest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Web.Hosting.SimpleWorkerRequest.#ctor">
          <element api="M:System.Web.Hosting.SimpleWorkerRequest.#ctor(System.String,System.String,System.IO.TextWriter)" />
          <element api="M:System.Web.Hosting.SimpleWorkerRequest.#ctor(System.String,System.String,System.String,System.String,System.IO.TextWriter)" />
        </element>
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.EndOfRequest" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.FlushResponse(System.Boolean)" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetAppPath" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetAppPathTranslated" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetFilePath" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetFilePathTranslated" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetHttpVerbName" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetHttpVersion" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetLocalAddress" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetLocalPort" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetPathInfo" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetQueryString" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetRawUrl" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetRemoteAddress" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetRemotePort" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetServerVariable(System.String)" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetUriPath" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetUserToken" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.MapPath(System.String)" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" />
        <element api="Overload:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile">
          <element api="M:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)" />
          <element api="M:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile(System.String,System.Int64,System.Int64)" />
        </element>
        <element api="Overload:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromMemory">
          <element api="M:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)" />
          <element api="M:System.Web.HttpWorkerRequest.SendResponseFromMemory(System.IntPtr,System.Int32)" />
        </element>
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.SendStatus(System.Int32,System.String)" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.SendUnknownResponseHeader(System.String,System.String)" />
        <element api="M:System.Web.HttpWorkerRequest.BeginFlush(System.AsyncCallback,System.Object)" />
        <element api="M:System.Web.HttpWorkerRequest.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.Web.HttpWorkerRequest.CloseConnection" />
        <element api="M:System.Web.HttpWorkerRequest.EndFlush(System.IAsyncResult)" />
        <element api="M:System.Web.HttpWorkerRequest.EndRead(System.IAsyncResult)" />
        <element api="M:System.Web.HttpWorkerRequest.GetAppPoolID" />
        <element api="M:System.Web.HttpWorkerRequest.GetBytesRead" />
        <element api="M:System.Web.HttpWorkerRequest.GetClientCertificate" />
        <element api="M:System.Web.HttpWorkerRequest.GetClientCertificateBinaryIssuer" />
        <element api="M:System.Web.HttpWorkerRequest.GetClientCertificateEncoding" />
        <element api="M:System.Web.HttpWorkerRequest.GetClientCertificatePublicKey" />
        <element api="M:System.Web.HttpWorkerRequest.GetClientCertificateValidFrom" />
        <element api="M:System.Web.HttpWorkerRequest.GetClientCertificateValidUntil" />
        <element api="M:System.Web.HttpWorkerRequest.GetConnectionID" />
        <element api="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" />
        <element api="Overload:System.Web.Hosting.SimpleWorkerRequest.GetPreloadedEntityBody">
          <element api="M:System.Web.HttpWorkerRequest.GetPreloadedEntityBody" />
          <element api="M:System.Web.HttpWorkerRequest.GetPreloadedEntityBody(System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.Web.HttpWorkerRequest.GetPreloadedEntityBodyLength" />
        <element api="M:System.Web.HttpWorkerRequest.GetProtocol" />
        <element api="M:System.Web.HttpWorkerRequest.GetQueryStringRawBytes" />
        <element api="M:System.Web.HttpWorkerRequest.GetRemoteName" />
        <element api="M:System.Web.HttpWorkerRequest.GetRequestReason" />
        <element api="M:System.Web.HttpWorkerRequest.GetServerName" />
        <element api="M:System.Web.HttpWorkerRequest.GetTotalEntityBodyLength" />
        <element api="M:System.Web.HttpWorkerRequest.GetUnknownRequestHeader(System.String)" />
        <element api="M:System.Web.HttpWorkerRequest.GetUnknownRequestHeaders" />
        <element api="M:System.Web.HttpWorkerRequest.GetUrlContextID" />
        <element api="M:System.Web.HttpWorkerRequest.GetVirtualPathToken" />
        <element api="M:System.Web.HttpWorkerRequest.HasEntityBody" />
        <element api="M:System.Web.HttpWorkerRequest.HeadersSent" />
        <element api="M:System.Web.HttpWorkerRequest.IsClientConnected" />
        <element api="M:System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded" />
        <element api="M:System.Web.HttpWorkerRequest.IsSecure" />
        <element api="Overload:System.Web.Hosting.SimpleWorkerRequest.ReadEntityBody">
          <element api="M:System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32)" />
          <element api="M:System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Web.Hosting.SimpleWorkerRequest.SendCalculatedContentLength">
          <element api="M:System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int32)" />
          <element api="M:System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int64)" />
        </element>
        <element api="M:System.Web.HttpWorkerRequest.SetEndOfSendNotification(System.Web.HttpWorkerRequest.EndOfSendNotification,System.Object)" />
        <element api="P:System.Web.Hosting.SimpleWorkerRequest.MachineConfigPath" />
        <element api="P:System.Web.Hosting.SimpleWorkerRequest.MachineInstallDirectory" />
        <element api="P:System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath" />
        <element api="P:System.Web.HttpWorkerRequest.RequestTraceIdentifier" />
        <element api="P:System.Web.HttpWorkerRequest.SupportsAsyncFlush" />
        <element api="P:System.Web.HttpWorkerRequest.SupportsAsyncRead" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Web.Hosting.SimpleWorkerRequest">
      <topicdata name="SimpleWorkerRequest" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.SimpleWorkerRequest" />
      <apidata name="SimpleWorkerRequest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.EndOfRequest" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.FlushResponse(System.Boolean)" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetAppPath" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetAppPathTranslated" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetFilePath" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetFilePathTranslated" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetHttpVerbName" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetHttpVersion" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetLocalAddress" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetLocalPort" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetPathInfo" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetQueryString" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetRawUrl" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetRemoteAddress" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetRemotePort" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetServerVariable(System.String)" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetUriPath" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.GetUserToken" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.MapPath(System.String)" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" />
        <element api="Overload:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile">
          <element api="M:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)" />
          <element api="M:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile(System.String,System.Int64,System.Int64)" />
        </element>
        <element api="Overload:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromMemory">
          <element api="M:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)" />
          <element api="M:System.Web.HttpWorkerRequest.SendResponseFromMemory(System.IntPtr,System.Int32)" />
        </element>
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.SendStatus(System.Int32,System.String)" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.SendUnknownResponseHeader(System.String,System.String)" />
        <element api="M:System.Web.HttpWorkerRequest.BeginFlush(System.AsyncCallback,System.Object)" />
        <element api="M:System.Web.HttpWorkerRequest.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.Web.HttpWorkerRequest.CloseConnection" />
        <element api="M:System.Web.HttpWorkerRequest.EndFlush(System.IAsyncResult)" />
        <element api="M:System.Web.HttpWorkerRequest.EndRead(System.IAsyncResult)" />
        <element api="M:System.Web.HttpWorkerRequest.GetAppPoolID" />
        <element api="M:System.Web.HttpWorkerRequest.GetBytesRead" />
        <element api="M:System.Web.HttpWorkerRequest.GetClientCertificate" />
        <element api="M:System.Web.HttpWorkerRequest.GetClientCertificateBinaryIssuer" />
        <element api="M:System.Web.HttpWorkerRequest.GetClientCertificateEncoding" />
        <element api="M:System.Web.HttpWorkerRequest.GetClientCertificatePublicKey" />
        <element api="M:System.Web.HttpWorkerRequest.GetClientCertificateValidFrom" />
        <element api="M:System.Web.HttpWorkerRequest.GetClientCertificateValidUntil" />
        <element api="M:System.Web.HttpWorkerRequest.GetConnectionID" />
        <element api="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" />
        <element api="Overload:System.Web.Hosting.SimpleWorkerRequest.GetPreloadedEntityBody">
          <element api="M:System.Web.HttpWorkerRequest.GetPreloadedEntityBody" />
          <element api="M:System.Web.HttpWorkerRequest.GetPreloadedEntityBody(System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.Web.HttpWorkerRequest.GetPreloadedEntityBodyLength" />
        <element api="M:System.Web.HttpWorkerRequest.GetProtocol" />
        <element api="M:System.Web.HttpWorkerRequest.GetQueryStringRawBytes" />
        <element api="M:System.Web.HttpWorkerRequest.GetRemoteName" />
        <element api="M:System.Web.HttpWorkerRequest.GetRequestReason" />
        <element api="M:System.Web.HttpWorkerRequest.GetServerName" />
        <element api="M:System.Web.HttpWorkerRequest.GetTotalEntityBodyLength" />
        <element api="M:System.Web.HttpWorkerRequest.GetUnknownRequestHeader(System.String)" />
        <element api="M:System.Web.HttpWorkerRequest.GetUnknownRequestHeaders" />
        <element api="M:System.Web.HttpWorkerRequest.GetUrlContextID" />
        <element api="M:System.Web.HttpWorkerRequest.GetVirtualPathToken" />
        <element api="M:System.Web.HttpWorkerRequest.HasEntityBody" />
        <element api="M:System.Web.HttpWorkerRequest.HeadersSent" />
        <element api="M:System.Web.HttpWorkerRequest.IsClientConnected" />
        <element api="M:System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded" />
        <element api="M:System.Web.HttpWorkerRequest.IsSecure" />
        <element api="Overload:System.Web.Hosting.SimpleWorkerRequest.ReadEntityBody">
          <element api="M:System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32)" />
          <element api="M:System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Web.Hosting.SimpleWorkerRequest.SendCalculatedContentLength">
          <element api="M:System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int32)" />
          <element api="M:System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int64)" />
        </element>
        <element api="M:System.Web.HttpWorkerRequest.SetEndOfSendNotification(System.Web.HttpWorkerRequest.EndOfSendNotification,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" />
      </containers>
    </api>
    <api id="Properties.T:System.Web.Hosting.SimpleWorkerRequest">
      <topicdata name="SimpleWorkerRequest" group="list" subgroup="Properties" typeTopicId="T:System.Web.Hosting.SimpleWorkerRequest" />
      <apidata name="SimpleWorkerRequest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Web.Hosting.SimpleWorkerRequest.MachineConfigPath" />
        <element api="P:System.Web.Hosting.SimpleWorkerRequest.MachineInstallDirectory" />
        <element api="P:System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath" />
        <element api="P:System.Web.HttpWorkerRequest.RequestTraceIdentifier" />
        <element api="P:System.Web.HttpWorkerRequest.SupportsAsyncFlush" />
        <element api="P:System.Web.HttpWorkerRequest.SupportsAsyncRead" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" />
      </containers>
    </api>
    <api id="Overload:System.Web.Hosting.SimpleWorkerRequest.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.#ctor(System.String,System.String,System.IO.TextWriter)" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.#ctor(System.String,System.String,System.String,System.String,System.IO.TextWriter)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile">
      <topicdata name="SendResponseFromFile" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SendResponseFromFile" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)" />
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile(System.String,System.Int64,System.Int64)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromMemory">
      <topicdata name="SendResponseFromMemory" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SendResponseFromMemory" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)" />
        <element api="M:System.Web.HttpWorkerRequest.SendResponseFromMemory(System.IntPtr,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.#ctor(System.String,System.String,System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Web.Hosting.SimpleWorkerRequest.#ctor" />
      <parameters>
        <parameter name="page">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="query">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="output">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.#ctor(System.String,System.String,System.String,System.String,System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Web.Hosting.SimpleWorkerRequest.#ctor" />
      <parameters>
        <parameter name="appVirtualDir">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="appPhysicalDir">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="page">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="query">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="output">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.EndOfRequest">
      <topicdata group="api" />
      <apidata name="EndOfRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.EndOfRequest">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.FlushResponse(System.Boolean)">
      <topicdata group="api" />
      <apidata name="FlushResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.FlushResponse(System.Boolean)">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="finalFlush">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.GetAppPath">
      <topicdata group="api" />
      <apidata name="GetAppPath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.GetAppPath">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.GetAppPathTranslated">
      <topicdata group="api" />
      <apidata name="GetAppPathTranslated" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.GetAppPathTranslated">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.GetFilePath">
      <topicdata group="api" />
      <apidata name="GetFilePath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.GetFilePath">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.GetFilePathTranslated">
      <topicdata group="api" />
      <apidata name="GetFilePathTranslated" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.GetFilePathTranslated">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.GetHttpVerbName">
      <topicdata group="api" />
      <apidata name="GetHttpVerbName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.GetHttpVerbName">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.GetHttpVersion">
      <topicdata group="api" />
      <apidata name="GetHttpVersion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.GetHttpVersion">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.GetLocalAddress">
      <topicdata group="api" />
      <apidata name="GetLocalAddress" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.GetLocalAddress">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.GetLocalPort">
      <topicdata group="api" />
      <apidata name="GetLocalPort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.GetLocalPort">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.GetPathInfo">
      <topicdata group="api" />
      <apidata name="GetPathInfo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.GetPathInfo">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.GetQueryString">
      <topicdata group="api" />
      <apidata name="GetQueryString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.GetQueryString">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.GetRawUrl">
      <topicdata group="api" />
      <apidata name="GetRawUrl" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.GetRawUrl">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.GetRemoteAddress">
      <topicdata group="api" />
      <apidata name="GetRemoteAddress" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.GetRemoteAddress">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.GetRemotePort">
      <topicdata group="api" />
      <apidata name="GetRemotePort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.GetRemotePort">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.GetServerVariable(System.String)">
      <topicdata group="api" />
      <apidata name="GetServerVariable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.GetServerVariable(System.String)">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.GetUriPath">
      <topicdata group="api" />
      <apidata name="GetUriPath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.GetUriPath">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.GetUserToken">
      <topicdata group="api" />
      <apidata name="GetUserToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.GetUserToken">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.SimpleWorkerRequest.MachineConfigPath">
      <topicdata group="api" />
      <apidata name="MachineConfigPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Web.HttpWorkerRequest.MachineConfigPath">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_MachineConfigPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.SimpleWorkerRequest.MachineInstallDirectory">
      <topicdata group="api" />
      <apidata name="MachineInstallDirectory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Web.HttpWorkerRequest.MachineInstallDirectory">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_MachineInstallDirectory" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.MapPath(System.String)">
      <topicdata group="api" />
      <apidata name="MapPath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.MapPath(System.String)">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath">
      <topicdata group="api" />
      <apidata name="RootWebConfigPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Web.HttpWorkerRequest.RootWebConfigPath">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_RootWebConfigPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="SendKnownResponseHeader" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)">
      <topicdata group="api" />
      <apidata name="SendResponseFromFile" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="handle">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile(System.String,System.Int64,System.Int64)">
      <topicdata group="api" />
      <apidata name="SendResponseFromFile" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.SendResponseFromFile(System.String,System.Int64,System.Int64)">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="filename">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)">
      <topicdata group="api" />
      <apidata name="SendResponseFromMemory" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Web.Hosting.SimpleWorkerRequest.SendResponseFromMemory" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.SendStatus(System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="SendStatus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.SendStatus(System.Int32,System.String)">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="statusCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="statusDescription">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.SimpleWorkerRequest.SendUnknownResponseHeader(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SendUnknownResponseHeader" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.HttpWorkerRequest.SendUnknownResponseHeader(System.String,System.String)">
          <type api="T:System.Web.HttpWorkerRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.SimpleWorkerRequest" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.VirtualDirectory">
      <topicdata group="api" />
      <apidata name="VirtualDirectory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Web.Hosting.VirtualFileBase" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="Overload:System.Web.Hosting.VirtualDirectory.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.VirtualDirectory.#ctor(System.String)" />
        <element api="M:System.Web.Hosting.VirtualFileBase.InitializeLifetimeService" />
        <element api="P:System.Web.Hosting.VirtualDirectory.Children" />
        <element api="P:System.Web.Hosting.VirtualDirectory.Directories" />
        <element api="P:System.Web.Hosting.VirtualDirectory.Files" />
        <element api="P:System.Web.Hosting.VirtualDirectory.IsDirectory" />
        <element api="P:System.Web.Hosting.VirtualFileBase.Name" />
        <element api="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.VirtualDirectory">
      <topicdata name="VirtualDirectory" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.VirtualDirectory" />
      <apidata name="VirtualDirectory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="Overload:System.Web.Hosting.VirtualDirectory.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.VirtualFileBase.InitializeLifetimeService" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualDirectory" />
      </containers>
    </api>
    <api id="Properties.T:System.Web.Hosting.VirtualDirectory">
      <topicdata name="VirtualDirectory" group="list" subgroup="Properties" typeTopicId="T:System.Web.Hosting.VirtualDirectory" />
      <apidata name="VirtualDirectory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Web.Hosting.VirtualDirectory.Children" />
        <element api="P:System.Web.Hosting.VirtualDirectory.Directories" />
        <element api="P:System.Web.Hosting.VirtualDirectory.Files" />
        <element api="P:System.Web.Hosting.VirtualDirectory.IsDirectory" />
        <element api="P:System.Web.Hosting.VirtualFileBase.Name" />
        <element api="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualDirectory" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.VirtualDirectory.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="virtualPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualDirectory" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.VirtualDirectory.Children">
      <topicdata group="api" />
      <apidata name="Children" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Children" />
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualDirectory" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.VirtualDirectory.Directories">
      <topicdata group="api" />
      <apidata name="Directories" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Directories" />
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualDirectory" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.VirtualDirectory.Files">
      <topicdata group="api" />
      <apidata name="Files" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Files" />
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualDirectory" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.VirtualDirectory.IsDirectory">
      <topicdata group="api" />
      <apidata name="IsDirectory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Web.Hosting.VirtualFileBase.IsDirectory">
          <type api="T:System.Web.Hosting.VirtualFileBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsDirectory" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualDirectory" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.VirtualFile">
      <topicdata group="api" />
      <apidata name="VirtualFile" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Web.Hosting.VirtualFileBase" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="Overload:System.Web.Hosting.VirtualFile.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.VirtualFile.#ctor(System.String)" />
        <element api="M:System.Web.Hosting.VirtualFile.Open" />
        <element api="M:System.Web.Hosting.VirtualFileBase.InitializeLifetimeService" />
        <element api="P:System.Web.Hosting.VirtualFile.IsDirectory" />
        <element api="P:System.Web.Hosting.VirtualFileBase.Name" />
        <element api="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.VirtualFile">
      <topicdata name="VirtualFile" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.VirtualFile" />
      <apidata name="VirtualFile" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="Overload:System.Web.Hosting.VirtualFile.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.VirtualFile.Open" />
        <element api="M:System.Web.Hosting.VirtualFileBase.InitializeLifetimeService" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualFile" />
      </containers>
    </api>
    <api id="Properties.T:System.Web.Hosting.VirtualFile">
      <topicdata name="VirtualFile" group="list" subgroup="Properties" typeTopicId="T:System.Web.Hosting.VirtualFile" />
      <apidata name="VirtualFile" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Web.Hosting.VirtualFile.IsDirectory" />
        <element api="P:System.Web.Hosting.VirtualFileBase.Name" />
        <element api="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualFile" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.VirtualFile.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="virtualPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualFile" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.VirtualFile.IsDirectory">
      <topicdata group="api" />
      <apidata name="IsDirectory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Web.Hosting.VirtualFileBase.IsDirectory">
          <type api="T:System.Web.Hosting.VirtualFileBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsDirectory" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualFile" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.VirtualFile.Open">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualFile" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.VirtualFileBase">
      <topicdata group="api" />
      <apidata name="VirtualFileBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Web.Hosting.VirtualFile" ref="true" />
          <type api="T:System.Web.Hosting.VirtualDirectory" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="Overload:System.Web.Hosting.VirtualFileBase.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.VirtualFileBase.#ctor" />
        <element api="M:System.Web.Hosting.VirtualFileBase.InitializeLifetimeService" />
        <element api="P:System.Web.Hosting.VirtualFileBase.IsDirectory" />
        <element api="P:System.Web.Hosting.VirtualFileBase.Name" />
        <element api="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.VirtualFileBase">
      <topicdata name="VirtualFileBase" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.VirtualFileBase" />
      <apidata name="VirtualFileBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="Overload:System.Web.Hosting.VirtualFileBase.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.VirtualFileBase.InitializeLifetimeService" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualFileBase" />
      </containers>
    </api>
    <api id="Properties.T:System.Web.Hosting.VirtualFileBase">
      <topicdata name="VirtualFileBase" group="list" subgroup="Properties" typeTopicId="T:System.Web.Hosting.VirtualFileBase" />
      <apidata name="VirtualFileBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Web.Hosting.VirtualFileBase.IsDirectory" />
        <element api="P:System.Web.Hosting.VirtualFileBase.Name" />
        <element api="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualFileBase" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.VirtualFileBase.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualFileBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.VirtualFileBase.InitializeLifetimeService">
      <topicdata group="api" />
      <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <type api="T:System.MarshalByRefObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualFileBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.VirtualFileBase.IsDirectory">
      <topicdata group="api" />
      <apidata name="IsDirectory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsDirectory" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualFileBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.VirtualFileBase.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualFileBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.VirtualFileBase.VirtualPath">
      <topicdata group="api" />
      <apidata name="VirtualPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_VirtualPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualFileBase" ref="true" />
      </containers>
    </api>
    <api id="T:System.Web.Hosting.VirtualPathProvider">
      <topicdata group="api" />
      <apidata name="VirtualPathProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="Overload:System.Web.Hosting.VirtualPathProvider.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.#ctor" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.Initialize" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)" />
        <element api="P:System.Web.Hosting.VirtualPathProvider.Previous" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
      </containers>
    </api>
    <api id="Methods.T:System.Web.Hosting.VirtualPathProvider">
      <topicdata name="VirtualPathProvider" group="list" subgroup="Methods" typeTopicId="T:System.Web.Hosting.VirtualPathProvider" />
      <apidata name="VirtualPathProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="Overload:System.Web.Hosting.VirtualPathProvider.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.Initialize" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService" />
        <element api="M:System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualPathProvider" />
      </containers>
    </api>
    <api id="Properties.T:System.Web.Hosting.VirtualPathProvider">
      <topicdata name="VirtualPathProvider" group="list" subgroup="Properties" typeTopicId="T:System.Web.Hosting.VirtualPathProvider" />
      <apidata name="VirtualPathProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Web.Hosting.VirtualPathProvider.Previous" />
      </elements>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualPathProvider" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.VirtualPathProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualPathProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CombineVirtualPaths" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="basePath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="relativePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualPathProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)">
      <topicdata group="api" />
      <apidata name="DirectoryExists" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="virtualDir">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualPathProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)">
      <topicdata group="api" />
      <apidata name="FileExists" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="virtualPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualPathProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)">
      <topicdata group="api" />
      <apidata name="GetCacheDependency" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="virtualPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="virtualPathDependencies">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
        <parameter name="utcStart">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Web.Caching.CacheDependency" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualPathProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)">
      <topicdata group="api" />
      <apidata name="GetCacheKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="virtualPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualPathProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)">
      <topicdata group="api" />
      <apidata name="GetDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="virtualDir">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Web.Hosting.VirtualDirectory" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualPathProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)">
      <topicdata group="api" />
      <apidata name="GetFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="virtualPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Web.Hosting.VirtualFile" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualPathProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="GetFileHash" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="virtualPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="virtualPathDependencies">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualPathProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.VirtualPathProvider.Initialize">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualPathProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService">
      <topicdata group="api" />
      <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <type api="T:System.MarshalByRefObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualPathProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)">
      <topicdata group="api" />
      <apidata name="OpenFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="virtualPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualPathProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Web.Hosting.VirtualPathProvider.Previous">
      <topicdata group="api" />
      <apidata name="Previous" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Previous" />
      <returns>
        <type api="T:System.Web.Hosting.VirtualPathProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Web.Hosting" />
        <type api="T:System.Web.Hosting.VirtualPathProvider" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>