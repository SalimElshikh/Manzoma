<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.Net">
      <assemblydata version="4.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Net.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Net.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Net.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Net">
      <topicdata group="api" />
      <apidata name="System.Net" group="namespace" />
      <elements>
        <element api="T:System.Net.ICredentialPolicy" />
        <element api="T:System.Net.AuthenticationManager" />
        <element api="T:System.Net.AuthenticationSchemes" />
        <element api="T:System.Net.AuthenticationSchemeSelector" />
        <element api="T:System.Net.Authorization" />
        <element api="T:System.Net.Cookie" />
        <element api="T:System.Net.CookieCollection" />
        <element api="T:System.Net.CookieContainer" />
        <element api="T:System.Net.CookieException" />
        <element api="T:System.Net.CredentialCache" />
        <element api="T:System.Net.Dns" />
        <element api="T:System.Net.DnsEndPoint" />
        <element api="T:System.Net.DnsPermissionAttribute" />
        <element api="T:System.Net.DnsPermission" />
        <element api="T:System.Net.EndPoint" />
        <element api="T:System.Net.FileWebRequest" />
        <element api="T:System.Net.FileWebResponse" />
        <element api="T:System.Net.FtpStatusCode" />
        <element api="T:System.Net.WebRequestMethods" />
        <element api="T:System.Net.WebRequestMethods.Ftp" />
        <element api="T:System.Net.WebRequestMethods.Http" />
        <element api="T:System.Net.WebRequestMethods.File" />
        <element api="T:System.Net.FtpWebRequest" />
        <element api="T:System.Net.FtpWebResponse" />
        <element api="T:System.Net.GlobalProxySelection" />
        <element api="T:System.Net.HttpListenerBasicIdentity" />
        <element api="T:System.Net.HttpListener" />
        <element api="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <element api="T:System.Net.HttpListenerContext" />
        <element api="T:System.Net.HttpListenerException" />
        <element api="T:System.Net.HttpListenerPrefixCollection" />
        <element api="T:System.Net.HttpListenerRequest" />
        <element api="T:System.Net.HttpListenerResponse" />
        <element api="T:System.Net.HttpListenerTimeoutManager" />
        <element api="T:System.Net.HttpRequestHeader" />
        <element api="T:System.Net.HttpResponseHeader" />
        <element api="T:System.Net.HttpStatusCode" />
        <element api="T:System.Net.HttpVersion" />
        <element api="T:System.Net.DecompressionMethods" />
        <element api="T:System.Net.HttpWebRequest" />
        <element api="T:System.Net.HttpWebResponse" />
        <element api="T:System.Net.IAuthenticationModule" />
        <element api="T:System.Net.ICertificatePolicy" />
        <element api="T:System.Net.ICredentials" />
        <element api="T:System.Net.ICredentialsByHost" />
        <element api="T:System.Net.HttpContinueDelegate" />
        <element api="T:System.Net.IPAddress" />
        <element api="T:System.Net.IPEndPoint" />
        <element api="T:System.Net.IPHostEntry" />
        <element api="T:System.Net.IWebProxy" />
        <element api="T:System.Net.IWebRequestCreate" />
        <element api="T:System.Net.NetworkAccess" />
        <element api="T:System.Net.NetworkCredential" />
        <element api="T:System.Net.ProtocolViolationException" />
        <element api="T:System.Net.TransportContext" />
        <element api="T:System.Net.SecurityProtocolType" />
        <element api="T:System.Net.BindIPEndPoint" />
        <element api="T:System.Net.ServicePoint" />
        <element api="T:System.Net.ServicePointManager" />
        <element api="T:System.Net.SocketAddress" />
        <element api="T:System.Net.SocketPermissionAttribute" />
        <element api="T:System.Net.SocketPermission" />
        <element api="T:System.Net.EndpointPermission" />
        <element api="T:System.Net.TransportType" />
        <element api="T:System.Net.WebClient" />
        <element api="T:System.Net.OpenReadCompletedEventHandler" />
        <element api="T:System.Net.OpenReadCompletedEventArgs" />
        <element api="T:System.Net.OpenWriteCompletedEventHandler" />
        <element api="T:System.Net.OpenWriteCompletedEventArgs" />
        <element api="T:System.Net.DownloadStringCompletedEventHandler" />
        <element api="T:System.Net.DownloadStringCompletedEventArgs" />
        <element api="T:System.Net.DownloadDataCompletedEventHandler" />
        <element api="T:System.Net.DownloadDataCompletedEventArgs" />
        <element api="T:System.Net.UploadStringCompletedEventHandler" />
        <element api="T:System.Net.UploadStringCompletedEventArgs" />
        <element api="T:System.Net.UploadDataCompletedEventHandler" />
        <element api="T:System.Net.UploadDataCompletedEventArgs" />
        <element api="T:System.Net.UploadFileCompletedEventHandler" />
        <element api="T:System.Net.UploadFileCompletedEventArgs" />
        <element api="T:System.Net.UploadValuesCompletedEventHandler" />
        <element api="T:System.Net.UploadValuesCompletedEventArgs" />
        <element api="T:System.Net.DownloadProgressChangedEventHandler" />
        <element api="T:System.Net.DownloadProgressChangedEventArgs" />
        <element api="T:System.Net.UploadProgressChangedEventHandler" />
        <element api="T:System.Net.UploadProgressChangedEventArgs" />
        <element api="T:System.Net.WebException" />
        <element api="T:System.Net.WebExceptionStatus" />
        <element api="T:System.Net.WebHeaderCollection" />
        <element api="T:System.Net.WebPermissionAttribute" />
        <element api="T:System.Net.WebPermission" />
        <element api="T:System.Net.WebProxy" />
        <element api="T:System.Net.WebRequest" />
        <element api="T:System.Net.WebResponse" />
        <element api="T:System.Net.WebUtility" />
        <element api="T:System.Net.IWebProxyScript" />
        <element api="T:System.Net.IPEndPointCollection" />
      </elements>
    </api>
    <api id="T:System.Net.AuthenticationManager">
      <topicdata group="api" />
      <apidata name="AuthenticationManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" />
        <element api="M:System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)" />
        <element api="M:System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)" />
        <element api="Overload:System.Net.AuthenticationManager.Unregister">
          <element api="M:System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)" />
          <element api="M:System.Net.AuthenticationManager.Unregister(System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.AuthenticationManager.CredentialPolicy" />
        <element api="P:System.Net.AuthenticationManager.CustomTargetNameDictionary" />
        <element api="P:System.Net.AuthenticationManager.RegisteredModules" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.AuthenticationManager">
      <topicdata name="AuthenticationManager" group="list" subgroup="Methods" typeTopicId="T:System.Net.AuthenticationManager" />
      <apidata name="AuthenticationManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" />
        <element api="M:System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)" />
        <element api="M:System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)" />
        <element api="Overload:System.Net.AuthenticationManager.Unregister">
          <element api="M:System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)" />
          <element api="M:System.Net.AuthenticationManager.Unregister(System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.AuthenticationManager" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.AuthenticationManager">
      <topicdata name="AuthenticationManager" group="list" subgroup="Properties" typeTopicId="T:System.Net.AuthenticationManager" />
      <apidata name="AuthenticationManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.AuthenticationManager.CredentialPolicy" />
        <element api="P:System.Net.AuthenticationManager.CustomTargetNameDictionary" />
        <element api="P:System.Net.AuthenticationManager.RegisteredModules" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.AuthenticationManager" />
      </containers>
    </api>
    <api id="Overload:System.Net.AuthenticationManager.Unregister">
      <topicdata name="Unregister" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Unregister" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)" />
        <element api="M:System.Net.AuthenticationManager.Unregister(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.AuthenticationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
      <topicdata group="api" />
      <apidata name="Authenticate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="challenge">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="request">
          <type api="T:System.Net.WebRequest" ref="true" />
        </parameter>
        <parameter name="credentials">
          <type api="T:System.Net.ICredentials" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Authorization" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.AuthenticationManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.AuthenticationManager.CredentialPolicy">
      <topicdata group="api" />
      <apidata name="CredentialPolicy" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CredentialPolicy" />
      <setter name="set_CredentialPolicy" />
      <returns>
        <type api="T:System.Net.ICredentialPolicy" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.AuthenticationManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.AuthenticationManager.CustomTargetNameDictionary">
      <topicdata group="api" />
      <apidata name="CustomTargetNameDictionary" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CustomTargetNameDictionary" />
      <returns>
        <type api="T:System.Collections.Specialized.StringDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.AuthenticationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
      <topicdata group="api" />
      <apidata name="PreAuthenticate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Net.WebRequest" ref="true" />
        </parameter>
        <parameter name="credentials">
          <type api="T:System.Net.ICredentials" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Authorization" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.AuthenticationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="authenticationModule">
          <type api="T:System.Net.IAuthenticationModule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.AuthenticationManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.AuthenticationManager.RegisteredModules">
      <topicdata group="api" />
      <apidata name="RegisteredModules" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RegisteredModules" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.AuthenticationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)">
      <topicdata group="api" />
      <apidata name="Unregister" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.AuthenticationManager.Unregister" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="authenticationModule">
          <type api="T:System.Net.IAuthenticationModule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.AuthenticationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.AuthenticationManager.Unregister(System.String)">
      <topicdata group="api" />
      <apidata name="Unregister" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.AuthenticationManager.Unregister" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="authenticationScheme">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.AuthenticationManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.AuthenticationSchemes">
      <topicdata group="api" />
      <apidata name="AuthenticationSchemes" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.AuthenticationSchemes.None" />
        <element api="F:System.Net.AuthenticationSchemes.Digest" />
        <element api="F:System.Net.AuthenticationSchemes.Negotiate" />
        <element api="F:System.Net.AuthenticationSchemes.Ntlm" />
        <element api="F:System.Net.AuthenticationSchemes.Basic" />
        <element api="F:System.Net.AuthenticationSchemes.Anonymous" />
        <element api="F:System.Net.AuthenticationSchemes.IntegratedWindowsAuthentication" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Net.AuthenticationSchemes.Anonymous">
      <topicdata group="api" notopic="" />
      <apidata name="Anonymous" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.AuthenticationSchemes" ref="false" />
      </returns>
      <value>32768</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.AuthenticationSchemes" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.AuthenticationSchemes.Basic">
      <topicdata group="api" notopic="" />
      <apidata name="Basic" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.AuthenticationSchemes" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.AuthenticationSchemes" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.AuthenticationSchemes.Digest">
      <topicdata group="api" notopic="" />
      <apidata name="Digest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.AuthenticationSchemes" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.AuthenticationSchemes" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.AuthenticationSchemes.IntegratedWindowsAuthentication">
      <topicdata group="api" notopic="" />
      <apidata name="IntegratedWindowsAuthentication" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.AuthenticationSchemes" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.AuthenticationSchemes" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.AuthenticationSchemes.Negotiate">
      <topicdata group="api" notopic="" />
      <apidata name="Negotiate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.AuthenticationSchemes" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.AuthenticationSchemes" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.AuthenticationSchemes.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.AuthenticationSchemes" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.AuthenticationSchemes" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.AuthenticationSchemes.Ntlm">
      <topicdata group="api" notopic="" />
      <apidata name="Ntlm" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.AuthenticationSchemes" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.AuthenticationSchemes" ref="false" />
      </containers>
    </api>
    <api id="T:System.Net.AuthenticationSchemeSelector">
      <topicdata group="api" />
      <apidata name="AuthenticationSchemeSelector" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="httpRequest">
          <type api="T:System.Net.HttpListenerRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.AuthenticationSchemes" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="T:System.Net.Authorization">
      <topicdata group="api" />
      <apidata name="Authorization" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Net.Authorization.#ctor">
          <element api="M:System.Net.Authorization.#ctor(System.String)" />
          <element api="M:System.Net.Authorization.#ctor(System.String,System.Boolean)" />
          <element api="M:System.Net.Authorization.#ctor(System.String,System.Boolean,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.Authorization.Complete" />
        <element api="P:System.Net.Authorization.ConnectionGroupId" />
        <element api="P:System.Net.Authorization.Message" />
        <element api="P:System.Net.Authorization.MutuallyAuthenticated" />
        <element api="P:System.Net.Authorization.ProtectionRealm" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.Authorization">
      <topicdata name="Authorization" group="list" subgroup="Methods" typeTopicId="T:System.Net.Authorization" />
      <apidata name="Authorization" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Authorization" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.Authorization">
      <topicdata name="Authorization" group="list" subgroup="Properties" typeTopicId="T:System.Net.Authorization" />
      <apidata name="Authorization" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Authorization.Complete" />
        <element api="P:System.Net.Authorization.ConnectionGroupId" />
        <element api="P:System.Net.Authorization.Message" />
        <element api="P:System.Net.Authorization.MutuallyAuthenticated" />
        <element api="P:System.Net.Authorization.ProtectionRealm" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Authorization" />
      </containers>
    </api>
    <api id="Overload:System.Net.Authorization.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Authorization.#ctor(System.String)" />
        <element api="M:System.Net.Authorization.#ctor(System.String,System.Boolean)" />
        <element api="M:System.Net.Authorization.#ctor(System.String,System.Boolean,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Authorization" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Authorization.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Authorization.#ctor" />
      <parameters>
        <parameter name="token">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Authorization" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Authorization.#ctor(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Authorization.#ctor" />
      <parameters>
        <parameter name="token">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="finished">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Authorization" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Authorization.#ctor(System.String,System.Boolean,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Authorization.#ctor" />
      <parameters>
        <parameter name="token">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="finished">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="connectionGroupId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Authorization" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Authorization.Complete">
      <topicdata group="api" />
      <apidata name="Complete" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Complete" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Authorization" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Authorization.ConnectionGroupId">
      <topicdata group="api" />
      <apidata name="ConnectionGroupId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConnectionGroupId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Authorization" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Authorization.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Authorization" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Authorization.MutuallyAuthenticated">
      <topicdata group="api" />
      <apidata name="MutuallyAuthenticated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MutuallyAuthenticated" />
      <setter name="set_MutuallyAuthenticated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Authorization" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Authorization.ProtectionRealm">
      <topicdata group="api" />
      <apidata name="ProtectionRealm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProtectionRealm" />
      <setter name="set_ProtectionRealm" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Authorization" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.BindIPEndPoint">
      <topicdata group="api" />
      <apidata name="BindIPEndPoint" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="servicePoint">
          <type api="T:System.Net.ServicePoint" ref="true" />
        </parameter>
        <parameter name="remoteEndPoint">
          <type api="T:System.Net.IPEndPoint" ref="true" />
        </parameter>
        <parameter name="retryCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="T:System.Net.Cookie">
      <topicdata group="api" />
      <apidata name="Cookie" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Net.Cookie.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Net.Cookie.#ctor">
          <element api="M:System.Net.Cookie.#ctor" />
          <element api="M:System.Net.Cookie.#ctor(System.String,System.String)" />
          <element api="M:System.Net.Cookie.#ctor(System.String,System.String,System.String)" />
          <element api="M:System.Net.Cookie.#ctor(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Net.Cookie.Equals(System.Object)" />
        <element api="M:System.Net.Cookie.GetHashCode" />
        <element api="M:System.Net.Cookie.ToString" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Net.Cookie.Comment" />
        <element api="P:System.Net.Cookie.CommentUri" />
        <element api="P:System.Net.Cookie.Discard" />
        <element api="P:System.Net.Cookie.Domain" />
        <element api="P:System.Net.Cookie.Expired" />
        <element api="P:System.Net.Cookie.Expires" />
        <element api="P:System.Net.Cookie.HttpOnly" />
        <element api="P:System.Net.Cookie.Name" />
        <element api="P:System.Net.Cookie.Path" />
        <element api="P:System.Net.Cookie.Port" />
        <element api="P:System.Net.Cookie.Secure" />
        <element api="P:System.Net.Cookie.TimeStamp" />
        <element api="P:System.Net.Cookie.Value" />
        <element api="P:System.Net.Cookie.Version" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.Cookie">
      <topicdata name="Cookie" group="list" subgroup="Methods" typeTopicId="T:System.Net.Cookie" />
      <apidata name="Cookie" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Net.Cookie.#ctor" />
      <elements>
        <element api="M:System.Net.Cookie.Equals(System.Object)" />
        <element api="M:System.Net.Cookie.GetHashCode" />
        <element api="M:System.Net.Cookie.ToString" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.Cookie">
      <topicdata name="Cookie" group="list" subgroup="Properties" typeTopicId="T:System.Net.Cookie" />
      <apidata name="Cookie" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Net.Cookie.#ctor" />
      <elements>
        <element api="P:System.Net.Cookie.Comment" />
        <element api="P:System.Net.Cookie.CommentUri" />
        <element api="P:System.Net.Cookie.Discard" />
        <element api="P:System.Net.Cookie.Domain" />
        <element api="P:System.Net.Cookie.Expired" />
        <element api="P:System.Net.Cookie.Expires" />
        <element api="P:System.Net.Cookie.HttpOnly" />
        <element api="P:System.Net.Cookie.Name" />
        <element api="P:System.Net.Cookie.Path" />
        <element api="P:System.Net.Cookie.Port" />
        <element api="P:System.Net.Cookie.Secure" />
        <element api="P:System.Net.Cookie.TimeStamp" />
        <element api="P:System.Net.Cookie.Value" />
        <element api="P:System.Net.Cookie.Version" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" />
      </containers>
    </api>
    <api id="Overload:System.Net.Cookie.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Cookie.#ctor" />
        <element api="M:System.Net.Cookie.#ctor(System.String,System.String)" />
        <element api="M:System.Net.Cookie.#ctor(System.String,System.String,System.String)" />
        <element api="M:System.Net.Cookie.#ctor(System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Cookie.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Cookie.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Cookie.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Cookie.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Cookie.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Cookie.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Cookie.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="domain">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Cookie.Comment">
      <topicdata group="api" />
      <apidata name="Comment" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Comment" />
      <setter name="set_Comment" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Cookie.CommentUri">
      <topicdata group="api" />
      <apidata name="CommentUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CommentUri" />
      <setter name="set_CommentUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Cookie.Discard">
      <topicdata group="api" />
      <apidata name="Discard" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Discard" />
      <setter name="set_Discard" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Cookie.Domain">
      <topicdata group="api" />
      <apidata name="Domain" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Domain" />
      <setter name="set_Domain" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Cookie.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="comparand">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Cookie.Expired">
      <topicdata group="api" />
      <apidata name="Expired" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Expired" />
      <setter name="set_Expired" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Cookie.Expires">
      <topicdata group="api" />
      <apidata name="Expires" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Expires" />
      <setter name="set_Expires" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Cookie.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Cookie.HttpOnly">
      <topicdata group="api" />
      <apidata name="HttpOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HttpOnly" />
      <setter name="set_HttpOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Cookie.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Cookie.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Path" />
      <setter name="set_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Cookie.Port">
      <topicdata group="api" />
      <apidata name="Port" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Port" />
      <setter name="set_Port" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Cookie.Secure">
      <topicdata group="api" />
      <apidata name="Secure" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Secure" />
      <setter name="set_Secure" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Cookie.TimeStamp">
      <topicdata group="api" />
      <apidata name="TimeStamp" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TimeStamp" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Cookie.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Cookie.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Cookie.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Version" />
      <setter name="set_Version" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Cookie" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.CookieCollection">
      <topicdata group="api" />
      <apidata name="CookieCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.CookieCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Net.CookieCollection.#ctor" />
        <element api="Overload:System.Net.CookieCollection.Add">
          <element api="M:System.Net.CookieCollection.Add(System.Net.Cookie)" />
          <element api="M:System.Net.CookieCollection.Add(System.Net.CookieCollection)" />
        </element>
        <element api="Overload:System.Net.CookieCollection.CopyTo">
          <element api="M:System.Net.CookieCollection.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Net.CookieCollection.CopyTo(System.Net.Cookie[],System.Int32)" />
        </element>
        <element api="M:System.Net.CookieCollection.GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.CookieCollection.Count" />
        <element api="P:System.Net.CookieCollection.IsReadOnly" />
        <element api="P:System.Net.CookieCollection.IsSynchronized" />
        <element api="Overload:System.Net.CookieCollection.Item">
          <element api="P:System.Net.CookieCollection.Item(System.Int32)" />
          <element api="P:System.Net.CookieCollection.Item(System.String)" />
        </element>
        <element api="P:System.Net.CookieCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.CookieCollection">
      <topicdata name="CookieCollection" group="list" subgroup="Methods" typeTopicId="T:System.Net.CookieCollection" />
      <apidata name="CookieCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.CookieCollection.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Net.CookieCollection.Add">
          <element api="M:System.Net.CookieCollection.Add(System.Net.Cookie)" />
          <element api="M:System.Net.CookieCollection.Add(System.Net.CookieCollection)" />
        </element>
        <element api="Overload:System.Net.CookieCollection.CopyTo">
          <element api="M:System.Net.CookieCollection.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Net.CookieCollection.CopyTo(System.Net.Cookie[],System.Int32)" />
        </element>
        <element api="M:System.Net.CookieCollection.GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.CookieCollection">
      <topicdata name="CookieCollection" group="list" subgroup="Properties" typeTopicId="T:System.Net.CookieCollection" />
      <apidata name="CookieCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.CookieCollection.#ctor" />
      <elements>
        <element api="P:System.Net.CookieCollection.Count" />
        <element api="P:System.Net.CookieCollection.IsReadOnly" />
        <element api="P:System.Net.CookieCollection.IsSynchronized" />
        <element api="Overload:System.Net.CookieCollection.Item">
          <element api="P:System.Net.CookieCollection.Item(System.Int32)" />
          <element api="P:System.Net.CookieCollection.Item(System.String)" />
        </element>
        <element api="P:System.Net.CookieCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieCollection" />
      </containers>
    </api>
    <api id="Overload:System.Net.CookieCollection.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.CookieCollection.Add(System.Net.Cookie)" />
        <element api="M:System.Net.CookieCollection.Add(System.Net.CookieCollection)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.CookieCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.CookieCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Net.CookieCollection.CopyTo(System.Net.Cookie[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.CookieCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Net.CookieCollection.Item(System.Int32)" />
        <element api="P:System.Net.CookieCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CookieCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CookieCollection.Add(System.Net.Cookie)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.CookieCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cookie">
          <type api="T:System.Net.Cookie" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CookieCollection.Add(System.Net.CookieCollection)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.CookieCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cookies">
          <type api="T:System.Net.CookieCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CookieCollection.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.CookieCollection.CopyTo" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CookieCollection.CopyTo(System.Net.Cookie[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.CookieCollection.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Net.Cookie" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.CookieCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CookieCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.CookieCollection.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.CookieCollection.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.CookieCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Net.CookieCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Cookie" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.CookieCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Net.CookieCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Cookie" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.CookieCollection.SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.CookieContainer">
      <topicdata group="api" />
      <apidata name="CookieContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.CookieContainer.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Net.CookieContainer.DefaultCookieLengthLimit" />
        <element api="F:System.Net.CookieContainer.DefaultCookieLimit" />
        <element api="F:System.Net.CookieContainer.DefaultPerDomainCookieLimit" />
        <element api="Overload:System.Net.CookieContainer.#ctor">
          <element api="M:System.Net.CookieContainer.#ctor" />
          <element api="M:System.Net.CookieContainer.#ctor(System.Int32)" />
          <element api="M:System.Net.CookieContainer.#ctor(System.Int32,System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Net.CookieContainer.Add">
          <element api="M:System.Net.CookieContainer.Add(System.Net.Cookie)" />
          <element api="M:System.Net.CookieContainer.Add(System.Net.CookieCollection)" />
          <element api="M:System.Net.CookieContainer.Add(System.Uri,System.Net.Cookie)" />
          <element api="M:System.Net.CookieContainer.Add(System.Uri,System.Net.CookieCollection)" />
        </element>
        <element api="M:System.Net.CookieContainer.GetCookieHeader(System.Uri)" />
        <element api="M:System.Net.CookieContainer.GetCookies(System.Uri)" />
        <element api="M:System.Net.CookieContainer.SetCookies(System.Uri,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.CookieContainer.Capacity" />
        <element api="P:System.Net.CookieContainer.Count" />
        <element api="P:System.Net.CookieContainer.MaxCookieSize" />
        <element api="P:System.Net.CookieContainer.PerDomainCapacity" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.CookieContainer">
      <topicdata name="CookieContainer" group="list" subgroup="Methods" typeTopicId="T:System.Net.CookieContainer" />
      <apidata name="CookieContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.CookieContainer.#ctor" />
      <elements>
        <element api="Overload:System.Net.CookieContainer.Add">
          <element api="M:System.Net.CookieContainer.Add(System.Net.Cookie)" />
          <element api="M:System.Net.CookieContainer.Add(System.Net.CookieCollection)" />
          <element api="M:System.Net.CookieContainer.Add(System.Uri,System.Net.Cookie)" />
          <element api="M:System.Net.CookieContainer.Add(System.Uri,System.Net.CookieCollection)" />
        </element>
        <element api="M:System.Net.CookieContainer.GetCookieHeader(System.Uri)" />
        <element api="M:System.Net.CookieContainer.GetCookies(System.Uri)" />
        <element api="M:System.Net.CookieContainer.SetCookies(System.Uri,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.CookieContainer">
      <topicdata name="CookieContainer" group="list" subgroup="Properties" typeTopicId="T:System.Net.CookieContainer" />
      <apidata name="CookieContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.CookieContainer.#ctor" />
      <elements>
        <element api="P:System.Net.CookieContainer.Capacity" />
        <element api="P:System.Net.CookieContainer.Count" />
        <element api="P:System.Net.CookieContainer.MaxCookieSize" />
        <element api="P:System.Net.CookieContainer.PerDomainCapacity" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" />
      </containers>
    </api>
    <api id="Fields.T:System.Net.CookieContainer">
      <topicdata name="CookieContainer" group="list" subgroup="Fields" typeTopicId="T:System.Net.CookieContainer" />
      <apidata name="CookieContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.CookieContainer.#ctor" />
      <elements>
        <element api="F:System.Net.CookieContainer.DefaultCookieLengthLimit" />
        <element api="F:System.Net.CookieContainer.DefaultCookieLimit" />
        <element api="F:System.Net.CookieContainer.DefaultPerDomainCookieLimit" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" />
      </containers>
    </api>
    <api id="Overload:System.Net.CookieContainer.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.CookieContainer.#ctor" />
        <element api="M:System.Net.CookieContainer.#ctor(System.Int32)" />
        <element api="M:System.Net.CookieContainer.#ctor(System.Int32,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.CookieContainer.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.CookieContainer.Add(System.Net.Cookie)" />
        <element api="M:System.Net.CookieContainer.Add(System.Net.CookieCollection)" />
        <element api="M:System.Net.CookieContainer.Add(System.Uri,System.Net.Cookie)" />
        <element api="M:System.Net.CookieContainer.Add(System.Uri,System.Net.CookieCollection)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CookieContainer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.CookieContainer.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CookieContainer.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.CookieContainer.#ctor" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CookieContainer.#ctor(System.Int32,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.CookieContainer.#ctor" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="perDomainCapacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxCookieSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CookieContainer.Add(System.Net.Cookie)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.CookieContainer.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cookie">
          <type api="T:System.Net.Cookie" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CookieContainer.Add(System.Net.CookieCollection)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.CookieContainer.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cookies">
          <type api="T:System.Net.CookieCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CookieContainer.Add(System.Uri,System.Net.Cookie)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.CookieContainer.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="cookie">
          <type api="T:System.Net.Cookie" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CookieContainer.Add(System.Uri,System.Net.CookieCollection)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.CookieContainer.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="cookies">
          <type api="T:System.Net.CookieCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.CookieContainer.Capacity">
      <topicdata group="api" />
      <apidata name="Capacity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Capacity" />
      <setter name="set_Capacity" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.CookieContainer.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" ref="true" />
      </containers>
    </api>
    <api id="F:System.Net.CookieContainer.DefaultCookieLengthLimit">
      <topicdata group="api" />
      <apidata name="DefaultCookieLengthLimit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>4096</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" ref="true" />
      </containers>
    </api>
    <api id="F:System.Net.CookieContainer.DefaultCookieLimit">
      <topicdata group="api" />
      <apidata name="DefaultCookieLimit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>300</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" ref="true" />
      </containers>
    </api>
    <api id="F:System.Net.CookieContainer.DefaultPerDomainCookieLimit">
      <topicdata group="api" />
      <apidata name="DefaultPerDomainCookieLimit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>20</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CookieContainer.GetCookieHeader(System.Uri)">
      <topicdata group="api" />
      <apidata name="GetCookieHeader" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CookieContainer.GetCookies(System.Uri)">
      <topicdata group="api" />
      <apidata name="GetCookies" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.CookieCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.CookieContainer.MaxCookieSize">
      <topicdata group="api" />
      <apidata name="MaxCookieSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxCookieSize" />
      <setter name="set_MaxCookieSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.CookieContainer.PerDomainCapacity">
      <topicdata group="api" />
      <apidata name="PerDomainCapacity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PerDomainCapacity" />
      <setter name="set_PerDomainCapacity" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CookieContainer.SetCookies(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="SetCookies" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="cookieHeader">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieContainer" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.CookieException">
      <topicdata group="api" />
      <apidata name="CookieException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.CookieException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.FormatException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.Net.CookieException.#ctor">
          <element api="M:System.Net.CookieException.#ctor" />
          <element api="M:System.Net.CookieException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="M:System.Net.CookieException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.CookieException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.CookieException">
      <topicdata name="CookieException" group="list" subgroup="Methods" typeTopicId="T:System.Net.CookieException" />
      <apidata name="CookieException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.CookieException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Net.CookieException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.CookieException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieException" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.CookieException">
      <topicdata name="CookieException" group="list" subgroup="Properties" typeTopicId="T:System.Net.CookieException" />
      <apidata name="CookieException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.CookieException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieException" />
      </containers>
    </api>
    <api id="Events.T:System.Net.CookieException">
      <topicdata name="CookieException" group="list" subgroup="Events" typeTopicId="T:System.Net.CookieException" />
      <apidata name="CookieException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.CookieException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieException" />
      </containers>
    </api>
    <api id="Overload:System.Net.CookieException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.CookieException.#ctor" />
        <element api="M:System.Net.CookieException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CookieException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.CookieException.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CookieException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.CookieException.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CookieException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CookieException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CookieException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.CredentialCache">
      <topicdata group="api" />
      <apidata name="CredentialCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.CredentialCache.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Net.ICredentials" ref="true" />
        <type api="T:System.Net.ICredentialsByHost" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Net.CredentialCache.#ctor" />
        <element api="Overload:System.Net.CredentialCache.Add">
          <element api="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)" />
          <element api="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)" />
        </element>
        <element api="Overload:System.Net.CredentialCache.GetCredential">
          <element api="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)" />
          <element api="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)" />
        </element>
        <element api="M:System.Net.CredentialCache.GetEnumerator" />
        <element api="Overload:System.Net.CredentialCache.Remove">
          <element api="M:System.Net.CredentialCache.Remove(System.Uri,System.String)" />
          <element api="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.CredentialCache.DefaultCredentials" />
        <element api="P:System.Net.CredentialCache.DefaultNetworkCredentials" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.CredentialCache">
      <topicdata name="CredentialCache" group="list" subgroup="Methods" typeTopicId="T:System.Net.CredentialCache" />
      <apidata name="CredentialCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.CredentialCache.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Net.CredentialCache.Add">
          <element api="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)" />
          <element api="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)" />
        </element>
        <element api="Overload:System.Net.CredentialCache.GetCredential">
          <element api="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)" />
          <element api="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)" />
        </element>
        <element api="M:System.Net.CredentialCache.GetEnumerator" />
        <element api="Overload:System.Net.CredentialCache.Remove">
          <element api="M:System.Net.CredentialCache.Remove(System.Uri,System.String)" />
          <element api="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CredentialCache" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.CredentialCache">
      <topicdata name="CredentialCache" group="list" subgroup="Properties" typeTopicId="T:System.Net.CredentialCache" />
      <apidata name="CredentialCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.CredentialCache.#ctor" />
      <elements>
        <element api="P:System.Net.CredentialCache.DefaultCredentials" />
        <element api="P:System.Net.CredentialCache.DefaultNetworkCredentials" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CredentialCache" />
      </containers>
    </api>
    <api id="Overload:System.Net.CredentialCache.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)" />
        <element api="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CredentialCache" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.CredentialCache.GetCredential">
      <topicdata name="GetCredential" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetCredential" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)" />
        <element api="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CredentialCache" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.CredentialCache.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.CredentialCache.Remove(System.Uri,System.String)" />
        <element api="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CredentialCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CredentialCache.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CredentialCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.CredentialCache.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="authenticationType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CredentialCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.CredentialCache.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="uriPrefix">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="authType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="cred">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CredentialCache" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.CredentialCache.DefaultCredentials">
      <topicdata group="api" />
      <apidata name="DefaultCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultCredentials" />
      <returns>
        <type api="T:System.Net.ICredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CredentialCache" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.CredentialCache.DefaultNetworkCredentials">
      <topicdata group="api" />
      <apidata name="DefaultNetworkCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultNetworkCredentials" />
      <returns>
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CredentialCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="GetCredential" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.CredentialCache.GetCredential" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="authenticationType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)">
          <type api="T:System.Net.ICredentialsByHost" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CredentialCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="GetCredential" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.CredentialCache.GetCredential" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="uriPrefix">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="authType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)">
          <type api="T:System.Net.ICredentials" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CredentialCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CredentialCache.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CredentialCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.CredentialCache.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="authenticationType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CredentialCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.CredentialCache.Remove(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.CredentialCache.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="uriPrefix">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="authType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.CredentialCache" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.DecompressionMethods">
      <topicdata group="api" />
      <apidata name="DecompressionMethods" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.DecompressionMethods.None" />
        <element api="F:System.Net.DecompressionMethods.GZip" />
        <element api="F:System.Net.DecompressionMethods.Deflate" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Net.DecompressionMethods.Deflate">
      <topicdata group="api" notopic="" />
      <apidata name="Deflate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.DecompressionMethods" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DecompressionMethods" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.DecompressionMethods.GZip">
      <topicdata group="api" notopic="" />
      <apidata name="GZip" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.DecompressionMethods" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DecompressionMethods" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.DecompressionMethods.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.DecompressionMethods" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DecompressionMethods" ref="false" />
      </containers>
    </api>
    <api id="T:System.Net.Dns">
      <topicdata group="api" />
      <apidata name="Dns" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.Net.Dns.BeginGetHostEntry">
          <element api="M:System.Net.Dns.BeginGetHostEntry(System.Net.IPAddress,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Dns.BeginGetHostEntry(System.String,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Dns.EndGetHostAddresses(System.IAsyncResult)" />
        <element api="M:System.Net.Dns.EndGetHostByName(System.IAsyncResult)" />
        <element api="M:System.Net.Dns.EndGetHostEntry(System.IAsyncResult)" />
        <element api="M:System.Net.Dns.EndResolve(System.IAsyncResult)" />
        <element api="M:System.Net.Dns.GetHostAddresses(System.String)" />
        <element api="M:System.Net.Dns.GetHostAddressesAsync(System.String)" />
        <element api="Overload:System.Net.Dns.GetHostByAddress">
          <element api="M:System.Net.Dns.GetHostByAddress(System.Net.IPAddress)" />
          <element api="M:System.Net.Dns.GetHostByAddress(System.String)" />
        </element>
        <element api="M:System.Net.Dns.GetHostByName(System.String)" />
        <element api="Overload:System.Net.Dns.GetHostEntry">
          <element api="M:System.Net.Dns.GetHostEntry(System.Net.IPAddress)" />
          <element api="M:System.Net.Dns.GetHostEntry(System.String)" />
        </element>
        <element api="Overload:System.Net.Dns.GetHostEntryAsync">
          <element api="M:System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)" />
          <element api="M:System.Net.Dns.GetHostEntryAsync(System.String)" />
        </element>
        <element api="M:System.Net.Dns.GetHostName" />
        <element api="M:System.Net.Dns.Resolve(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.Dns">
      <topicdata name="Dns" group="list" subgroup="Methods" typeTopicId="T:System.Net.Dns" />
      <apidata name="Dns" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.Net.Dns.BeginGetHostEntry">
          <element api="M:System.Net.Dns.BeginGetHostEntry(System.Net.IPAddress,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Dns.BeginGetHostEntry(System.String,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Dns.EndGetHostAddresses(System.IAsyncResult)" />
        <element api="M:System.Net.Dns.EndGetHostByName(System.IAsyncResult)" />
        <element api="M:System.Net.Dns.EndGetHostEntry(System.IAsyncResult)" />
        <element api="M:System.Net.Dns.EndResolve(System.IAsyncResult)" />
        <element api="M:System.Net.Dns.GetHostAddresses(System.String)" />
        <element api="M:System.Net.Dns.GetHostAddressesAsync(System.String)" />
        <element api="Overload:System.Net.Dns.GetHostByAddress">
          <element api="M:System.Net.Dns.GetHostByAddress(System.Net.IPAddress)" />
          <element api="M:System.Net.Dns.GetHostByAddress(System.String)" />
        </element>
        <element api="M:System.Net.Dns.GetHostByName(System.String)" />
        <element api="Overload:System.Net.Dns.GetHostEntry">
          <element api="M:System.Net.Dns.GetHostEntry(System.Net.IPAddress)" />
          <element api="M:System.Net.Dns.GetHostEntry(System.String)" />
        </element>
        <element api="Overload:System.Net.Dns.GetHostEntryAsync">
          <element api="M:System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)" />
          <element api="M:System.Net.Dns.GetHostEntryAsync(System.String)" />
        </element>
        <element api="M:System.Net.Dns.GetHostName" />
        <element api="M:System.Net.Dns.Resolve(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" />
      </containers>
    </api>
    <api id="Overload:System.Net.Dns.BeginGetHostEntry">
      <topicdata name="BeginGetHostEntry" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginGetHostEntry" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Dns.BeginGetHostEntry(System.Net.IPAddress,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Dns.BeginGetHostEntry(System.String,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.Dns.GetHostByAddress">
      <topicdata name="GetHostByAddress" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetHostByAddress" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Dns.GetHostByAddress(System.Net.IPAddress)" />
        <element api="M:System.Net.Dns.GetHostByAddress(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.Dns.GetHostEntry">
      <topicdata name="GetHostEntry" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetHostEntry" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Dns.GetHostEntry(System.Net.IPAddress)" />
        <element api="M:System.Net.Dns.GetHostEntry(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.Dns.GetHostEntryAsync">
      <topicdata name="GetHostEntryAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetHostEntryAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)" />
        <element api="M:System.Net.Dns.GetHostEntryAsync(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginGetHostAddresses" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="hostNameOrAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requestCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginGetHostByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="hostName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requestCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="stateObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>BeginGetHostByName is obsoleted for this type, please use BeginGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Dns.BeginGetHostEntry(System.Net.IPAddress,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginGetHostEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.Dns.BeginGetHostEntry" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Net.IPAddress" ref="true" />
        </parameter>
        <parameter name="requestCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="stateObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Dns.BeginGetHostEntry(System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginGetHostEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.Dns.BeginGetHostEntry" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="hostNameOrAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requestCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="stateObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginResolve" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="hostName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requestCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="stateObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>BeginResolve is obsoleted for this type, please use BeginGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Dns.EndGetHostAddresses(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndGetHostAddresses" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Net.IPAddress" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Dns.EndGetHostByName(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndGetHostByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.IPHostEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>EndGetHostByName is obsoleted for this type, please use EndGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Dns.EndGetHostEntry(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndGetHostEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.IPHostEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Dns.EndResolve(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndResolve" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.IPHostEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>EndResolve is obsoleted for this type, please use EndGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Dns.GetHostAddresses(System.String)">
      <topicdata group="api" />
      <apidata name="GetHostAddresses" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="hostNameOrAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Net.IPAddress" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Dns.GetHostAddressesAsync(System.String)">
      <topicdata group="api" />
      <apidata name="GetHostAddressesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="hostNameOrAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Net.IPAddress" ref="true" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Dns.GetHostByAddress(System.Net.IPAddress)">
      <topicdata group="api" />
      <apidata name="GetHostByAddress" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.Dns.GetHostByAddress" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Net.IPAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.IPHostEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Dns.GetHostByAddress(System.String)">
      <topicdata group="api" />
      <apidata name="GetHostByAddress" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.Dns.GetHostByAddress" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.IPHostEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Dns.GetHostByName(System.String)">
      <topicdata group="api" />
      <apidata name="GetHostByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="hostName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.IPHostEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetHostByName is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Dns.GetHostEntry(System.Net.IPAddress)">
      <topicdata group="api" />
      <apidata name="GetHostEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.Dns.GetHostEntry" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Net.IPAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.IPHostEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Dns.GetHostEntry(System.String)">
      <topicdata group="api" />
      <apidata name="GetHostEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.Dns.GetHostEntry" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="hostNameOrAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.IPHostEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)">
      <topicdata group="api" />
      <apidata name="GetHostEntryAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.Dns.GetHostEntryAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Net.IPAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.IPHostEntry" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Dns.GetHostEntryAsync(System.String)">
      <topicdata group="api" />
      <apidata name="GetHostEntryAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.Dns.GetHostEntryAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="hostNameOrAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.IPHostEntry" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Dns.GetHostName">
      <topicdata group="api" />
      <apidata name="GetHostName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Dns.Resolve(System.String)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="hostName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.IPHostEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.Dns" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resolve is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Net.DnsEndPoint">
      <topicdata group="api" />
      <apidata name="DnsEndPoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Net.EndPoint" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Net.DnsEndPoint.#ctor">
          <element api="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32)" />
          <element api="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)" />
        </element>
        <element api="M:System.Net.DnsEndPoint.Equals(System.Object)" />
        <element api="M:System.Net.DnsEndPoint.GetHashCode" />
        <element api="M:System.Net.DnsEndPoint.ToString" />
        <element api="M:System.Net.EndPoint.Create(System.Net.SocketAddress)" />
        <element api="M:System.Net.EndPoint.Serialize" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Net.DnsEndPoint.AddressFamily" />
        <element api="P:System.Net.DnsEndPoint.Host" />
        <element api="P:System.Net.DnsEndPoint.Port" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.DnsEndPoint">
      <topicdata name="DnsEndPoint" group="list" subgroup="Methods" typeTopicId="T:System.Net.DnsEndPoint" />
      <apidata name="DnsEndPoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Net.DnsEndPoint.Equals(System.Object)" />
        <element api="M:System.Net.DnsEndPoint.GetHashCode" />
        <element api="M:System.Net.DnsEndPoint.ToString" />
        <element api="M:System.Net.EndPoint.Create(System.Net.SocketAddress)" />
        <element api="M:System.Net.EndPoint.Serialize" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsEndPoint" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.DnsEndPoint">
      <topicdata name="DnsEndPoint" group="list" subgroup="Properties" typeTopicId="T:System.Net.DnsEndPoint" />
      <apidata name="DnsEndPoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.DnsEndPoint.AddressFamily" />
        <element api="P:System.Net.DnsEndPoint.Host" />
        <element api="P:System.Net.DnsEndPoint.Port" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsEndPoint" />
      </containers>
    </api>
    <api id="Overload:System.Net.DnsEndPoint.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32)" />
        <element api="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsEndPoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.DnsEndPoint.#ctor" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsEndPoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.DnsEndPoint.#ctor" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="addressFamily">
          <type api="T:System.Net.Sockets.AddressFamily" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsEndPoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.DnsEndPoint.AddressFamily">
      <topicdata group="api" />
      <apidata name="AddressFamily" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.EndPoint.AddressFamily">
          <type api="T:System.Net.EndPoint" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_AddressFamily" />
      <returns>
        <type api="T:System.Net.Sockets.AddressFamily" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsEndPoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.DnsEndPoint.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="comparand">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsEndPoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.DnsEndPoint.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsEndPoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.DnsEndPoint.Host">
      <topicdata group="api" />
      <apidata name="Host" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Host" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsEndPoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.DnsEndPoint.Port">
      <topicdata group="api" />
      <apidata name="Port" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Port" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsEndPoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.DnsEndPoint.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsEndPoint" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.DnsPermission">
      <topicdata group="api" />
      <apidata name="DnsPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Security.Permissions.IUnrestrictedPermission" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Net.DnsPermission.#ctor(System.Security.Permissions.PermissionState)" />
        <element api="M:System.Net.DnsPermission.Copy" />
        <element api="M:System.Net.DnsPermission.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Net.DnsPermission.Intersect(System.Security.IPermission)" />
        <element api="M:System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Net.DnsPermission.IsUnrestricted" />
        <element api="M:System.Net.DnsPermission.ToXml" />
        <element api="M:System.Net.DnsPermission.Union(System.Security.IPermission)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.DnsPermission">
      <topicdata name="DnsPermission" group="list" subgroup="Methods" typeTopicId="T:System.Net.DnsPermission" />
      <apidata name="DnsPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Net.DnsPermission.Copy" />
        <element api="M:System.Net.DnsPermission.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Net.DnsPermission.Intersect(System.Security.IPermission)" />
        <element api="M:System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Net.DnsPermission.IsUnrestricted" />
        <element api="M:System.Net.DnsPermission.ToXml" />
        <element api="M:System.Net.DnsPermission.Union(System.Security.IPermission)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsPermission" />
      </containers>
    </api>
    <api id="M:System.Net.DnsPermission.#ctor(System.Security.Permissions.PermissionState)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Security.Permissions.PermissionState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.DnsPermission.Copy">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.Copy">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Copy">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.DnsPermission.FromXml(System.Security.SecurityElement)">
      <topicdata group="api" />
      <apidata name="FromXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="securityElement">
          <type api="T:System.Security.SecurityElement" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)">
          <type api="T:System.Security.ISecurityEncodable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.DnsPermission.Intersect(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="Intersect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="IsSubsetOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.DnsPermission.IsUnrestricted">
      <topicdata group="api" />
      <apidata name="IsUnrestricted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted">
          <type api="T:System.Security.Permissions.IUnrestrictedPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.DnsPermission.ToXml">
      <topicdata group="api" />
      <apidata name="ToXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.ToXml">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.SecurityElement" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.ISecurityEncodable.ToXml">
          <type api="T:System.Security.ISecurityEncodable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.DnsPermission.Union(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="Union" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsPermission" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.DnsPermissionAttribute">
      <topicdata group="api" />
      <apidata name="DnsPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.CodeAccessSecurityAttribute" ref="true" />
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Net.DnsPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
        <element api="M:System.Net.DnsPermissionAttribute.CreatePermission" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
              <field name="Class" />
              <field name="Struct" />
              <field name="Constructor" />
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Net.DnsPermissionAttribute">
      <topicdata name="DnsPermissionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Net.DnsPermissionAttribute" />
      <apidata name="DnsPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Net.DnsPermissionAttribute.CreatePermission" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsPermissionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.DnsPermissionAttribute">
      <topicdata name="DnsPermissionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Net.DnsPermissionAttribute" />
      <apidata name="DnsPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsPermissionAttribute" />
      </containers>
    </api>
    <api id="M:System.Net.DnsPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.DnsPermissionAttribute.CreatePermission">
      <topicdata group="api" />
      <apidata name="CreatePermission" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Permissions.SecurityAttribute.CreatePermission">
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DnsPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.DownloadDataCompletedEventArgs">
      <topicdata group="api" />
      <apidata name="DownloadDataCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.DownloadDataCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.DownloadDataCompletedEventArgs">
      <topicdata name="DownloadDataCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Net.DownloadDataCompletedEventArgs" />
      <apidata name="DownloadDataCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DownloadDataCompletedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.DownloadDataCompletedEventArgs">
      <topicdata name="DownloadDataCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.DownloadDataCompletedEventArgs" />
      <apidata name="DownloadDataCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.DownloadDataCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DownloadDataCompletedEventArgs" />
      </containers>
    </api>
    <api id="P:System.Net.DownloadDataCompletedEventArgs.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DownloadDataCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.DownloadDataCompletedEventHandler">
      <topicdata group="api" />
      <apidata name="DownloadDataCompletedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Net.DownloadDataCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="T:System.Net.DownloadProgressChangedEventArgs">
      <topicdata group="api" />
      <apidata name="DownloadProgressChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.ProgressChangedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage" />
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.UserState" />
        <element api="P:System.Net.DownloadProgressChangedEventArgs.BytesReceived" />
        <element api="P:System.Net.DownloadProgressChangedEventArgs.TotalBytesToReceive" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.DownloadProgressChangedEventArgs">
      <topicdata name="DownloadProgressChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Net.DownloadProgressChangedEventArgs" />
      <apidata name="DownloadProgressChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DownloadProgressChangedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.DownloadProgressChangedEventArgs">
      <topicdata name="DownloadProgressChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.DownloadProgressChangedEventArgs" />
      <apidata name="DownloadProgressChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage" />
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.UserState" />
        <element api="P:System.Net.DownloadProgressChangedEventArgs.BytesReceived" />
        <element api="P:System.Net.DownloadProgressChangedEventArgs.TotalBytesToReceive" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DownloadProgressChangedEventArgs" />
      </containers>
    </api>
    <api id="P:System.Net.DownloadProgressChangedEventArgs.BytesReceived">
      <topicdata group="api" />
      <apidata name="BytesReceived" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BytesReceived" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DownloadProgressChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.DownloadProgressChangedEventArgs.TotalBytesToReceive">
      <topicdata group="api" />
      <apidata name="TotalBytesToReceive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TotalBytesToReceive" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DownloadProgressChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.DownloadProgressChangedEventHandler">
      <topicdata group="api" />
      <apidata name="DownloadProgressChangedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Net.DownloadProgressChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="T:System.Net.DownloadStringCompletedEventArgs">
      <topicdata group="api" />
      <apidata name="DownloadStringCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.DownloadStringCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.DownloadStringCompletedEventArgs">
      <topicdata name="DownloadStringCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Net.DownloadStringCompletedEventArgs" />
      <apidata name="DownloadStringCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DownloadStringCompletedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.DownloadStringCompletedEventArgs">
      <topicdata name="DownloadStringCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.DownloadStringCompletedEventArgs" />
      <apidata name="DownloadStringCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.DownloadStringCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DownloadStringCompletedEventArgs" />
      </containers>
    </api>
    <api id="P:System.Net.DownloadStringCompletedEventArgs.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.DownloadStringCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.DownloadStringCompletedEventHandler">
      <topicdata group="api" />
      <apidata name="DownloadStringCompletedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Net.DownloadStringCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="T:System.Net.EndPoint">
      <topicdata group="api" />
      <apidata name="EndPoint" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Net.DnsEndPoint" ref="true" />
          <type api="T:System.Net.IPEndPoint" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Net.EndPoint.#ctor" />
        <element api="M:System.Net.EndPoint.Create(System.Net.SocketAddress)" />
        <element api="M:System.Net.EndPoint.Serialize" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.EndPoint.AddressFamily" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.EndPoint">
      <topicdata name="EndPoint" group="list" subgroup="Methods" typeTopicId="T:System.Net.EndPoint" />
      <apidata name="EndPoint" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="M:System.Net.EndPoint.Create(System.Net.SocketAddress)" />
        <element api="M:System.Net.EndPoint.Serialize" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.EndPoint" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.EndPoint">
      <topicdata name="EndPoint" group="list" subgroup="Properties" typeTopicId="T:System.Net.EndPoint" />
      <apidata name="EndPoint" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="P:System.Net.EndPoint.AddressFamily" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.EndPoint" />
      </containers>
    </api>
    <api id="M:System.Net.EndPoint.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.EndPoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.EndPoint.AddressFamily">
      <topicdata group="api" />
      <apidata name="AddressFamily" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_AddressFamily" />
      <returns>
        <type api="T:System.Net.Sockets.AddressFamily" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.EndPoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.EndPoint.Create(System.Net.SocketAddress)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="socketAddress">
          <type api="T:System.Net.SocketAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.EndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.EndPoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.EndPoint.Serialize">
      <topicdata group="api" />
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Net.SocketAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.EndPoint" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.EndpointPermission">
      <topicdata group="api" />
      <apidata name="EndpointPermission" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Net.EndpointPermission.Equals(System.Object)" />
        <element api="M:System.Net.EndpointPermission.GetHashCode" />
        <element api="M:System.Net.EndpointPermission.ToString" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Net.EndpointPermission.Hostname" />
        <element api="P:System.Net.EndpointPermission.Port" />
        <element api="P:System.Net.EndpointPermission.Transport" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.EndpointPermission">
      <topicdata name="EndpointPermission" group="list" subgroup="Methods" typeTopicId="T:System.Net.EndpointPermission" />
      <apidata name="EndpointPermission" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Net.EndpointPermission.Equals(System.Object)" />
        <element api="M:System.Net.EndpointPermission.GetHashCode" />
        <element api="M:System.Net.EndpointPermission.ToString" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.EndpointPermission" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.EndpointPermission">
      <topicdata name="EndpointPermission" group="list" subgroup="Properties" typeTopicId="T:System.Net.EndpointPermission" />
      <apidata name="EndpointPermission" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Net.EndpointPermission.Hostname" />
        <element api="P:System.Net.EndpointPermission.Port" />
        <element api="P:System.Net.EndpointPermission.Transport" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.EndpointPermission" />
      </containers>
    </api>
    <api id="M:System.Net.EndpointPermission.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.EndpointPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.EndpointPermission.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.EndpointPermission" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.EndpointPermission.Hostname">
      <topicdata group="api" />
      <apidata name="Hostname" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Hostname" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.EndpointPermission" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.EndpointPermission.Port">
      <topicdata group="api" />
      <apidata name="Port" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Port" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.EndpointPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.EndpointPermission.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.EndpointPermission" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.EndpointPermission.Transport">
      <topicdata group="api" />
      <apidata name="Transport" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Transport" />
      <returns>
        <type api="T:System.Net.TransportType" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.EndpointPermission" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.FileWebRequest">
      <topicdata group="api" />
      <apidata name="FileWebRequest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Net.WebRequest" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.FileWebRequest.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Net.FileWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.FileWebRequest.Abort" />
        <element api="M:System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.FileWebRequest.EndGetRequestStream(System.IAsyncResult)" />
        <element api="M:System.Net.FileWebRequest.EndGetResponse(System.IAsyncResult)" />
        <element api="M:System.Net.FileWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.FileWebRequest.GetRequestStream" />
        <element api="M:System.Net.FileWebRequest.GetResponse" />
        <element api="M:System.Net.FileWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.WebRequest.GetRequestStreamAsync" />
        <element api="M:System.Net.WebRequest.GetResponseAsync" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.FileWebRequest.ConnectionGroupName" />
        <element api="P:System.Net.FileWebRequest.ContentLength" />
        <element api="P:System.Net.FileWebRequest.ContentType" />
        <element api="P:System.Net.FileWebRequest.Credentials" />
        <element api="P:System.Net.FileWebRequest.Headers" />
        <element api="P:System.Net.FileWebRequest.Method" />
        <element api="P:System.Net.FileWebRequest.PreAuthenticate" />
        <element api="P:System.Net.FileWebRequest.Proxy" />
        <element api="P:System.Net.FileWebRequest.RequestUri" />
        <element api="P:System.Net.FileWebRequest.Timeout" />
        <element api="P:System.Net.FileWebRequest.UseDefaultCredentials" />
        <element api="P:System.Net.WebRequest.AuthenticationLevel" />
        <element api="P:System.Net.WebRequest.CachePolicy" />
        <element api="P:System.Net.WebRequest.ImpersonationLevel" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.FileWebRequest">
      <topicdata name="FileWebRequest" group="list" subgroup="Methods" typeTopicId="T:System.Net.FileWebRequest" />
      <apidata name="FileWebRequest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.FileWebRequest.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Net.FileWebRequest.Abort" />
        <element api="M:System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.FileWebRequest.EndGetRequestStream(System.IAsyncResult)" />
        <element api="M:System.Net.FileWebRequest.EndGetResponse(System.IAsyncResult)" />
        <element api="M:System.Net.FileWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.FileWebRequest.GetRequestStream" />
        <element api="M:System.Net.FileWebRequest.GetResponse" />
        <element api="M:System.Net.FileWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.WebRequest.GetRequestStreamAsync" />
        <element api="M:System.Net.WebRequest.GetResponseAsync" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.FileWebRequest">
      <topicdata name="FileWebRequest" group="list" subgroup="Properties" typeTopicId="T:System.Net.FileWebRequest" />
      <apidata name="FileWebRequest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Net.FileWebRequest.ConnectionGroupName" />
        <element api="P:System.Net.FileWebRequest.ContentLength" />
        <element api="P:System.Net.FileWebRequest.ContentType" />
        <element api="P:System.Net.FileWebRequest.Credentials" />
        <element api="P:System.Net.FileWebRequest.Headers" />
        <element api="P:System.Net.FileWebRequest.Method" />
        <element api="P:System.Net.FileWebRequest.PreAuthenticate" />
        <element api="P:System.Net.FileWebRequest.Proxy" />
        <element api="P:System.Net.FileWebRequest.RequestUri" />
        <element api="P:System.Net.FileWebRequest.Timeout" />
        <element api="P:System.Net.FileWebRequest.UseDefaultCredentials" />
        <element api="P:System.Net.WebRequest.AuthenticationLevel" />
        <element api="P:System.Net.WebRequest.CachePolicy" />
        <element api="P:System.Net.WebRequest.ImpersonationLevel" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" />
      </containers>
    </api>
    <api id="M:System.Net.FileWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Serialization is obsoleted for this type. http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.FileWebRequest.Abort">
      <topicdata group="api" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.Abort">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginGetRequestStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginGetResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Net.FileWebRequest.ConnectionGroupName">
      <topicdata group="api" />
      <apidata name="ConnectionGroupName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.ConnectionGroupName">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ConnectionGroupName" />
      <setter name="set_ConnectionGroupName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FileWebRequest.ContentLength">
      <topicdata group="api" />
      <apidata name="ContentLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.ContentLength">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ContentLength" />
      <setter name="set_ContentLength" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FileWebRequest.ContentType">
      <topicdata group="api" />
      <apidata name="ContentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.ContentType">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ContentType" />
      <setter name="set_ContentType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FileWebRequest.Credentials">
      <topicdata group="api" />
      <apidata name="Credentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.Credentials">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Credentials" />
      <setter name="set_Credentials" />
      <returns>
        <type api="T:System.Net.ICredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.FileWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndGetRequestStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.FileWebRequest.EndGetResponse(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndGetResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.WebResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.FileWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.FileWebRequest.GetRequestStream">
      <topicdata group="api" />
      <apidata name="GetRequestStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.GetRequestStream">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.FileWebRequest.GetResponse">
      <topicdata group="api" />
      <apidata name="GetResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.GetResponse">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Net.WebResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FileWebRequest.Headers">
      <topicdata group="api" />
      <apidata name="Headers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.Headers">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Headers" />
      <returns>
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FileWebRequest.Method">
      <topicdata group="api" />
      <apidata name="Method" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.Method">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Method" />
      <setter name="set_Method" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FileWebRequest.PreAuthenticate">
      <topicdata group="api" />
      <apidata name="PreAuthenticate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.PreAuthenticate">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_PreAuthenticate" />
      <setter name="set_PreAuthenticate" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FileWebRequest.Proxy">
      <topicdata group="api" />
      <apidata name="Proxy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.Proxy">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Proxy" />
      <setter name="set_Proxy" />
      <returns>
        <type api="T:System.Net.IWebProxy" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FileWebRequest.RequestUri">
      <topicdata group="api" />
      <apidata name="RequestUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.RequestUri">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_RequestUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.FileWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FileWebRequest.Timeout">
      <topicdata group="api" />
      <apidata name="Timeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.Timeout">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Timeout" />
      <setter name="set_Timeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FileWebRequest.UseDefaultCredentials">
      <topicdata group="api" />
      <apidata name="UseDefaultCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.UseDefaultCredentials">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_UseDefaultCredentials" />
      <setter name="set_UseDefaultCredentials" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebRequest" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.FileWebResponse">
      <topicdata group="api" />
      <apidata name="FileWebResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Net.WebResponse" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.FileWebResponse.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Net.FileWebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.FileWebResponse.Close" />
        <element api="M:System.Net.FileWebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.FileWebResponse.GetResponseStream" />
        <element api="M:System.Net.FileWebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Net.FileWebResponse.Dispose">
          <element api="M:System.Net.WebResponse.Dispose" />
          <element api="M:System.Net.WebResponse.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.FileWebResponse.ContentLength" />
        <element api="P:System.Net.FileWebResponse.ContentType" />
        <element api="P:System.Net.FileWebResponse.Headers" />
        <element api="P:System.Net.FileWebResponse.ResponseUri" />
        <element api="P:System.Net.FileWebResponse.SupportsHeaders" />
        <element api="P:System.Net.WebResponse.IsFromCache" />
        <element api="P:System.Net.WebResponse.IsMutuallyAuthenticated" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.FileWebResponse">
      <topicdata name="FileWebResponse" group="list" subgroup="Methods" typeTopicId="T:System.Net.FileWebResponse" />
      <apidata name="FileWebResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.FileWebResponse.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Net.FileWebResponse.Close" />
        <element api="M:System.Net.FileWebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.FileWebResponse.GetResponseStream" />
        <element api="M:System.Net.FileWebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Net.FileWebResponse.Dispose">
          <element api="M:System.Net.WebResponse.Dispose" />
          <element api="M:System.Net.WebResponse.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebResponse" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.FileWebResponse">
      <topicdata name="FileWebResponse" group="list" subgroup="Properties" typeTopicId="T:System.Net.FileWebResponse" />
      <apidata name="FileWebResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Net.FileWebResponse.ContentLength" />
        <element api="P:System.Net.FileWebResponse.ContentType" />
        <element api="P:System.Net.FileWebResponse.Headers" />
        <element api="P:System.Net.FileWebResponse.ResponseUri" />
        <element api="P:System.Net.FileWebResponse.SupportsHeaders" />
        <element api="P:System.Net.WebResponse.IsFromCache" />
        <element api="P:System.Net.WebResponse.IsMutuallyAuthenticated" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebResponse" />
      </containers>
    </api>
    <api id="M:System.Net.FileWebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebResponse" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Serialization is obsoleted for this type. http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.FileWebResponse.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebResponse.Close">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FileWebResponse.ContentLength">
      <topicdata group="api" />
      <apidata name="ContentLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebResponse.ContentLength">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ContentLength" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FileWebResponse.ContentType">
      <topicdata group="api" />
      <apidata name="ContentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebResponse.ContentType">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ContentType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.FileWebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.FileWebResponse.GetResponseStream">
      <topicdata group="api" />
      <apidata name="GetResponseStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebResponse.GetResponseStream">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FileWebResponse.Headers">
      <topicdata group="api" />
      <apidata name="Headers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebResponse.Headers">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Headers" />
      <returns>
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FileWebResponse.ResponseUri">
      <topicdata group="api" />
      <apidata name="ResponseUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebResponse.ResponseUri">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ResponseUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FileWebResponse.SupportsHeaders">
      <topicdata group="api" />
      <apidata name="SupportsHeaders" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebResponse.SupportsHeaders">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SupportsHeaders" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.FileWebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FileWebResponse" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.FtpStatusCode">
      <topicdata group="api" />
      <apidata name="FtpStatusCode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.FtpStatusCode.Undefined" />
        <element api="F:System.Net.FtpStatusCode.RestartMarker" />
        <element api="F:System.Net.FtpStatusCode.ServiceTemporarilyNotAvailable" />
        <element api="F:System.Net.FtpStatusCode.DataAlreadyOpen" />
        <element api="F:System.Net.FtpStatusCode.OpeningData" />
        <element api="F:System.Net.FtpStatusCode.CommandOK" />
        <element api="F:System.Net.FtpStatusCode.CommandExtraneous" />
        <element api="F:System.Net.FtpStatusCode.DirectoryStatus" />
        <element api="F:System.Net.FtpStatusCode.FileStatus" />
        <element api="F:System.Net.FtpStatusCode.SystemType" />
        <element api="F:System.Net.FtpStatusCode.SendUserCommand" />
        <element api="F:System.Net.FtpStatusCode.ClosingControl" />
        <element api="F:System.Net.FtpStatusCode.ClosingData" />
        <element api="F:System.Net.FtpStatusCode.EnteringPassive" />
        <element api="F:System.Net.FtpStatusCode.LoggedInProceed" />
        <element api="F:System.Net.FtpStatusCode.ServerWantsSecureSession" />
        <element api="F:System.Net.FtpStatusCode.FileActionOK" />
        <element api="F:System.Net.FtpStatusCode.PathnameCreated" />
        <element api="F:System.Net.FtpStatusCode.SendPasswordCommand" />
        <element api="F:System.Net.FtpStatusCode.NeedLoginAccount" />
        <element api="F:System.Net.FtpStatusCode.FileCommandPending" />
        <element api="F:System.Net.FtpStatusCode.ServiceNotAvailable" />
        <element api="F:System.Net.FtpStatusCode.CantOpenData" />
        <element api="F:System.Net.FtpStatusCode.ConnectionClosed" />
        <element api="F:System.Net.FtpStatusCode.ActionNotTakenFileUnavailableOrBusy" />
        <element api="F:System.Net.FtpStatusCode.ActionAbortedLocalProcessingError" />
        <element api="F:System.Net.FtpStatusCode.ActionNotTakenInsufficientSpace" />
        <element api="F:System.Net.FtpStatusCode.CommandSyntaxError" />
        <element api="F:System.Net.FtpStatusCode.ArgumentSyntaxError" />
        <element api="F:System.Net.FtpStatusCode.CommandNotImplemented" />
        <element api="F:System.Net.FtpStatusCode.BadCommandSequence" />
        <element api="F:System.Net.FtpStatusCode.NotLoggedIn" />
        <element api="F:System.Net.FtpStatusCode.AccountNeeded" />
        <element api="F:System.Net.FtpStatusCode.ActionNotTakenFileUnavailable" />
        <element api="F:System.Net.FtpStatusCode.ActionAbortedUnknownPageType" />
        <element api="F:System.Net.FtpStatusCode.FileActionAborted" />
        <element api="F:System.Net.FtpStatusCode.ActionNotTakenFilenameNotAllowed" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.AccountNeeded">
      <topicdata group="api" notopic="" />
      <apidata name="AccountNeeded" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>532</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.ActionAbortedLocalProcessingError">
      <topicdata group="api" notopic="" />
      <apidata name="ActionAbortedLocalProcessingError" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>451</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.ActionAbortedUnknownPageType">
      <topicdata group="api" notopic="" />
      <apidata name="ActionAbortedUnknownPageType" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>551</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.ActionNotTakenFilenameNotAllowed">
      <topicdata group="api" notopic="" />
      <apidata name="ActionNotTakenFilenameNotAllowed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>553</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.ActionNotTakenFileUnavailable">
      <topicdata group="api" notopic="" />
      <apidata name="ActionNotTakenFileUnavailable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>550</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.ActionNotTakenFileUnavailableOrBusy">
      <topicdata group="api" notopic="" />
      <apidata name="ActionNotTakenFileUnavailableOrBusy" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>450</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.ActionNotTakenInsufficientSpace">
      <topicdata group="api" notopic="" />
      <apidata name="ActionNotTakenInsufficientSpace" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>452</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.ArgumentSyntaxError">
      <topicdata group="api" notopic="" />
      <apidata name="ArgumentSyntaxError" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>501</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.BadCommandSequence">
      <topicdata group="api" notopic="" />
      <apidata name="BadCommandSequence" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>503</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.CantOpenData">
      <topicdata group="api" notopic="" />
      <apidata name="CantOpenData" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>425</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.ClosingControl">
      <topicdata group="api" notopic="" />
      <apidata name="ClosingControl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>221</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.ClosingData">
      <topicdata group="api" notopic="" />
      <apidata name="ClosingData" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>226</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.CommandExtraneous">
      <topicdata group="api" notopic="" />
      <apidata name="CommandExtraneous" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>202</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.CommandNotImplemented">
      <topicdata group="api" notopic="" />
      <apidata name="CommandNotImplemented" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>502</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.CommandOK">
      <topicdata group="api" notopic="" />
      <apidata name="CommandOK" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>200</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.CommandSyntaxError">
      <topicdata group="api" notopic="" />
      <apidata name="CommandSyntaxError" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>500</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.ConnectionClosed">
      <topicdata group="api" notopic="" />
      <apidata name="ConnectionClosed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>426</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.DataAlreadyOpen">
      <topicdata group="api" notopic="" />
      <apidata name="DataAlreadyOpen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>125</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.DirectoryStatus">
      <topicdata group="api" notopic="" />
      <apidata name="DirectoryStatus" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>212</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.EnteringPassive">
      <topicdata group="api" notopic="" />
      <apidata name="EnteringPassive" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>227</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.FileActionAborted">
      <topicdata group="api" notopic="" />
      <apidata name="FileActionAborted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>552</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.FileActionOK">
      <topicdata group="api" notopic="" />
      <apidata name="FileActionOK" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>250</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.FileCommandPending">
      <topicdata group="api" notopic="" />
      <apidata name="FileCommandPending" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>350</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.FileStatus">
      <topicdata group="api" notopic="" />
      <apidata name="FileStatus" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>213</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.LoggedInProceed">
      <topicdata group="api" notopic="" />
      <apidata name="LoggedInProceed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>230</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.NeedLoginAccount">
      <topicdata group="api" notopic="" />
      <apidata name="NeedLoginAccount" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>332</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.NotLoggedIn">
      <topicdata group="api" notopic="" />
      <apidata name="NotLoggedIn" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>530</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.OpeningData">
      <topicdata group="api" notopic="" />
      <apidata name="OpeningData" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>150</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.PathnameCreated">
      <topicdata group="api" notopic="" />
      <apidata name="PathnameCreated" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>257</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.RestartMarker">
      <topicdata group="api" notopic="" />
      <apidata name="RestartMarker" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>110</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.SendPasswordCommand">
      <topicdata group="api" notopic="" />
      <apidata name="SendPasswordCommand" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>331</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.SendUserCommand">
      <topicdata group="api" notopic="" />
      <apidata name="SendUserCommand" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>220</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.ServerWantsSecureSession">
      <topicdata group="api" notopic="" />
      <apidata name="ServerWantsSecureSession" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>234</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.ServiceNotAvailable">
      <topicdata group="api" notopic="" />
      <apidata name="ServiceNotAvailable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>421</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.ServiceTemporarilyNotAvailable">
      <topicdata group="api" notopic="" />
      <apidata name="ServiceTemporarilyNotAvailable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>120</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.SystemType">
      <topicdata group="api" notopic="" />
      <apidata name="SystemType" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>215</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.FtpStatusCode.Undefined">
      <topicdata group="api" notopic="" />
      <apidata name="Undefined" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="T:System.Net.FtpWebRequest">
      <topicdata group="api" />
      <apidata name="FtpWebRequest" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Net.WebRequest" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Net.FtpWebRequest.Abort" />
        <element api="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)" />
        <element api="M:System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)" />
        <element api="M:System.Net.FtpWebRequest.GetRequestStream" />
        <element api="M:System.Net.FtpWebRequest.GetResponse" />
        <element api="M:System.Net.WebRequest.GetRequestStreamAsync" />
        <element api="M:System.Net.WebRequest.GetResponseAsync" />
        <element api="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.FtpWebRequest.ClientCertificates" />
        <element api="P:System.Net.FtpWebRequest.ConnectionGroupName" />
        <element api="P:System.Net.FtpWebRequest.ContentLength" />
        <element api="P:System.Net.FtpWebRequest.ContentOffset" />
        <element api="P:System.Net.FtpWebRequest.ContentType" />
        <element api="P:System.Net.FtpWebRequest.Credentials" />
        <element api="P:System.Net.FtpWebRequest.DefaultCachePolicy" />
        <element api="P:System.Net.FtpWebRequest.EnableSsl" />
        <element api="P:System.Net.FtpWebRequest.Headers" />
        <element api="P:System.Net.FtpWebRequest.KeepAlive" />
        <element api="P:System.Net.FtpWebRequest.Method" />
        <element api="P:System.Net.FtpWebRequest.PreAuthenticate" />
        <element api="P:System.Net.FtpWebRequest.Proxy" />
        <element api="P:System.Net.FtpWebRequest.ReadWriteTimeout" />
        <element api="P:System.Net.FtpWebRequest.RenameTo" />
        <element api="P:System.Net.FtpWebRequest.RequestUri" />
        <element api="P:System.Net.FtpWebRequest.ServicePoint" />
        <element api="P:System.Net.FtpWebRequest.Timeout" />
        <element api="P:System.Net.FtpWebRequest.UseBinary" />
        <element api="P:System.Net.FtpWebRequest.UseDefaultCredentials" />
        <element api="P:System.Net.FtpWebRequest.UsePassive" />
        <element api="P:System.Net.WebRequest.AuthenticationLevel" />
        <element api="P:System.Net.WebRequest.CachePolicy" />
        <element api="P:System.Net.WebRequest.ImpersonationLevel" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.FtpWebRequest">
      <topicdata name="FtpWebRequest" group="list" subgroup="Methods" typeTopicId="T:System.Net.FtpWebRequest" />
      <apidata name="FtpWebRequest" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Net.FtpWebRequest.Abort" />
        <element api="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)" />
        <element api="M:System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)" />
        <element api="M:System.Net.FtpWebRequest.GetRequestStream" />
        <element api="M:System.Net.FtpWebRequest.GetResponse" />
        <element api="M:System.Net.WebRequest.GetRequestStreamAsync" />
        <element api="M:System.Net.WebRequest.GetResponseAsync" />
        <element api="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.FtpWebRequest">
      <topicdata name="FtpWebRequest" group="list" subgroup="Properties" typeTopicId="T:System.Net.FtpWebRequest" />
      <apidata name="FtpWebRequest" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Net.FtpWebRequest.ClientCertificates" />
        <element api="P:System.Net.FtpWebRequest.ConnectionGroupName" />
        <element api="P:System.Net.FtpWebRequest.ContentLength" />
        <element api="P:System.Net.FtpWebRequest.ContentOffset" />
        <element api="P:System.Net.FtpWebRequest.ContentType" />
        <element api="P:System.Net.FtpWebRequest.Credentials" />
        <element api="P:System.Net.FtpWebRequest.DefaultCachePolicy" />
        <element api="P:System.Net.FtpWebRequest.EnableSsl" />
        <element api="P:System.Net.FtpWebRequest.Headers" />
        <element api="P:System.Net.FtpWebRequest.KeepAlive" />
        <element api="P:System.Net.FtpWebRequest.Method" />
        <element api="P:System.Net.FtpWebRequest.PreAuthenticate" />
        <element api="P:System.Net.FtpWebRequest.Proxy" />
        <element api="P:System.Net.FtpWebRequest.ReadWriteTimeout" />
        <element api="P:System.Net.FtpWebRequest.RenameTo" />
        <element api="P:System.Net.FtpWebRequest.RequestUri" />
        <element api="P:System.Net.FtpWebRequest.ServicePoint" />
        <element api="P:System.Net.FtpWebRequest.Timeout" />
        <element api="P:System.Net.FtpWebRequest.UseBinary" />
        <element api="P:System.Net.FtpWebRequest.UseDefaultCredentials" />
        <element api="P:System.Net.FtpWebRequest.UsePassive" />
        <element api="P:System.Net.WebRequest.AuthenticationLevel" />
        <element api="P:System.Net.WebRequest.CachePolicy" />
        <element api="P:System.Net.WebRequest.ImpersonationLevel" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" />
      </containers>
    </api>
    <api id="M:System.Net.FtpWebRequest.Abort">
      <topicdata group="api" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.Abort">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginGetRequestStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginGetResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Net.FtpWebRequest.ClientCertificates">
      <topicdata group="api" />
      <apidata name="ClientCertificates" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClientCertificates" />
      <setter name="set_ClientCertificates" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebRequest.ConnectionGroupName">
      <topicdata group="api" />
      <apidata name="ConnectionGroupName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.ConnectionGroupName">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ConnectionGroupName" />
      <setter name="set_ConnectionGroupName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebRequest.ContentLength">
      <topicdata group="api" />
      <apidata name="ContentLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.ContentLength">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ContentLength" />
      <setter name="set_ContentLength" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebRequest.ContentOffset">
      <topicdata group="api" />
      <apidata name="ContentOffset" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentOffset" />
      <setter name="set_ContentOffset" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebRequest.ContentType">
      <topicdata group="api" />
      <apidata name="ContentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.ContentType">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ContentType" />
      <setter name="set_ContentType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebRequest.Credentials">
      <topicdata group="api" />
      <apidata name="Credentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.Credentials">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Credentials" />
      <setter name="set_Credentials" />
      <returns>
        <type api="T:System.Net.ICredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebRequest.DefaultCachePolicy">
      <topicdata group="api" />
      <apidata name="DefaultCachePolicy" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultCachePolicy" />
      <setter name="set_DefaultCachePolicy" />
      <returns>
        <type api="T:System.Net.Cache.RequestCachePolicy" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebRequest.EnableSsl">
      <topicdata group="api" />
      <apidata name="EnableSsl" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EnableSsl" />
      <setter name="set_EnableSsl" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndGetRequestStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndGetResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.WebResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.FtpWebRequest.GetRequestStream">
      <topicdata group="api" />
      <apidata name="GetRequestStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.GetRequestStream">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.FtpWebRequest.GetResponse">
      <topicdata group="api" />
      <apidata name="GetResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.GetResponse">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Net.WebResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebRequest.Headers">
      <topicdata group="api" />
      <apidata name="Headers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.Headers">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Headers" />
      <setter name="set_Headers" />
      <returns>
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebRequest.KeepAlive">
      <topicdata group="api" />
      <apidata name="KeepAlive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeepAlive" />
      <setter name="set_KeepAlive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebRequest.Method">
      <topicdata group="api" />
      <apidata name="Method" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.Method">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Method" />
      <setter name="set_Method" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebRequest.PreAuthenticate">
      <topicdata group="api" />
      <apidata name="PreAuthenticate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.PreAuthenticate">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_PreAuthenticate" />
      <setter name="set_PreAuthenticate" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebRequest.Proxy">
      <topicdata group="api" />
      <apidata name="Proxy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.Proxy">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Proxy" />
      <setter name="set_Proxy" />
      <returns>
        <type api="T:System.Net.IWebProxy" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebRequest.ReadWriteTimeout">
      <topicdata group="api" />
      <apidata name="ReadWriteTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReadWriteTimeout" />
      <setter name="set_ReadWriteTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebRequest.RenameTo">
      <topicdata group="api" />
      <apidata name="RenameTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RenameTo" />
      <setter name="set_RenameTo" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebRequest.RequestUri">
      <topicdata group="api" />
      <apidata name="RequestUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.RequestUri">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_RequestUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebRequest.ServicePoint">
      <topicdata group="api" />
      <apidata name="ServicePoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ServicePoint" />
      <returns>
        <type api="T:System.Net.ServicePoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebRequest.Timeout">
      <topicdata group="api" />
      <apidata name="Timeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.Timeout">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Timeout" />
      <setter name="set_Timeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebRequest.UseBinary">
      <topicdata group="api" />
      <apidata name="UseBinary" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseBinary" />
      <setter name="set_UseBinary" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebRequest.UseDefaultCredentials">
      <topicdata group="api" />
      <apidata name="UseDefaultCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.UseDefaultCredentials">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_UseDefaultCredentials" />
      <setter name="set_UseDefaultCredentials" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebRequest.UsePassive">
      <topicdata group="api" />
      <apidata name="UsePassive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UsePassive" />
      <setter name="set_UsePassive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.FtpWebResponse">
      <topicdata group="api" />
      <apidata name="FtpWebResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Net.WebResponse" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.FtpWebResponse.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Net.FtpWebResponse.Close" />
        <element api="M:System.Net.FtpWebResponse.GetResponseStream" />
        <element api="Overload:System.Net.FtpWebResponse.Dispose">
          <element api="M:System.Net.WebResponse.Dispose" />
          <element api="M:System.Net.WebResponse.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.WebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.WebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.FtpWebResponse.BannerMessage" />
        <element api="P:System.Net.FtpWebResponse.ContentLength" />
        <element api="P:System.Net.FtpWebResponse.ExitMessage" />
        <element api="P:System.Net.FtpWebResponse.Headers" />
        <element api="P:System.Net.FtpWebResponse.LastModified" />
        <element api="P:System.Net.FtpWebResponse.ResponseUri" />
        <element api="P:System.Net.FtpWebResponse.StatusCode" />
        <element api="P:System.Net.FtpWebResponse.StatusDescription" />
        <element api="P:System.Net.FtpWebResponse.SupportsHeaders" />
        <element api="P:System.Net.FtpWebResponse.WelcomeMessage" />
        <element api="P:System.Net.WebResponse.ContentType" />
        <element api="P:System.Net.WebResponse.IsFromCache" />
        <element api="P:System.Net.WebResponse.IsMutuallyAuthenticated" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.FtpWebResponse">
      <topicdata name="FtpWebResponse" group="list" subgroup="Methods" typeTopicId="T:System.Net.FtpWebResponse" />
      <apidata name="FtpWebResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.FtpWebResponse.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Net.FtpWebResponse.Close" />
        <element api="M:System.Net.FtpWebResponse.GetResponseStream" />
        <element api="Overload:System.Net.FtpWebResponse.Dispose">
          <element api="M:System.Net.WebResponse.Dispose" />
          <element api="M:System.Net.WebResponse.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.WebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.WebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebResponse" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.FtpWebResponse">
      <topicdata name="FtpWebResponse" group="list" subgroup="Properties" typeTopicId="T:System.Net.FtpWebResponse" />
      <apidata name="FtpWebResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.FtpWebResponse.BannerMessage" />
        <element api="P:System.Net.FtpWebResponse.ContentLength" />
        <element api="P:System.Net.FtpWebResponse.ExitMessage" />
        <element api="P:System.Net.FtpWebResponse.Headers" />
        <element api="P:System.Net.FtpWebResponse.LastModified" />
        <element api="P:System.Net.FtpWebResponse.ResponseUri" />
        <element api="P:System.Net.FtpWebResponse.StatusCode" />
        <element api="P:System.Net.FtpWebResponse.StatusDescription" />
        <element api="P:System.Net.FtpWebResponse.SupportsHeaders" />
        <element api="P:System.Net.FtpWebResponse.WelcomeMessage" />
        <element api="P:System.Net.WebResponse.ContentType" />
        <element api="P:System.Net.WebResponse.IsFromCache" />
        <element api="P:System.Net.WebResponse.IsMutuallyAuthenticated" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebResponse" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebResponse.BannerMessage">
      <topicdata group="api" />
      <apidata name="BannerMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BannerMessage" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.FtpWebResponse.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebResponse.Close">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebResponse.ContentLength">
      <topicdata group="api" />
      <apidata name="ContentLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebResponse.ContentLength">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ContentLength" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebResponse.ExitMessage">
      <topicdata group="api" />
      <apidata name="ExitMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExitMessage" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.FtpWebResponse.GetResponseStream">
      <topicdata group="api" />
      <apidata name="GetResponseStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebResponse.GetResponseStream">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebResponse.Headers">
      <topicdata group="api" />
      <apidata name="Headers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebResponse.Headers">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Headers" />
      <returns>
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebResponse.LastModified">
      <topicdata group="api" />
      <apidata name="LastModified" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LastModified" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebResponse.ResponseUri">
      <topicdata group="api" />
      <apidata name="ResponseUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebResponse.ResponseUri">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ResponseUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebResponse.StatusCode">
      <topicdata group="api" />
      <apidata name="StatusCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StatusCode" />
      <returns>
        <type api="T:System.Net.FtpStatusCode" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebResponse.StatusDescription">
      <topicdata group="api" />
      <apidata name="StatusDescription" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StatusDescription" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebResponse.SupportsHeaders">
      <topicdata group="api" />
      <apidata name="SupportsHeaders" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebResponse.SupportsHeaders">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SupportsHeaders" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.FtpWebResponse.WelcomeMessage">
      <topicdata group="api" />
      <apidata name="WelcomeMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WelcomeMessage" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.FtpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.GlobalProxySelection">
      <topicdata group="api" />
      <apidata name="GlobalProxySelection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.GlobalProxySelection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Net.GlobalProxySelection.#ctor" />
        <element api="M:System.Net.GlobalProxySelection.GetEmptyWebProxy" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.GlobalProxySelection.Select" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This class has been deprecated. Please use WebRequest.DefaultWebProxy instead to access and set the global default proxy. Use 'null' instead of GetEmptyWebProxy. http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Net.GlobalProxySelection">
      <topicdata name="GlobalProxySelection" group="list" subgroup="Methods" typeTopicId="T:System.Net.GlobalProxySelection" />
      <apidata name="GlobalProxySelection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.GlobalProxySelection.#ctor" />
      <elements>
        <element api="M:System.Net.GlobalProxySelection.GetEmptyWebProxy" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.GlobalProxySelection" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.GlobalProxySelection">
      <topicdata name="GlobalProxySelection" group="list" subgroup="Properties" typeTopicId="T:System.Net.GlobalProxySelection" />
      <apidata name="GlobalProxySelection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.GlobalProxySelection.#ctor" />
      <elements>
        <element api="P:System.Net.GlobalProxySelection.Select" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.GlobalProxySelection" />
      </containers>
    </api>
    <api id="M:System.Net.GlobalProxySelection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.GlobalProxySelection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.GlobalProxySelection.GetEmptyWebProxy">
      <topicdata group="api" />
      <apidata name="GetEmptyWebProxy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.IWebProxy" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.GlobalProxySelection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.GlobalProxySelection.Select">
      <topicdata group="api" />
      <apidata name="Select" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Select" />
      <setter name="set_Select" />
      <returns>
        <type api="T:System.Net.IWebProxy" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.GlobalProxySelection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.HttpContinueDelegate">
      <topicdata group="api" />
      <apidata name="HttpContinueDelegate" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="StatusCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="httpHeaders">
          <type api="T:System.Net.WebHeaderCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="T:System.Net.HttpListener">
      <topicdata group="api" />
      <apidata name="HttpListener" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Net.HttpListener.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Net.HttpListener.#ctor" />
        <element api="M:System.Net.HttpListener.Abort" />
        <element api="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.HttpListener.Close" />
        <element api="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" />
        <element api="M:System.Net.HttpListener.GetContext" />
        <element api="M:System.Net.HttpListener.GetContextAsync" />
        <element api="M:System.Net.HttpListener.Start" />
        <element api="M:System.Net.HttpListener.Stop" />
        <element api="M:System.Net.HttpListener.System#IDisposable#Dispose" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.HttpListener.AuthenticationSchemes" />
        <element api="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate" />
        <element api="P:System.Net.HttpListener.DefaultServiceNames" />
        <element api="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <element api="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <element api="P:System.Net.HttpListener.IgnoreWriteExceptions" />
        <element api="P:System.Net.HttpListener.IsListening" />
        <element api="P:System.Net.HttpListener.IsSupported" />
        <element api="P:System.Net.HttpListener.Prefixes" />
        <element api="P:System.Net.HttpListener.Realm" />
        <element api="P:System.Net.HttpListener.TimeoutManager" />
        <element api="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.HttpListener">
      <topicdata name="HttpListener" group="list" subgroup="Methods" typeTopicId="T:System.Net.HttpListener" />
      <apidata name="HttpListener" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Net.HttpListener.#ctor" />
      <elements>
        <element api="M:System.Net.HttpListener.Abort" />
        <element api="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.HttpListener.Close" />
        <element api="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" />
        <element api="M:System.Net.HttpListener.GetContext" />
        <element api="M:System.Net.HttpListener.GetContextAsync" />
        <element api="M:System.Net.HttpListener.Start" />
        <element api="M:System.Net.HttpListener.Stop" />
        <element api="M:System.Net.HttpListener.System#IDisposable#Dispose" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.HttpListener">
      <topicdata name="HttpListener" group="list" subgroup="Properties" typeTopicId="T:System.Net.HttpListener" />
      <apidata name="HttpListener" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Net.HttpListener.#ctor" />
      <elements>
        <element api="P:System.Net.HttpListener.AuthenticationSchemes" />
        <element api="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate" />
        <element api="P:System.Net.HttpListener.DefaultServiceNames" />
        <element api="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <element api="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <element api="P:System.Net.HttpListener.IgnoreWriteExceptions" />
        <element api="P:System.Net.HttpListener.IsListening" />
        <element api="P:System.Net.HttpListener.IsSupported" />
        <element api="P:System.Net.HttpListener.Prefixes" />
        <element api="P:System.Net.HttpListener.Realm" />
        <element api="P:System.Net.HttpListener.TimeoutManager" />
        <element api="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListener.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListener.Abort">
      <topicdata group="api" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListener.AuthenticationSchemes">
      <topicdata group="api" />
      <apidata name="AuthenticationSchemes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AuthenticationSchemes" />
      <setter name="set_AuthenticationSchemes" />
      <returns>
        <type api="T:System.Net.AuthenticationSchemes" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
      <topicdata group="api" />
      <apidata name="AuthenticationSchemeSelectorDelegate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AuthenticationSchemeSelectorDelegate" />
      <setter name="set_AuthenticationSchemeSelectorDelegate" />
      <returns>
        <type api="T:System.Net.AuthenticationSchemeSelector" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginGetContext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.HttpListener.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListener.DefaultServiceNames">
      <topicdata group="api" />
      <apidata name="DefaultServiceNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultServiceNames" />
      <returns>
        <type api="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndGetContext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.HttpListenerContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListener.ExtendedProtectionPolicy">
      <topicdata group="api" />
      <apidata name="ExtendedProtectionPolicy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ExtendedProtectionPolicy" />
      <setter name="set_ExtendedProtectionPolicy" />
      <returns>
        <type api="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
      <topicdata group="api" />
      <apidata name="ExtendedProtectionSelectorDelegate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ExtendedProtectionSelectorDelegate" />
      <setter name="set_ExtendedProtectionSelectorDelegate" />
      <returns>
        <type api="T:System.Net.HttpListener.ExtendedProtectionSelector" ref="true">
          <type api="T:System.Net.HttpListener" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListener.GetContext">
      <topicdata group="api" />
      <apidata name="GetContext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.HttpListenerContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListener.GetContextAsync">
      <topicdata group="api" />
      <apidata name="GetContextAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.HttpListenerContext" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Net.HttpListener.IgnoreWriteExceptions">
      <topicdata group="api" />
      <apidata name="IgnoreWriteExceptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IgnoreWriteExceptions" />
      <setter name="set_IgnoreWriteExceptions" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListener.IsListening">
      <topicdata group="api" />
      <apidata name="IsListening" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsListening" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListener.IsSupported">
      <topicdata group="api" />
      <apidata name="IsSupported" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSupported" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListener.Prefixes">
      <topicdata group="api" />
      <apidata name="Prefixes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Prefixes" />
      <returns>
        <type api="T:System.Net.HttpListenerPrefixCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListener.Realm">
      <topicdata group="api" />
      <apidata name="Realm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Realm" />
      <setter name="set_Realm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListener.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListener.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListener.System#IDisposable#Dispose">
      <topicdata group="api" eiiName="IDisposable.Dispose" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListener.TimeoutManager">
      <topicdata group="api" />
      <apidata name="TimeoutManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TimeoutManager" />
      <returns>
        <type api="T:System.Net.HttpListenerTimeoutManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
      <topicdata group="api" />
      <apidata name="UnsafeConnectionNtlmAuthentication" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UnsafeConnectionNtlmAuthentication" />
      <setter name="set_UnsafeConnectionNtlmAuthentication" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.HttpListener.ExtendedProtectionSelector">
      <topicdata group="api" />
      <apidata name="ExtendedProtectionSelector" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Net.HttpListenerRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListener" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.HttpListenerBasicIdentity">
      <topicdata group="api" />
      <apidata name="HttpListenerBasicIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Security.Principal.GenericIdentity" ref="true" />
          <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Net.HttpListenerBasicIdentity.#ctor(System.String,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)" />
        <element api="M:System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})" />
        <element api="M:System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)" />
        <element api="Overload:System.Net.HttpListenerBasicIdentity.FindAll">
          <element api="M:System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})" />
          <element api="M:System.Security.Claims.ClaimsIdentity.FindAll(System.String)" />
        </element>
        <element api="Overload:System.Net.HttpListenerBasicIdentity.FindFirst">
          <element api="M:System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})" />
          <element api="M:System.Security.Claims.ClaimsIdentity.FindFirst(System.String)" />
        </element>
        <element api="M:System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Net.HttpListenerBasicIdentity.HasClaim">
          <element api="M:System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})" />
          <element api="M:System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)" />
        </element>
        <element api="M:System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)" />
        <element api="M:System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)" />
        <element api="Overload:System.Net.HttpListenerBasicIdentity.WriteTo">
          <element api="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)" />
          <element api="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" />
        </element>
        <element api="M:System.Security.Principal.GenericIdentity.Clone" />
        <element api="P:System.Net.HttpListenerBasicIdentity.Password" />
        <element api="P:System.Security.Claims.ClaimsIdentity.Actor" />
        <element api="P:System.Security.Claims.ClaimsIdentity.BootstrapContext" />
        <element api="P:System.Security.Claims.ClaimsIdentity.CustomSerializationData" />
        <element api="P:System.Security.Claims.ClaimsIdentity.Label" />
        <element api="P:System.Security.Claims.ClaimsIdentity.NameClaimType" />
        <element api="P:System.Security.Claims.ClaimsIdentity.RoleClaimType" />
        <element api="P:System.Security.Principal.GenericIdentity.AuthenticationType" />
        <element api="P:System.Security.Principal.GenericIdentity.Claims" />
        <element api="P:System.Security.Principal.GenericIdentity.IsAuthenticated" />
        <element api="P:System.Security.Principal.GenericIdentity.Name" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.HttpListenerBasicIdentity">
      <topicdata name="HttpListenerBasicIdentity" group="list" subgroup="Methods" typeTopicId="T:System.Net.HttpListenerBasicIdentity" />
      <apidata name="HttpListenerBasicIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)" />
        <element api="M:System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})" />
        <element api="M:System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)" />
        <element api="Overload:System.Net.HttpListenerBasicIdentity.FindAll">
          <element api="M:System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})" />
          <element api="M:System.Security.Claims.ClaimsIdentity.FindAll(System.String)" />
        </element>
        <element api="Overload:System.Net.HttpListenerBasicIdentity.FindFirst">
          <element api="M:System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})" />
          <element api="M:System.Security.Claims.ClaimsIdentity.FindFirst(System.String)" />
        </element>
        <element api="M:System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Net.HttpListenerBasicIdentity.HasClaim">
          <element api="M:System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})" />
          <element api="M:System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)" />
        </element>
        <element api="M:System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)" />
        <element api="M:System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)" />
        <element api="Overload:System.Net.HttpListenerBasicIdentity.WriteTo">
          <element api="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)" />
          <element api="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" />
        </element>
        <element api="M:System.Security.Principal.GenericIdentity.Clone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerBasicIdentity" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.HttpListenerBasicIdentity">
      <topicdata name="HttpListenerBasicIdentity" group="list" subgroup="Properties" typeTopicId="T:System.Net.HttpListenerBasicIdentity" />
      <apidata name="HttpListenerBasicIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.HttpListenerBasicIdentity.Password" />
        <element api="P:System.Security.Claims.ClaimsIdentity.Actor" />
        <element api="P:System.Security.Claims.ClaimsIdentity.BootstrapContext" />
        <element api="P:System.Security.Claims.ClaimsIdentity.CustomSerializationData" />
        <element api="P:System.Security.Claims.ClaimsIdentity.Label" />
        <element api="P:System.Security.Claims.ClaimsIdentity.NameClaimType" />
        <element api="P:System.Security.Claims.ClaimsIdentity.RoleClaimType" />
        <element api="P:System.Security.Principal.GenericIdentity.AuthenticationType" />
        <element api="P:System.Security.Principal.GenericIdentity.Claims" />
        <element api="P:System.Security.Principal.GenericIdentity.IsAuthenticated" />
        <element api="P:System.Security.Principal.GenericIdentity.Name" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerBasicIdentity" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerBasicIdentity.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerBasicIdentity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerBasicIdentity.Password">
      <topicdata group="api" />
      <apidata name="Password" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Password" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerBasicIdentity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.HttpListenerContext">
      <topicdata group="api" />
      <apidata name="HttpListenerContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Net.HttpListenerContext.AcceptWebSocketAsync">
          <element api="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)" />
          <element api="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)" />
          <element api="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.HttpListenerContext.Request" />
        <element api="P:System.Net.HttpListenerContext.Response" />
        <element api="P:System.Net.HttpListenerContext.User" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.HttpListenerContext">
      <topicdata name="HttpListenerContext" group="list" subgroup="Methods" typeTopicId="T:System.Net.HttpListenerContext" />
      <apidata name="HttpListenerContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Net.HttpListenerContext.AcceptWebSocketAsync">
          <element api="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)" />
          <element api="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)" />
          <element api="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerContext" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.HttpListenerContext">
      <topicdata name="HttpListenerContext" group="list" subgroup="Properties" typeTopicId="T:System.Net.HttpListenerContext" />
      <apidata name="HttpListenerContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Net.HttpListenerContext.Request" />
        <element api="P:System.Net.HttpListenerContext.Response" />
        <element api="P:System.Net.HttpListenerContext.User" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerContext" />
      </containers>
    </api>
    <api id="Overload:System.Net.HttpListenerContext.AcceptWebSocketAsync">
      <topicdata name="AcceptWebSocketAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AcceptWebSocketAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)" />
        <element api="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)" />
        <element api="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)">
      <topicdata group="api" />
      <apidata name="AcceptWebSocketAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.HttpListenerContext.AcceptWebSocketAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subProtocol">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.WebSockets.HttpListenerWebSocketContext" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="AcceptWebSocketAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.HttpListenerContext.AcceptWebSocketAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subProtocol">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="receiveBufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="keepAliveInterval">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.WebSockets.HttpListenerWebSocketContext" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="AcceptWebSocketAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.HttpListenerContext.AcceptWebSocketAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subProtocol">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keepAliveInterval">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.WebSockets.HttpListenerWebSocketContext" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerContext.Request">
      <topicdata group="api" />
      <apidata name="Request" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Request" />
      <returns>
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerContext.Response">
      <topicdata group="api" />
      <apidata name="Response" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Response" />
      <returns>
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerContext.User">
      <topicdata group="api" />
      <apidata name="User" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_User" />
      <returns>
        <type api="T:System.Security.Principal.IPrincipal" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.HttpListenerException">
      <topicdata group="api" />
      <apidata name="HttpListenerException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.HttpListenerException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Win32Exception" ref="true" />
          <type api="T:System.Runtime.InteropServices.ExternalException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.ComponentModel.Win32Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="Overload:System.Net.HttpListenerException.#ctor">
          <element api="M:System.Net.HttpListenerException.#ctor" />
          <element api="M:System.Net.HttpListenerException.#ctor(System.Int32)" />
          <element api="M:System.Net.HttpListenerException.#ctor(System.Int32,System.String)" />
          <element api="M:System.Net.HttpListenerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Runtime.InteropServices.ExternalException.ToString" />
        <element api="P:System.ComponentModel.Win32Exception.NativeErrorCode" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Net.HttpListenerException.ErrorCode" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.HttpListenerException">
      <topicdata name="HttpListenerException" group="list" subgroup="Methods" typeTopicId="T:System.Net.HttpListenerException" />
      <apidata name="HttpListenerException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.HttpListenerException.#ctor" />
      <elements>
        <element api="M:System.ComponentModel.Win32Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Runtime.InteropServices.ExternalException.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerException" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.HttpListenerException">
      <topicdata name="HttpListenerException" group="list" subgroup="Properties" typeTopicId="T:System.Net.HttpListenerException" />
      <apidata name="HttpListenerException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.HttpListenerException.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Win32Exception.NativeErrorCode" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Net.HttpListenerException.ErrorCode" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerException" />
      </containers>
    </api>
    <api id="Events.T:System.Net.HttpListenerException">
      <topicdata name="HttpListenerException" group="list" subgroup="Events" typeTopicId="T:System.Net.HttpListenerException" />
      <apidata name="HttpListenerException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.HttpListenerException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerException" />
      </containers>
    </api>
    <api id="Overload:System.Net.HttpListenerException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.HttpListenerException.#ctor" />
        <element api="M:System.Net.HttpListenerException.#ctor(System.Int32)" />
        <element api="M:System.Net.HttpListenerException.#ctor(System.Int32,System.String)" />
        <element api="M:System.Net.HttpListenerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.HttpListenerException.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerException.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.HttpListenerException.#ctor" />
      <parameters>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerException.#ctor(System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.HttpListenerException.#ctor" />
      <parameters>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.HttpListenerException.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerException.ErrorCode">
      <topicdata group="api" />
      <apidata name="ErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Runtime.InteropServices.ExternalException.ErrorCode">
          <type api="T:System.Runtime.InteropServices.ExternalException" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ErrorCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.HttpListenerPrefixCollection">
      <topicdata group="api" />
      <apidata name="HttpListenerPrefixCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.String" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.String" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.String" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Net.HttpListenerPrefixCollection.Add(System.String)" />
        <element api="M:System.Net.HttpListenerPrefixCollection.Clear" />
        <element api="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)" />
        <element api="Overload:System.Net.HttpListenerPrefixCollection.CopyTo">
          <element api="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)" />
        </element>
        <element api="M:System.Net.HttpListenerPrefixCollection.GetEnumerator" />
        <element api="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)" />
        <element api="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.HttpListenerPrefixCollection.Count" />
        <element api="P:System.Net.HttpListenerPrefixCollection.IsReadOnly" />
        <element api="P:System.Net.HttpListenerPrefixCollection.IsSynchronized" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.HttpListenerPrefixCollection">
      <topicdata name="HttpListenerPrefixCollection" group="list" subgroup="Methods" typeTopicId="T:System.Net.HttpListenerPrefixCollection" />
      <apidata name="HttpListenerPrefixCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.String" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.String" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.String" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.String" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Net.HttpListenerPrefixCollection.Add(System.String)" />
        <element api="M:System.Net.HttpListenerPrefixCollection.Clear" />
        <element api="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)" />
        <element api="Overload:System.Net.HttpListenerPrefixCollection.CopyTo">
          <element api="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)" />
        </element>
        <element api="M:System.Net.HttpListenerPrefixCollection.GetEnumerator" />
        <element api="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)" />
        <element api="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerPrefixCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.HttpListenerPrefixCollection">
      <topicdata name="HttpListenerPrefixCollection" group="list" subgroup="Properties" typeTopicId="T:System.Net.HttpListenerPrefixCollection" />
      <apidata name="HttpListenerPrefixCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.HttpListenerPrefixCollection.Count" />
        <element api="P:System.Net.HttpListenerPrefixCollection.IsReadOnly" />
        <element api="P:System.Net.HttpListenerPrefixCollection.IsSynchronized" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerPrefixCollection" />
      </containers>
    </api>
    <api id="Overload:System.Net.HttpListenerPrefixCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerPrefixCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="uriPrefix">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerPrefixCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerPrefixCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerPrefixCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="uriPrefix">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerPrefixCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.HttpListenerPrefixCollection.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerPrefixCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.HttpListenerPrefixCollection.CopyTo" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerPrefixCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerPrefixCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerPrefixCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerPrefixCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerPrefixCollection.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerPrefixCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerPrefixCollection.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerPrefixCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="uriPrefix">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerPrefixCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerPrefixCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.HttpListenerRequest">
      <topicdata group="api" />
      <apidata name="HttpListenerRequest" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)" />
        <element api="M:System.Net.HttpListenerRequest.GetClientCertificate" />
        <element api="M:System.Net.HttpListenerRequest.GetClientCertificateAsync" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.HttpListenerRequest.AcceptTypes" />
        <element api="P:System.Net.HttpListenerRequest.ClientCertificateError" />
        <element api="P:System.Net.HttpListenerRequest.ContentEncoding" />
        <element api="P:System.Net.HttpListenerRequest.ContentLength64" />
        <element api="P:System.Net.HttpListenerRequest.ContentType" />
        <element api="P:System.Net.HttpListenerRequest.Cookies" />
        <element api="P:System.Net.HttpListenerRequest.HasEntityBody" />
        <element api="P:System.Net.HttpListenerRequest.Headers" />
        <element api="P:System.Net.HttpListenerRequest.HttpMethod" />
        <element api="P:System.Net.HttpListenerRequest.InputStream" />
        <element api="P:System.Net.HttpListenerRequest.IsAuthenticated" />
        <element api="P:System.Net.HttpListenerRequest.IsLocal" />
        <element api="P:System.Net.HttpListenerRequest.IsSecureConnection" />
        <element api="P:System.Net.HttpListenerRequest.IsWebSocketRequest" />
        <element api="P:System.Net.HttpListenerRequest.KeepAlive" />
        <element api="P:System.Net.HttpListenerRequest.LocalEndPoint" />
        <element api="P:System.Net.HttpListenerRequest.ProtocolVersion" />
        <element api="P:System.Net.HttpListenerRequest.QueryString" />
        <element api="P:System.Net.HttpListenerRequest.RawUrl" />
        <element api="P:System.Net.HttpListenerRequest.RemoteEndPoint" />
        <element api="P:System.Net.HttpListenerRequest.RequestTraceIdentifier" />
        <element api="P:System.Net.HttpListenerRequest.ServiceName" />
        <element api="P:System.Net.HttpListenerRequest.TransportContext" />
        <element api="P:System.Net.HttpListenerRequest.Url" />
        <element api="P:System.Net.HttpListenerRequest.UrlReferrer" />
        <element api="P:System.Net.HttpListenerRequest.UserAgent" />
        <element api="P:System.Net.HttpListenerRequest.UserHostAddress" />
        <element api="P:System.Net.HttpListenerRequest.UserHostName" />
        <element api="P:System.Net.HttpListenerRequest.UserLanguages" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.HttpListenerRequest">
      <topicdata name="HttpListenerRequest" group="list" subgroup="Methods" typeTopicId="T:System.Net.HttpListenerRequest" />
      <apidata name="HttpListenerRequest" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)" />
        <element api="M:System.Net.HttpListenerRequest.GetClientCertificate" />
        <element api="M:System.Net.HttpListenerRequest.GetClientCertificateAsync" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.HttpListenerRequest">
      <topicdata name="HttpListenerRequest" group="list" subgroup="Properties" typeTopicId="T:System.Net.HttpListenerRequest" />
      <apidata name="HttpListenerRequest" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Net.HttpListenerRequest.AcceptTypes" />
        <element api="P:System.Net.HttpListenerRequest.ClientCertificateError" />
        <element api="P:System.Net.HttpListenerRequest.ContentEncoding" />
        <element api="P:System.Net.HttpListenerRequest.ContentLength64" />
        <element api="P:System.Net.HttpListenerRequest.ContentType" />
        <element api="P:System.Net.HttpListenerRequest.Cookies" />
        <element api="P:System.Net.HttpListenerRequest.HasEntityBody" />
        <element api="P:System.Net.HttpListenerRequest.Headers" />
        <element api="P:System.Net.HttpListenerRequest.HttpMethod" />
        <element api="P:System.Net.HttpListenerRequest.InputStream" />
        <element api="P:System.Net.HttpListenerRequest.IsAuthenticated" />
        <element api="P:System.Net.HttpListenerRequest.IsLocal" />
        <element api="P:System.Net.HttpListenerRequest.IsSecureConnection" />
        <element api="P:System.Net.HttpListenerRequest.IsWebSocketRequest" />
        <element api="P:System.Net.HttpListenerRequest.KeepAlive" />
        <element api="P:System.Net.HttpListenerRequest.LocalEndPoint" />
        <element api="P:System.Net.HttpListenerRequest.ProtocolVersion" />
        <element api="P:System.Net.HttpListenerRequest.QueryString" />
        <element api="P:System.Net.HttpListenerRequest.RawUrl" />
        <element api="P:System.Net.HttpListenerRequest.RemoteEndPoint" />
        <element api="P:System.Net.HttpListenerRequest.RequestTraceIdentifier" />
        <element api="P:System.Net.HttpListenerRequest.ServiceName" />
        <element api="P:System.Net.HttpListenerRequest.TransportContext" />
        <element api="P:System.Net.HttpListenerRequest.Url" />
        <element api="P:System.Net.HttpListenerRequest.UrlReferrer" />
        <element api="P:System.Net.HttpListenerRequest.UserAgent" />
        <element api="P:System.Net.HttpListenerRequest.UserHostAddress" />
        <element api="P:System.Net.HttpListenerRequest.UserHostName" />
        <element api="P:System.Net.HttpListenerRequest.UserLanguages" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.AcceptTypes">
      <topicdata group="api" />
      <apidata name="AcceptTypes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AcceptTypes" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginGetClientCertificate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.ClientCertificateError">
      <topicdata group="api" />
      <apidata name="ClientCertificateError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClientCertificateError" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.ContentEncoding">
      <topicdata group="api" />
      <apidata name="ContentEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContentEncoding" />
      <returns>
        <type api="T:System.Text.Encoding" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.ContentLength64">
      <topicdata group="api" />
      <apidata name="ContentLength64" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContentLength64" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.ContentType">
      <topicdata group="api" />
      <apidata name="ContentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContentType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.Cookies">
      <topicdata group="api" />
      <apidata name="Cookies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Cookies" />
      <returns>
        <type api="T:System.Net.CookieCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndGetClientCertificate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerRequest.GetClientCertificate">
      <topicdata group="api" />
      <apidata name="GetClientCertificate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerRequest.GetClientCertificateAsync">
      <topicdata group="api" />
      <apidata name="GetClientCertificateAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Net.HttpListenerRequest.HasEntityBody">
      <topicdata group="api" />
      <apidata name="HasEntityBody" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasEntityBody" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.Headers">
      <topicdata group="api" />
      <apidata name="Headers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Headers" />
      <returns>
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.HttpMethod">
      <topicdata group="api" />
      <apidata name="HttpMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HttpMethod" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.InputStream">
      <topicdata group="api" />
      <apidata name="InputStream" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InputStream" />
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.IsAuthenticated">
      <topicdata group="api" />
      <apidata name="IsAuthenticated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsAuthenticated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.IsLocal">
      <topicdata group="api" />
      <apidata name="IsLocal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsLocal" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.IsSecureConnection">
      <topicdata group="api" />
      <apidata name="IsSecureConnection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSecureConnection" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.IsWebSocketRequest">
      <topicdata group="api" />
      <apidata name="IsWebSocketRequest" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsWebSocketRequest" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.KeepAlive">
      <topicdata group="api" />
      <apidata name="KeepAlive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_KeepAlive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.LocalEndPoint">
      <topicdata group="api" />
      <apidata name="LocalEndPoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LocalEndPoint" />
      <returns>
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.ProtocolVersion">
      <topicdata group="api" />
      <apidata name="ProtocolVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProtocolVersion" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.QueryString">
      <topicdata group="api" />
      <apidata name="QueryString" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_QueryString" />
      <returns>
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.RawUrl">
      <topicdata group="api" />
      <apidata name="RawUrl" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RawUrl" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.RemoteEndPoint">
      <topicdata group="api" />
      <apidata name="RemoteEndPoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RemoteEndPoint" />
      <returns>
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.RequestTraceIdentifier">
      <topicdata group="api" />
      <apidata name="RequestTraceIdentifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RequestTraceIdentifier" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.ServiceName">
      <topicdata group="api" />
      <apidata name="ServiceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ServiceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.TransportContext">
      <topicdata group="api" />
      <apidata name="TransportContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TransportContext" />
      <returns>
        <type api="T:System.Net.TransportContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.Url">
      <topicdata group="api" />
      <apidata name="Url" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Url" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.UrlReferrer">
      <topicdata group="api" />
      <apidata name="UrlReferrer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UrlReferrer" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.UserAgent">
      <topicdata group="api" />
      <apidata name="UserAgent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserAgent" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.UserHostAddress">
      <topicdata group="api" />
      <apidata name="UserHostAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserHostAddress" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.UserHostName">
      <topicdata group="api" />
      <apidata name="UserHostName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserHostName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerRequest.UserLanguages">
      <topicdata group="api" />
      <apidata name="UserLanguages" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserLanguages" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerRequest" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.HttpListenerResponse">
      <topicdata group="api" />
      <apidata name="HttpListenerResponse" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Net.HttpListenerResponse.Abort" />
        <element api="M:System.Net.HttpListenerResponse.AddHeader(System.String,System.String)" />
        <element api="M:System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)" />
        <element api="M:System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)" />
        <element api="Overload:System.Net.HttpListenerResponse.Close">
          <element api="M:System.Net.HttpListenerResponse.Close" />
          <element api="M:System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)" />
        </element>
        <element api="M:System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)" />
        <element api="M:System.Net.HttpListenerResponse.Redirect(System.String)" />
        <element api="M:System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)" />
        <element api="M:System.Net.HttpListenerResponse.System#IDisposable#Dispose" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.HttpListenerResponse.ContentEncoding" />
        <element api="P:System.Net.HttpListenerResponse.ContentLength64" />
        <element api="P:System.Net.HttpListenerResponse.ContentType" />
        <element api="P:System.Net.HttpListenerResponse.Cookies" />
        <element api="P:System.Net.HttpListenerResponse.Headers" />
        <element api="P:System.Net.HttpListenerResponse.KeepAlive" />
        <element api="P:System.Net.HttpListenerResponse.OutputStream" />
        <element api="P:System.Net.HttpListenerResponse.ProtocolVersion" />
        <element api="P:System.Net.HttpListenerResponse.RedirectLocation" />
        <element api="P:System.Net.HttpListenerResponse.SendChunked" />
        <element api="P:System.Net.HttpListenerResponse.StatusCode" />
        <element api="P:System.Net.HttpListenerResponse.StatusDescription" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.HttpListenerResponse">
      <topicdata name="HttpListenerResponse" group="list" subgroup="Methods" typeTopicId="T:System.Net.HttpListenerResponse" />
      <apidata name="HttpListenerResponse" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Net.HttpListenerResponse.Abort" />
        <element api="M:System.Net.HttpListenerResponse.AddHeader(System.String,System.String)" />
        <element api="M:System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)" />
        <element api="M:System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)" />
        <element api="Overload:System.Net.HttpListenerResponse.Close">
          <element api="M:System.Net.HttpListenerResponse.Close" />
          <element api="M:System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)" />
        </element>
        <element api="M:System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)" />
        <element api="M:System.Net.HttpListenerResponse.Redirect(System.String)" />
        <element api="M:System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)" />
        <element api="M:System.Net.HttpListenerResponse.System#IDisposable#Dispose" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.HttpListenerResponse">
      <topicdata name="HttpListenerResponse" group="list" subgroup="Properties" typeTopicId="T:System.Net.HttpListenerResponse" />
      <apidata name="HttpListenerResponse" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Net.HttpListenerResponse.ContentEncoding" />
        <element api="P:System.Net.HttpListenerResponse.ContentLength64" />
        <element api="P:System.Net.HttpListenerResponse.ContentType" />
        <element api="P:System.Net.HttpListenerResponse.Cookies" />
        <element api="P:System.Net.HttpListenerResponse.Headers" />
        <element api="P:System.Net.HttpListenerResponse.KeepAlive" />
        <element api="P:System.Net.HttpListenerResponse.OutputStream" />
        <element api="P:System.Net.HttpListenerResponse.ProtocolVersion" />
        <element api="P:System.Net.HttpListenerResponse.RedirectLocation" />
        <element api="P:System.Net.HttpListenerResponse.SendChunked" />
        <element api="P:System.Net.HttpListenerResponse.StatusCode" />
        <element api="P:System.Net.HttpListenerResponse.StatusDescription" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" />
      </containers>
    </api>
    <api id="Overload:System.Net.HttpListenerResponse.Close">
      <topicdata name="Close" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Close" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.HttpListenerResponse.Close" />
        <element api="M:System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerResponse.Abort">
      <topicdata group="api" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerResponse.AddHeader(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AddHeader" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)">
      <topicdata group="api" />
      <apidata name="AppendCookie" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cookie">
          <type api="T:System.Net.Cookie" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AppendHeader" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerResponse.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.HttpListenerResponse.Close" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.HttpListenerResponse.Close" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="responseEntity">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="willBlock">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerResponse.ContentEncoding">
      <topicdata group="api" />
      <apidata name="ContentEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentEncoding" />
      <setter name="set_ContentEncoding" />
      <returns>
        <type api="T:System.Text.Encoding" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerResponse.ContentLength64">
      <topicdata group="api" />
      <apidata name="ContentLength64" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentLength64" />
      <setter name="set_ContentLength64" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerResponse.ContentType">
      <topicdata group="api" />
      <apidata name="ContentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentType" />
      <setter name="set_ContentType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerResponse.Cookies">
      <topicdata group="api" />
      <apidata name="Cookies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Cookies" />
      <setter name="set_Cookies" />
      <returns>
        <type api="T:System.Net.CookieCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)">
      <topicdata group="api" />
      <apidata name="CopyFrom" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="templateResponse">
          <type api="T:System.Net.HttpListenerResponse" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerResponse.Headers">
      <topicdata group="api" />
      <apidata name="Headers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Headers" />
      <setter name="set_Headers" />
      <returns>
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerResponse.KeepAlive">
      <topicdata group="api" />
      <apidata name="KeepAlive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeepAlive" />
      <setter name="set_KeepAlive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerResponse.OutputStream">
      <topicdata group="api" />
      <apidata name="OutputStream" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OutputStream" />
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerResponse.ProtocolVersion">
      <topicdata group="api" />
      <apidata name="ProtocolVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProtocolVersion" />
      <setter name="set_ProtocolVersion" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerResponse.Redirect(System.String)">
      <topicdata group="api" />
      <apidata name="Redirect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="url">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerResponse.RedirectLocation">
      <topicdata group="api" />
      <apidata name="RedirectLocation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RedirectLocation" />
      <setter name="set_RedirectLocation" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerResponse.SendChunked">
      <topicdata group="api" />
      <apidata name="SendChunked" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SendChunked" />
      <setter name="set_SendChunked" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)">
      <topicdata group="api" />
      <apidata name="SetCookie" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cookie">
          <type api="T:System.Net.Cookie" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerResponse.StatusCode">
      <topicdata group="api" />
      <apidata name="StatusCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_StatusCode" />
      <setter name="set_StatusCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerResponse.StatusDescription">
      <topicdata group="api" />
      <apidata name="StatusDescription" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_StatusDescription" />
      <setter name="set_StatusDescription" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpListenerResponse.System#IDisposable#Dispose">
      <topicdata group="api" eiiName="IDisposable.Dispose" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerResponse" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.HttpListenerTimeoutManager">
      <topicdata group="api" />
      <apidata name="HttpListenerTimeoutManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.HttpListenerTimeoutManager.DrainEntityBody" />
        <element api="P:System.Net.HttpListenerTimeoutManager.EntityBody" />
        <element api="P:System.Net.HttpListenerTimeoutManager.HeaderWait" />
        <element api="P:System.Net.HttpListenerTimeoutManager.IdleConnection" />
        <element api="P:System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond" />
        <element api="P:System.Net.HttpListenerTimeoutManager.RequestQueue" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.HttpListenerTimeoutManager">
      <topicdata name="HttpListenerTimeoutManager" group="list" subgroup="Methods" typeTopicId="T:System.Net.HttpListenerTimeoutManager" />
      <apidata name="HttpListenerTimeoutManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerTimeoutManager" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.HttpListenerTimeoutManager">
      <topicdata name="HttpListenerTimeoutManager" group="list" subgroup="Properties" typeTopicId="T:System.Net.HttpListenerTimeoutManager" />
      <apidata name="HttpListenerTimeoutManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.HttpListenerTimeoutManager.DrainEntityBody" />
        <element api="P:System.Net.HttpListenerTimeoutManager.EntityBody" />
        <element api="P:System.Net.HttpListenerTimeoutManager.HeaderWait" />
        <element api="P:System.Net.HttpListenerTimeoutManager.IdleConnection" />
        <element api="P:System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond" />
        <element api="P:System.Net.HttpListenerTimeoutManager.RequestQueue" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerTimeoutManager" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerTimeoutManager.DrainEntityBody">
      <topicdata group="api" />
      <apidata name="DrainEntityBody" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DrainEntityBody" />
      <setter name="set_DrainEntityBody" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerTimeoutManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerTimeoutManager.EntityBody">
      <topicdata group="api" />
      <apidata name="EntityBody" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EntityBody" />
      <setter name="set_EntityBody" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerTimeoutManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerTimeoutManager.HeaderWait">
      <topicdata group="api" />
      <apidata name="HeaderWait" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HeaderWait" />
      <setter name="set_HeaderWait" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerTimeoutManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerTimeoutManager.IdleConnection">
      <topicdata group="api" />
      <apidata name="IdleConnection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IdleConnection" />
      <setter name="set_IdleConnection" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerTimeoutManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond">
      <topicdata group="api" />
      <apidata name="MinSendBytesPerSecond" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinSendBytesPerSecond" />
      <setter name="set_MinSendBytesPerSecond" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerTimeoutManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpListenerTimeoutManager.RequestQueue">
      <topicdata group="api" />
      <apidata name="RequestQueue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RequestQueue" />
      <setter name="set_RequestQueue" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpListenerTimeoutManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.HttpRequestHeader">
      <topicdata group="api" />
      <apidata name="HttpRequestHeader" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.HttpRequestHeader.CacheControl" />
        <element api="F:System.Net.HttpRequestHeader.Connection" />
        <element api="F:System.Net.HttpRequestHeader.Date" />
        <element api="F:System.Net.HttpRequestHeader.KeepAlive" />
        <element api="F:System.Net.HttpRequestHeader.Pragma" />
        <element api="F:System.Net.HttpRequestHeader.Trailer" />
        <element api="F:System.Net.HttpRequestHeader.TransferEncoding" />
        <element api="F:System.Net.HttpRequestHeader.Upgrade" />
        <element api="F:System.Net.HttpRequestHeader.Via" />
        <element api="F:System.Net.HttpRequestHeader.Warning" />
        <element api="F:System.Net.HttpRequestHeader.Allow" />
        <element api="F:System.Net.HttpRequestHeader.ContentLength" />
        <element api="F:System.Net.HttpRequestHeader.ContentType" />
        <element api="F:System.Net.HttpRequestHeader.ContentEncoding" />
        <element api="F:System.Net.HttpRequestHeader.ContentLanguage" />
        <element api="F:System.Net.HttpRequestHeader.ContentLocation" />
        <element api="F:System.Net.HttpRequestHeader.ContentMd5" />
        <element api="F:System.Net.HttpRequestHeader.ContentRange" />
        <element api="F:System.Net.HttpRequestHeader.Expires" />
        <element api="F:System.Net.HttpRequestHeader.LastModified" />
        <element api="F:System.Net.HttpRequestHeader.Accept" />
        <element api="F:System.Net.HttpRequestHeader.AcceptCharset" />
        <element api="F:System.Net.HttpRequestHeader.AcceptEncoding" />
        <element api="F:System.Net.HttpRequestHeader.AcceptLanguage" />
        <element api="F:System.Net.HttpRequestHeader.Authorization" />
        <element api="F:System.Net.HttpRequestHeader.Cookie" />
        <element api="F:System.Net.HttpRequestHeader.Expect" />
        <element api="F:System.Net.HttpRequestHeader.From" />
        <element api="F:System.Net.HttpRequestHeader.Host" />
        <element api="F:System.Net.HttpRequestHeader.IfMatch" />
        <element api="F:System.Net.HttpRequestHeader.IfModifiedSince" />
        <element api="F:System.Net.HttpRequestHeader.IfNoneMatch" />
        <element api="F:System.Net.HttpRequestHeader.IfRange" />
        <element api="F:System.Net.HttpRequestHeader.IfUnmodifiedSince" />
        <element api="F:System.Net.HttpRequestHeader.MaxForwards" />
        <element api="F:System.Net.HttpRequestHeader.ProxyAuthorization" />
        <element api="F:System.Net.HttpRequestHeader.Referer" />
        <element api="F:System.Net.HttpRequestHeader.Range" />
        <element api="F:System.Net.HttpRequestHeader.Te" />
        <element api="F:System.Net.HttpRequestHeader.Translate" />
        <element api="F:System.Net.HttpRequestHeader.UserAgent" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.Accept">
      <topicdata group="api" notopic="" />
      <apidata name="Accept" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>20</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.AcceptCharset">
      <topicdata group="api" notopic="" />
      <apidata name="AcceptCharset" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>21</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.AcceptEncoding">
      <topicdata group="api" notopic="" />
      <apidata name="AcceptEncoding" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>22</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.AcceptLanguage">
      <topicdata group="api" notopic="" />
      <apidata name="AcceptLanguage" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>23</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.Allow">
      <topicdata group="api" notopic="" />
      <apidata name="Allow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.Authorization">
      <topicdata group="api" notopic="" />
      <apidata name="Authorization" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>24</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.CacheControl">
      <topicdata group="api" notopic="" />
      <apidata name="CacheControl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.Connection">
      <topicdata group="api" notopic="" />
      <apidata name="Connection" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.ContentEncoding">
      <topicdata group="api" notopic="" />
      <apidata name="ContentEncoding" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.ContentLanguage">
      <topicdata group="api" notopic="" />
      <apidata name="ContentLanguage" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>14</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.ContentLength">
      <topicdata group="api" notopic="" />
      <apidata name="ContentLength" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.ContentLocation">
      <topicdata group="api" notopic="" />
      <apidata name="ContentLocation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.ContentMd5">
      <topicdata group="api" notopic="" />
      <apidata name="ContentMd5" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.ContentRange">
      <topicdata group="api" notopic="" />
      <apidata name="ContentRange" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>17</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.ContentType">
      <topicdata group="api" notopic="" />
      <apidata name="ContentType" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.Cookie">
      <topicdata group="api" notopic="" />
      <apidata name="Cookie" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>25</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.Date">
      <topicdata group="api" notopic="" />
      <apidata name="Date" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.Expect">
      <topicdata group="api" notopic="" />
      <apidata name="Expect" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>26</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.Expires">
      <topicdata group="api" notopic="" />
      <apidata name="Expires" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>18</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.From">
      <topicdata group="api" notopic="" />
      <apidata name="From" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>27</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.Host">
      <topicdata group="api" notopic="" />
      <apidata name="Host" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>28</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.IfMatch">
      <topicdata group="api" notopic="" />
      <apidata name="IfMatch" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>29</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.IfModifiedSince">
      <topicdata group="api" notopic="" />
      <apidata name="IfModifiedSince" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>30</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.IfNoneMatch">
      <topicdata group="api" notopic="" />
      <apidata name="IfNoneMatch" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>31</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.IfRange">
      <topicdata group="api" notopic="" />
      <apidata name="IfRange" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.IfUnmodifiedSince">
      <topicdata group="api" notopic="" />
      <apidata name="IfUnmodifiedSince" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>33</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.KeepAlive">
      <topicdata group="api" notopic="" />
      <apidata name="KeepAlive" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.LastModified">
      <topicdata group="api" notopic="" />
      <apidata name="LastModified" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>19</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.MaxForwards">
      <topicdata group="api" notopic="" />
      <apidata name="MaxForwards" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>34</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.Pragma">
      <topicdata group="api" notopic="" />
      <apidata name="Pragma" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.ProxyAuthorization">
      <topicdata group="api" notopic="" />
      <apidata name="ProxyAuthorization" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>35</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.Range">
      <topicdata group="api" notopic="" />
      <apidata name="Range" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>37</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.Referer">
      <topicdata group="api" notopic="" />
      <apidata name="Referer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>36</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.Te">
      <topicdata group="api" notopic="" />
      <apidata name="Te" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>38</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.Trailer">
      <topicdata group="api" notopic="" />
      <apidata name="Trailer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.TransferEncoding">
      <topicdata group="api" notopic="" />
      <apidata name="TransferEncoding" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.Translate">
      <topicdata group="api" notopic="" />
      <apidata name="Translate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>39</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.Upgrade">
      <topicdata group="api" notopic="" />
      <apidata name="Upgrade" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.UserAgent">
      <topicdata group="api" notopic="" />
      <apidata name="UserAgent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>40</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.Via">
      <topicdata group="api" notopic="" />
      <apidata name="Via" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpRequestHeader.Warning">
      <topicdata group="api" notopic="" />
      <apidata name="Warning" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpRequestHeader" ref="false" />
      </containers>
    </api>
    <api id="T:System.Net.HttpResponseHeader">
      <topicdata group="api" />
      <apidata name="HttpResponseHeader" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.HttpResponseHeader.CacheControl" />
        <element api="F:System.Net.HttpResponseHeader.Connection" />
        <element api="F:System.Net.HttpResponseHeader.Date" />
        <element api="F:System.Net.HttpResponseHeader.KeepAlive" />
        <element api="F:System.Net.HttpResponseHeader.Pragma" />
        <element api="F:System.Net.HttpResponseHeader.Trailer" />
        <element api="F:System.Net.HttpResponseHeader.TransferEncoding" />
        <element api="F:System.Net.HttpResponseHeader.Upgrade" />
        <element api="F:System.Net.HttpResponseHeader.Via" />
        <element api="F:System.Net.HttpResponseHeader.Warning" />
        <element api="F:System.Net.HttpResponseHeader.Allow" />
        <element api="F:System.Net.HttpResponseHeader.ContentLength" />
        <element api="F:System.Net.HttpResponseHeader.ContentType" />
        <element api="F:System.Net.HttpResponseHeader.ContentEncoding" />
        <element api="F:System.Net.HttpResponseHeader.ContentLanguage" />
        <element api="F:System.Net.HttpResponseHeader.ContentLocation" />
        <element api="F:System.Net.HttpResponseHeader.ContentMd5" />
        <element api="F:System.Net.HttpResponseHeader.ContentRange" />
        <element api="F:System.Net.HttpResponseHeader.Expires" />
        <element api="F:System.Net.HttpResponseHeader.LastModified" />
        <element api="F:System.Net.HttpResponseHeader.AcceptRanges" />
        <element api="F:System.Net.HttpResponseHeader.Age" />
        <element api="F:System.Net.HttpResponseHeader.ETag" />
        <element api="F:System.Net.HttpResponseHeader.Location" />
        <element api="F:System.Net.HttpResponseHeader.ProxyAuthenticate" />
        <element api="F:System.Net.HttpResponseHeader.RetryAfter" />
        <element api="F:System.Net.HttpResponseHeader.Server" />
        <element api="F:System.Net.HttpResponseHeader.SetCookie" />
        <element api="F:System.Net.HttpResponseHeader.Vary" />
        <element api="F:System.Net.HttpResponseHeader.WwwAuthenticate" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.AcceptRanges">
      <topicdata group="api" notopic="" />
      <apidata name="AcceptRanges" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>20</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.Age">
      <topicdata group="api" notopic="" />
      <apidata name="Age" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>21</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.Allow">
      <topicdata group="api" notopic="" />
      <apidata name="Allow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.CacheControl">
      <topicdata group="api" notopic="" />
      <apidata name="CacheControl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.Connection">
      <topicdata group="api" notopic="" />
      <apidata name="Connection" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.ContentEncoding">
      <topicdata group="api" notopic="" />
      <apidata name="ContentEncoding" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.ContentLanguage">
      <topicdata group="api" notopic="" />
      <apidata name="ContentLanguage" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>14</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.ContentLength">
      <topicdata group="api" notopic="" />
      <apidata name="ContentLength" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.ContentLocation">
      <topicdata group="api" notopic="" />
      <apidata name="ContentLocation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.ContentMd5">
      <topicdata group="api" notopic="" />
      <apidata name="ContentMd5" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.ContentRange">
      <topicdata group="api" notopic="" />
      <apidata name="ContentRange" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>17</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.ContentType">
      <topicdata group="api" notopic="" />
      <apidata name="ContentType" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.Date">
      <topicdata group="api" notopic="" />
      <apidata name="Date" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.ETag">
      <topicdata group="api" notopic="" />
      <apidata name="ETag" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>22</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.Expires">
      <topicdata group="api" notopic="" />
      <apidata name="Expires" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>18</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.KeepAlive">
      <topicdata group="api" notopic="" />
      <apidata name="KeepAlive" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.LastModified">
      <topicdata group="api" notopic="" />
      <apidata name="LastModified" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>19</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.Location">
      <topicdata group="api" notopic="" />
      <apidata name="Location" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>23</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.Pragma">
      <topicdata group="api" notopic="" />
      <apidata name="Pragma" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.ProxyAuthenticate">
      <topicdata group="api" notopic="" />
      <apidata name="ProxyAuthenticate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>24</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.RetryAfter">
      <topicdata group="api" notopic="" />
      <apidata name="RetryAfter" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>25</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.Server">
      <topicdata group="api" notopic="" />
      <apidata name="Server" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>26</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.SetCookie">
      <topicdata group="api" notopic="" />
      <apidata name="SetCookie" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>27</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.Trailer">
      <topicdata group="api" notopic="" />
      <apidata name="Trailer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.TransferEncoding">
      <topicdata group="api" notopic="" />
      <apidata name="TransferEncoding" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.Upgrade">
      <topicdata group="api" notopic="" />
      <apidata name="Upgrade" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.Vary">
      <topicdata group="api" notopic="" />
      <apidata name="Vary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>28</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.Via">
      <topicdata group="api" notopic="" />
      <apidata name="Via" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.Warning">
      <topicdata group="api" notopic="" />
      <apidata name="Warning" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpResponseHeader.WwwAuthenticate">
      <topicdata group="api" notopic="" />
      <apidata name="WwwAuthenticate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </returns>
      <value>29</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpResponseHeader" ref="false" />
      </containers>
    </api>
    <api id="T:System.Net.HttpStatusCode">
      <topicdata group="api" />
      <apidata name="HttpStatusCode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.HttpStatusCode.Continue" />
        <element api="F:System.Net.HttpStatusCode.SwitchingProtocols" />
        <element api="F:System.Net.HttpStatusCode.OK" />
        <element api="F:System.Net.HttpStatusCode.Created" />
        <element api="F:System.Net.HttpStatusCode.Accepted" />
        <element api="F:System.Net.HttpStatusCode.NonAuthoritativeInformation" />
        <element api="F:System.Net.HttpStatusCode.NoContent" />
        <element api="F:System.Net.HttpStatusCode.ResetContent" />
        <element api="F:System.Net.HttpStatusCode.PartialContent" />
        <element api="F:System.Net.HttpStatusCode.MultipleChoices" />
        <element api="F:System.Net.HttpStatusCode.Ambiguous" />
        <element api="F:System.Net.HttpStatusCode.MovedPermanently" />
        <element api="F:System.Net.HttpStatusCode.Moved" />
        <element api="F:System.Net.HttpStatusCode.Found" />
        <element api="F:System.Net.HttpStatusCode.Redirect" />
        <element api="F:System.Net.HttpStatusCode.SeeOther" />
        <element api="F:System.Net.HttpStatusCode.RedirectMethod" />
        <element api="F:System.Net.HttpStatusCode.NotModified" />
        <element api="F:System.Net.HttpStatusCode.UseProxy" />
        <element api="F:System.Net.HttpStatusCode.Unused" />
        <element api="F:System.Net.HttpStatusCode.TemporaryRedirect" />
        <element api="F:System.Net.HttpStatusCode.RedirectKeepVerb" />
        <element api="F:System.Net.HttpStatusCode.BadRequest" />
        <element api="F:System.Net.HttpStatusCode.Unauthorized" />
        <element api="F:System.Net.HttpStatusCode.PaymentRequired" />
        <element api="F:System.Net.HttpStatusCode.Forbidden" />
        <element api="F:System.Net.HttpStatusCode.NotFound" />
        <element api="F:System.Net.HttpStatusCode.MethodNotAllowed" />
        <element api="F:System.Net.HttpStatusCode.NotAcceptable" />
        <element api="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired" />
        <element api="F:System.Net.HttpStatusCode.RequestTimeout" />
        <element api="F:System.Net.HttpStatusCode.Conflict" />
        <element api="F:System.Net.HttpStatusCode.Gone" />
        <element api="F:System.Net.HttpStatusCode.LengthRequired" />
        <element api="F:System.Net.HttpStatusCode.PreconditionFailed" />
        <element api="F:System.Net.HttpStatusCode.RequestEntityTooLarge" />
        <element api="F:System.Net.HttpStatusCode.RequestUriTooLong" />
        <element api="F:System.Net.HttpStatusCode.UnsupportedMediaType" />
        <element api="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable" />
        <element api="F:System.Net.HttpStatusCode.ExpectationFailed" />
        <element api="F:System.Net.HttpStatusCode.UpgradeRequired" />
        <element api="F:System.Net.HttpStatusCode.InternalServerError" />
        <element api="F:System.Net.HttpStatusCode.NotImplemented" />
        <element api="F:System.Net.HttpStatusCode.BadGateway" />
        <element api="F:System.Net.HttpStatusCode.ServiceUnavailable" />
        <element api="F:System.Net.HttpStatusCode.GatewayTimeout" />
        <element api="F:System.Net.HttpStatusCode.HttpVersionNotSupported" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.Accepted">
      <topicdata group="api" notopic="" />
      <apidata name="Accepted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>202</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.Ambiguous">
      <topicdata group="api" notopic="" />
      <apidata name="Ambiguous" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>300</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.BadGateway">
      <topicdata group="api" notopic="" />
      <apidata name="BadGateway" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>502</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.BadRequest">
      <topicdata group="api" notopic="" />
      <apidata name="BadRequest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>400</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.Conflict">
      <topicdata group="api" notopic="" />
      <apidata name="Conflict" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>409</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.Continue">
      <topicdata group="api" notopic="" />
      <apidata name="Continue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>100</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.Created">
      <topicdata group="api" notopic="" />
      <apidata name="Created" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>201</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.ExpectationFailed">
      <topicdata group="api" notopic="" />
      <apidata name="ExpectationFailed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>417</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.Forbidden">
      <topicdata group="api" notopic="" />
      <apidata name="Forbidden" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>403</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.Found">
      <topicdata group="api" notopic="" />
      <apidata name="Found" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>302</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.GatewayTimeout">
      <topicdata group="api" notopic="" />
      <apidata name="GatewayTimeout" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>504</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.Gone">
      <topicdata group="api" notopic="" />
      <apidata name="Gone" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>410</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.HttpVersionNotSupported">
      <topicdata group="api" notopic="" />
      <apidata name="HttpVersionNotSupported" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>505</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.InternalServerError">
      <topicdata group="api" notopic="" />
      <apidata name="InternalServerError" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>500</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.LengthRequired">
      <topicdata group="api" notopic="" />
      <apidata name="LengthRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>411</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.MethodNotAllowed">
      <topicdata group="api" notopic="" />
      <apidata name="MethodNotAllowed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>405</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.Moved">
      <topicdata group="api" notopic="" />
      <apidata name="Moved" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>301</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.MovedPermanently">
      <topicdata group="api" notopic="" />
      <apidata name="MovedPermanently" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>301</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.MultipleChoices">
      <topicdata group="api" notopic="" />
      <apidata name="MultipleChoices" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>300</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.NoContent">
      <topicdata group="api" notopic="" />
      <apidata name="NoContent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>204</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.NonAuthoritativeInformation">
      <topicdata group="api" notopic="" />
      <apidata name="NonAuthoritativeInformation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>203</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.NotAcceptable">
      <topicdata group="api" notopic="" />
      <apidata name="NotAcceptable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>406</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.NotFound">
      <topicdata group="api" notopic="" />
      <apidata name="NotFound" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>404</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.NotImplemented">
      <topicdata group="api" notopic="" />
      <apidata name="NotImplemented" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>501</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.NotModified">
      <topicdata group="api" notopic="" />
      <apidata name="NotModified" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>304</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.OK">
      <topicdata group="api" notopic="" />
      <apidata name="OK" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>200</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.PartialContent">
      <topicdata group="api" notopic="" />
      <apidata name="PartialContent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>206</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.PaymentRequired">
      <topicdata group="api" notopic="" />
      <apidata name="PaymentRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>402</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.PreconditionFailed">
      <topicdata group="api" notopic="" />
      <apidata name="PreconditionFailed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>412</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired">
      <topicdata group="api" notopic="" />
      <apidata name="ProxyAuthenticationRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>407</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.Redirect">
      <topicdata group="api" notopic="" />
      <apidata name="Redirect" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>302</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.RedirectKeepVerb">
      <topicdata group="api" notopic="" />
      <apidata name="RedirectKeepVerb" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>307</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.RedirectMethod">
      <topicdata group="api" notopic="" />
      <apidata name="RedirectMethod" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>303</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable">
      <topicdata group="api" notopic="" />
      <apidata name="RequestedRangeNotSatisfiable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>416</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.RequestEntityTooLarge">
      <topicdata group="api" notopic="" />
      <apidata name="RequestEntityTooLarge" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>413</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.RequestTimeout">
      <topicdata group="api" notopic="" />
      <apidata name="RequestTimeout" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>408</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.RequestUriTooLong">
      <topicdata group="api" notopic="" />
      <apidata name="RequestUriTooLong" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>414</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.ResetContent">
      <topicdata group="api" notopic="" />
      <apidata name="ResetContent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>205</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.SeeOther">
      <topicdata group="api" notopic="" />
      <apidata name="SeeOther" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>303</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.ServiceUnavailable">
      <topicdata group="api" notopic="" />
      <apidata name="ServiceUnavailable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>503</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.SwitchingProtocols">
      <topicdata group="api" notopic="" />
      <apidata name="SwitchingProtocols" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>101</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.TemporaryRedirect">
      <topicdata group="api" notopic="" />
      <apidata name="TemporaryRedirect" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>307</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.Unauthorized">
      <topicdata group="api" notopic="" />
      <apidata name="Unauthorized" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>401</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.UnsupportedMediaType">
      <topicdata group="api" notopic="" />
      <apidata name="UnsupportedMediaType" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>415</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.Unused">
      <topicdata group="api" notopic="" />
      <apidata name="Unused" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>306</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.UpgradeRequired">
      <topicdata group="api" notopic="" />
      <apidata name="UpgradeRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>426</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.HttpStatusCode.UseProxy">
      <topicdata group="api" notopic="" />
      <apidata name="UseProxy" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <value>305</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </containers>
    </api>
    <api id="T:System.Net.HttpVersion">
      <topicdata group="api" />
      <apidata name="HttpVersion" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.HttpVersion.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Net.HttpVersion.Version10" />
        <element api="F:System.Net.HttpVersion.Version11" />
        <element api="M:System.Net.HttpVersion.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.HttpVersion">
      <topicdata name="HttpVersion" group="list" subgroup="Methods" typeTopicId="T:System.Net.HttpVersion" />
      <apidata name="HttpVersion" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.HttpVersion.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpVersion" />
      </containers>
    </api>
    <api id="Fields.T:System.Net.HttpVersion">
      <topicdata name="HttpVersion" group="list" subgroup="Fields" typeTopicId="T:System.Net.HttpVersion" />
      <apidata name="HttpVersion" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.HttpVersion.#ctor" />
      <elements>
        <element api="F:System.Net.HttpVersion.Version10" />
        <element api="F:System.Net.HttpVersion.Version11" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpVersion" />
      </containers>
    </api>
    <api id="M:System.Net.HttpVersion.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpVersion" ref="true" />
      </containers>
    </api>
    <api id="F:System.Net.HttpVersion.Version10">
      <topicdata group="api" />
      <apidata name="Version10" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpVersion" ref="true" />
      </containers>
    </api>
    <api id="F:System.Net.HttpVersion.Version11">
      <topicdata group="api" />
      <apidata name="Version11" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpVersion" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.HttpWebRequest">
      <topicdata group="api" />
      <apidata name="HttpWebRequest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Net.WebRequest" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.HttpWebRequest.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.HttpWebRequest.Abort" />
        <element api="Overload:System.Net.HttpWebRequest.AddRange">
          <element api="M:System.Net.HttpWebRequest.AddRange(System.Int32)" />
          <element api="M:System.Net.HttpWebRequest.AddRange(System.Int64)" />
          <element api="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)" />
          <element api="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)" />
          <element api="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)" />
          <element api="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)" />
          <element api="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)" />
          <element api="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)" />
        </element>
        <element api="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
        <element api="Overload:System.Net.HttpWebRequest.EndGetRequestStream">
          <element api="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)" />
          <element api="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)" />
        </element>
        <element api="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)" />
        <element api="M:System.Net.HttpWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Net.HttpWebRequest.GetRequestStream">
          <element api="M:System.Net.HttpWebRequest.GetRequestStream" />
          <element api="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)" />
        </element>
        <element api="M:System.Net.HttpWebRequest.GetResponse" />
        <element api="M:System.Net.HttpWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.WebRequest.GetRequestStreamAsync" />
        <element api="M:System.Net.WebRequest.GetResponseAsync" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.HttpWebRequest.Accept" />
        <element api="P:System.Net.HttpWebRequest.Address" />
        <element api="P:System.Net.HttpWebRequest.AllowAutoRedirect" />
        <element api="P:System.Net.HttpWebRequest.AllowReadStreamBuffering" />
        <element api="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />
        <element api="P:System.Net.HttpWebRequest.AutomaticDecompression" />
        <element api="P:System.Net.HttpWebRequest.ClientCertificates" />
        <element api="P:System.Net.HttpWebRequest.Connection" />
        <element api="P:System.Net.HttpWebRequest.ConnectionGroupName" />
        <element api="P:System.Net.HttpWebRequest.ContentLength" />
        <element api="P:System.Net.HttpWebRequest.ContentType" />
        <element api="P:System.Net.HttpWebRequest.ContinueDelegate" />
        <element api="P:System.Net.HttpWebRequest.ContinueTimeout" />
        <element api="P:System.Net.HttpWebRequest.CookieContainer" />
        <element api="P:System.Net.HttpWebRequest.Credentials" />
        <element api="P:System.Net.HttpWebRequest.Date" />
        <element api="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
        <element api="P:System.Net.HttpWebRequest.DefaultMaximumErrorResponseLength" />
        <element api="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength" />
        <element api="P:System.Net.HttpWebRequest.Expect" />
        <element api="P:System.Net.HttpWebRequest.HaveResponse" />
        <element api="P:System.Net.HttpWebRequest.Headers" />
        <element api="P:System.Net.HttpWebRequest.Host" />
        <element api="P:System.Net.HttpWebRequest.IfModifiedSince" />
        <element api="P:System.Net.HttpWebRequest.KeepAlive" />
        <element api="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections" />
        <element api="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" />
        <element api="P:System.Net.HttpWebRequest.MediaType" />
        <element api="P:System.Net.HttpWebRequest.Method" />
        <element api="P:System.Net.HttpWebRequest.Pipelined" />
        <element api="P:System.Net.HttpWebRequest.PreAuthenticate" />
        <element api="P:System.Net.HttpWebRequest.ProtocolVersion" />
        <element api="P:System.Net.HttpWebRequest.Proxy" />
        <element api="P:System.Net.HttpWebRequest.ReadWriteTimeout" />
        <element api="P:System.Net.HttpWebRequest.Referer" />
        <element api="P:System.Net.HttpWebRequest.RequestUri" />
        <element api="P:System.Net.HttpWebRequest.SendChunked" />
        <element api="P:System.Net.HttpWebRequest.ServerCertificateValidationCallback" />
        <element api="P:System.Net.HttpWebRequest.ServicePoint" />
        <element api="P:System.Net.HttpWebRequest.SupportsCookieContainer" />
        <element api="P:System.Net.HttpWebRequest.Timeout" />
        <element api="P:System.Net.HttpWebRequest.TransferEncoding" />
        <element api="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing" />
        <element api="P:System.Net.HttpWebRequest.UseDefaultCredentials" />
        <element api="P:System.Net.HttpWebRequest.UserAgent" />
        <element api="P:System.Net.WebRequest.AuthenticationLevel" />
        <element api="P:System.Net.WebRequest.CachePolicy" />
        <element api="P:System.Net.WebRequest.ImpersonationLevel" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.HttpWebRequest">
      <topicdata name="HttpWebRequest" group="list" subgroup="Methods" typeTopicId="T:System.Net.HttpWebRequest" />
      <apidata name="HttpWebRequest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.HttpWebRequest.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Net.HttpWebRequest.Abort" />
        <element api="Overload:System.Net.HttpWebRequest.AddRange">
          <element api="M:System.Net.HttpWebRequest.AddRange(System.Int32)" />
          <element api="M:System.Net.HttpWebRequest.AddRange(System.Int64)" />
          <element api="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)" />
          <element api="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)" />
          <element api="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)" />
          <element api="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)" />
          <element api="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)" />
          <element api="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)" />
        </element>
        <element api="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
        <element api="Overload:System.Net.HttpWebRequest.EndGetRequestStream">
          <element api="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)" />
          <element api="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)" />
        </element>
        <element api="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)" />
        <element api="M:System.Net.HttpWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Net.HttpWebRequest.GetRequestStream">
          <element api="M:System.Net.HttpWebRequest.GetRequestStream" />
          <element api="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)" />
        </element>
        <element api="M:System.Net.HttpWebRequest.GetResponse" />
        <element api="M:System.Net.HttpWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.WebRequest.GetRequestStreamAsync" />
        <element api="M:System.Net.WebRequest.GetResponseAsync" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.HttpWebRequest">
      <topicdata name="HttpWebRequest" group="list" subgroup="Properties" typeTopicId="T:System.Net.HttpWebRequest" />
      <apidata name="HttpWebRequest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Net.HttpWebRequest.Accept" />
        <element api="P:System.Net.HttpWebRequest.Address" />
        <element api="P:System.Net.HttpWebRequest.AllowAutoRedirect" />
        <element api="P:System.Net.HttpWebRequest.AllowReadStreamBuffering" />
        <element api="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />
        <element api="P:System.Net.HttpWebRequest.AutomaticDecompression" />
        <element api="P:System.Net.HttpWebRequest.ClientCertificates" />
        <element api="P:System.Net.HttpWebRequest.Connection" />
        <element api="P:System.Net.HttpWebRequest.ConnectionGroupName" />
        <element api="P:System.Net.HttpWebRequest.ContentLength" />
        <element api="P:System.Net.HttpWebRequest.ContentType" />
        <element api="P:System.Net.HttpWebRequest.ContinueDelegate" />
        <element api="P:System.Net.HttpWebRequest.ContinueTimeout" />
        <element api="P:System.Net.HttpWebRequest.CookieContainer" />
        <element api="P:System.Net.HttpWebRequest.Credentials" />
        <element api="P:System.Net.HttpWebRequest.Date" />
        <element api="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
        <element api="P:System.Net.HttpWebRequest.DefaultMaximumErrorResponseLength" />
        <element api="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength" />
        <element api="P:System.Net.HttpWebRequest.Expect" />
        <element api="P:System.Net.HttpWebRequest.HaveResponse" />
        <element api="P:System.Net.HttpWebRequest.Headers" />
        <element api="P:System.Net.HttpWebRequest.Host" />
        <element api="P:System.Net.HttpWebRequest.IfModifiedSince" />
        <element api="P:System.Net.HttpWebRequest.KeepAlive" />
        <element api="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections" />
        <element api="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" />
        <element api="P:System.Net.HttpWebRequest.MediaType" />
        <element api="P:System.Net.HttpWebRequest.Method" />
        <element api="P:System.Net.HttpWebRequest.Pipelined" />
        <element api="P:System.Net.HttpWebRequest.PreAuthenticate" />
        <element api="P:System.Net.HttpWebRequest.ProtocolVersion" />
        <element api="P:System.Net.HttpWebRequest.Proxy" />
        <element api="P:System.Net.HttpWebRequest.ReadWriteTimeout" />
        <element api="P:System.Net.HttpWebRequest.Referer" />
        <element api="P:System.Net.HttpWebRequest.RequestUri" />
        <element api="P:System.Net.HttpWebRequest.SendChunked" />
        <element api="P:System.Net.HttpWebRequest.ServerCertificateValidationCallback" />
        <element api="P:System.Net.HttpWebRequest.ServicePoint" />
        <element api="P:System.Net.HttpWebRequest.SupportsCookieContainer" />
        <element api="P:System.Net.HttpWebRequest.Timeout" />
        <element api="P:System.Net.HttpWebRequest.TransferEncoding" />
        <element api="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing" />
        <element api="P:System.Net.HttpWebRequest.UseDefaultCredentials" />
        <element api="P:System.Net.HttpWebRequest.UserAgent" />
        <element api="P:System.Net.WebRequest.AuthenticationLevel" />
        <element api="P:System.Net.WebRequest.CachePolicy" />
        <element api="P:System.Net.WebRequest.ImpersonationLevel" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" />
      </containers>
    </api>
    <api id="Overload:System.Net.HttpWebRequest.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.HttpWebRequest.AddRange(System.Int32)" />
        <element api="M:System.Net.HttpWebRequest.AddRange(System.Int64)" />
        <element api="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)" />
        <element api="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)" />
        <element api="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)" />
        <element api="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)" />
        <element api="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)" />
        <element api="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.HttpWebRequest.EndGetRequestStream">
      <topicdata name="EndGetRequestStream" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="EndGetRequestStream" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)" />
        <element api="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.HttpWebRequest.GetRequestStream">
      <topicdata name="GetRequestStream" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetRequestStream" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.HttpWebRequest.GetRequestStream" />
        <element api="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Serialization is obsoleted for this type.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.HttpWebRequest.Abort">
      <topicdata group="api" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.Abort">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.Accept">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Accept" />
      <setter name="set_Accept" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.HttpWebRequest.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="range">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.HttpWebRequest.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="from">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.HttpWebRequest.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="range">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.HttpWebRequest.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="from">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.HttpWebRequest.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rangeSpecifier">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="range">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.HttpWebRequest.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rangeSpecifier">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="from">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.HttpWebRequest.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rangeSpecifier">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="range">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.HttpWebRequest.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rangeSpecifier">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="from">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.Address">
      <topicdata group="api" />
      <apidata name="Address" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Address" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.AllowAutoRedirect">
      <topicdata group="api" />
      <apidata name="AllowAutoRedirect" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowAutoRedirect" />
      <setter name="set_AllowAutoRedirect" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.AllowReadStreamBuffering">
      <topicdata group="api" />
      <apidata name="AllowReadStreamBuffering" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowReadStreamBuffering" />
      <setter name="set_AllowReadStreamBuffering" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering">
      <topicdata group="api" />
      <apidata name="AllowWriteStreamBuffering" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowWriteStreamBuffering" />
      <setter name="set_AllowWriteStreamBuffering" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.AutomaticDecompression">
      <topicdata group="api" />
      <apidata name="AutomaticDecompression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AutomaticDecompression" />
      <setter name="set_AutomaticDecompression" />
      <returns>
        <type api="T:System.Net.DecompressionMethods" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginGetRequestStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginGetResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Net.HttpWebRequest.ClientCertificates">
      <topicdata group="api" />
      <apidata name="ClientCertificates" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClientCertificates" />
      <setter name="set_ClientCertificates" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.Connection">
      <topicdata group="api" />
      <apidata name="Connection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Connection" />
      <setter name="set_Connection" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.ConnectionGroupName">
      <topicdata group="api" />
      <apidata name="ConnectionGroupName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.ConnectionGroupName">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ConnectionGroupName" />
      <setter name="set_ConnectionGroupName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.ContentLength">
      <topicdata group="api" />
      <apidata name="ContentLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.ContentLength">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ContentLength" />
      <setter name="set_ContentLength" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.ContentType">
      <topicdata group="api" />
      <apidata name="ContentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.ContentType">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ContentType" />
      <setter name="set_ContentType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.ContinueDelegate">
      <topicdata group="api" />
      <apidata name="ContinueDelegate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContinueDelegate" />
      <setter name="set_ContinueDelegate" />
      <returns>
        <type api="T:System.Net.HttpContinueDelegate" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.ContinueTimeout">
      <topicdata group="api" />
      <apidata name="ContinueTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContinueTimeout" />
      <setter name="set_ContinueTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.CookieContainer">
      <topicdata group="api" />
      <apidata name="CookieContainer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CookieContainer" />
      <setter name="set_CookieContainer" />
      <returns>
        <type api="T:System.Net.CookieContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.Credentials">
      <topicdata group="api" />
      <apidata name="Credentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.Credentials">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Credentials" />
      <setter name="set_Credentials" />
      <returns>
        <type api="T:System.Net.ICredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.Date">
      <topicdata group="api" />
      <apidata name="Date" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Date" />
      <setter name="set_Date" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.DefaultCachePolicy">
      <topicdata group="api" />
      <apidata name="DefaultCachePolicy" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultCachePolicy" />
      <setter name="set_DefaultCachePolicy" />
      <returns>
        <type api="T:System.Net.Cache.RequestCachePolicy" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.DefaultMaximumErrorResponseLength">
      <topicdata group="api" />
      <apidata name="DefaultMaximumErrorResponseLength" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultMaximumErrorResponseLength" />
      <setter name="set_DefaultMaximumErrorResponseLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
      <topicdata group="api" />
      <apidata name="DefaultMaximumResponseHeadersLength" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultMaximumResponseHeadersLength" />
      <setter name="set_DefaultMaximumResponseHeadersLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndGetRequestStream" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.HttpWebRequest.EndGetRequestStream" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
      <topicdata group="api" />
      <apidata name="EndGetRequestStream" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.HttpWebRequest.EndGetRequestStream" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="context" out="true">
          <referenceTo>
            <type api="T:System.Net.TransportContext" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndGetResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.WebResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.Expect">
      <topicdata group="api" />
      <apidata name="Expect" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Expect" />
      <setter name="set_Expect" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebRequest.GetRequestStream">
      <topicdata group="api" />
      <apidata name="GetRequestStream" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.HttpWebRequest.GetRequestStream" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.GetRequestStream">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
      <topicdata group="api" />
      <apidata name="GetRequestStream" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.HttpWebRequest.GetRequestStream" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context" out="true">
          <referenceTo>
            <type api="T:System.Net.TransportContext" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebRequest.GetResponse">
      <topicdata group="api" />
      <apidata name="GetResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebRequest.GetResponse">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Net.WebResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.HaveResponse">
      <topicdata group="api" />
      <apidata name="HaveResponse" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_HaveResponse" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.Headers">
      <topicdata group="api" />
      <apidata name="Headers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.Headers">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Headers" />
      <setter name="set_Headers" />
      <returns>
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.Host">
      <topicdata group="api" />
      <apidata name="Host" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Host" />
      <setter name="set_Host" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.IfModifiedSince">
      <topicdata group="api" />
      <apidata name="IfModifiedSince" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IfModifiedSince" />
      <setter name="set_IfModifiedSince" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.KeepAlive">
      <topicdata group="api" />
      <apidata name="KeepAlive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeepAlive" />
      <setter name="set_KeepAlive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections">
      <topicdata group="api" />
      <apidata name="MaximumAutomaticRedirections" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaximumAutomaticRedirections" />
      <setter name="set_MaximumAutomaticRedirections" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
      <topicdata group="api" />
      <apidata name="MaximumResponseHeadersLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaximumResponseHeadersLength" />
      <setter name="set_MaximumResponseHeadersLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.MediaType">
      <topicdata group="api" />
      <apidata name="MediaType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MediaType" />
      <setter name="set_MediaType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.Method">
      <topicdata group="api" />
      <apidata name="Method" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.Method">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Method" />
      <setter name="set_Method" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.Pipelined">
      <topicdata group="api" />
      <apidata name="Pipelined" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Pipelined" />
      <setter name="set_Pipelined" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.PreAuthenticate">
      <topicdata group="api" />
      <apidata name="PreAuthenticate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.PreAuthenticate">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_PreAuthenticate" />
      <setter name="set_PreAuthenticate" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.ProtocolVersion">
      <topicdata group="api" />
      <apidata name="ProtocolVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProtocolVersion" />
      <setter name="set_ProtocolVersion" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.Proxy">
      <topicdata group="api" />
      <apidata name="Proxy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.Proxy">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Proxy" />
      <setter name="set_Proxy" />
      <returns>
        <type api="T:System.Net.IWebProxy" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.ReadWriteTimeout">
      <topicdata group="api" />
      <apidata name="ReadWriteTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReadWriteTimeout" />
      <setter name="set_ReadWriteTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.Referer">
      <topicdata group="api" />
      <apidata name="Referer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Referer" />
      <setter name="set_Referer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.RequestUri">
      <topicdata group="api" />
      <apidata name="RequestUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.RequestUri">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_RequestUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.SendChunked">
      <topicdata group="api" />
      <apidata name="SendChunked" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SendChunked" />
      <setter name="set_SendChunked" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.ServerCertificateValidationCallback">
      <topicdata group="api" />
      <apidata name="ServerCertificateValidationCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServerCertificateValidationCallback" />
      <setter name="set_ServerCertificateValidationCallback" />
      <returns>
        <type api="T:System.Net.Security.RemoteCertificateValidationCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.ServicePoint">
      <topicdata group="api" />
      <apidata name="ServicePoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ServicePoint" />
      <returns>
        <type api="T:System.Net.ServicePoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.SupportsCookieContainer">
      <topicdata group="api" />
      <apidata name="SupportsCookieContainer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_SupportsCookieContainer" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.Timeout">
      <topicdata group="api" />
      <apidata name="Timeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.Timeout">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Timeout" />
      <setter name="set_Timeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.TransferEncoding">
      <topicdata group="api" />
      <apidata name="TransferEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransferEncoding" />
      <setter name="set_TransferEncoding" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
      <topicdata group="api" />
      <apidata name="UnsafeAuthenticatedConnectionSharing" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UnsafeAuthenticatedConnectionSharing" />
      <setter name="set_UnsafeAuthenticatedConnectionSharing" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.UseDefaultCredentials">
      <topicdata group="api" />
      <apidata name="UseDefaultCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebRequest.UseDefaultCredentials">
          <type api="T:System.Net.WebRequest" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_UseDefaultCredentials" />
      <setter name="set_UseDefaultCredentials" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebRequest.UserAgent">
      <topicdata group="api" />
      <apidata name="UserAgent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UserAgent" />
      <setter name="set_UserAgent" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.HttpWebResponse">
      <topicdata group="api" />
      <apidata name="HttpWebResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Net.WebResponse" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.HttpWebResponse.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Net.HttpWebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.HttpWebResponse.Close" />
        <element api="Overload:System.Net.HttpWebResponse.Dispose">
          <element api="M:System.Net.WebResponse.Dispose" />
          <element api="M:System.Net.HttpWebResponse.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.HttpWebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.HttpWebResponse.GetResponseHeader(System.String)" />
        <element api="M:System.Net.HttpWebResponse.GetResponseStream" />
        <element api="M:System.Net.HttpWebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.HttpWebResponse.CharacterSet" />
        <element api="P:System.Net.HttpWebResponse.ContentEncoding" />
        <element api="P:System.Net.HttpWebResponse.ContentLength" />
        <element api="P:System.Net.HttpWebResponse.ContentType" />
        <element api="P:System.Net.HttpWebResponse.Cookies" />
        <element api="P:System.Net.HttpWebResponse.Headers" />
        <element api="P:System.Net.HttpWebResponse.IsMutuallyAuthenticated" />
        <element api="P:System.Net.HttpWebResponse.LastModified" />
        <element api="P:System.Net.HttpWebResponse.Method" />
        <element api="P:System.Net.HttpWebResponse.ProtocolVersion" />
        <element api="P:System.Net.HttpWebResponse.ResponseUri" />
        <element api="P:System.Net.HttpWebResponse.Server" />
        <element api="P:System.Net.HttpWebResponse.StatusCode" />
        <element api="P:System.Net.HttpWebResponse.StatusDescription" />
        <element api="P:System.Net.HttpWebResponse.SupportsHeaders" />
        <element api="P:System.Net.WebResponse.IsFromCache" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.HttpWebResponse">
      <topicdata name="HttpWebResponse" group="list" subgroup="Methods" typeTopicId="T:System.Net.HttpWebResponse" />
      <apidata name="HttpWebResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.HttpWebResponse.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Net.HttpWebResponse.Close" />
        <element api="Overload:System.Net.HttpWebResponse.Dispose">
          <element api="M:System.Net.WebResponse.Dispose" />
          <element api="M:System.Net.HttpWebResponse.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.HttpWebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.HttpWebResponse.GetResponseHeader(System.String)" />
        <element api="M:System.Net.HttpWebResponse.GetResponseStream" />
        <element api="M:System.Net.HttpWebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.HttpWebResponse">
      <topicdata name="HttpWebResponse" group="list" subgroup="Properties" typeTopicId="T:System.Net.HttpWebResponse" />
      <apidata name="HttpWebResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Net.HttpWebResponse.CharacterSet" />
        <element api="P:System.Net.HttpWebResponse.ContentEncoding" />
        <element api="P:System.Net.HttpWebResponse.ContentLength" />
        <element api="P:System.Net.HttpWebResponse.ContentType" />
        <element api="P:System.Net.HttpWebResponse.Cookies" />
        <element api="P:System.Net.HttpWebResponse.Headers" />
        <element api="P:System.Net.HttpWebResponse.IsMutuallyAuthenticated" />
        <element api="P:System.Net.HttpWebResponse.LastModified" />
        <element api="P:System.Net.HttpWebResponse.Method" />
        <element api="P:System.Net.HttpWebResponse.ProtocolVersion" />
        <element api="P:System.Net.HttpWebResponse.ResponseUri" />
        <element api="P:System.Net.HttpWebResponse.Server" />
        <element api="P:System.Net.HttpWebResponse.StatusCode" />
        <element api="P:System.Net.HttpWebResponse.StatusDescription" />
        <element api="P:System.Net.HttpWebResponse.SupportsHeaders" />
        <element api="P:System.Net.WebResponse.IsFromCache" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" />
      </containers>
    </api>
    <api id="Overload:System.Net.HttpWebResponse.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebResponse.Dispose" />
        <element api="M:System.Net.HttpWebResponse.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Serialization is obsoleted for this type.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Net.HttpWebResponse.CharacterSet">
      <topicdata group="api" />
      <apidata name="CharacterSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CharacterSet" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebResponse.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebResponse.Close">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebResponse.ContentEncoding">
      <topicdata group="api" />
      <apidata name="ContentEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContentEncoding" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebResponse.ContentLength">
      <topicdata group="api" />
      <apidata name="ContentLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebResponse.ContentLength">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ContentLength" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebResponse.ContentType">
      <topicdata group="api" />
      <apidata name="ContentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebResponse.ContentType">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ContentType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebResponse.Cookies">
      <topicdata group="api" />
      <apidata name="Cookies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Cookies" />
      <setter name="set_Cookies" />
      <returns>
        <type api="T:System.Net.CookieCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebResponse.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.HttpWebResponse.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebResponse.Dispose(System.Boolean)">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebResponse.GetResponseHeader(System.String)">
      <topicdata group="api" />
      <apidata name="GetResponseHeader" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="headerName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebResponse.GetResponseStream">
      <topicdata group="api" />
      <apidata name="GetResponseStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.WebResponse.GetResponseStream">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebResponse.Headers">
      <topicdata group="api" />
      <apidata name="Headers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebResponse.Headers">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Headers" />
      <returns>
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebResponse.IsMutuallyAuthenticated">
      <topicdata group="api" />
      <apidata name="IsMutuallyAuthenticated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebResponse.IsMutuallyAuthenticated">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsMutuallyAuthenticated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebResponse.LastModified">
      <topicdata group="api" />
      <apidata name="LastModified" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LastModified" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebResponse.Method">
      <topicdata group="api" />
      <apidata name="Method" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Method" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebResponse.ProtocolVersion">
      <topicdata group="api" />
      <apidata name="ProtocolVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProtocolVersion" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebResponse.ResponseUri">
      <topicdata group="api" />
      <apidata name="ResponseUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebResponse.ResponseUri">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ResponseUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebResponse.Server">
      <topicdata group="api" />
      <apidata name="Server" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Server" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebResponse.StatusCode">
      <topicdata group="api" />
      <apidata name="StatusCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_StatusCode" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebResponse.StatusDescription">
      <topicdata group="api" />
      <apidata name="StatusDescription" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_StatusDescription" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.HttpWebResponse.SupportsHeaders">
      <topicdata group="api" />
      <apidata name="SupportsHeaders" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.WebResponse.SupportsHeaders">
          <type api="T:System.Net.WebResponse" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SupportsHeaders" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.HttpWebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.HttpWebResponse" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.IAuthenticationModule">
      <topicdata group="api" />
      <apidata name="IAuthenticationModule" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" />
        <element api="M:System.Net.IAuthenticationModule.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)" />
        <element api="P:System.Net.IAuthenticationModule.AuthenticationType" />
        <element api="P:System.Net.IAuthenticationModule.CanPreAuthenticate" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.IAuthenticationModule">
      <topicdata name="IAuthenticationModule" group="list" subgroup="Methods" typeTopicId="T:System.Net.IAuthenticationModule" />
      <apidata name="IAuthenticationModule" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" />
        <element api="M:System.Net.IAuthenticationModule.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IAuthenticationModule" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.IAuthenticationModule">
      <topicdata name="IAuthenticationModule" group="list" subgroup="Properties" typeTopicId="T:System.Net.IAuthenticationModule" />
      <apidata name="IAuthenticationModule" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Net.IAuthenticationModule.AuthenticationType" />
        <element api="P:System.Net.IAuthenticationModule.CanPreAuthenticate" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IAuthenticationModule" />
      </containers>
    </api>
    <api id="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
      <topicdata group="api" />
      <apidata name="Authenticate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="challenge">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="request">
          <type api="T:System.Net.WebRequest" ref="true" />
        </parameter>
        <parameter name="credentials">
          <type api="T:System.Net.ICredentials" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Authorization" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.IAuthenticationModule.AuthenticationType">
      <topicdata group="api" />
      <apidata name="AuthenticationType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_AuthenticationType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.IAuthenticationModule.CanPreAuthenticate">
      <topicdata group="api" />
      <apidata name="CanPreAuthenticate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanPreAuthenticate" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IAuthenticationModule.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
      <topicdata group="api" />
      <apidata name="PreAuthenticate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Net.WebRequest" ref="true" />
        </parameter>
        <parameter name="credentials">
          <type api="T:System.Net.ICredentials" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Authorization" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.ICertificatePolicy">
      <topicdata group="api" />
      <apidata name="ICertificatePolicy" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Net.ICertificatePolicy.CheckValidationResult(System.Net.ServicePoint,System.Security.Cryptography.X509Certificates.X509Certificate,System.Net.WebRequest,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.ICertificatePolicy">
      <topicdata name="ICertificatePolicy" group="list" subgroup="Methods" typeTopicId="T:System.Net.ICertificatePolicy" />
      <apidata name="ICertificatePolicy" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Net.ICertificatePolicy.CheckValidationResult(System.Net.ServicePoint,System.Security.Cryptography.X509Certificates.X509Certificate,System.Net.WebRequest,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ICertificatePolicy" />
      </containers>
    </api>
    <api id="M:System.Net.ICertificatePolicy.CheckValidationResult(System.Net.ServicePoint,System.Security.Cryptography.X509Certificates.X509Certificate,System.Net.WebRequest,System.Int32)">
      <topicdata group="api" />
      <apidata name="CheckValidationResult" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="srvPoint">
          <type api="T:System.Net.ServicePoint" ref="true" />
        </parameter>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
        </parameter>
        <parameter name="request">
          <type api="T:System.Net.WebRequest" ref="true" />
        </parameter>
        <parameter name="certificateProblem">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ICertificatePolicy" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.ICredentialPolicy">
      <topicdata group="api" />
      <apidata name="ICredentialPolicy" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Microsoft.Win32.IntranetZoneCredentialPolicy" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.ICredentialPolicy">
      <topicdata name="ICredentialPolicy" group="list" subgroup="Methods" typeTopicId="T:System.Net.ICredentialPolicy" />
      <apidata name="ICredentialPolicy" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ICredentialPolicy" />
      </containers>
    </api>
    <api id="M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)">
      <topicdata group="api" />
      <apidata name="ShouldSendCredential" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="challengeUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="request">
          <type api="T:System.Net.WebRequest" ref="true" />
        </parameter>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="authenticationModule">
          <type api="T:System.Net.IAuthenticationModule" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ICredentialPolicy" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.ICredentials">
      <topicdata group="api" />
      <apidata name="ICredentials" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Net.CredentialCache" ref="true" />
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.ICredentials">
      <topicdata name="ICredentials" group="list" subgroup="Methods" typeTopicId="T:System.Net.ICredentials" />
      <apidata name="ICredentials" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ICredentials" />
      </containers>
    </api>
    <api id="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="GetCredential" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="authType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ICredentials" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.ICredentialsByHost">
      <topicdata group="api" />
      <apidata name="ICredentialsByHost" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Net.CredentialCache" ref="true" />
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.ICredentialsByHost">
      <topicdata name="ICredentialsByHost" group="list" subgroup="Methods" typeTopicId="T:System.Net.ICredentialsByHost" />
      <apidata name="ICredentialsByHost" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ICredentialsByHost" />
      </containers>
    </api>
    <api id="M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="GetCredential" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="authenticationType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ICredentialsByHost" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.IPAddress">
      <topicdata group="api" />
      <apidata name="IPAddress" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Net.IPAddress.Any" />
        <element api="F:System.Net.IPAddress.Broadcast" />
        <element api="F:System.Net.IPAddress.IPv6Any" />
        <element api="F:System.Net.IPAddress.IPv6Loopback" />
        <element api="F:System.Net.IPAddress.IPv6None" />
        <element api="F:System.Net.IPAddress.Loopback" />
        <element api="F:System.Net.IPAddress.None" />
        <element api="Overload:System.Net.IPAddress.#ctor">
          <element api="M:System.Net.IPAddress.#ctor(System.Byte[])" />
          <element api="M:System.Net.IPAddress.#ctor(System.Int64)" />
          <element api="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)" />
        </element>
        <element api="M:System.Net.IPAddress.Equals(System.Object)" />
        <element api="M:System.Net.IPAddress.GetAddressBytes" />
        <element api="M:System.Net.IPAddress.GetHashCode" />
        <element api="Overload:System.Net.IPAddress.HostToNetworkOrder">
          <element api="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)" />
          <element api="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)" />
          <element api="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)" />
        </element>
        <element api="M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)" />
        <element api="M:System.Net.IPAddress.MapToIPv4" />
        <element api="M:System.Net.IPAddress.MapToIPv6" />
        <element api="Overload:System.Net.IPAddress.NetworkToHostOrder">
          <element api="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)" />
          <element api="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)" />
          <element api="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)" />
        </element>
        <element api="M:System.Net.IPAddress.Parse(System.String)" />
        <element api="M:System.Net.IPAddress.ToString" />
        <element api="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Net.IPAddress.Address" />
        <element api="P:System.Net.IPAddress.AddressFamily" />
        <element api="P:System.Net.IPAddress.IsIPv4MappedToIPv6" />
        <element api="P:System.Net.IPAddress.IsIPv6LinkLocal" />
        <element api="P:System.Net.IPAddress.IsIPv6Multicast" />
        <element api="P:System.Net.IPAddress.IsIPv6SiteLocal" />
        <element api="P:System.Net.IPAddress.IsIPv6Teredo" />
        <element api="P:System.Net.IPAddress.ScopeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.IPAddress">
      <topicdata name="IPAddress" group="list" subgroup="Methods" typeTopicId="T:System.Net.IPAddress" />
      <apidata name="IPAddress" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Net.IPAddress.Equals(System.Object)" />
        <element api="M:System.Net.IPAddress.GetAddressBytes" />
        <element api="M:System.Net.IPAddress.GetHashCode" />
        <element api="Overload:System.Net.IPAddress.HostToNetworkOrder">
          <element api="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)" />
          <element api="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)" />
          <element api="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)" />
        </element>
        <element api="M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)" />
        <element api="M:System.Net.IPAddress.MapToIPv4" />
        <element api="M:System.Net.IPAddress.MapToIPv6" />
        <element api="Overload:System.Net.IPAddress.NetworkToHostOrder">
          <element api="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)" />
          <element api="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)" />
          <element api="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)" />
        </element>
        <element api="M:System.Net.IPAddress.Parse(System.String)" />
        <element api="M:System.Net.IPAddress.ToString" />
        <element api="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.IPAddress">
      <topicdata name="IPAddress" group="list" subgroup="Properties" typeTopicId="T:System.Net.IPAddress" />
      <apidata name="IPAddress" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Net.IPAddress.Address" />
        <element api="P:System.Net.IPAddress.AddressFamily" />
        <element api="P:System.Net.IPAddress.IsIPv4MappedToIPv6" />
        <element api="P:System.Net.IPAddress.IsIPv6LinkLocal" />
        <element api="P:System.Net.IPAddress.IsIPv6Multicast" />
        <element api="P:System.Net.IPAddress.IsIPv6SiteLocal" />
        <element api="P:System.Net.IPAddress.IsIPv6Teredo" />
        <element api="P:System.Net.IPAddress.ScopeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" />
      </containers>
    </api>
    <api id="Fields.T:System.Net.IPAddress">
      <topicdata name="IPAddress" group="list" subgroup="Fields" typeTopicId="T:System.Net.IPAddress" />
      <apidata name="IPAddress" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="F:System.Net.IPAddress.Any" />
        <element api="F:System.Net.IPAddress.Broadcast" />
        <element api="F:System.Net.IPAddress.IPv6Any" />
        <element api="F:System.Net.IPAddress.IPv6Loopback" />
        <element api="F:System.Net.IPAddress.IPv6None" />
        <element api="F:System.Net.IPAddress.Loopback" />
        <element api="F:System.Net.IPAddress.None" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" />
      </containers>
    </api>
    <api id="Overload:System.Net.IPAddress.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.IPAddress.#ctor(System.Byte[])" />
        <element api="M:System.Net.IPAddress.#ctor(System.Int64)" />
        <element api="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.IPAddress.HostToNetworkOrder">
      <topicdata name="HostToNetworkOrder" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="HostToNetworkOrder" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)" />
        <element api="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)" />
        <element api="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.IPAddress.NetworkToHostOrder">
      <topicdata name="NetworkToHostOrder" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="NetworkToHostOrder" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)" />
        <element api="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)" />
        <element api="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPAddress.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.IPAddress.#ctor" />
      <parameters>
        <parameter name="address">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.IPAddress.#ctor" />
      <parameters>
        <parameter name="address">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="scopeid">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPAddress.#ctor(System.Int64)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.IPAddress.#ctor" />
      <parameters>
        <parameter name="newAddress">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.IPAddress.Address">
      <topicdata group="api" />
      <apidata name="Address" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Address" />
      <setter name="set_Address" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This property has been deprecated. It is address family dependent. Please use IPAddress.Equals method to perform comparisons. http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Net.IPAddress.AddressFamily">
      <topicdata group="api" />
      <apidata name="AddressFamily" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AddressFamily" />
      <returns>
        <type api="T:System.Net.Sockets.AddressFamily" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="F:System.Net.IPAddress.Any">
      <topicdata group="api" />
      <apidata name="Any" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Net.IPAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="F:System.Net.IPAddress.Broadcast">
      <topicdata group="api" />
      <apidata name="Broadcast" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Net.IPAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPAddress.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="comparand">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPAddress.GetAddressBytes">
      <topicdata group="api" />
      <apidata name="GetAddressBytes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPAddress.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)">
      <topicdata group="api" />
      <apidata name="HostToNetworkOrder" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.IPAddress.HostToNetworkOrder" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="host">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)">
      <topicdata group="api" />
      <apidata name="HostToNetworkOrder" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.IPAddress.HostToNetworkOrder" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="host">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)">
      <topicdata group="api" />
      <apidata name="HostToNetworkOrder" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.IPAddress.HostToNetworkOrder" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="host">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="F:System.Net.IPAddress.IPv6Any">
      <topicdata group="api" />
      <apidata name="IPv6Any" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Net.IPAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="F:System.Net.IPAddress.IPv6Loopback">
      <topicdata group="api" />
      <apidata name="IPv6Loopback" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Net.IPAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="F:System.Net.IPAddress.IPv6None">
      <topicdata group="api" />
      <apidata name="IPv6None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Net.IPAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.IPAddress.IsIPv4MappedToIPv6">
      <topicdata group="api" />
      <apidata name="IsIPv4MappedToIPv6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsIPv4MappedToIPv6" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.IPAddress.IsIPv6LinkLocal">
      <topicdata group="api" />
      <apidata name="IsIPv6LinkLocal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsIPv6LinkLocal" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.IPAddress.IsIPv6Multicast">
      <topicdata group="api" />
      <apidata name="IsIPv6Multicast" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsIPv6Multicast" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.IPAddress.IsIPv6SiteLocal">
      <topicdata group="api" />
      <apidata name="IsIPv6SiteLocal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsIPv6SiteLocal" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.IPAddress.IsIPv6Teredo">
      <topicdata group="api" />
      <apidata name="IsIPv6Teredo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsIPv6Teredo" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)">
      <topicdata group="api" />
      <apidata name="IsLoopback" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Net.IPAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="F:System.Net.IPAddress.Loopback">
      <topicdata group="api" />
      <apidata name="Loopback" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Net.IPAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPAddress.MapToIPv4">
      <topicdata group="api" />
      <apidata name="MapToIPv4" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.IPAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPAddress.MapToIPv6">
      <topicdata group="api" />
      <apidata name="MapToIPv6" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.IPAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)">
      <topicdata group="api" />
      <apidata name="NetworkToHostOrder" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.IPAddress.NetworkToHostOrder" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="network">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)">
      <topicdata group="api" />
      <apidata name="NetworkToHostOrder" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.IPAddress.NetworkToHostOrder" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="network">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)">
      <topicdata group="api" />
      <apidata name="NetworkToHostOrder" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.IPAddress.NetworkToHostOrder" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="network">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="F:System.Net.IPAddress.None">
      <topicdata group="api" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Net.IPAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPAddress.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ipString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.IPAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.IPAddress.ScopeId">
      <topicdata group="api" />
      <apidata name="ScopeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ScopeId" />
      <setter name="set_ScopeId" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPAddress.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
      <topicdata group="api" />
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ipString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="address" out="true">
          <referenceTo>
            <type api="T:System.Net.IPAddress" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPAddress" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.IPEndPoint">
      <topicdata group="api" />
      <apidata name="IPEndPoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Net.EndPoint" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Net.IPEndPoint.MaxPort" />
        <element api="F:System.Net.IPEndPoint.MinPort" />
        <element api="Overload:System.Net.IPEndPoint.#ctor">
          <element api="M:System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)" />
          <element api="M:System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)" />
        </element>
        <element api="M:System.Net.IPEndPoint.Create(System.Net.SocketAddress)" />
        <element api="M:System.Net.IPEndPoint.Equals(System.Object)" />
        <element api="M:System.Net.IPEndPoint.GetHashCode" />
        <element api="M:System.Net.IPEndPoint.Serialize" />
        <element api="M:System.Net.IPEndPoint.ToString" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Net.IPEndPoint.Address" />
        <element api="P:System.Net.IPEndPoint.AddressFamily" />
        <element api="P:System.Net.IPEndPoint.Port" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.IPEndPoint">
      <topicdata name="IPEndPoint" group="list" subgroup="Methods" typeTopicId="T:System.Net.IPEndPoint" />
      <apidata name="IPEndPoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Net.IPEndPoint.Create(System.Net.SocketAddress)" />
        <element api="M:System.Net.IPEndPoint.Equals(System.Object)" />
        <element api="M:System.Net.IPEndPoint.GetHashCode" />
        <element api="M:System.Net.IPEndPoint.Serialize" />
        <element api="M:System.Net.IPEndPoint.ToString" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPoint" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.IPEndPoint">
      <topicdata name="IPEndPoint" group="list" subgroup="Properties" typeTopicId="T:System.Net.IPEndPoint" />
      <apidata name="IPEndPoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Net.IPEndPoint.Address" />
        <element api="P:System.Net.IPEndPoint.AddressFamily" />
        <element api="P:System.Net.IPEndPoint.Port" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPoint" />
      </containers>
    </api>
    <api id="Fields.T:System.Net.IPEndPoint">
      <topicdata name="IPEndPoint" group="list" subgroup="Fields" typeTopicId="T:System.Net.IPEndPoint" />
      <apidata name="IPEndPoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="F:System.Net.IPEndPoint.MaxPort" />
        <element api="F:System.Net.IPEndPoint.MinPort" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPoint" />
      </containers>
    </api>
    <api id="Overload:System.Net.IPEndPoint.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)" />
        <element api="M:System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.IPEndPoint.#ctor" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.IPEndPoint.#ctor" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Net.IPAddress" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.IPEndPoint.Address">
      <topicdata group="api" />
      <apidata name="Address" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Address" />
      <setter name="set_Address" />
      <returns>
        <type api="T:System.Net.IPAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.IPEndPoint.AddressFamily">
      <topicdata group="api" />
      <apidata name="AddressFamily" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.EndPoint.AddressFamily">
          <type api="T:System.Net.EndPoint" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_AddressFamily" />
      <returns>
        <type api="T:System.Net.Sockets.AddressFamily" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPEndPoint.Create(System.Net.SocketAddress)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.EndPoint.Create(System.Net.SocketAddress)">
          <type api="T:System.Net.EndPoint" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="socketAddress">
          <type api="T:System.Net.SocketAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.EndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPEndPoint.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="comparand">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPEndPoint.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </containers>
    </api>
    <api id="F:System.Net.IPEndPoint.MaxPort">
      <topicdata group="api" />
      <apidata name="MaxPort" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>65535</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </containers>
    </api>
    <api id="F:System.Net.IPEndPoint.MinPort">
      <topicdata group="api" />
      <apidata name="MinPort" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.IPEndPoint.Port">
      <topicdata group="api" />
      <apidata name="Port" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Port" />
      <setter name="set_Port" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPEndPoint.Serialize">
      <topicdata group="api" />
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.EndPoint.Serialize">
          <type api="T:System.Net.EndPoint" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Net.SocketAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPEndPoint.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.IPEndPointCollection">
      <topicdata group="api" />
      <apidata name="IPEndPointCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.IPEndPointCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.IPEndPoint" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.IPEndPointCollection.#ctor" />
        <element api="M:System.Net.IPEndPointCollection.InsertItem(System.Int32,System.Net.IPEndPoint)" />
        <element api="M:System.Net.IPEndPointCollection.SetItem(System.Int32,System.Net.IPEndPoint)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.IPEndPointCollection">
      <topicdata name="IPEndPointCollection" group="list" subgroup="Methods" typeTopicId="T:System.Net.IPEndPointCollection" />
      <apidata name="IPEndPointCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.IPEndPointCollection.#ctor" />
      <elements>
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.IPEndPointCollection.InsertItem(System.Int32,System.Net.IPEndPoint)" />
        <element api="M:System.Net.IPEndPointCollection.SetItem(System.Int32,System.Net.IPEndPoint)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPointCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.IPEndPointCollection">
      <topicdata name="IPEndPointCollection" group="list" subgroup="Properties" typeTopicId="T:System.Net.IPEndPointCollection" />
      <apidata name="IPEndPointCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.IPEndPointCollection.#ctor" />
      <elements>
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPointCollection" />
      </containers>
    </api>
    <api id="M:System.Net.IPEndPointCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPointCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPEndPointCollection.InsertItem(System.Int32,System.Net.IPEndPoint)">
      <topicdata group="api" />
      <apidata name="InsertItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.IPEndPoint" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.IPEndPoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPointCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IPEndPointCollection.SetItem(System.Int32,System.Net.IPEndPoint)">
      <topicdata group="api" />
      <apidata name="SetItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.IPEndPoint" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.IPEndPoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPointCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.IPHostEntry">
      <topicdata group="api" />
      <apidata name="IPHostEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.IPHostEntry.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Net.IPHostEntry.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.IPHostEntry.AddressList" />
        <element api="P:System.Net.IPHostEntry.Aliases" />
        <element api="P:System.Net.IPHostEntry.HostName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.IPHostEntry">
      <topicdata name="IPHostEntry" group="list" subgroup="Methods" typeTopicId="T:System.Net.IPHostEntry" />
      <apidata name="IPHostEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.IPHostEntry.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPHostEntry" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.IPHostEntry">
      <topicdata name="IPHostEntry" group="list" subgroup="Properties" typeTopicId="T:System.Net.IPHostEntry" />
      <apidata name="IPHostEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.IPHostEntry.#ctor" />
      <elements>
        <element api="P:System.Net.IPHostEntry.AddressList" />
        <element api="P:System.Net.IPHostEntry.Aliases" />
        <element api="P:System.Net.IPHostEntry.HostName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPHostEntry" />
      </containers>
    </api>
    <api id="M:System.Net.IPHostEntry.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPHostEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.IPHostEntry.AddressList">
      <topicdata group="api" />
      <apidata name="AddressList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AddressList" />
      <setter name="set_AddressList" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Net.IPAddress" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPHostEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.IPHostEntry.Aliases">
      <topicdata group="api" />
      <apidata name="Aliases" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Aliases" />
      <setter name="set_Aliases" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPHostEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.IPHostEntry.HostName">
      <topicdata group="api" />
      <apidata name="HostName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HostName" />
      <setter name="set_HostName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPHostEntry" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.IWebProxy">
      <topicdata group="api" />
      <apidata name="IWebProxy" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Net.WebProxy" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Net.IWebProxy.GetProxy(System.Uri)" />
        <element api="M:System.Net.IWebProxy.IsBypassed(System.Uri)" />
        <element api="P:System.Net.IWebProxy.Credentials" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.IWebProxy">
      <topicdata name="IWebProxy" group="list" subgroup="Methods" typeTopicId="T:System.Net.IWebProxy" />
      <apidata name="IWebProxy" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Net.IWebProxy.GetProxy(System.Uri)" />
        <element api="M:System.Net.IWebProxy.IsBypassed(System.Uri)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IWebProxy" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.IWebProxy">
      <topicdata name="IWebProxy" group="list" subgroup="Properties" typeTopicId="T:System.Net.IWebProxy" />
      <apidata name="IWebProxy" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Net.IWebProxy.Credentials" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IWebProxy" />
      </containers>
    </api>
    <api id="P:System.Net.IWebProxy.Credentials">
      <topicdata group="api" />
      <apidata name="Credentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Credentials" />
      <setter name="set_Credentials" />
      <returns>
        <type api="T:System.Net.ICredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IWebProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IWebProxy.GetProxy(System.Uri)">
      <topicdata group="api" />
      <apidata name="GetProxy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="destination">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IWebProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IWebProxy.IsBypassed(System.Uri)">
      <topicdata group="api" />
      <apidata name="IsBypassed" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IWebProxy" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.IWebProxyScript">
      <topicdata group="api" />
      <apidata name="IWebProxyScript" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Net.IWebProxyScript.Close" />
        <element api="M:System.Net.IWebProxyScript.Load(System.Uri,System.String,System.Type)" />
        <element api="M:System.Net.IWebProxyScript.Run(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.IWebProxyScript">
      <topicdata name="IWebProxyScript" group="list" subgroup="Methods" typeTopicId="T:System.Net.IWebProxyScript" />
      <apidata name="IWebProxyScript" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Net.IWebProxyScript.Close" />
        <element api="M:System.Net.IWebProxyScript.Load(System.Uri,System.String,System.Type)" />
        <element api="M:System.Net.IWebProxyScript.Run(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IWebProxyScript" />
      </containers>
    </api>
    <api id="M:System.Net.IWebProxyScript.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IWebProxyScript" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IWebProxyScript.Load(System.Uri,System.String,System.Type)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="scriptLocation">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="script">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="helperType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IWebProxyScript" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.IWebProxyScript.Run(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="url">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IWebProxyScript" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.IWebRequestCreate">
      <topicdata group="api" />
      <apidata name="IWebRequestCreate" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.IO.Packaging.PackWebRequestFactory" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Net.IWebRequestCreate.Create(System.Uri)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.IWebRequestCreate">
      <topicdata name="IWebRequestCreate" group="list" subgroup="Methods" typeTopicId="T:System.Net.IWebRequestCreate" />
      <apidata name="IWebRequestCreate" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Net.IWebRequestCreate.Create(System.Uri)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IWebRequestCreate" />
      </containers>
    </api>
    <api id="M:System.Net.IWebRequestCreate.Create(System.Uri)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.WebRequest" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IWebRequestCreate" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.NetworkAccess">
      <topicdata group="api" />
      <apidata name="NetworkAccess" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.NetworkAccess.Accept" />
        <element api="F:System.Net.NetworkAccess.Connect" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Net.NetworkAccess.Accept">
      <topicdata group="api" notopic="" />
      <apidata name="Accept" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.NetworkAccess" ref="false" />
      </returns>
      <value>128</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.NetworkAccess" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.NetworkAccess.Connect">
      <topicdata group="api" notopic="" />
      <apidata name="Connect" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.NetworkAccess" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.NetworkAccess" ref="false" />
      </containers>
    </api>
    <api id="T:System.Net.NetworkCredential">
      <topicdata group="api" />
      <apidata name="NetworkCredential" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.NetworkCredential.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Net.ICredentials" ref="true" />
        <type api="T:System.Net.ICredentialsByHost" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.Net.NetworkCredential.#ctor">
          <element api="M:System.Net.NetworkCredential.#ctor" />
          <element api="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString)" />
          <element api="M:System.Net.NetworkCredential.#ctor(System.String,System.String)" />
          <element api="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString,System.String)" />
          <element api="M:System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)" />
        </element>
        <element api="Overload:System.Net.NetworkCredential.GetCredential">
          <element api="M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)" />
          <element api="M:System.Net.NetworkCredential.GetCredential(System.String,System.Int32,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.NetworkCredential.Domain" />
        <element api="P:System.Net.NetworkCredential.Password" />
        <element api="P:System.Net.NetworkCredential.SecurePassword" />
        <element api="P:System.Net.NetworkCredential.UserName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.NetworkCredential">
      <topicdata name="NetworkCredential" group="list" subgroup="Methods" typeTopicId="T:System.Net.NetworkCredential" />
      <apidata name="NetworkCredential" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.NetworkCredential.#ctor" />
      <elements>
        <element api="Overload:System.Net.NetworkCredential.GetCredential">
          <element api="M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)" />
          <element api="M:System.Net.NetworkCredential.GetCredential(System.String,System.Int32,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.NetworkCredential" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.NetworkCredential">
      <topicdata name="NetworkCredential" group="list" subgroup="Properties" typeTopicId="T:System.Net.NetworkCredential" />
      <apidata name="NetworkCredential" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.NetworkCredential.#ctor" />
      <elements>
        <element api="P:System.Net.NetworkCredential.Domain" />
        <element api="P:System.Net.NetworkCredential.Password" />
        <element api="P:System.Net.NetworkCredential.SecurePassword" />
        <element api="P:System.Net.NetworkCredential.UserName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.NetworkCredential" />
      </containers>
    </api>
    <api id="Overload:System.Net.NetworkCredential.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.NetworkCredential.#ctor" />
        <element api="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString)" />
        <element api="M:System.Net.NetworkCredential.#ctor(System.String,System.String)" />
        <element api="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString,System.String)" />
        <element api="M:System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.NetworkCredential.GetCredential">
      <topicdata name="GetCredential" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetCredential" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)" />
        <element api="M:System.Net.NetworkCredential.GetCredential(System.String,System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.NetworkCredential.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.NetworkCredential.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.NetworkCredential.#ctor" />
      <parameters>
        <parameter name="userName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.Security.SecureString" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.NetworkCredential.#ctor" />
      <parameters>
        <parameter name="userName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.Security.SecureString" ref="true" />
        </parameter>
        <parameter name="domain">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.NetworkCredential.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.NetworkCredential.#ctor" />
      <parameters>
        <parameter name="userName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.NetworkCredential.#ctor" />
      <parameters>
        <parameter name="userName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="domain">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.NetworkCredential.Domain">
      <topicdata group="api" />
      <apidata name="Domain" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Domain" />
      <setter name="set_Domain" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.NetworkCredential.GetCredential(System.String,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="GetCredential" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.NetworkCredential.GetCredential" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="authenticationType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)">
          <type api="T:System.Net.ICredentialsByHost" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="GetCredential" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.NetworkCredential.GetCredential" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="authType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)">
          <type api="T:System.Net.ICredentials" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.NetworkCredential.Password">
      <topicdata group="api" />
      <apidata name="Password" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Password" />
      <setter name="set_Password" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.NetworkCredential.SecurePassword">
      <topicdata group="api" />
      <apidata name="SecurePassword" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SecurePassword" />
      <setter name="set_SecurePassword" />
      <returns>
        <type api="T:System.Security.SecureString" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.NetworkCredential.UserName">
      <topicdata group="api" />
      <apidata name="UserName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UserName" />
      <setter name="set_UserName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.OpenReadCompletedEventArgs">
      <topicdata group="api" />
      <apidata name="OpenReadCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.OpenReadCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.OpenReadCompletedEventArgs">
      <topicdata name="OpenReadCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Net.OpenReadCompletedEventArgs" />
      <apidata name="OpenReadCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.OpenReadCompletedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.OpenReadCompletedEventArgs">
      <topicdata name="OpenReadCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.OpenReadCompletedEventArgs" />
      <apidata name="OpenReadCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.OpenReadCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.OpenReadCompletedEventArgs" />
      </containers>
    </api>
    <api id="P:System.Net.OpenReadCompletedEventArgs.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.OpenReadCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.OpenReadCompletedEventHandler">
      <topicdata group="api" />
      <apidata name="OpenReadCompletedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Net.OpenReadCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="T:System.Net.OpenWriteCompletedEventArgs">
      <topicdata group="api" />
      <apidata name="OpenWriteCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.OpenWriteCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.OpenWriteCompletedEventArgs">
      <topicdata name="OpenWriteCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Net.OpenWriteCompletedEventArgs" />
      <apidata name="OpenWriteCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.OpenWriteCompletedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.OpenWriteCompletedEventArgs">
      <topicdata name="OpenWriteCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.OpenWriteCompletedEventArgs" />
      <apidata name="OpenWriteCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.OpenWriteCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.OpenWriteCompletedEventArgs" />
      </containers>
    </api>
    <api id="P:System.Net.OpenWriteCompletedEventArgs.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.OpenWriteCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.OpenWriteCompletedEventHandler">
      <topicdata group="api" />
      <apidata name="OpenWriteCompletedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Net.OpenWriteCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="T:System.Net.ProtocolViolationException">
      <topicdata group="api" />
      <apidata name="ProtocolViolationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.ProtocolViolationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.InvalidOperationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.Net.ProtocolViolationException.#ctor">
          <element api="M:System.Net.ProtocolViolationException.#ctor" />
          <element api="M:System.Net.ProtocolViolationException.#ctor(System.String)" />
          <element api="M:System.Net.ProtocolViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="M:System.Net.ProtocolViolationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.ProtocolViolationException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.ProtocolViolationException">
      <topicdata name="ProtocolViolationException" group="list" subgroup="Methods" typeTopicId="T:System.Net.ProtocolViolationException" />
      <apidata name="ProtocolViolationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.ProtocolViolationException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Net.ProtocolViolationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.ProtocolViolationException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ProtocolViolationException" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.ProtocolViolationException">
      <topicdata name="ProtocolViolationException" group="list" subgroup="Properties" typeTopicId="T:System.Net.ProtocolViolationException" />
      <apidata name="ProtocolViolationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.ProtocolViolationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ProtocolViolationException" />
      </containers>
    </api>
    <api id="Events.T:System.Net.ProtocolViolationException">
      <topicdata name="ProtocolViolationException" group="list" subgroup="Events" typeTopicId="T:System.Net.ProtocolViolationException" />
      <apidata name="ProtocolViolationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.ProtocolViolationException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ProtocolViolationException" />
      </containers>
    </api>
    <api id="Overload:System.Net.ProtocolViolationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.ProtocolViolationException.#ctor" />
        <element api="M:System.Net.ProtocolViolationException.#ctor(System.String)" />
        <element api="M:System.Net.ProtocolViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ProtocolViolationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.ProtocolViolationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.ProtocolViolationException.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ProtocolViolationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.ProtocolViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.ProtocolViolationException.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ProtocolViolationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.ProtocolViolationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.ProtocolViolationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ProtocolViolationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.ProtocolViolationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ProtocolViolationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.ProtocolViolationException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ProtocolViolationException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.SecurityProtocolType">
      <topicdata group="api" />
      <apidata name="SecurityProtocolType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.SecurityProtocolType.SystemDefault" />
        <element api="F:System.Net.SecurityProtocolType.Ssl3" />
        <element api="F:System.Net.SecurityProtocolType.Tls" />
        <element api="F:System.Net.SecurityProtocolType.Tls11" />
        <element api="F:System.Net.SecurityProtocolType.Tls12" />
        <element api="F:System.Net.SecurityProtocolType.Tls13" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Net.SecurityProtocolType.Ssl3">
      <topicdata group="api" notopic="" />
      <apidata name="Ssl3" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.SecurityProtocolType" ref="false" />
      </returns>
      <value>48</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SecurityProtocolType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.SecurityProtocolType.SystemDefault">
      <topicdata group="api" notopic="" />
      <apidata name="SystemDefault" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.SecurityProtocolType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SecurityProtocolType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.SecurityProtocolType.Tls">
      <topicdata group="api" notopic="" />
      <apidata name="Tls" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.SecurityProtocolType" ref="false" />
      </returns>
      <value>192</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SecurityProtocolType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.SecurityProtocolType.Tls11">
      <topicdata group="api" notopic="" />
      <apidata name="Tls11" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.SecurityProtocolType" ref="false" />
      </returns>
      <value>768</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SecurityProtocolType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.SecurityProtocolType.Tls12">
      <topicdata group="api" notopic="" />
      <apidata name="Tls12" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.SecurityProtocolType" ref="false" />
      </returns>
      <value>3072</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SecurityProtocolType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.SecurityProtocolType.Tls13">
      <topicdata group="api" notopic="" />
      <apidata name="Tls13" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.SecurityProtocolType" ref="false" />
      </returns>
      <value>12288</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SecurityProtocolType" ref="false" />
      </containers>
    </api>
    <api id="T:System.Net.ServicePoint">
      <topicdata group="api" />
      <apidata name="ServicePoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Net.ServicePoint.CloseConnectionGroup(System.String)" />
        <element api="M:System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.ServicePoint.Address" />
        <element api="P:System.Net.ServicePoint.BindIPEndPointDelegate" />
        <element api="P:System.Net.ServicePoint.Certificate" />
        <element api="P:System.Net.ServicePoint.ClientCertificate" />
        <element api="P:System.Net.ServicePoint.ConnectionLeaseTimeout" />
        <element api="P:System.Net.ServicePoint.ConnectionLimit" />
        <element api="P:System.Net.ServicePoint.ConnectionName" />
        <element api="P:System.Net.ServicePoint.CurrentConnections" />
        <element api="P:System.Net.ServicePoint.Expect100Continue" />
        <element api="P:System.Net.ServicePoint.IdleSince" />
        <element api="P:System.Net.ServicePoint.MaxIdleTime" />
        <element api="P:System.Net.ServicePoint.ProtocolVersion" />
        <element api="P:System.Net.ServicePoint.ReceiveBufferSize" />
        <element api="P:System.Net.ServicePoint.SupportsPipelining" />
        <element api="P:System.Net.ServicePoint.UseNagleAlgorithm" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.ServicePoint">
      <topicdata name="ServicePoint" group="list" subgroup="Methods" typeTopicId="T:System.Net.ServicePoint" />
      <apidata name="ServicePoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Net.ServicePoint.CloseConnectionGroup(System.String)" />
        <element api="M:System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePoint" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.ServicePoint">
      <topicdata name="ServicePoint" group="list" subgroup="Properties" typeTopicId="T:System.Net.ServicePoint" />
      <apidata name="ServicePoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.ServicePoint.Address" />
        <element api="P:System.Net.ServicePoint.BindIPEndPointDelegate" />
        <element api="P:System.Net.ServicePoint.Certificate" />
        <element api="P:System.Net.ServicePoint.ClientCertificate" />
        <element api="P:System.Net.ServicePoint.ConnectionLeaseTimeout" />
        <element api="P:System.Net.ServicePoint.ConnectionLimit" />
        <element api="P:System.Net.ServicePoint.ConnectionName" />
        <element api="P:System.Net.ServicePoint.CurrentConnections" />
        <element api="P:System.Net.ServicePoint.Expect100Continue" />
        <element api="P:System.Net.ServicePoint.IdleSince" />
        <element api="P:System.Net.ServicePoint.MaxIdleTime" />
        <element api="P:System.Net.ServicePoint.ProtocolVersion" />
        <element api="P:System.Net.ServicePoint.ReceiveBufferSize" />
        <element api="P:System.Net.ServicePoint.SupportsPipelining" />
        <element api="P:System.Net.ServicePoint.UseNagleAlgorithm" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePoint" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePoint.Address">
      <topicdata group="api" />
      <apidata name="Address" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Address" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePoint.BindIPEndPointDelegate">
      <topicdata group="api" />
      <apidata name="BindIPEndPointDelegate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BindIPEndPointDelegate" />
      <setter name="set_BindIPEndPointDelegate" />
      <returns>
        <type api="T:System.Net.BindIPEndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePoint.Certificate">
      <topicdata group="api" />
      <apidata name="Certificate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Certificate" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePoint.ClientCertificate">
      <topicdata group="api" />
      <apidata name="ClientCertificate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClientCertificate" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.ServicePoint.CloseConnectionGroup(System.String)">
      <topicdata group="api" />
      <apidata name="CloseConnectionGroup" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connectionGroupName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePoint.ConnectionLeaseTimeout">
      <topicdata group="api" />
      <apidata name="ConnectionLeaseTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConnectionLeaseTimeout" />
      <setter name="set_ConnectionLeaseTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePoint.ConnectionLimit">
      <topicdata group="api" />
      <apidata name="ConnectionLimit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConnectionLimit" />
      <setter name="set_ConnectionLimit" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePoint.ConnectionName">
      <topicdata group="api" />
      <apidata name="ConnectionName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConnectionName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePoint.CurrentConnections">
      <topicdata group="api" />
      <apidata name="CurrentConnections" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentConnections" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePoint.Expect100Continue">
      <topicdata group="api" />
      <apidata name="Expect100Continue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Expect100Continue" />
      <setter name="set_Expect100Continue" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePoint.IdleSince">
      <topicdata group="api" />
      <apidata name="IdleSince" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IdleSince" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePoint.MaxIdleTime">
      <topicdata group="api" />
      <apidata name="MaxIdleTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxIdleTime" />
      <setter name="set_MaxIdleTime" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePoint.ProtocolVersion">
      <topicdata group="api" />
      <apidata name="ProtocolVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ProtocolVersion" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePoint.ReceiveBufferSize">
      <topicdata group="api" />
      <apidata name="ReceiveBufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReceiveBufferSize" />
      <setter name="set_ReceiveBufferSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="SetTcpKeepAlive" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enabled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="keepAliveTime">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="keepAliveInterval">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePoint.SupportsPipelining">
      <topicdata group="api" />
      <apidata name="SupportsPipelining" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SupportsPipelining" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePoint.UseNagleAlgorithm">
      <topicdata group="api" />
      <apidata name="UseNagleAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseNagleAlgorithm" />
      <setter name="set_UseNagleAlgorithm" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePoint" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.ServicePointManager">
      <topicdata group="api" />
      <apidata name="ServicePointManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit" />
        <element api="F:System.Net.ServicePointManager.DefaultPersistentConnectionLimit" />
        <element api="Overload:System.Net.ServicePointManager.FindServicePoint">
          <element api="M:System.Net.ServicePointManager.FindServicePoint(System.Uri)" />
          <element api="M:System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)" />
          <element api="M:System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)" />
        </element>
        <element api="M:System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.ServicePointManager.CertificatePolicy" />
        <element api="P:System.Net.ServicePointManager.CheckCertificateRevocationList" />
        <element api="P:System.Net.ServicePointManager.DefaultConnectionLimit" />
        <element api="P:System.Net.ServicePointManager.DnsRefreshTimeout" />
        <element api="P:System.Net.ServicePointManager.EnableDnsRoundRobin" />
        <element api="P:System.Net.ServicePointManager.EncryptionPolicy" />
        <element api="P:System.Net.ServicePointManager.Expect100Continue" />
        <element api="P:System.Net.ServicePointManager.MaxServicePointIdleTime" />
        <element api="P:System.Net.ServicePointManager.MaxServicePoints" />
        <element api="P:System.Net.ServicePointManager.ReusePort" />
        <element api="P:System.Net.ServicePointManager.SecurityProtocol" />
        <element api="P:System.Net.ServicePointManager.ServerCertificateValidationCallback" />
        <element api="P:System.Net.ServicePointManager.UseNagleAlgorithm" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.ServicePointManager">
      <topicdata name="ServicePointManager" group="list" subgroup="Methods" typeTopicId="T:System.Net.ServicePointManager" />
      <apidata name="ServicePointManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.Net.ServicePointManager.FindServicePoint">
          <element api="M:System.Net.ServicePointManager.FindServicePoint(System.Uri)" />
          <element api="M:System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)" />
          <element api="M:System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)" />
        </element>
        <element api="M:System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.ServicePointManager">
      <topicdata name="ServicePointManager" group="list" subgroup="Properties" typeTopicId="T:System.Net.ServicePointManager" />
      <apidata name="ServicePointManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.ServicePointManager.CertificatePolicy" />
        <element api="P:System.Net.ServicePointManager.CheckCertificateRevocationList" />
        <element api="P:System.Net.ServicePointManager.DefaultConnectionLimit" />
        <element api="P:System.Net.ServicePointManager.DnsRefreshTimeout" />
        <element api="P:System.Net.ServicePointManager.EnableDnsRoundRobin" />
        <element api="P:System.Net.ServicePointManager.EncryptionPolicy" />
        <element api="P:System.Net.ServicePointManager.Expect100Continue" />
        <element api="P:System.Net.ServicePointManager.MaxServicePointIdleTime" />
        <element api="P:System.Net.ServicePointManager.MaxServicePoints" />
        <element api="P:System.Net.ServicePointManager.ReusePort" />
        <element api="P:System.Net.ServicePointManager.SecurityProtocol" />
        <element api="P:System.Net.ServicePointManager.ServerCertificateValidationCallback" />
        <element api="P:System.Net.ServicePointManager.UseNagleAlgorithm" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" />
      </containers>
    </api>
    <api id="Fields.T:System.Net.ServicePointManager">
      <topicdata name="ServicePointManager" group="list" subgroup="Fields" typeTopicId="T:System.Net.ServicePointManager" />
      <apidata name="ServicePointManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit" />
        <element api="F:System.Net.ServicePointManager.DefaultPersistentConnectionLimit" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" />
      </containers>
    </api>
    <api id="Overload:System.Net.ServicePointManager.FindServicePoint">
      <topicdata name="FindServicePoint" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindServicePoint" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.ServicePointManager.FindServicePoint(System.Uri)" />
        <element api="M:System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)" />
        <element api="M:System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePointManager.CertificatePolicy">
      <topicdata group="api" />
      <apidata name="CertificatePolicy" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CertificatePolicy" />
      <setter name="set_CertificatePolicy" />
      <returns>
        <type api="T:System.Net.ICertificatePolicy" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CertificatePolicy is obsoleted for this type, please use ServerCertificateValidationCallback instead. http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Net.ServicePointManager.CheckCertificateRevocationList">
      <topicdata group="api" />
      <apidata name="CheckCertificateRevocationList" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CheckCertificateRevocationList" />
      <setter name="set_CheckCertificateRevocationList" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePointManager.DefaultConnectionLimit">
      <topicdata group="api" />
      <apidata name="DefaultConnectionLimit" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultConnectionLimit" />
      <setter name="set_DefaultConnectionLimit" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" ref="true" />
      </containers>
    </api>
    <api id="F:System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit">
      <topicdata group="api" />
      <apidata name="DefaultNonPersistentConnectionLimit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" ref="true" />
      </containers>
    </api>
    <api id="F:System.Net.ServicePointManager.DefaultPersistentConnectionLimit">
      <topicdata group="api" />
      <apidata name="DefaultPersistentConnectionLimit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePointManager.DnsRefreshTimeout">
      <topicdata group="api" />
      <apidata name="DnsRefreshTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DnsRefreshTimeout" />
      <setter name="set_DnsRefreshTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePointManager.EnableDnsRoundRobin">
      <topicdata group="api" />
      <apidata name="EnableDnsRoundRobin" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EnableDnsRoundRobin" />
      <setter name="set_EnableDnsRoundRobin" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePointManager.EncryptionPolicy">
      <topicdata group="api" />
      <apidata name="EncryptionPolicy" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EncryptionPolicy" />
      <returns>
        <type api="T:System.Net.Security.EncryptionPolicy" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePointManager.Expect100Continue">
      <topicdata group="api" />
      <apidata name="Expect100Continue" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Expect100Continue" />
      <setter name="set_Expect100Continue" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)">
      <topicdata group="api" />
      <apidata name="FindServicePoint" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.ServicePointManager.FindServicePoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="uriString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxy">
          <type api="T:System.Net.IWebProxy" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.ServicePoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.ServicePointManager.FindServicePoint(System.Uri)">
      <topicdata group="api" />
      <apidata name="FindServicePoint" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.ServicePointManager.FindServicePoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.ServicePoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)">
      <topicdata group="api" />
      <apidata name="FindServicePoint" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.ServicePointManager.FindServicePoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="proxy">
          <type api="T:System.Net.IWebProxy" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.ServicePoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePointManager.MaxServicePointIdleTime">
      <topicdata group="api" />
      <apidata name="MaxServicePointIdleTime" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxServicePointIdleTime" />
      <setter name="set_MaxServicePointIdleTime" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePointManager.MaxServicePoints">
      <topicdata group="api" />
      <apidata name="MaxServicePoints" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxServicePoints" />
      <setter name="set_MaxServicePoints" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePointManager.ReusePort">
      <topicdata group="api" />
      <apidata name="ReusePort" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReusePort" />
      <setter name="set_ReusePort" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePointManager.SecurityProtocol">
      <topicdata group="api" />
      <apidata name="SecurityProtocol" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SecurityProtocol" />
      <setter name="set_SecurityProtocol" />
      <returns>
        <type api="T:System.Net.SecurityProtocolType" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePointManager.ServerCertificateValidationCallback">
      <topicdata group="api" />
      <apidata name="ServerCertificateValidationCallback" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServerCertificateValidationCallback" />
      <setter name="set_ServerCertificateValidationCallback" />
      <returns>
        <type api="T:System.Net.Security.RemoteCertificateValidationCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="SetTcpKeepAlive" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enabled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="keepAliveTime">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="keepAliveInterval">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.ServicePointManager.UseNagleAlgorithm">
      <topicdata group="api" />
      <apidata name="UseNagleAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseNagleAlgorithm" />
      <setter name="set_UseNagleAlgorithm" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.ServicePointManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.SocketAddress">
      <topicdata group="api" />
      <apidata name="SocketAddress" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Net.SocketAddress.#ctor">
          <element api="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)" />
          <element api="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)" />
        </element>
        <element api="M:System.Net.SocketAddress.Equals(System.Object)" />
        <element api="M:System.Net.SocketAddress.GetHashCode" />
        <element api="M:System.Net.SocketAddress.ToString" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Net.SocketAddress.Family" />
        <element api="P:System.Net.SocketAddress.Item(System.Int32)" />
        <element api="P:System.Net.SocketAddress.Size" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.SocketAddress">
      <topicdata name="SocketAddress" group="list" subgroup="Methods" typeTopicId="T:System.Net.SocketAddress" />
      <apidata name="SocketAddress" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Net.SocketAddress.Equals(System.Object)" />
        <element api="M:System.Net.SocketAddress.GetHashCode" />
        <element api="M:System.Net.SocketAddress.ToString" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketAddress" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.SocketAddress">
      <topicdata name="SocketAddress" group="list" subgroup="Properties" typeTopicId="T:System.Net.SocketAddress" />
      <apidata name="SocketAddress" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.SocketAddress.Family" />
        <element api="P:System.Net.SocketAddress.Item(System.Int32)" />
        <element api="P:System.Net.SocketAddress.Size" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketAddress" />
      </containers>
    </api>
    <api id="Overload:System.Net.SocketAddress.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)" />
        <element api="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.SocketAddress.#ctor" />
      <parameters>
        <parameter name="family">
          <type api="T:System.Net.Sockets.AddressFamily" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.SocketAddress.#ctor" />
      <parameters>
        <parameter name="family">
          <type api="T:System.Net.Sockets.AddressFamily" ref="false" />
        </parameter>
        <parameter name="size">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.SocketAddress.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="comparand">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketAddress" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.SocketAddress.Family">
      <topicdata group="api" />
      <apidata name="Family" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Family" />
      <returns>
        <type api="T:System.Net.Sockets.AddressFamily" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.SocketAddress.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketAddress" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.SocketAddress.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketAddress" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.SocketAddress.Size">
      <topicdata group="api" />
      <apidata name="Size" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Size" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketAddress" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.SocketAddress.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketAddress" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.SocketPermission">
      <topicdata group="api" />
      <apidata name="SocketPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Security.Permissions.IUnrestrictedPermission" ref="true" />
      </implements>
      <elements>
        <element api="F:System.Net.SocketPermission.AllPorts" />
        <element api="Overload:System.Net.SocketPermission.#ctor">
          <element api="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)" />
          <element api="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)" />
        </element>
        <element api="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)" />
        <element api="M:System.Net.SocketPermission.Copy" />
        <element api="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)" />
        <element api="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Net.SocketPermission.IsUnrestricted" />
        <element api="M:System.Net.SocketPermission.ToXml" />
        <element api="M:System.Net.SocketPermission.Union(System.Security.IPermission)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
        <element api="P:System.Net.SocketPermission.AcceptList" />
        <element api="P:System.Net.SocketPermission.ConnectList" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.SocketPermission">
      <topicdata name="SocketPermission" group="list" subgroup="Methods" typeTopicId="T:System.Net.SocketPermission" />
      <apidata name="SocketPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)" />
        <element api="M:System.Net.SocketPermission.Copy" />
        <element api="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)" />
        <element api="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Net.SocketPermission.IsUnrestricted" />
        <element api="M:System.Net.SocketPermission.ToXml" />
        <element api="M:System.Net.SocketPermission.Union(System.Security.IPermission)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermission" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.SocketPermission">
      <topicdata name="SocketPermission" group="list" subgroup="Properties" typeTopicId="T:System.Net.SocketPermission" />
      <apidata name="SocketPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Net.SocketPermission.AcceptList" />
        <element api="P:System.Net.SocketPermission.ConnectList" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermission" />
      </containers>
    </api>
    <api id="Fields.T:System.Net.SocketPermission">
      <topicdata name="SocketPermission" group="list" subgroup="Fields" typeTopicId="T:System.Net.SocketPermission" />
      <apidata name="SocketPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="F:System.Net.SocketPermission.AllPorts" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermission" />
      </containers>
    </api>
    <api id="Overload:System.Net.SocketPermission.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)" />
        <element api="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.SocketPermission.#ctor" />
      <parameters>
        <parameter name="access">
          <type api="T:System.Net.NetworkAccess" ref="false" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.Net.TransportType" ref="false" />
        </parameter>
        <parameter name="hostName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="portNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.SocketPermission.#ctor" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Security.Permissions.PermissionState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermission" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.SocketPermission.AcceptList">
      <topicdata group="api" />
      <apidata name="AcceptList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AcceptList" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="AddPermission" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="access">
          <type api="T:System.Net.NetworkAccess" ref="false" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.Net.TransportType" ref="false" />
        </parameter>
        <parameter name="hostName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="portNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermission" ref="true" />
      </containers>
    </api>
    <api id="F:System.Net.SocketPermission.AllPorts">
      <topicdata group="api" />
      <apidata name="AllPorts" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermission" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.SocketPermission.ConnectList">
      <topicdata group="api" />
      <apidata name="ConnectList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConnectList" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.SocketPermission.Copy">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.Copy">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Copy">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
      <topicdata group="api" />
      <apidata name="FromXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="securityElement">
          <type api="T:System.Security.SecurityElement" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)">
          <type api="T:System.Security.ISecurityEncodable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="Intersect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="IsSubsetOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.SocketPermission.IsUnrestricted">
      <topicdata group="api" />
      <apidata name="IsUnrestricted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted">
          <type api="T:System.Security.Permissions.IUnrestrictedPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.SocketPermission.ToXml">
      <topicdata group="api" />
      <apidata name="ToXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.ToXml">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.SecurityElement" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.ISecurityEncodable.ToXml">
          <type api="T:System.Security.ISecurityEncodable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="Union" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermission" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.SocketPermissionAttribute">
      <topicdata group="api" />
      <apidata name="SocketPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.CodeAccessSecurityAttribute" ref="true" />
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Net.SocketPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
        <element api="M:System.Net.SocketPermissionAttribute.CreatePermission" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Net.SocketPermissionAttribute.Access" />
        <element api="P:System.Net.SocketPermissionAttribute.Host" />
        <element api="P:System.Net.SocketPermissionAttribute.Port" />
        <element api="P:System.Net.SocketPermissionAttribute.Transport" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
              <field name="Class" />
              <field name="Struct" />
              <field name="Constructor" />
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Net.SocketPermissionAttribute">
      <topicdata name="SocketPermissionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Net.SocketPermissionAttribute" />
      <apidata name="SocketPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Net.SocketPermissionAttribute.CreatePermission" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermissionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.SocketPermissionAttribute">
      <topicdata name="SocketPermissionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Net.SocketPermissionAttribute" />
      <apidata name="SocketPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Net.SocketPermissionAttribute.Access" />
        <element api="P:System.Net.SocketPermissionAttribute.Host" />
        <element api="P:System.Net.SocketPermissionAttribute.Port" />
        <element api="P:System.Net.SocketPermissionAttribute.Transport" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermissionAttribute" />
      </containers>
    </api>
    <api id="M:System.Net.SocketPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.SocketPermissionAttribute.Access">
      <topicdata group="api" />
      <apidata name="Access" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Access" />
      <setter name="set_Access" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.SocketPermissionAttribute.CreatePermission">
      <topicdata group="api" />
      <apidata name="CreatePermission" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Permissions.SecurityAttribute.CreatePermission">
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.SocketPermissionAttribute.Host">
      <topicdata group="api" />
      <apidata name="Host" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Host" />
      <setter name="set_Host" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.SocketPermissionAttribute.Port">
      <topicdata group="api" />
      <apidata name="Port" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Port" />
      <setter name="set_Port" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.SocketPermissionAttribute.Transport">
      <topicdata group="api" />
      <apidata name="Transport" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Transport" />
      <setter name="set_Transport" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.SocketPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.TransportContext">
      <topicdata group="api" />
      <apidata name="TransportContext" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Net.TransportContext.#ctor" />
        <element api="M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)" />
        <element api="M:System.Net.TransportContext.GetTlsTokenBindings" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.TransportContext">
      <topicdata name="TransportContext" group="list" subgroup="Methods" typeTopicId="T:System.Net.TransportContext" />
      <apidata name="TransportContext" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)" />
        <element api="M:System.Net.TransportContext.GetTlsTokenBindings" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.TransportContext" />
      </containers>
    </api>
    <api id="M:System.Net.TransportContext.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.TransportContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)">
      <topicdata group="api" />
      <apidata name="GetChannelBinding" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="kind">
          <type api="T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.TransportContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.TransportContext.GetTlsTokenBindings">
      <topicdata group="api" />
      <apidata name="GetTlsTokenBindings" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Security.Authentication.ExtendedProtection.TokenBinding" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.TransportContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.TransportType">
      <topicdata group="api" />
      <apidata name="TransportType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.TransportType.Udp" />
        <element api="F:System.Net.TransportType.Connectionless" />
        <element api="F:System.Net.TransportType.Tcp" />
        <element api="F:System.Net.TransportType.ConnectionOriented" />
        <element api="F:System.Net.TransportType.All" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="F:System.Net.TransportType.All">
      <topicdata group="api" notopic="" />
      <apidata name="All" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.TransportType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.TransportType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.TransportType.Connectionless">
      <topicdata group="api" notopic="" />
      <apidata name="Connectionless" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.TransportType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.TransportType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.TransportType.ConnectionOriented">
      <topicdata group="api" notopic="" />
      <apidata name="ConnectionOriented" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.TransportType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.TransportType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.TransportType.Tcp">
      <topicdata group="api" notopic="" />
      <apidata name="Tcp" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.TransportType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.TransportType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.TransportType.Udp">
      <topicdata group="api" notopic="" />
      <apidata name="Udp" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.TransportType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.TransportType" ref="false" />
      </containers>
    </api>
    <api id="T:System.Net.UploadDataCompletedEventArgs">
      <topicdata group="api" />
      <apidata name="UploadDataCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.UploadDataCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.UploadDataCompletedEventArgs">
      <topicdata name="UploadDataCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Net.UploadDataCompletedEventArgs" />
      <apidata name="UploadDataCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.UploadDataCompletedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.UploadDataCompletedEventArgs">
      <topicdata name="UploadDataCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.UploadDataCompletedEventArgs" />
      <apidata name="UploadDataCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.UploadDataCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.UploadDataCompletedEventArgs" />
      </containers>
    </api>
    <api id="P:System.Net.UploadDataCompletedEventArgs.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.UploadDataCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.UploadDataCompletedEventHandler">
      <topicdata group="api" />
      <apidata name="UploadDataCompletedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Net.UploadDataCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="T:System.Net.UploadFileCompletedEventArgs">
      <topicdata group="api" />
      <apidata name="UploadFileCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.UploadFileCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.UploadFileCompletedEventArgs">
      <topicdata name="UploadFileCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Net.UploadFileCompletedEventArgs" />
      <apidata name="UploadFileCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.UploadFileCompletedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.UploadFileCompletedEventArgs">
      <topicdata name="UploadFileCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.UploadFileCompletedEventArgs" />
      <apidata name="UploadFileCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.UploadFileCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.UploadFileCompletedEventArgs" />
      </containers>
    </api>
    <api id="P:System.Net.UploadFileCompletedEventArgs.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.UploadFileCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.UploadFileCompletedEventHandler">
      <topicdata group="api" />
      <apidata name="UploadFileCompletedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Net.UploadFileCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="T:System.Net.UploadProgressChangedEventArgs">
      <topicdata group="api" />
      <apidata name="UploadProgressChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.ProgressChangedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage" />
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.UserState" />
        <element api="P:System.Net.UploadProgressChangedEventArgs.BytesReceived" />
        <element api="P:System.Net.UploadProgressChangedEventArgs.BytesSent" />
        <element api="P:System.Net.UploadProgressChangedEventArgs.TotalBytesToReceive" />
        <element api="P:System.Net.UploadProgressChangedEventArgs.TotalBytesToSend" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.UploadProgressChangedEventArgs">
      <topicdata name="UploadProgressChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Net.UploadProgressChangedEventArgs" />
      <apidata name="UploadProgressChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.UploadProgressChangedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.UploadProgressChangedEventArgs">
      <topicdata name="UploadProgressChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.UploadProgressChangedEventArgs" />
      <apidata name="UploadProgressChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage" />
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.UserState" />
        <element api="P:System.Net.UploadProgressChangedEventArgs.BytesReceived" />
        <element api="P:System.Net.UploadProgressChangedEventArgs.BytesSent" />
        <element api="P:System.Net.UploadProgressChangedEventArgs.TotalBytesToReceive" />
        <element api="P:System.Net.UploadProgressChangedEventArgs.TotalBytesToSend" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.UploadProgressChangedEventArgs" />
      </containers>
    </api>
    <api id="P:System.Net.UploadProgressChangedEventArgs.BytesReceived">
      <topicdata group="api" />
      <apidata name="BytesReceived" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BytesReceived" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.UploadProgressChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.UploadProgressChangedEventArgs.BytesSent">
      <topicdata group="api" />
      <apidata name="BytesSent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BytesSent" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.UploadProgressChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.UploadProgressChangedEventArgs.TotalBytesToReceive">
      <topicdata group="api" />
      <apidata name="TotalBytesToReceive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TotalBytesToReceive" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.UploadProgressChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.UploadProgressChangedEventArgs.TotalBytesToSend">
      <topicdata group="api" />
      <apidata name="TotalBytesToSend" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TotalBytesToSend" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.UploadProgressChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.UploadProgressChangedEventHandler">
      <topicdata group="api" />
      <apidata name="UploadProgressChangedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Net.UploadProgressChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="T:System.Net.UploadStringCompletedEventArgs">
      <topicdata group="api" />
      <apidata name="UploadStringCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.UploadStringCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.UploadStringCompletedEventArgs">
      <topicdata name="UploadStringCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Net.UploadStringCompletedEventArgs" />
      <apidata name="UploadStringCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.UploadStringCompletedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.UploadStringCompletedEventArgs">
      <topicdata name="UploadStringCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.UploadStringCompletedEventArgs" />
      <apidata name="UploadStringCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.UploadStringCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.UploadStringCompletedEventArgs" />
      </containers>
    </api>
    <api id="P:System.Net.UploadStringCompletedEventArgs.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.UploadStringCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.UploadStringCompletedEventHandler">
      <topicdata group="api" />
      <apidata name="UploadStringCompletedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Net.UploadStringCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="T:System.Net.UploadValuesCompletedEventArgs">
      <topicdata group="api" />
      <apidata name="UploadValuesCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.UploadValuesCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.UploadValuesCompletedEventArgs">
      <topicdata name="UploadValuesCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Net.UploadValuesCompletedEventArgs" />
      <apidata name="UploadValuesCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.UploadValuesCompletedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.UploadValuesCompletedEventArgs">
      <topicdata name="UploadValuesCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.UploadValuesCompletedEventArgs" />
      <apidata name="UploadValuesCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.UploadValuesCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.UploadValuesCompletedEventArgs" />
      </containers>
    </api>
    <api id="P:System.Net.UploadValuesCompletedEventArgs.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.UploadValuesCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.UploadValuesCompletedEventHandler">
      <topicdata group="api" />
      <apidata name="UploadValuesCompletedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Net.UploadValuesCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="T:System.Net.WebClient">
      <topicdata group="api" />
      <apidata name="WebClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.WebClient.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Net.WebClient.DownloadDataCompleted" />
        <element api="E:System.Net.WebClient.DownloadFileCompleted" />
        <element api="E:System.Net.WebClient.DownloadProgressChanged" />
        <element api="E:System.Net.WebClient.DownloadStringCompleted" />
        <element api="E:System.Net.WebClient.OpenReadCompleted" />
        <element api="E:System.Net.WebClient.OpenWriteCompleted" />
        <element api="E:System.Net.WebClient.UploadDataCompleted" />
        <element api="E:System.Net.WebClient.UploadFileCompleted" />
        <element api="E:System.Net.WebClient.UploadProgressChanged" />
        <element api="E:System.Net.WebClient.UploadStringCompleted" />
        <element api="E:System.Net.WebClient.UploadValuesCompleted" />
        <element api="Overload:System.Net.WebClient.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.WebClient.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Net.WebClient.#ctor" />
        <element api="M:System.Net.WebClient.CancelAsync" />
        <element api="Overload:System.Net.WebClient.DownloadData">
          <element api="M:System.Net.WebClient.DownloadData(System.String)" />
          <element api="M:System.Net.WebClient.DownloadData(System.Uri)" />
        </element>
        <element api="Overload:System.Net.WebClient.DownloadDataAsync">
          <element api="M:System.Net.WebClient.DownloadDataAsync(System.Uri)" />
          <element api="M:System.Net.WebClient.DownloadDataAsync(System.Uri,System.Object)" />
        </element>
        <element api="Overload:System.Net.WebClient.DownloadDataTaskAsync">
          <element api="M:System.Net.WebClient.DownloadDataTaskAsync(System.String)" />
          <element api="M:System.Net.WebClient.DownloadDataTaskAsync(System.Uri)" />
        </element>
        <element api="Overload:System.Net.WebClient.DownloadFile">
          <element api="M:System.Net.WebClient.DownloadFile(System.String,System.String)" />
          <element api="M:System.Net.WebClient.DownloadFile(System.Uri,System.String)" />
        </element>
        <element api="Overload:System.Net.WebClient.DownloadFileAsync">
          <element api="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String)" />
          <element api="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String,System.Object)" />
        </element>
        <element api="Overload:System.Net.WebClient.DownloadFileTaskAsync">
          <element api="M:System.Net.WebClient.DownloadFileTaskAsync(System.String,System.String)" />
          <element api="M:System.Net.WebClient.DownloadFileTaskAsync(System.Uri,System.String)" />
        </element>
        <element api="Overload:System.Net.WebClient.DownloadString">
          <element api="M:System.Net.WebClient.DownloadString(System.String)" />
          <element api="M:System.Net.WebClient.DownloadString(System.Uri)" />
        </element>
        <element api="Overload:System.Net.WebClient.DownloadStringAsync">
          <element api="M:System.Net.WebClient.DownloadStringAsync(System.Uri)" />
          <element api="M:System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object)" />
        </element>
        <element api="Overload:System.Net.WebClient.DownloadStringTaskAsync">
          <element api="M:System.Net.WebClient.DownloadStringTaskAsync(System.String)" />
          <element api="M:System.Net.WebClient.DownloadStringTaskAsync(System.Uri)" />
        </element>
        <element api="M:System.Net.WebClient.GetWebRequest(System.Uri)" />
        <element api="Overload:System.Net.WebClient.GetWebResponse">
          <element api="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest)" />
          <element api="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)" />
        </element>
        <element api="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" />
        <element api="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
        <element api="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" />
        <element api="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" />
        <element api="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" />
        <element api="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" />
        <element api="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" />
        <element api="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" />
        <element api="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" />
        <element api="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" />
        <element api="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" />
        <element api="Overload:System.Net.WebClient.OpenRead">
          <element api="M:System.Net.WebClient.OpenRead(System.String)" />
          <element api="M:System.Net.WebClient.OpenRead(System.Uri)" />
        </element>
        <element api="Overload:System.Net.WebClient.OpenReadAsync">
          <element api="M:System.Net.WebClient.OpenReadAsync(System.Uri)" />
          <element api="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)" />
        </element>
        <element api="Overload:System.Net.WebClient.OpenReadTaskAsync">
          <element api="M:System.Net.WebClient.OpenReadTaskAsync(System.String)" />
          <element api="M:System.Net.WebClient.OpenReadTaskAsync(System.Uri)" />
        </element>
        <element api="Overload:System.Net.WebClient.OpenWrite">
          <element api="M:System.Net.WebClient.OpenWrite(System.String)" />
          <element api="M:System.Net.WebClient.OpenWrite(System.Uri)" />
          <element api="M:System.Net.WebClient.OpenWrite(System.String,System.String)" />
          <element api="M:System.Net.WebClient.OpenWrite(System.Uri,System.String)" />
        </element>
        <element api="Overload:System.Net.WebClient.OpenWriteAsync">
          <element api="M:System.Net.WebClient.OpenWriteAsync(System.Uri)" />
          <element api="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String)" />
          <element api="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object)" />
        </element>
        <element api="Overload:System.Net.WebClient.OpenWriteTaskAsync">
          <element api="M:System.Net.WebClient.OpenWriteTaskAsync(System.String)" />
          <element api="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri)" />
          <element api="M:System.Net.WebClient.OpenWriteTaskAsync(System.String,System.String)" />
          <element api="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri,System.String)" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadData">
          <element api="M:System.Net.WebClient.UploadData(System.String,System.Byte[])" />
          <element api="M:System.Net.WebClient.UploadData(System.Uri,System.Byte[])" />
          <element api="M:System.Net.WebClient.UploadData(System.String,System.String,System.Byte[])" />
          <element api="M:System.Net.WebClient.UploadData(System.Uri,System.String,System.Byte[])" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadDataAsync">
          <element api="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.Byte[])" />
          <element api="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[])" />
          <element api="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[],System.Object)" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadDataTaskAsync">
          <element api="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.Byte[])" />
          <element api="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.Byte[])" />
          <element api="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.String,System.Byte[])" />
          <element api="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.String,System.Byte[])" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadFile">
          <element api="M:System.Net.WebClient.UploadFile(System.String,System.String)" />
          <element api="M:System.Net.WebClient.UploadFile(System.Uri,System.String)" />
          <element api="M:System.Net.WebClient.UploadFile(System.String,System.String,System.String)" />
          <element api="M:System.Net.WebClient.UploadFile(System.Uri,System.String,System.String)" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadFileAsync">
          <element api="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String)" />
          <element api="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String)" />
          <element api="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String,System.Object)" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadFileTaskAsync">
          <element api="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String)" />
          <element api="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String)" />
          <element api="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String,System.String)" />
          <element api="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String,System.String)" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadString">
          <element api="M:System.Net.WebClient.UploadString(System.String,System.String)" />
          <element api="M:System.Net.WebClient.UploadString(System.Uri,System.String)" />
          <element api="M:System.Net.WebClient.UploadString(System.String,System.String,System.String)" />
          <element api="M:System.Net.WebClient.UploadString(System.Uri,System.String,System.String)" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadStringAsync">
          <element api="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String)" />
          <element api="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String)" />
          <element api="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object)" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadStringTaskAsync">
          <element api="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String)" />
          <element api="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String)" />
          <element api="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String,System.String)" />
          <element api="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String,System.String)" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadValues">
          <element api="M:System.Net.WebClient.UploadValues(System.String,System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Net.WebClient.UploadValues(System.Uri,System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Net.WebClient.UploadValues(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Net.WebClient.UploadValues(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadValuesAsync">
          <element api="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Object)" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadValuesTaskAsync">
          <element api="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Net.WebClient.BaseAddress" />
        <element api="P:System.Net.WebClient.CachePolicy" />
        <element api="P:System.Net.WebClient.Credentials" />
        <element api="P:System.Net.WebClient.Encoding" />
        <element api="P:System.Net.WebClient.Headers" />
        <element api="P:System.Net.WebClient.IsBusy" />
        <element api="P:System.Net.WebClient.Proxy" />
        <element api="P:System.Net.WebClient.QueryString" />
        <element api="P:System.Net.WebClient.ResponseHeaders" />
        <element api="P:System.Net.WebClient.UseDefaultCredentials" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Net.WebClient">
      <topicdata name="WebClient" group="list" subgroup="Methods" typeTopicId="T:System.Net.WebClient" />
      <apidata name="WebClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.WebClient.#ctor" />
      <elements>
        <element api="Overload:System.Net.WebClient.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.WebClient.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Net.WebClient.CancelAsync" />
        <element api="Overload:System.Net.WebClient.DownloadData">
          <element api="M:System.Net.WebClient.DownloadData(System.String)" />
          <element api="M:System.Net.WebClient.DownloadData(System.Uri)" />
        </element>
        <element api="Overload:System.Net.WebClient.DownloadDataAsync">
          <element api="M:System.Net.WebClient.DownloadDataAsync(System.Uri)" />
          <element api="M:System.Net.WebClient.DownloadDataAsync(System.Uri,System.Object)" />
        </element>
        <element api="Overload:System.Net.WebClient.DownloadDataTaskAsync">
          <element api="M:System.Net.WebClient.DownloadDataTaskAsync(System.String)" />
          <element api="M:System.Net.WebClient.DownloadDataTaskAsync(System.Uri)" />
        </element>
        <element api="Overload:System.Net.WebClient.DownloadFile">
          <element api="M:System.Net.WebClient.DownloadFile(System.String,System.String)" />
          <element api="M:System.Net.WebClient.DownloadFile(System.Uri,System.String)" />
        </element>
        <element api="Overload:System.Net.WebClient.DownloadFileAsync">
          <element api="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String)" />
          <element api="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String,System.Object)" />
        </element>
        <element api="Overload:System.Net.WebClient.DownloadFileTaskAsync">
          <element api="M:System.Net.WebClient.DownloadFileTaskAsync(System.String,System.String)" />
          <element api="M:System.Net.WebClient.DownloadFileTaskAsync(System.Uri,System.String)" />
        </element>
        <element api="Overload:System.Net.WebClient.DownloadString">
          <element api="M:System.Net.WebClient.DownloadString(System.String)" />
          <element api="M:System.Net.WebClient.DownloadString(System.Uri)" />
        </element>
        <element api="Overload:System.Net.WebClient.DownloadStringAsync">
          <element api="M:System.Net.WebClient.DownloadStringAsync(System.Uri)" />
          <element api="M:System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object)" />
        </element>
        <element api="Overload:System.Net.WebClient.DownloadStringTaskAsync">
          <element api="M:System.Net.WebClient.DownloadStringTaskAsync(System.String)" />
          <element api="M:System.Net.WebClient.DownloadStringTaskAsync(System.Uri)" />
        </element>
        <element api="M:System.Net.WebClient.GetWebRequest(System.Uri)" />
        <element api="Overload:System.Net.WebClient.GetWebResponse">
          <element api="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest)" />
          <element api="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)" />
        </element>
        <element api="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" />
        <element api="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
        <element api="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" />
        <element api="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" />
        <element api="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" />
        <element api="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" />
        <element api="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" />
        <element api="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" />
        <element api="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" />
        <element api="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" />
        <element api="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" />
        <element api="Overload:System.Net.WebClient.OpenRead">
          <element api="M:System.Net.WebClient.OpenRead(System.String)" />
          <element api="M:System.Net.WebClient.OpenRead(System.Uri)" />
        </element>
        <element api="Overload:System.Net.WebClient.OpenReadAsync">
          <element api="M:System.Net.WebClient.OpenReadAsync(System.Uri)" />
          <element api="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)" />
        </element>
        <element api="Overload:System.Net.WebClient.OpenReadTaskAsync">
          <element api="M:System.Net.WebClient.OpenReadTaskAsync(System.String)" />
          <element api="M:System.Net.WebClient.OpenReadTaskAsync(System.Uri)" />
        </element>
        <element api="Overload:System.Net.WebClient.OpenWrite">
          <element api="M:System.Net.WebClient.OpenWrite(System.String)" />
          <element api="M:System.Net.WebClient.OpenWrite(System.Uri)" />
          <element api="M:System.Net.WebClient.OpenWrite(System.String,System.String)" />
          <element api="M:System.Net.WebClient.OpenWrite(System.Uri,System.String)" />
        </element>
        <element api="Overload:System.Net.WebClient.OpenWriteAsync">
          <element api="M:System.Net.WebClient.OpenWriteAsync(System.Uri)" />
          <element api="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String)" />
          <element api="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object)" />
        </element>
        <element api="Overload:System.Net.WebClient.OpenWriteTaskAsync">
          <element api="M:System.Net.WebClient.OpenWriteTaskAsync(System.String)" />
          <element api="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri)" />
          <element api="M:System.Net.WebClient.OpenWriteTaskAsync(System.String,System.String)" />
          <element api="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri,System.String)" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadData">
          <element api="M:System.Net.WebClient.UploadData(System.String,System.Byte[])" />
          <element api="M:System.Net.WebClient.UploadData(System.Uri,System.Byte[])" />
          <element api="M:System.Net.WebClient.UploadData(System.String,System.String,System.Byte[])" />
          <element api="M:System.Net.WebClient.UploadData(System.Uri,System.String,System.Byte[])" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadDataAsync">
          <element api="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.Byte[])" />
          <element api="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[])" />
          <element api="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[],System.Object)" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadDataTaskAsync">
          <element api="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.Byte[])" />
          <element api="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.Byte[])" />
          <element api="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.String,System.Byte[])" />
          <element api="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.String,System.Byte[])" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadFile">
          <element api="M:System.Net.WebClient.UploadFile(System.String,System.String)" />
          <element api="M:System.Net.WebClient.UploadFile(System.Uri,System.String)" />
          <element api="M:System.Net.WebClient.UploadFile(System.String,System.String,System.String)" />
          <element api="M:System.Net.WebClient.UploadFile(System.Uri,System.String,System.String)" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadFileAsync">
          <element api="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String)" />
          <element api="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String)" />
          <element api="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String,System.Object)" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadFileTaskAsync">
          <element api="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String)" />
          <element api="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String)" />
          <element api="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String,System.String)" />
          <element api="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String,System.String)" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadString">
          <element api="M:System.Net.WebClient.UploadString(System.String,System.String)" />
          <element api="M:System.Net.WebClient.UploadString(System.Uri,System.String)" />
          <element api="M:System.Net.WebClient.UploadString(System.String,System.String,System.String)" />
          <element api="M:System.Net.WebClient.UploadString(System.Uri,System.String,System.String)" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadStringAsync">
          <element api="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String)" />
          <element api="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String)" />
          <element api="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object)" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadStringTaskAsync">
          <element api="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String)" />
          <element api="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String)" />
          <element api="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String,System.String)" />
          <element api="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String,System.String)" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadValues">
          <element api="M:System.Net.WebClient.UploadValues(System.String,System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Net.WebClient.UploadValues(System.Uri,System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Net.WebClient.UploadValues(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Net.WebClient.UploadValues(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadValuesAsync">
          <element api="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Object)" />
        </element>
        <element api="Overload:System.Net.WebClient.UploadValuesTaskAsync">
          <element api="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.WebClient">
      <topicdata name="WebClient" group="list" subgroup="Properties" typeTopicId="T:System.Net.WebClient" />
      <apidata name="WebClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.WebClient.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Net.WebClient.BaseAddress" />
        <element api="P:System.Net.WebClient.CachePolicy" />
        <element api="P:System.Net.WebClient.Credentials" />
        <element api="P:System.Net.WebClient.Encoding" />
        <element api="P:System.Net.WebClient.Headers" />
        <element api="P:System.Net.WebClient.IsBusy" />
        <element api="P:System.Net.WebClient.Proxy" />
        <element api="P:System.Net.WebClient.QueryString" />
        <element api="P:System.Net.WebClient.ResponseHeaders" />
        <element api="P:System.Net.WebClient.UseDefaultCredentials" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" />
      </containers>
    </api>
    <api id="Events.T:System.Net.WebClient">
      <topicdata name="WebClient" group="list" subgroup="Events" typeTopicId="T:System.Net.WebClient" />
      <apidata name="WebClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.WebClient.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Net.WebClient.DownloadDataCompleted" />
        <element api="E:System.Net.WebClient.DownloadFileCompleted" />
        <element api="E:System.Net.WebClient.DownloadProgressChanged" />
        <element api="E:System.Net.WebClient.DownloadStringCompleted" />
        <element api="E:System.Net.WebClient.OpenReadCompleted" />
        <element api="E:System.Net.WebClient.OpenWriteCompleted" />
        <element api="E:System.Net.WebClient.UploadDataCompleted" />
        <element api="E:System.Net.WebClient.UploadFileCompleted" />
        <element api="E:System.Net.WebClient.UploadProgressChanged" />
        <element api="E:System.Net.WebClient.UploadStringCompleted" />
        <element api="E:System.Net.WebClient.UploadValuesCompleted" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.DownloadData">
      <topicdata name="DownloadData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="DownloadData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.DownloadData(System.String)" />
        <element api="M:System.Net.WebClient.DownloadData(System.Uri)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.DownloadDataAsync">
      <topicdata name="DownloadDataAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="DownloadDataAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.DownloadDataAsync(System.Uri)" />
        <element api="M:System.Net.WebClient.DownloadDataAsync(System.Uri,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.DownloadDataTaskAsync">
      <topicdata name="DownloadDataTaskAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="DownloadDataTaskAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.DownloadDataTaskAsync(System.String)" />
        <element api="M:System.Net.WebClient.DownloadDataTaskAsync(System.Uri)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.DownloadFile">
      <topicdata name="DownloadFile" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="DownloadFile" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.DownloadFile(System.String,System.String)" />
        <element api="M:System.Net.WebClient.DownloadFile(System.Uri,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.DownloadFileAsync">
      <topicdata name="DownloadFileAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="DownloadFileAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String)" />
        <element api="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.DownloadFileTaskAsync">
      <topicdata name="DownloadFileTaskAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="DownloadFileTaskAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.DownloadFileTaskAsync(System.String,System.String)" />
        <element api="M:System.Net.WebClient.DownloadFileTaskAsync(System.Uri,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.DownloadString">
      <topicdata name="DownloadString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="DownloadString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.DownloadString(System.String)" />
        <element api="M:System.Net.WebClient.DownloadString(System.Uri)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.DownloadStringAsync">
      <topicdata name="DownloadStringAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="DownloadStringAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.DownloadStringAsync(System.Uri)" />
        <element api="M:System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.DownloadStringTaskAsync">
      <topicdata name="DownloadStringTaskAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="DownloadStringTaskAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.DownloadStringTaskAsync(System.String)" />
        <element api="M:System.Net.WebClient.DownloadStringTaskAsync(System.Uri)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.GetWebResponse">
      <topicdata name="GetWebResponse" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetWebResponse" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest)" />
        <element api="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.OpenRead">
      <topicdata name="OpenRead" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OpenRead" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.OpenRead(System.String)" />
        <element api="M:System.Net.WebClient.OpenRead(System.Uri)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.OpenReadAsync">
      <topicdata name="OpenReadAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OpenReadAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.OpenReadAsync(System.Uri)" />
        <element api="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.OpenReadTaskAsync">
      <topicdata name="OpenReadTaskAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OpenReadTaskAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.OpenReadTaskAsync(System.String)" />
        <element api="M:System.Net.WebClient.OpenReadTaskAsync(System.Uri)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.OpenWrite">
      <topicdata name="OpenWrite" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OpenWrite" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.OpenWrite(System.String)" />
        <element api="M:System.Net.WebClient.OpenWrite(System.Uri)" />
        <element api="M:System.Net.WebClient.OpenWrite(System.String,System.String)" />
        <element api="M:System.Net.WebClient.OpenWrite(System.Uri,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.OpenWriteAsync">
      <topicdata name="OpenWriteAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OpenWriteAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.OpenWriteAsync(System.Uri)" />
        <element api="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String)" />
        <element api="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.OpenWriteTaskAsync">
      <topicdata name="OpenWriteTaskAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OpenWriteTaskAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.OpenWriteTaskAsync(System.String)" />
        <element api="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri)" />
        <element api="M:System.Net.WebClient.OpenWriteTaskAsync(System.String,System.String)" />
        <element api="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.UploadData">
      <topicdata name="UploadData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UploadData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.UploadData(System.String,System.Byte[])" />
        <element api="M:System.Net.WebClient.UploadData(System.Uri,System.Byte[])" />
        <element api="M:System.Net.WebClient.UploadData(System.String,System.String,System.Byte[])" />
        <element api="M:System.Net.WebClient.UploadData(System.Uri,System.String,System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.UploadDataAsync">
      <topicdata name="UploadDataAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UploadDataAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.Byte[])" />
        <element api="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[])" />
        <element api="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[],System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.UploadDataTaskAsync">
      <topicdata name="UploadDataTaskAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UploadDataTaskAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.Byte[])" />
        <element api="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.Byte[])" />
        <element api="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.String,System.Byte[])" />
        <element api="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.String,System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.UploadFile">
      <topicdata name="UploadFile" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UploadFile" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.UploadFile(System.String,System.String)" />
        <element api="M:System.Net.WebClient.UploadFile(System.Uri,System.String)" />
        <element api="M:System.Net.WebClient.UploadFile(System.String,System.String,System.String)" />
        <element api="M:System.Net.WebClient.UploadFile(System.Uri,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.UploadFileAsync">
      <topicdata name="UploadFileAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UploadFileAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String)" />
        <element api="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String)" />
        <element api="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.UploadFileTaskAsync">
      <topicdata name="UploadFileTaskAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UploadFileTaskAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String)" />
        <element api="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String)" />
        <element api="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String,System.String)" />
        <element api="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.UploadString">
      <topicdata name="UploadString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UploadString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.UploadString(System.String,System.String)" />
        <element api="M:System.Net.WebClient.UploadString(System.Uri,System.String)" />
        <element api="M:System.Net.WebClient.UploadString(System.String,System.String,System.String)" />
        <element api="M:System.Net.WebClient.UploadString(System.Uri,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.UploadStringAsync">
      <topicdata name="UploadStringAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UploadStringAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String)" />
        <element api="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String)" />
        <element api="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.UploadStringTaskAsync">
      <topicdata name="UploadStringTaskAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UploadStringTaskAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String)" />
        <element api="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String)" />
        <element api="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String,System.String)" />
        <element api="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.UploadValues">
      <topicdata name="UploadValues" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UploadValues" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.UploadValues(System.String,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Net.WebClient.UploadValues(System.Uri,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Net.WebClient.UploadValues(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Net.WebClient.UploadValues(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.UploadValuesAsync">
      <topicdata name="UploadValuesAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UploadValuesAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebClient.UploadValuesTaskAsync">
      <topicdata name="UploadValuesTaskAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UploadValuesTaskAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebClient.BaseAddress">
      <topicdata group="api" />
      <apidata name="BaseAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BaseAddress" />
      <setter name="set_BaseAddress" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebClient.CachePolicy">
      <topicdata group="api" />
      <apidata name="CachePolicy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CachePolicy" />
      <setter name="set_CachePolicy" />
      <returns>
        <type api="T:System.Net.Cache.RequestCachePolicy" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.CancelAsync">
      <topicdata group="api" />
      <apidata name="CancelAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebClient.Credentials">
      <topicdata group="api" />
      <apidata name="Credentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Credentials" />
      <setter name="set_Credentials" />
      <returns>
        <type api="T:System.Net.ICredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.DownloadData(System.String)">
      <topicdata group="api" />
      <apidata name="DownloadData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.DownloadData" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.DownloadData(System.Uri)">
      <topicdata group="api" />
      <apidata name="DownloadData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.DownloadData" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.DownloadDataAsync(System.Uri)">
      <topicdata group="api" />
      <apidata name="DownloadDataAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.DownloadDataAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.DownloadDataAsync(System.Uri,System.Object)">
      <topicdata group="api" />
      <apidata name="DownloadDataAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.DownloadDataAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Net.WebClient.DownloadDataCompleted">
      <topicdata group="api" />
      <apidata name="DownloadDataCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_DownloadDataCompleted" />
      <remover name="remove_DownloadDataCompleted" />
      <eventhandler>
        <type api="T:System.Net.DownloadDataCompletedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.DownloadDataCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.DownloadDataTaskAsync(System.String)">
      <topicdata group="api" />
      <apidata name="DownloadDataTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.DownloadDataTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.DownloadDataTaskAsync(System.Uri)">
      <topicdata group="api" />
      <apidata name="DownloadDataTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.DownloadDataTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.DownloadFile(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="DownloadFile" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.DownloadFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.DownloadFile(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="DownloadFile" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.DownloadFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="DownloadFileAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.DownloadFileAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="DownloadFileAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.DownloadFileAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Net.WebClient.DownloadFileCompleted">
      <topicdata group="api" />
      <apidata name="DownloadFileCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_DownloadFileCompleted" />
      <remover name="remove_DownloadFileCompleted" />
      <eventhandler>
        <type api="T:System.ComponentModel.AsyncCompletedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.DownloadFileTaskAsync(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="DownloadFileTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.DownloadFileTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.DownloadFileTaskAsync(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="DownloadFileTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.DownloadFileTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Net.WebClient.DownloadProgressChanged">
      <topicdata group="api" />
      <apidata name="DownloadProgressChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_DownloadProgressChanged" />
      <remover name="remove_DownloadProgressChanged" />
      <eventhandler>
        <type api="T:System.Net.DownloadProgressChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.DownloadProgressChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.DownloadString(System.String)">
      <topicdata group="api" />
      <apidata name="DownloadString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.DownloadString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.DownloadString(System.Uri)">
      <topicdata group="api" />
      <apidata name="DownloadString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.DownloadString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.DownloadStringAsync(System.Uri)">
      <topicdata group="api" />
      <apidata name="DownloadStringAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.DownloadStringAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object)">
      <topicdata group="api" />
      <apidata name="DownloadStringAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.DownloadStringAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Net.WebClient.DownloadStringCompleted">
      <topicdata group="api" />
      <apidata name="DownloadStringCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_DownloadStringCompleted" />
      <remover name="remove_DownloadStringCompleted" />
      <eventhandler>
        <type api="T:System.Net.DownloadStringCompletedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.DownloadStringCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.DownloadStringTaskAsync(System.String)">
      <topicdata group="api" />
      <apidata name="DownloadStringTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.DownloadStringTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.DownloadStringTaskAsync(System.Uri)">
      <topicdata group="api" />
      <apidata name="DownloadStringTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.DownloadStringTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Net.WebClient.Encoding">
      <topicdata group="api" />
      <apidata name="Encoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Encoding" />
      <setter name="set_Encoding" />
      <returns>
        <type api="T:System.Text.Encoding" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.GetWebRequest(System.Uri)">
      <topicdata group="api" />
      <apidata name="GetWebRequest" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.WebRequest" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest)">
      <topicdata group="api" />
      <apidata name="GetWebResponse" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.WebClient.GetWebResponse" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Net.WebRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.WebResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="GetWebResponse" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.WebClient.GetWebResponse" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Net.WebRequest" ref="true" />
        </parameter>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.WebResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebClient.Headers">
      <topicdata group="api" />
      <apidata name="Headers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Headers" />
      <setter name="set_Headers" />
      <returns>
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebClient.IsBusy">
      <topicdata group="api" />
      <apidata name="IsBusy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsBusy" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnDownloadDataCompleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Net.DownloadDataCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnDownloadFileCompleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnDownloadProgressChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Net.DownloadProgressChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnDownloadStringCompleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Net.DownloadStringCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnOpenReadCompleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Net.OpenReadCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnOpenWriteCompleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Net.OpenWriteCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnUploadDataCompleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Net.UploadDataCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnUploadFileCompleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Net.UploadFileCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnUploadProgressChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Net.UploadProgressChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnUploadStringCompleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Net.UploadStringCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnUploadValuesCompleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Net.UploadValuesCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.OpenRead(System.String)">
      <topicdata group="api" />
      <apidata name="OpenRead" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.OpenRead" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.OpenRead(System.Uri)">
      <topicdata group="api" />
      <apidata name="OpenRead" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.OpenRead" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.OpenReadAsync(System.Uri)">
      <topicdata group="api" />
      <apidata name="OpenReadAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.OpenReadAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)">
      <topicdata group="api" />
      <apidata name="OpenReadAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.OpenReadAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Net.WebClient.OpenReadCompleted">
      <topicdata group="api" />
      <apidata name="OpenReadCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_OpenReadCompleted" />
      <remover name="remove_OpenReadCompleted" />
      <eventhandler>
        <type api="T:System.Net.OpenReadCompletedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.OpenReadCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.OpenReadTaskAsync(System.String)">
      <topicdata group="api" />
      <apidata name="OpenReadTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.OpenReadTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.IO.Stream" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.OpenReadTaskAsync(System.Uri)">
      <topicdata group="api" />
      <apidata name="OpenReadTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.OpenReadTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.IO.Stream" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.OpenWrite(System.String)">
      <topicdata group="api" />
      <apidata name="OpenWrite" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.OpenWrite" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.OpenWrite(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="OpenWrite" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.OpenWrite" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.OpenWrite(System.Uri)">
      <topicdata group="api" />
      <apidata name="OpenWrite" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.OpenWrite" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.OpenWrite(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="OpenWrite" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.OpenWrite" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.OpenWriteAsync(System.Uri)">
      <topicdata group="api" />
      <apidata name="OpenWriteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.OpenWriteAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="OpenWriteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.OpenWriteAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="OpenWriteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.OpenWriteAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Net.WebClient.OpenWriteCompleted">
      <topicdata group="api" />
      <apidata name="OpenWriteCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_OpenWriteCompleted" />
      <remover name="remove_OpenWriteCompleted" />
      <eventhandler>
        <type api="T:System.Net.OpenWriteCompletedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.OpenWriteCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.OpenWriteTaskAsync(System.String)">
      <topicdata group="api" />
      <apidata name="OpenWriteTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.OpenWriteTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.IO.Stream" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.OpenWriteTaskAsync(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="OpenWriteTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.OpenWriteTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.IO.Stream" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri)">
      <topicdata group="api" />
      <apidata name="OpenWriteTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.OpenWriteTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.IO.Stream" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="OpenWriteTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.OpenWriteTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.IO.Stream" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Net.WebClient.Proxy">
      <topicdata group="api" />
      <apidata name="Proxy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Proxy" />
      <setter name="set_Proxy" />
      <returns>
        <type api="T:System.Net.IWebProxy" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebClient.QueryString">
      <topicdata group="api" />
      <apidata name="QueryString" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_QueryString" />
      <setter name="set_QueryString" />
      <returns>
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebClient.ResponseHeaders">
      <topicdata group="api" />
      <apidata name="ResponseHeaders" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ResponseHeaders" />
      <returns>
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadData(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="UploadData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadData" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadData(System.String,System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="UploadData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadData" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadData(System.Uri,System.Byte[])">
      <topicdata group="api" />
      <apidata name="UploadData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadData" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadData(System.Uri,System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="UploadData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadData" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.Byte[])">
      <topicdata group="api" />
      <apidata name="UploadDataAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadDataAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="UploadDataAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadDataAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[],System.Object)">
      <topicdata group="api" />
      <apidata name="UploadDataAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadDataAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Net.WebClient.UploadDataCompleted">
      <topicdata group="api" />
      <apidata name="UploadDataCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_UploadDataCompleted" />
      <remover name="remove_UploadDataCompleted" />
      <eventhandler>
        <type api="T:System.Net.UploadDataCompletedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.UploadDataCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="UploadDataTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadDataTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="UploadDataTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadDataTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.Byte[])">
      <topicdata group="api" />
      <apidata name="UploadDataTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadDataTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="UploadDataTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadDataTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadFile(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UploadFile" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadFile(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UploadFile" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadFile(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="UploadFile" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadFile(System.Uri,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UploadFile" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="UploadFileAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadFileAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UploadFileAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadFileAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="UploadFileAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadFileAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Net.WebClient.UploadFileCompleted">
      <topicdata group="api" />
      <apidata name="UploadFileCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_UploadFileCompleted" />
      <remover name="remove_UploadFileCompleted" />
      <eventhandler>
        <type api="T:System.Net.UploadFileCompletedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.UploadFileCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UploadFileTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadFileTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UploadFileTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadFileTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="UploadFileTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadFileTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UploadFileTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadFileTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Net.WebClient.UploadProgressChanged">
      <topicdata group="api" />
      <apidata name="UploadProgressChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_UploadProgressChanged" />
      <remover name="remove_UploadProgressChanged" />
      <eventhandler>
        <type api="T:System.Net.UploadProgressChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.UploadProgressChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadString(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UploadString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadString(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UploadString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadString(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="UploadString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadString(System.Uri,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UploadString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="UploadStringAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadStringAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UploadStringAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadStringAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="UploadStringAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadStringAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Net.WebClient.UploadStringCompleted">
      <topicdata group="api" />
      <apidata name="UploadStringCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_UploadStringCompleted" />
      <remover name="remove_UploadStringCompleted" />
      <eventhandler>
        <type api="T:System.Net.UploadStringCompletedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.UploadStringCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UploadStringTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadStringTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UploadStringTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadStringTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="UploadStringTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadStringTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UploadStringTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadStringTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadValues(System.String,System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name="UploadValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadValues" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadValues(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name="UploadValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadValues" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadValues(System.Uri,System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name="UploadValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadValues" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadValues(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name="UploadValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadValues" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name="UploadValuesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadValuesAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name="UploadValuesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadValuesAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Object)">
      <topicdata group="api" />
      <apidata name="UploadValuesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadValuesAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Net.WebClient.UploadValuesCompleted">
      <topicdata group="api" />
      <apidata name="UploadValuesCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_UploadValuesCompleted" />
      <remover name="remove_UploadValuesCompleted" />
      <eventhandler>
        <type api="T:System.Net.UploadValuesCompletedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.UploadValuesCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name="UploadValuesTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadValuesTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name="UploadValuesTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadValuesTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name="UploadValuesTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadValuesTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name="UploadValuesTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebClient.UploadValuesTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Net.WebClient.UseDefaultCredentials">
      <topicdata group="api" />
      <apidata name="UseDefaultCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseDefaultCredentials" />
      <setter name="set_UseDefaultCredentials" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebClient" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.WebException">
      <topicdata group="api" />
      <apidata name="WebException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.WebException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.InvalidOperationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.Net.WebException.#ctor">
          <element api="M:System.Net.WebException.#ctor" />
          <element api="M:System.Net.WebException.#ctor(System.String)" />
          <element api="M:System.Net.WebException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Net.WebException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Net.WebException.#ctor(System.String,System.Net.WebExceptionStatus)" />
          <element api="M:System.Net.WebException.#ctor(System.String,System.Exception,System.Net.WebExceptionStatus,System.Net.WebResponse)" />
        </element>
        <element api="M:System.Net.WebException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.WebException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Net.WebException.Response" />
        <element api="P:System.Net.WebException.Status" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.WebException">
      <topicdata name="WebException" group="list" subgroup="Methods" typeTopicId="T:System.Net.WebException" />
      <apidata name="WebException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.WebException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Net.WebException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.WebException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebException" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.WebException">
      <topicdata name="WebException" group="list" subgroup="Properties" typeTopicId="T:System.Net.WebException" />
      <apidata name="WebException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.WebException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Net.WebException.Response" />
        <element api="P:System.Net.WebException.Status" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebException" />
      </containers>
    </api>
    <api id="Events.T:System.Net.WebException">
      <topicdata name="WebException" group="list" subgroup="Events" typeTopicId="T:System.Net.WebException" />
      <apidata name="WebException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.WebException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebException" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.WebException.#ctor" />
        <element api="M:System.Net.WebException.#ctor(System.String)" />
        <element api="M:System.Net.WebException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.WebException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Net.WebException.#ctor(System.String,System.Net.WebExceptionStatus)" />
        <element api="M:System.Net.WebException.#ctor(System.String,System.Exception,System.Net.WebExceptionStatus,System.Net.WebResponse)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.WebException.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.WebException.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.WebException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.WebException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebException.#ctor(System.String,System.Exception,System.Net.WebExceptionStatus,System.Net.WebResponse)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.WebException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="status">
          <type api="T:System.Net.WebExceptionStatus" ref="false" />
        </parameter>
        <parameter name="response">
          <type api="T:System.Net.WebResponse" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebException.#ctor(System.String,System.Net.WebExceptionStatus)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.WebException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="status">
          <type api="T:System.Net.WebExceptionStatus" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebException.Response">
      <topicdata group="api" />
      <apidata name="Response" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Response" />
      <returns>
        <type api="T:System.Net.WebResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebException.Status">
      <topicdata group="api" />
      <apidata name="Status" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Status" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.WebExceptionStatus">
      <topicdata group="api" />
      <apidata name="WebExceptionStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.WebExceptionStatus.Success" />
        <element api="F:System.Net.WebExceptionStatus.NameResolutionFailure" />
        <element api="F:System.Net.WebExceptionStatus.ConnectFailure" />
        <element api="F:System.Net.WebExceptionStatus.ReceiveFailure" />
        <element api="F:System.Net.WebExceptionStatus.SendFailure" />
        <element api="F:System.Net.WebExceptionStatus.PipelineFailure" />
        <element api="F:System.Net.WebExceptionStatus.RequestCanceled" />
        <element api="F:System.Net.WebExceptionStatus.ProtocolError" />
        <element api="F:System.Net.WebExceptionStatus.ConnectionClosed" />
        <element api="F:System.Net.WebExceptionStatus.TrustFailure" />
        <element api="F:System.Net.WebExceptionStatus.SecureChannelFailure" />
        <element api="F:System.Net.WebExceptionStatus.ServerProtocolViolation" />
        <element api="F:System.Net.WebExceptionStatus.KeepAliveFailure" />
        <element api="F:System.Net.WebExceptionStatus.Pending" />
        <element api="F:System.Net.WebExceptionStatus.Timeout" />
        <element api="F:System.Net.WebExceptionStatus.ProxyNameResolutionFailure" />
        <element api="F:System.Net.WebExceptionStatus.UnknownError" />
        <element api="F:System.Net.WebExceptionStatus.MessageLengthLimitExceeded" />
        <element api="F:System.Net.WebExceptionStatus.CacheEntryNotFound" />
        <element api="F:System.Net.WebExceptionStatus.RequestProhibitedByCachePolicy" />
        <element api="F:System.Net.WebExceptionStatus.RequestProhibitedByProxy" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="F:System.Net.WebExceptionStatus.CacheEntryNotFound">
      <topicdata group="api" notopic="" />
      <apidata name="CacheEntryNotFound" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <value>18</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.WebExceptionStatus.ConnectFailure">
      <topicdata group="api" notopic="" />
      <apidata name="ConnectFailure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.WebExceptionStatus.ConnectionClosed">
      <topicdata group="api" notopic="" />
      <apidata name="ConnectionClosed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.WebExceptionStatus.KeepAliveFailure">
      <topicdata group="api" notopic="" />
      <apidata name="KeepAliveFailure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.WebExceptionStatus.MessageLengthLimitExceeded">
      <topicdata group="api" notopic="" />
      <apidata name="MessageLengthLimitExceeded" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <value>17</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.WebExceptionStatus.NameResolutionFailure">
      <topicdata group="api" notopic="" />
      <apidata name="NameResolutionFailure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.WebExceptionStatus.Pending">
      <topicdata group="api" notopic="" />
      <apidata name="Pending" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.WebExceptionStatus.PipelineFailure">
      <topicdata group="api" notopic="" />
      <apidata name="PipelineFailure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.WebExceptionStatus.ProtocolError">
      <topicdata group="api" notopic="" />
      <apidata name="ProtocolError" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.WebExceptionStatus.ProxyNameResolutionFailure">
      <topicdata group="api" notopic="" />
      <apidata name="ProxyNameResolutionFailure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.WebExceptionStatus.ReceiveFailure">
      <topicdata group="api" notopic="" />
      <apidata name="ReceiveFailure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.WebExceptionStatus.RequestCanceled">
      <topicdata group="api" notopic="" />
      <apidata name="RequestCanceled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.WebExceptionStatus.RequestProhibitedByCachePolicy">
      <topicdata group="api" notopic="" />
      <apidata name="RequestProhibitedByCachePolicy" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <value>19</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.WebExceptionStatus.RequestProhibitedByProxy">
      <topicdata group="api" notopic="" />
      <apidata name="RequestProhibitedByProxy" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <value>20</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.WebExceptionStatus.SecureChannelFailure">
      <topicdata group="api" notopic="" />
      <apidata name="SecureChannelFailure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.WebExceptionStatus.SendFailure">
      <topicdata group="api" notopic="" />
      <apidata name="SendFailure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.WebExceptionStatus.ServerProtocolViolation">
      <topicdata group="api" notopic="" />
      <apidata name="ServerProtocolViolation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.WebExceptionStatus.Success">
      <topicdata group="api" notopic="" />
      <apidata name="Success" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.WebExceptionStatus.Timeout">
      <topicdata group="api" notopic="" />
      <apidata name="Timeout" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <value>14</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.WebExceptionStatus.TrustFailure">
      <topicdata group="api" notopic="" />
      <apidata name="TrustFailure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.WebExceptionStatus.UnknownError">
      <topicdata group="api" notopic="" />
      <apidata name="UnknownError" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebExceptionStatus" ref="false" />
      </containers>
    </api>
    <api id="T:System.Net.WebHeaderCollection">
      <topicdata group="api" />
      <apidata name="WebHeaderCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.WebHeaderCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear" />
        <element api="Overload:System.Net.WebHeaderCollection.BaseGet">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)" />
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys" />
        <element api="Overload:System.Net.WebHeaderCollection.BaseGetAllValues">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)" />
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)" />
        <element api="Overload:System.Net.WebHeaderCollection.BaseSet">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)" />
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Specialized.NameValueCollection.HasKeys" />
        <element api="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays" />
        <element api="Overload:System.Net.WebHeaderCollection.#ctor">
          <element api="M:System.Net.WebHeaderCollection.#ctor" />
          <element api="M:System.Net.WebHeaderCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="Overload:System.Net.WebHeaderCollection.Add">
          <element api="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Net.WebHeaderCollection.Add(System.String)" />
          <element api="M:System.Net.WebHeaderCollection.Add(System.Net.HttpRequestHeader,System.String)" />
          <element api="M:System.Net.WebHeaderCollection.Add(System.Net.HttpResponseHeader,System.String)" />
          <element api="M:System.Net.WebHeaderCollection.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Net.WebHeaderCollection.AddWithoutValidate(System.String,System.String)" />
        <element api="M:System.Net.WebHeaderCollection.Clear" />
        <element api="Overload:System.Net.WebHeaderCollection.Get">
          <element api="M:System.Net.WebHeaderCollection.Get(System.Int32)" />
          <element api="M:System.Net.WebHeaderCollection.Get(System.String)" />
        </element>
        <element api="M:System.Net.WebHeaderCollection.GetEnumerator" />
        <element api="M:System.Net.WebHeaderCollection.GetKey(System.Int32)" />
        <element api="M:System.Net.WebHeaderCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Net.WebHeaderCollection.GetValues">
          <element api="M:System.Net.WebHeaderCollection.GetValues(System.Int32)" />
          <element api="M:System.Net.WebHeaderCollection.GetValues(System.String)" />
        </element>
        <element api="Overload:System.Net.WebHeaderCollection.IsRestricted">
          <element api="M:System.Net.WebHeaderCollection.IsRestricted(System.String)" />
          <element api="M:System.Net.WebHeaderCollection.IsRestricted(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Net.WebHeaderCollection.OnDeserialization(System.Object)" />
        <element api="Overload:System.Net.WebHeaderCollection.Remove">
          <element api="M:System.Net.WebHeaderCollection.Remove(System.Net.HttpRequestHeader)" />
          <element api="M:System.Net.WebHeaderCollection.Remove(System.Net.HttpResponseHeader)" />
          <element api="M:System.Net.WebHeaderCollection.Remove(System.String)" />
        </element>
        <element api="Overload:System.Net.WebHeaderCollection.Set">
          <element api="M:System.Net.WebHeaderCollection.Set(System.Net.HttpRequestHeader,System.String)" />
          <element api="M:System.Net.WebHeaderCollection.Set(System.Net.HttpResponseHeader,System.String)" />
          <element api="M:System.Net.WebHeaderCollection.Set(System.String,System.String)" />
        </element>
        <element api="M:System.Net.WebHeaderCollection.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.WebHeaderCollection.ToByteArray" />
        <element api="M:System.Net.WebHeaderCollection.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Net.WebHeaderCollection.AllKeys" />
        <element api="P:System.Net.WebHeaderCollection.Count" />
        <element api="Overload:System.Net.WebHeaderCollection.Item">
          <element api="P:System.Net.WebHeaderCollection.Item(System.Net.HttpRequestHeader)" />
          <element api="P:System.Net.WebHeaderCollection.Item(System.Net.HttpResponseHeader)" />
          <element api="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)" />
          <element api="P:System.Collections.Specialized.NameValueCollection.Item(System.String)" />
        </element>
        <element api="P:System.Net.WebHeaderCollection.Keys" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Net.WebHeaderCollection">
      <topicdata name="WebHeaderCollection" group="list" subgroup="Methods" typeTopicId="T:System.Net.WebHeaderCollection" />
      <apidata name="WebHeaderCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.WebHeaderCollection.#ctor" />
      <elements>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear" />
        <element api="Overload:System.Net.WebHeaderCollection.BaseGet">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)" />
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys" />
        <element api="Overload:System.Net.WebHeaderCollection.BaseGetAllValues">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)" />
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)" />
        <element api="Overload:System.Net.WebHeaderCollection.BaseSet">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)" />
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Specialized.NameValueCollection.HasKeys" />
        <element api="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays" />
        <element api="Overload:System.Net.WebHeaderCollection.Add">
          <element api="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Net.WebHeaderCollection.Add(System.String)" />
          <element api="M:System.Net.WebHeaderCollection.Add(System.Net.HttpRequestHeader,System.String)" />
          <element api="M:System.Net.WebHeaderCollection.Add(System.Net.HttpResponseHeader,System.String)" />
          <element api="M:System.Net.WebHeaderCollection.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Net.WebHeaderCollection.AddWithoutValidate(System.String,System.String)" />
        <element api="M:System.Net.WebHeaderCollection.Clear" />
        <element api="Overload:System.Net.WebHeaderCollection.Get">
          <element api="M:System.Net.WebHeaderCollection.Get(System.Int32)" />
          <element api="M:System.Net.WebHeaderCollection.Get(System.String)" />
        </element>
        <element api="M:System.Net.WebHeaderCollection.GetEnumerator" />
        <element api="M:System.Net.WebHeaderCollection.GetKey(System.Int32)" />
        <element api="M:System.Net.WebHeaderCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Net.WebHeaderCollection.GetValues">
          <element api="M:System.Net.WebHeaderCollection.GetValues(System.Int32)" />
          <element api="M:System.Net.WebHeaderCollection.GetValues(System.String)" />
        </element>
        <element api="Overload:System.Net.WebHeaderCollection.IsRestricted">
          <element api="M:System.Net.WebHeaderCollection.IsRestricted(System.String)" />
          <element api="M:System.Net.WebHeaderCollection.IsRestricted(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Net.WebHeaderCollection.OnDeserialization(System.Object)" />
        <element api="Overload:System.Net.WebHeaderCollection.Remove">
          <element api="M:System.Net.WebHeaderCollection.Remove(System.Net.HttpRequestHeader)" />
          <element api="M:System.Net.WebHeaderCollection.Remove(System.Net.HttpResponseHeader)" />
          <element api="M:System.Net.WebHeaderCollection.Remove(System.String)" />
        </element>
        <element api="Overload:System.Net.WebHeaderCollection.Set">
          <element api="M:System.Net.WebHeaderCollection.Set(System.Net.HttpRequestHeader,System.String)" />
          <element api="M:System.Net.WebHeaderCollection.Set(System.Net.HttpResponseHeader,System.String)" />
          <element api="M:System.Net.WebHeaderCollection.Set(System.String,System.String)" />
        </element>
        <element api="M:System.Net.WebHeaderCollection.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.WebHeaderCollection.ToByteArray" />
        <element api="M:System.Net.WebHeaderCollection.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.WebHeaderCollection">
      <topicdata name="WebHeaderCollection" group="list" subgroup="Properties" typeTopicId="T:System.Net.WebHeaderCollection" />
      <apidata name="WebHeaderCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.WebHeaderCollection.#ctor" />
      <elements>
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Net.WebHeaderCollection.AllKeys" />
        <element api="P:System.Net.WebHeaderCollection.Count" />
        <element api="Overload:System.Net.WebHeaderCollection.Item">
          <element api="P:System.Net.WebHeaderCollection.Item(System.Net.HttpRequestHeader)" />
          <element api="P:System.Net.WebHeaderCollection.Item(System.Net.HttpResponseHeader)" />
          <element api="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)" />
          <element api="P:System.Collections.Specialized.NameValueCollection.Item(System.String)" />
        </element>
        <element api="P:System.Net.WebHeaderCollection.Keys" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebHeaderCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.WebHeaderCollection.#ctor" />
        <element api="M:System.Net.WebHeaderCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebHeaderCollection.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Net.WebHeaderCollection.Add(System.String)" />
        <element api="M:System.Net.WebHeaderCollection.Add(System.Net.HttpRequestHeader,System.String)" />
        <element api="M:System.Net.WebHeaderCollection.Add(System.Net.HttpResponseHeader,System.String)" />
        <element api="M:System.Net.WebHeaderCollection.Add(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebHeaderCollection.Get">
      <topicdata name="Get" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Get" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebHeaderCollection.Get(System.Int32)" />
        <element api="M:System.Net.WebHeaderCollection.Get(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebHeaderCollection.GetValues">
      <topicdata name="GetValues" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetValues" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebHeaderCollection.GetValues(System.Int32)" />
        <element api="M:System.Net.WebHeaderCollection.GetValues(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebHeaderCollection.IsRestricted">
      <topicdata name="IsRestricted" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="IsRestricted" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebHeaderCollection.IsRestricted(System.String)" />
        <element api="M:System.Net.WebHeaderCollection.IsRestricted(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebHeaderCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Net.WebHeaderCollection.Item(System.Net.HttpRequestHeader)" />
        <element api="P:System.Net.WebHeaderCollection.Item(System.Net.HttpResponseHeader)" />
        <element api="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)" />
        <element api="P:System.Collections.Specialized.NameValueCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebHeaderCollection.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebHeaderCollection.Remove(System.Net.HttpRequestHeader)" />
        <element api="M:System.Net.WebHeaderCollection.Remove(System.Net.HttpResponseHeader)" />
        <element api="M:System.Net.WebHeaderCollection.Remove(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebHeaderCollection.Set">
      <topicdata name="Set" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Set" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebHeaderCollection.Set(System.Net.HttpRequestHeader,System.String)" />
        <element api="M:System.Net.WebHeaderCollection.Set(System.Net.HttpResponseHeader,System.String)" />
        <element api="M:System.Net.WebHeaderCollection.Set(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.WebHeaderCollection.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.WebHeaderCollection.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.Add(System.Net.HttpRequestHeader,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebHeaderCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="header">
          <type api="T:System.Net.HttpRequestHeader" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.Add(System.Net.HttpResponseHeader,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebHeaderCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="header">
          <type api="T:System.Net.HttpResponseHeader" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.Add(System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebHeaderCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="header">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.Add(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebHeaderCollection.Add" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.AddWithoutValidate(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AddWithoutValidate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="headerName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="headerValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebHeaderCollection.AllKeys">
      <topicdata group="api" />
      <apidata name="AllKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Collections.Specialized.NameValueCollection.AllKeys">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_AllKeys" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Specialized.NameValueCollection.Clear">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebHeaderCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Collections.Specialized.NameObjectCollectionBase.Count">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.Get(System.Int32)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebHeaderCollection.Get" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.Get(System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebHeaderCollection.Get" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Specialized.NameValueCollection.Get(System.String)">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.GetKey(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.GetValues(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebHeaderCollection.GetValues" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.GetValues(System.String)">
      <topicdata group="api" />
      <apidata name="GetValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebHeaderCollection.GetValues" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="header">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.IsRestricted(System.String)">
      <topicdata group="api" />
      <apidata name="IsRestricted" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.WebHeaderCollection.IsRestricted" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="headerName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.IsRestricted(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="IsRestricted" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.WebHeaderCollection.IsRestricted" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="headerName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="response">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebHeaderCollection.Item(System.Net.HttpRequestHeader)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Net.WebHeaderCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="header">
          <type api="T:System.Net.HttpRequestHeader" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebHeaderCollection.Item(System.Net.HttpResponseHeader)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Net.WebHeaderCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="header">
          <type api="T:System.Net.HttpResponseHeader" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebHeaderCollection.Keys">
      <topicdata group="api" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Collections.Specialized.NameObjectCollectionBase.Keys">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Keys" />
      <returns>
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" ref="true">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.OnDeserialization(System.Object)">
      <topicdata group="api" />
      <apidata name="OnDeserialization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)">
          <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.Remove(System.Net.HttpRequestHeader)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebHeaderCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="header">
          <type api="T:System.Net.HttpRequestHeader" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.Remove(System.Net.HttpResponseHeader)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebHeaderCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="header">
          <type api="T:System.Net.HttpResponseHeader" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebHeaderCollection.Remove" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.Set(System.Net.HttpRequestHeader,System.String)">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebHeaderCollection.Set" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="header">
          <type api="T:System.Net.HttpRequestHeader" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.Set(System.Net.HttpResponseHeader,System.String)">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebHeaderCollection.Set" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="header">
          <type api="T:System.Net.HttpResponseHeader" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.Set(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebHeaderCollection.Set" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.ToByteArray">
      <topicdata group="api" />
      <apidata name="ToByteArray" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebHeaderCollection.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.WebPermission">
      <topicdata group="api" />
      <apidata name="WebPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Net.WebPermission.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Security.Permissions.IUnrestrictedPermission" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.Net.WebPermission.#ctor">
          <element api="M:System.Net.WebPermission.#ctor" />
          <element api="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)" />
          <element api="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)" />
          <element api="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)" />
        </element>
        <element api="Overload:System.Net.WebPermission.AddPermission">
          <element api="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
          <element api="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)" />
        </element>
        <element api="M:System.Net.WebPermission.Copy" />
        <element api="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Net.WebPermission.Intersect(System.Security.IPermission)" />
        <element api="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Net.WebPermission.IsUnrestricted" />
        <element api="M:System.Net.WebPermission.ToXml" />
        <element api="M:System.Net.WebPermission.Union(System.Security.IPermission)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
        <element api="P:System.Net.WebPermission.AcceptList" />
        <element api="P:System.Net.WebPermission.ConnectList" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.WebPermission">
      <topicdata name="WebPermission" group="list" subgroup="Methods" typeTopicId="T:System.Net.WebPermission" />
      <apidata name="WebPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Net.WebPermission.#ctor" />
      <elements>
        <element api="Overload:System.Net.WebPermission.AddPermission">
          <element api="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
          <element api="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)" />
        </element>
        <element api="M:System.Net.WebPermission.Copy" />
        <element api="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Net.WebPermission.Intersect(System.Security.IPermission)" />
        <element api="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Net.WebPermission.IsUnrestricted" />
        <element api="M:System.Net.WebPermission.ToXml" />
        <element api="M:System.Net.WebPermission.Union(System.Security.IPermission)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermission" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.WebPermission">
      <topicdata name="WebPermission" group="list" subgroup="Properties" typeTopicId="T:System.Net.WebPermission" />
      <apidata name="WebPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Net.WebPermission.#ctor" />
      <elements>
        <element api="P:System.Net.WebPermission.AcceptList" />
        <element api="P:System.Net.WebPermission.ConnectList" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermission" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebPermission.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.WebPermission.#ctor" />
        <element api="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)" />
        <element api="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)" />
        <element api="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermission" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebPermission.AddPermission">
      <topicdata name="AddPermission" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddPermission" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
        <element api="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebPermission.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.WebPermission.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.WebPermission.#ctor" />
      <parameters>
        <parameter name="access">
          <type api="T:System.Net.NetworkAccess" ref="false" />
        </parameter>
        <parameter name="uriString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.WebPermission.#ctor" />
      <parameters>
        <parameter name="access">
          <type api="T:System.Net.NetworkAccess" ref="false" />
        </parameter>
        <parameter name="uriRegex">
          <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.WebPermission.#ctor" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Security.Permissions.PermissionState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermission" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebPermission.AcceptList">
      <topicdata group="api" />
      <apidata name="AcceptList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AcceptList" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
      <topicdata group="api" />
      <apidata name="AddPermission" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebPermission.AddPermission" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="access">
          <type api="T:System.Net.NetworkAccess" ref="false" />
        </parameter>
        <parameter name="uriString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
      <topicdata group="api" />
      <apidata name="AddPermission" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebPermission.AddPermission" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="access">
          <type api="T:System.Net.NetworkAccess" ref="false" />
        </parameter>
        <parameter name="uriRegex">
          <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermission" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebPermission.ConnectList">
      <topicdata group="api" />
      <apidata name="ConnectList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConnectList" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebPermission.Copy">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.Copy">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Copy">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)">
      <topicdata group="api" />
      <apidata name="FromXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="securityElement">
          <type api="T:System.Security.SecurityElement" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)">
          <type api="T:System.Security.ISecurityEncodable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebPermission.Intersect(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="Intersect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="IsSubsetOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebPermission.IsUnrestricted">
      <topicdata group="api" />
      <apidata name="IsUnrestricted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted">
          <type api="T:System.Security.Permissions.IUnrestrictedPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebPermission.ToXml">
      <topicdata group="api" />
      <apidata name="ToXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.ToXml">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.SecurityElement" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.ISecurityEncodable.ToXml">
          <type api="T:System.Security.ISecurityEncodable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebPermission.Union(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="Union" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermission" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.WebPermissionAttribute">
      <topicdata group="api" />
      <apidata name="WebPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.CodeAccessSecurityAttribute" ref="true" />
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Net.WebPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
        <element api="M:System.Net.WebPermissionAttribute.CreatePermission" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Net.WebPermissionAttribute.Accept" />
        <element api="P:System.Net.WebPermissionAttribute.AcceptPattern" />
        <element api="P:System.Net.WebPermissionAttribute.Connect" />
        <element api="P:System.Net.WebPermissionAttribute.ConnectPattern" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
              <field name="Class" />
              <field name="Struct" />
              <field name="Constructor" />
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Net.WebPermissionAttribute">
      <topicdata name="WebPermissionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Net.WebPermissionAttribute" />
      <apidata name="WebPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Net.WebPermissionAttribute.CreatePermission" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermissionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.WebPermissionAttribute">
      <topicdata name="WebPermissionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Net.WebPermissionAttribute" />
      <apidata name="WebPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Net.WebPermissionAttribute.Accept" />
        <element api="P:System.Net.WebPermissionAttribute.AcceptPattern" />
        <element api="P:System.Net.WebPermissionAttribute.Connect" />
        <element api="P:System.Net.WebPermissionAttribute.ConnectPattern" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermissionAttribute" />
      </containers>
    </api>
    <api id="M:System.Net.WebPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebPermissionAttribute.Accept">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Accept" />
      <setter name="set_Accept" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebPermissionAttribute.AcceptPattern">
      <topicdata group="api" />
      <apidata name="AcceptPattern" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AcceptPattern" />
      <setter name="set_AcceptPattern" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebPermissionAttribute.Connect">
      <topicdata group="api" />
      <apidata name="Connect" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Connect" />
      <setter name="set_Connect" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebPermissionAttribute.ConnectPattern">
      <topicdata group="api" />
      <apidata name="ConnectPattern" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConnectPattern" />
      <setter name="set_ConnectPattern" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebPermissionAttribute.CreatePermission">
      <topicdata group="api" />
      <apidata name="CreatePermission" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Permissions.SecurityAttribute.CreatePermission">
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.WebProxy">
      <topicdata group="api" />
      <apidata name="WebProxy" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.WebProxy.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Net.IWebProxy" ref="true" />
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.Net.WebProxy.#ctor">
          <element api="M:System.Net.WebProxy.#ctor" />
          <element api="M:System.Net.WebProxy.#ctor(System.String)" />
          <element api="M:System.Net.WebProxy.#ctor(System.Uri)" />
          <element api="M:System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Net.WebProxy.#ctor(System.String,System.Boolean)" />
          <element api="M:System.Net.WebProxy.#ctor(System.String,System.Int32)" />
          <element api="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean)" />
          <element api="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])" />
          <element api="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])" />
          <element api="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)" />
          <element api="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)" />
        </element>
        <element api="M:System.Net.WebProxy.GetDefaultProxy" />
        <element api="M:System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.WebProxy.GetProxy(System.Uri)" />
        <element api="M:System.Net.WebProxy.IsBypassed(System.Uri)" />
        <element api="M:System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.WebProxy.Address" />
        <element api="P:System.Net.WebProxy.BypassArrayList" />
        <element api="P:System.Net.WebProxy.BypassList" />
        <element api="P:System.Net.WebProxy.BypassProxyOnLocal" />
        <element api="P:System.Net.WebProxy.Credentials" />
        <element api="P:System.Net.WebProxy.UseDefaultCredentials" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.WebProxy">
      <topicdata name="WebProxy" group="list" subgroup="Methods" typeTopicId="T:System.Net.WebProxy" />
      <apidata name="WebProxy" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.WebProxy.#ctor" />
      <elements>
        <element api="M:System.Net.WebProxy.GetDefaultProxy" />
        <element api="M:System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.WebProxy.GetProxy(System.Uri)" />
        <element api="M:System.Net.WebProxy.IsBypassed(System.Uri)" />
        <element api="M:System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.WebProxy">
      <topicdata name="WebProxy" group="list" subgroup="Properties" typeTopicId="T:System.Net.WebProxy" />
      <apidata name="WebProxy" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.WebProxy.#ctor" />
      <elements>
        <element api="P:System.Net.WebProxy.Address" />
        <element api="P:System.Net.WebProxy.BypassArrayList" />
        <element api="P:System.Net.WebProxy.BypassList" />
        <element api="P:System.Net.WebProxy.BypassProxyOnLocal" />
        <element api="P:System.Net.WebProxy.Credentials" />
        <element api="P:System.Net.WebProxy.UseDefaultCredentials" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebProxy.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.WebProxy.#ctor" />
        <element api="M:System.Net.WebProxy.#ctor(System.String)" />
        <element api="M:System.Net.WebProxy.#ctor(System.Uri)" />
        <element api="M:System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.WebProxy.#ctor(System.String,System.Boolean)" />
        <element api="M:System.Net.WebProxy.#ctor(System.String,System.Int32)" />
        <element api="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean)" />
        <element api="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])" />
        <element api="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])" />
        <element api="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)" />
        <element api="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebProxy.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.WebProxy.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.WebProxy.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebProxy.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.WebProxy.#ctor" />
      <parameters>
        <parameter name="Address">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebProxy.#ctor(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.WebProxy.#ctor" />
      <parameters>
        <parameter name="Address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="BypassOnLocal">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.WebProxy.#ctor" />
      <parameters>
        <parameter name="Address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="BypassOnLocal">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="BypassList">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.WebProxy.#ctor" />
      <parameters>
        <parameter name="Address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="BypassOnLocal">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="BypassList">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="Credentials">
          <type api="T:System.Net.ICredentials" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebProxy.#ctor(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.WebProxy.#ctor" />
      <parameters>
        <parameter name="Host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebProxy.#ctor(System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.WebProxy.#ctor" />
      <parameters>
        <parameter name="Address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.WebProxy.#ctor" />
      <parameters>
        <parameter name="Address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="BypassOnLocal">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.WebProxy.#ctor" />
      <parameters>
        <parameter name="Address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="BypassOnLocal">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="BypassList">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.WebProxy.#ctor" />
      <parameters>
        <parameter name="Address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="BypassOnLocal">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="BypassList">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="Credentials">
          <type api="T:System.Net.ICredentials" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebProxy.Address">
      <topicdata group="api" />
      <apidata name="Address" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Address" />
      <setter name="set_Address" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebProxy.BypassArrayList">
      <topicdata group="api" />
      <apidata name="BypassArrayList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BypassArrayList" />
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebProxy.BypassList">
      <topicdata group="api" />
      <apidata name="BypassList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BypassList" />
      <setter name="set_BypassList" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebProxy.BypassProxyOnLocal">
      <topicdata group="api" />
      <apidata name="BypassProxyOnLocal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BypassProxyOnLocal" />
      <setter name="set_BypassProxyOnLocal" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebProxy.Credentials">
      <topicdata group="api" />
      <apidata name="Credentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Credentials" />
      <setter name="set_Credentials" />
      <returns>
        <type api="T:System.Net.ICredentials" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Net.IWebProxy.Credentials">
          <type api="T:System.Net.IWebProxy" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebProxy.GetDefaultProxy">
      <topicdata group="api" />
      <apidata name="GetDefaultProxy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.WebProxy" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This method has been deprecated. Please use the proxy selected for you by default. http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebProxy.GetProxy(System.Uri)">
      <topicdata group="api" />
      <apidata name="GetProxy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="destination">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Net.IWebProxy.GetProxy(System.Uri)">
          <type api="T:System.Net.IWebProxy" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebProxy.IsBypassed(System.Uri)">
      <topicdata group="api" />
      <apidata name="IsBypassed" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Net.IWebProxy.IsBypassed(System.Uri)">
          <type api="T:System.Net.IWebProxy" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebProxy.UseDefaultCredentials">
      <topicdata group="api" />
      <apidata name="UseDefaultCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseDefaultCredentials" />
      <setter name="set_UseDefaultCredentials" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebProxy" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.WebRequest">
      <topicdata group="api" />
      <apidata name="WebRequest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IO.Packaging.PackWebRequest" ref="true" />
          <type api="T:System.Net.FileWebRequest" ref="true" />
          <type api="T:System.Net.FtpWebRequest" ref="true" />
          <type api="T:System.Net.HttpWebRequest" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.WebRequest.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.WebRequest.#ctor">
          <element api="M:System.Net.WebRequest.#ctor" />
          <element api="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="M:System.Net.WebRequest.Abort" />
        <element api="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
        <element api="Overload:System.Net.WebRequest.Create">
          <element api="M:System.Net.WebRequest.Create(System.String)" />
          <element api="M:System.Net.WebRequest.Create(System.Uri)" />
        </element>
        <element api="M:System.Net.WebRequest.CreateDefault(System.Uri)" />
        <element api="Overload:System.Net.WebRequest.CreateHttp">
          <element api="M:System.Net.WebRequest.CreateHttp(System.String)" />
          <element api="M:System.Net.WebRequest.CreateHttp(System.Uri)" />
        </element>
        <element api="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />
        <element api="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />
        <element api="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.WebRequest.GetRequestStream" />
        <element api="M:System.Net.WebRequest.GetRequestStreamAsync" />
        <element api="M:System.Net.WebRequest.GetResponse" />
        <element api="M:System.Net.WebRequest.GetResponseAsync" />
        <element api="M:System.Net.WebRequest.GetSystemWebProxy" />
        <element api="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" />
        <element api="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.WebRequest.AuthenticationLevel" />
        <element api="P:System.Net.WebRequest.CachePolicy" />
        <element api="P:System.Net.WebRequest.ConnectionGroupName" />
        <element api="P:System.Net.WebRequest.ContentLength" />
        <element api="P:System.Net.WebRequest.ContentType" />
        <element api="P:System.Net.WebRequest.Credentials" />
        <element api="P:System.Net.WebRequest.DefaultCachePolicy" />
        <element api="P:System.Net.WebRequest.DefaultWebProxy" />
        <element api="P:System.Net.WebRequest.Headers" />
        <element api="P:System.Net.WebRequest.ImpersonationLevel" />
        <element api="P:System.Net.WebRequest.Method" />
        <element api="P:System.Net.WebRequest.PreAuthenticate" />
        <element api="P:System.Net.WebRequest.Proxy" />
        <element api="P:System.Net.WebRequest.RequestUri" />
        <element api="P:System.Net.WebRequest.Timeout" />
        <element api="P:System.Net.WebRequest.UseDefaultCredentials" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.WebRequest">
      <topicdata name="WebRequest" group="list" subgroup="Methods" typeTopicId="T:System.Net.WebRequest" />
      <apidata name="WebRequest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.WebRequest.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Net.WebRequest.Abort" />
        <element api="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
        <element api="Overload:System.Net.WebRequest.Create">
          <element api="M:System.Net.WebRequest.Create(System.String)" />
          <element api="M:System.Net.WebRequest.Create(System.Uri)" />
        </element>
        <element api="M:System.Net.WebRequest.CreateDefault(System.Uri)" />
        <element api="Overload:System.Net.WebRequest.CreateHttp">
          <element api="M:System.Net.WebRequest.CreateHttp(System.String)" />
          <element api="M:System.Net.WebRequest.CreateHttp(System.Uri)" />
        </element>
        <element api="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />
        <element api="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />
        <element api="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.WebRequest.GetRequestStream" />
        <element api="M:System.Net.WebRequest.GetRequestStreamAsync" />
        <element api="M:System.Net.WebRequest.GetResponse" />
        <element api="M:System.Net.WebRequest.GetResponseAsync" />
        <element api="M:System.Net.WebRequest.GetSystemWebProxy" />
        <element api="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" />
        <element api="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.WebRequest">
      <topicdata name="WebRequest" group="list" subgroup="Properties" typeTopicId="T:System.Net.WebRequest" />
      <apidata name="WebRequest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="P:System.Net.WebRequest.AuthenticationLevel" />
        <element api="P:System.Net.WebRequest.CachePolicy" />
        <element api="P:System.Net.WebRequest.ConnectionGroupName" />
        <element api="P:System.Net.WebRequest.ContentLength" />
        <element api="P:System.Net.WebRequest.ContentType" />
        <element api="P:System.Net.WebRequest.Credentials" />
        <element api="P:System.Net.WebRequest.DefaultCachePolicy" />
        <element api="P:System.Net.WebRequest.DefaultWebProxy" />
        <element api="P:System.Net.WebRequest.Headers" />
        <element api="P:System.Net.WebRequest.ImpersonationLevel" />
        <element api="P:System.Net.WebRequest.Method" />
        <element api="P:System.Net.WebRequest.PreAuthenticate" />
        <element api="P:System.Net.WebRequest.Proxy" />
        <element api="P:System.Net.WebRequest.RequestUri" />
        <element api="P:System.Net.WebRequest.Timeout" />
        <element api="P:System.Net.WebRequest.UseDefaultCredentials" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebRequest.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.WebRequest.#ctor" />
        <element api="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebRequest.Create">
      <topicdata name="Create" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Create" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebRequest.Create(System.String)" />
        <element api="M:System.Net.WebRequest.Create(System.Uri)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebRequest.CreateHttp">
      <topicdata name="CreateHttp" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateHttp" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebRequest.CreateHttp(System.String)" />
        <element api="M:System.Net.WebRequest.CreateHttp(System.Uri)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebRequest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.WebRequest.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.WebRequest.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebRequest.Abort">
      <topicdata group="api" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebRequest.AuthenticationLevel">
      <topicdata group="api" />
      <apidata name="AuthenticationLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AuthenticationLevel" />
      <setter name="set_AuthenticationLevel" />
      <returns>
        <type api="T:System.Net.Security.AuthenticationLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginGetRequestStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginGetResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Net.WebRequest.CachePolicy">
      <topicdata group="api" />
      <apidata name="CachePolicy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CachePolicy" />
      <setter name="set_CachePolicy" />
      <returns>
        <type api="T:System.Net.Cache.RequestCachePolicy" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebRequest.ConnectionGroupName">
      <topicdata group="api" />
      <apidata name="ConnectionGroupName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ConnectionGroupName" />
      <setter name="set_ConnectionGroupName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebRequest.ContentLength">
      <topicdata group="api" />
      <apidata name="ContentLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentLength" />
      <setter name="set_ContentLength" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebRequest.ContentType">
      <topicdata group="api" />
      <apidata name="ContentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentType" />
      <setter name="set_ContentType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebRequest.Create(System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.WebRequest.Create" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUriString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.WebRequest" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebRequest.Create(System.Uri)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.WebRequest.Create" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.WebRequest" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebRequest.CreateDefault(System.Uri)">
      <topicdata group="api" />
      <apidata name="CreateDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.WebRequest" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebRequest.CreateHttp(System.String)">
      <topicdata group="api" />
      <apidata name="CreateHttp" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.WebRequest.CreateHttp" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUriString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebRequest.CreateHttp(System.Uri)">
      <topicdata group="api" />
      <apidata name="CreateHttp" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.WebRequest.CreateHttp" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.HttpWebRequest" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebRequest.Credentials">
      <topicdata group="api" />
      <apidata name="Credentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Credentials" />
      <setter name="set_Credentials" />
      <returns>
        <type api="T:System.Net.ICredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebRequest.DefaultCachePolicy">
      <topicdata group="api" />
      <apidata name="DefaultCachePolicy" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultCachePolicy" />
      <setter name="set_DefaultCachePolicy" />
      <returns>
        <type api="T:System.Net.Cache.RequestCachePolicy" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebRequest.DefaultWebProxy">
      <topicdata group="api" />
      <apidata name="DefaultWebProxy" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultWebProxy" />
      <setter name="set_DefaultWebProxy" />
      <returns>
        <type api="T:System.Net.IWebProxy" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndGetRequestStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndGetResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.WebResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebRequest.GetRequestStream">
      <topicdata group="api" />
      <apidata name="GetRequestStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebRequest.GetRequestStreamAsync">
      <topicdata group="api" />
      <apidata name="GetRequestStreamAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.IO.Stream" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebRequest.GetResponse">
      <topicdata group="api" />
      <apidata name="GetResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Net.WebResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebRequest.GetResponseAsync">
      <topicdata group="api" />
      <apidata name="GetResponseAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.WebResponse" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.WebRequest.GetSystemWebProxy">
      <topicdata group="api" />
      <apidata name="GetSystemWebProxy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.IWebProxy" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebRequest.Headers">
      <topicdata group="api" />
      <apidata name="Headers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Headers" />
      <setter name="set_Headers" />
      <returns>
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebRequest.ImpersonationLevel">
      <topicdata group="api" />
      <apidata name="ImpersonationLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ImpersonationLevel" />
      <setter name="set_ImpersonationLevel" />
      <returns>
        <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebRequest.Method">
      <topicdata group="api" />
      <apidata name="Method" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Method" />
      <setter name="set_Method" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebRequest.PreAuthenticate">
      <topicdata group="api" />
      <apidata name="PreAuthenticate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_PreAuthenticate" />
      <setter name="set_PreAuthenticate" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebRequest.Proxy">
      <topicdata group="api" />
      <apidata name="Proxy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Proxy" />
      <setter name="set_Proxy" />
      <returns>
        <type api="T:System.Net.IWebProxy" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
      <topicdata group="api" />
      <apidata name="RegisterPrefix" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="creator">
          <type api="T:System.Net.IWebRequestCreate" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebRequest.RequestUri">
      <topicdata group="api" />
      <apidata name="RequestUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_RequestUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebRequest.Timeout">
      <topicdata group="api" />
      <apidata name="Timeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Timeout" />
      <setter name="set_Timeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebRequest.UseDefaultCredentials">
      <topicdata group="api" />
      <apidata name="UseDefaultCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_UseDefaultCredentials" />
      <setter name="set_UseDefaultCredentials" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequest" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.WebRequestMethods">
      <topicdata group="api" />
      <apidata name="WebRequestMethods" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="T:System.Net.WebRequestMethods.File">
      <topicdata group="api" />
      <apidata name="File" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Net.WebRequestMethods.File.DownloadFile" />
        <element api="F:System.Net.WebRequestMethods.File.UploadFile" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods" ref="true" />
      </containers>
    </api>
    <api id="Fields.T:System.Net.WebRequestMethods.File">
      <topicdata name="File" group="list" subgroup="Fields" typeTopicId="T:System.Net.WebRequestMethods.File" />
      <apidata name="File" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.WebRequestMethods.File.DownloadFile" />
        <element api="F:System.Net.WebRequestMethods.File.UploadFile" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.File" />
      </containers>
    </api>
    <api id="F:System.Net.WebRequestMethods.File.DownloadFile">
      <topicdata group="api" />
      <apidata name="DownloadFile" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>GET</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.File" ref="true">
          <type api="T:System.Net.WebRequestMethods" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Net.WebRequestMethods.File.UploadFile">
      <topicdata group="api" />
      <apidata name="UploadFile" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>PUT</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.File" ref="true">
          <type api="T:System.Net.WebRequestMethods" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:System.Net.WebRequestMethods.Ftp">
      <topicdata group="api" />
      <apidata name="Ftp" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Net.WebRequestMethods.Ftp.AppendFile" />
        <element api="F:System.Net.WebRequestMethods.Ftp.DeleteFile" />
        <element api="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />
        <element api="F:System.Net.WebRequestMethods.Ftp.GetDateTimestamp" />
        <element api="F:System.Net.WebRequestMethods.Ftp.GetFileSize" />
        <element api="F:System.Net.WebRequestMethods.Ftp.ListDirectory" />
        <element api="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />
        <element api="F:System.Net.WebRequestMethods.Ftp.MakeDirectory" />
        <element api="F:System.Net.WebRequestMethods.Ftp.PrintWorkingDirectory" />
        <element api="F:System.Net.WebRequestMethods.Ftp.RemoveDirectory" />
        <element api="F:System.Net.WebRequestMethods.Ftp.Rename" />
        <element api="F:System.Net.WebRequestMethods.Ftp.UploadFile" />
        <element api="F:System.Net.WebRequestMethods.Ftp.UploadFileWithUniqueName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods" ref="true" />
      </containers>
    </api>
    <api id="Fields.T:System.Net.WebRequestMethods.Ftp">
      <topicdata name="Ftp" group="list" subgroup="Fields" typeTopicId="T:System.Net.WebRequestMethods.Ftp" />
      <apidata name="Ftp" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.WebRequestMethods.Ftp.AppendFile" />
        <element api="F:System.Net.WebRequestMethods.Ftp.DeleteFile" />
        <element api="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />
        <element api="F:System.Net.WebRequestMethods.Ftp.GetDateTimestamp" />
        <element api="F:System.Net.WebRequestMethods.Ftp.GetFileSize" />
        <element api="F:System.Net.WebRequestMethods.Ftp.ListDirectory" />
        <element api="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />
        <element api="F:System.Net.WebRequestMethods.Ftp.MakeDirectory" />
        <element api="F:System.Net.WebRequestMethods.Ftp.PrintWorkingDirectory" />
        <element api="F:System.Net.WebRequestMethods.Ftp.RemoveDirectory" />
        <element api="F:System.Net.WebRequestMethods.Ftp.Rename" />
        <element api="F:System.Net.WebRequestMethods.Ftp.UploadFile" />
        <element api="F:System.Net.WebRequestMethods.Ftp.UploadFileWithUniqueName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.Ftp" />
      </containers>
    </api>
    <api id="F:System.Net.WebRequestMethods.Ftp.AppendFile">
      <topicdata group="api" />
      <apidata name="AppendFile" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>APPE</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.Ftp" ref="true">
          <type api="T:System.Net.WebRequestMethods" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Net.WebRequestMethods.Ftp.DeleteFile">
      <topicdata group="api" />
      <apidata name="DeleteFile" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>DELE</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.Ftp" ref="true">
          <type api="T:System.Net.WebRequestMethods" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Net.WebRequestMethods.Ftp.DownloadFile">
      <topicdata group="api" />
      <apidata name="DownloadFile" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>RETR</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.Ftp" ref="true">
          <type api="T:System.Net.WebRequestMethods" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Net.WebRequestMethods.Ftp.GetDateTimestamp">
      <topicdata group="api" />
      <apidata name="GetDateTimestamp" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>MDTM</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.Ftp" ref="true">
          <type api="T:System.Net.WebRequestMethods" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Net.WebRequestMethods.Ftp.GetFileSize">
      <topicdata group="api" />
      <apidata name="GetFileSize" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>SIZE</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.Ftp" ref="true">
          <type api="T:System.Net.WebRequestMethods" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Net.WebRequestMethods.Ftp.ListDirectory">
      <topicdata group="api" />
      <apidata name="ListDirectory" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>NLST</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.Ftp" ref="true">
          <type api="T:System.Net.WebRequestMethods" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails">
      <topicdata group="api" />
      <apidata name="ListDirectoryDetails" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>LIST</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.Ftp" ref="true">
          <type api="T:System.Net.WebRequestMethods" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Net.WebRequestMethods.Ftp.MakeDirectory">
      <topicdata group="api" />
      <apidata name="MakeDirectory" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>MKD</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.Ftp" ref="true">
          <type api="T:System.Net.WebRequestMethods" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Net.WebRequestMethods.Ftp.PrintWorkingDirectory">
      <topicdata group="api" />
      <apidata name="PrintWorkingDirectory" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>PWD</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.Ftp" ref="true">
          <type api="T:System.Net.WebRequestMethods" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Net.WebRequestMethods.Ftp.RemoveDirectory">
      <topicdata group="api" />
      <apidata name="RemoveDirectory" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>RMD</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.Ftp" ref="true">
          <type api="T:System.Net.WebRequestMethods" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Net.WebRequestMethods.Ftp.Rename">
      <topicdata group="api" />
      <apidata name="Rename" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>RENAME</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.Ftp" ref="true">
          <type api="T:System.Net.WebRequestMethods" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Net.WebRequestMethods.Ftp.UploadFile">
      <topicdata group="api" />
      <apidata name="UploadFile" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>STOR</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.Ftp" ref="true">
          <type api="T:System.Net.WebRequestMethods" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Net.WebRequestMethods.Ftp.UploadFileWithUniqueName">
      <topicdata group="api" />
      <apidata name="UploadFileWithUniqueName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>STOU</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.Ftp" ref="true">
          <type api="T:System.Net.WebRequestMethods" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:System.Net.WebRequestMethods.Http">
      <topicdata group="api" />
      <apidata name="Http" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Net.WebRequestMethods.Http.Connect" />
        <element api="F:System.Net.WebRequestMethods.Http.Get" />
        <element api="F:System.Net.WebRequestMethods.Http.Head" />
        <element api="F:System.Net.WebRequestMethods.Http.MkCol" />
        <element api="F:System.Net.WebRequestMethods.Http.Post" />
        <element api="F:System.Net.WebRequestMethods.Http.Put" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods" ref="true" />
      </containers>
    </api>
    <api id="Fields.T:System.Net.WebRequestMethods.Http">
      <topicdata name="Http" group="list" subgroup="Fields" typeTopicId="T:System.Net.WebRequestMethods.Http" />
      <apidata name="Http" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.WebRequestMethods.Http.Connect" />
        <element api="F:System.Net.WebRequestMethods.Http.Get" />
        <element api="F:System.Net.WebRequestMethods.Http.Head" />
        <element api="F:System.Net.WebRequestMethods.Http.MkCol" />
        <element api="F:System.Net.WebRequestMethods.Http.Post" />
        <element api="F:System.Net.WebRequestMethods.Http.Put" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.Http" />
      </containers>
    </api>
    <api id="F:System.Net.WebRequestMethods.Http.Connect">
      <topicdata group="api" />
      <apidata name="Connect" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>CONNECT</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.Http" ref="true">
          <type api="T:System.Net.WebRequestMethods" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Net.WebRequestMethods.Http.Get">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>GET</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.Http" ref="true">
          <type api="T:System.Net.WebRequestMethods" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Net.WebRequestMethods.Http.Head">
      <topicdata group="api" />
      <apidata name="Head" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>HEAD</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.Http" ref="true">
          <type api="T:System.Net.WebRequestMethods" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Net.WebRequestMethods.Http.MkCol">
      <topicdata group="api" />
      <apidata name="MkCol" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>MKCOL</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.Http" ref="true">
          <type api="T:System.Net.WebRequestMethods" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Net.WebRequestMethods.Http.Post">
      <topicdata group="api" />
      <apidata name="Post" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>POST</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.Http" ref="true">
          <type api="T:System.Net.WebRequestMethods" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Net.WebRequestMethods.Http.Put">
      <topicdata group="api" />
      <apidata name="Put" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>PUT</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebRequestMethods.Http" ref="true">
          <type api="T:System.Net.WebRequestMethods" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:System.Net.WebResponse">
      <topicdata group="api" />
      <apidata name="WebResponse" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IO.Packaging.PackWebResponse" ref="true" />
          <type api="T:System.Net.FileWebResponse" ref="true" />
          <type api="T:System.Net.FtpWebResponse" ref="true" />
          <type api="T:System.Net.HttpWebResponse" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.WebResponse.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.WebResponse.#ctor">
          <element api="M:System.Net.WebResponse.#ctor" />
          <element api="M:System.Net.WebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="M:System.Net.WebResponse.Close" />
        <element api="Overload:System.Net.WebResponse.Dispose">
          <element api="M:System.Net.WebResponse.Dispose" />
          <element api="M:System.Net.WebResponse.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.WebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.WebResponse.GetResponseStream" />
        <element api="M:System.Net.WebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.WebResponse.ContentLength" />
        <element api="P:System.Net.WebResponse.ContentType" />
        <element api="P:System.Net.WebResponse.Headers" />
        <element api="P:System.Net.WebResponse.IsFromCache" />
        <element api="P:System.Net.WebResponse.IsMutuallyAuthenticated" />
        <element api="P:System.Net.WebResponse.ResponseUri" />
        <element api="P:System.Net.WebResponse.SupportsHeaders" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.WebResponse">
      <topicdata name="WebResponse" group="list" subgroup="Methods" typeTopicId="T:System.Net.WebResponse" />
      <apidata name="WebResponse" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.WebResponse.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Net.WebResponse.Close" />
        <element api="Overload:System.Net.WebResponse.Dispose">
          <element api="M:System.Net.WebResponse.Dispose" />
          <element api="M:System.Net.WebResponse.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.WebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.WebResponse.GetResponseStream" />
        <element api="M:System.Net.WebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebResponse" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.WebResponse">
      <topicdata name="WebResponse" group="list" subgroup="Properties" typeTopicId="T:System.Net.WebResponse" />
      <apidata name="WebResponse" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="P:System.Net.WebResponse.ContentLength" />
        <element api="P:System.Net.WebResponse.ContentType" />
        <element api="P:System.Net.WebResponse.Headers" />
        <element api="P:System.Net.WebResponse.IsFromCache" />
        <element api="P:System.Net.WebResponse.IsMutuallyAuthenticated" />
        <element api="P:System.Net.WebResponse.ResponseUri" />
        <element api="P:System.Net.WebResponse.SupportsHeaders" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebResponse" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebResponse.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.WebResponse.#ctor" />
        <element api="M:System.Net.WebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebResponse" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebResponse.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebResponse.Dispose" />
        <element api="M:System.Net.WebResponse.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebResponse.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.WebResponse.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.WebResponse.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebResponse.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebResponse.ContentLength">
      <topicdata group="api" />
      <apidata name="ContentLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentLength" />
      <setter name="set_ContentLength" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebResponse.ContentType">
      <topicdata group="api" />
      <apidata name="ContentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentType" />
      <setter name="set_ContentType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebResponse.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.WebResponse.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebResponse.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.WebResponse.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebResponse.GetResponseStream">
      <topicdata group="api" />
      <apidata name="GetResponseStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebResponse.Headers">
      <topicdata group="api" />
      <apidata name="Headers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Headers" />
      <returns>
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebResponse.IsFromCache">
      <topicdata group="api" />
      <apidata name="IsFromCache" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsFromCache" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebResponse.IsMutuallyAuthenticated">
      <topicdata group="api" />
      <apidata name="IsMutuallyAuthenticated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsMutuallyAuthenticated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebResponse.ResponseUri">
      <topicdata group="api" />
      <apidata name="ResponseUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ResponseUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.WebResponse.SupportsHeaders">
      <topicdata group="api" />
      <apidata name="SupportsHeaders" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_SupportsHeaders" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebResponse" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.WebUtility">
      <topicdata group="api" />
      <apidata name="WebUtility" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Net.WebUtility.HtmlDecode">
          <element api="M:System.Net.WebUtility.HtmlDecode(System.String)" />
          <element api="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        </element>
        <element api="Overload:System.Net.WebUtility.HtmlEncode">
          <element api="M:System.Net.WebUtility.HtmlEncode(System.String)" />
          <element api="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        </element>
        <element api="M:System.Net.WebUtility.UrlDecode(System.String)" />
        <element api="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Net.WebUtility.UrlEncode(System.String)" />
        <element api="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.WebUtility">
      <topicdata name="WebUtility" group="list" subgroup="Methods" typeTopicId="T:System.Net.WebUtility" />
      <apidata name="WebUtility" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Net.WebUtility.HtmlDecode">
          <element api="M:System.Net.WebUtility.HtmlDecode(System.String)" />
          <element api="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        </element>
        <element api="Overload:System.Net.WebUtility.HtmlEncode">
          <element api="M:System.Net.WebUtility.HtmlEncode(System.String)" />
          <element api="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        </element>
        <element api="M:System.Net.WebUtility.UrlDecode(System.String)" />
        <element api="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Net.WebUtility.UrlEncode(System.String)" />
        <element api="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebUtility" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebUtility.HtmlDecode">
      <topicdata name="HtmlDecode" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="HtmlDecode" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebUtility.HtmlDecode(System.String)" />
        <element api="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebUtility" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.WebUtility.HtmlEncode">
      <topicdata name="HtmlEncode" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="HtmlEncode" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.WebUtility.HtmlEncode(System.String)" />
        <element api="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebUtility" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebUtility.HtmlDecode(System.String)">
      <topicdata group="api" />
      <apidata name="HtmlDecode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.WebUtility.HtmlDecode" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebUtility" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="HtmlDecode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.WebUtility.HtmlDecode" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="output">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebUtility" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebUtility.HtmlEncode(System.String)">
      <topicdata group="api" />
      <apidata name="HtmlEncode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.WebUtility.HtmlEncode" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebUtility" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="HtmlEncode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.WebUtility.HtmlEncode" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="output">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebUtility" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebUtility.UrlDecode(System.String)">
      <topicdata group="api" />
      <apidata name="UrlDecode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="encodedValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebUtility" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="UrlDecodeToBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="encodedValue">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebUtility" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebUtility.UrlEncode(System.String)">
      <topicdata group="api" />
      <apidata name="UrlEncode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebUtility" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="UrlEncodeToBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net" />
        <type api="T:System.Net.WebUtility" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>