<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Workflow.Activities">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/winfx/2006/xaml/workflow</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Workflow.Activities</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/winfx/2006/xaml/workflow</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Workflow.Activities.Rules</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/winfx/2006/xaml/workflow</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Workflow.Activities.Rules.Design</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/winfx/2006/xaml/workflow</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>wf</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Workflow.Activities.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Workflow.Activities.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Workflow.Activities.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\35MSSharedLib1024.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c80000014010000060200000024000052534131000800000100010085aad0bef0688d1b994a0d78e1fd29fc24ac34ed3d3ac3fb9b3d0c48386ba834aa880035060a8848b2d8adf58e670ed20914be3681a891c9c8c01eef2ab22872547c39be00af0e6c72485d7cfd1a51df8947d36ceba9989106b58abe79e6a3e71a01ed6bdc867012883e0b1a4d35b1b5eeed6df21e401bb0c22f2246ccb69979dc9e61eef262832ed0f2064853725a75485fa8a3efb7e027319c86dec03dc3b1bca2b5081bab52a627b9917450dfad534799e1c7af58683bdfa135f1518ff1ea60e90d7b993a6c87fd3dd93408e35d1296f9a7f9a97c5db56c0f3cc25ad11e9777f94d138b3cea53b9a8331c2e6dcb8d2ea94e18bf1163ff112a22dbd92d429a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8913ef869646d14971df222c210018ab394cfe63f8eb9b4d894c0dda7368cfb69df15d049b347f8a8b9205cdcc3d6bd6690f0bd24b3da3179feb8c03f410703027c7844ff654997e38015dfc97222c15061af2a1d3fe91775b9dd4b8ede64d3d59816270a9520e393c8e60619b80d40fc1dc4f12b5aa0c2df20d02ea32960851</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.WorkflowServices">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.WorkflowServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.WorkflowServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.WorkflowServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\35MSSharedLib1024.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c80000014010000060200000024000052534131000800000100010085aad0bef0688d1b994a0d78e1fd29fc24ac34ed3d3ac3fb9b3d0c48386ba834aa880035060a8848b2d8adf58e670ed20914be3681a891c9c8c01eef2ab22872547c39be00af0e6c72485d7cfd1a51df8947d36ceba9989106b58abe79e6a3e71a01ed6bdc867012883e0b1a4d35b1b5eeed6df21e401bb0c22f2246ccb69979dc9e61eef262832ed0f2064853725a75485fa8a3efb7e027319c86dec03dc3b1bca2b5081bab52a627b9917450dfad534799e1c7af58683bdfa135f1518ff1ea60e90d7b993a6c87fd3dd93408e35d1296f9a7f9a97c5db56c0f3cc25ad11e9777f94d138b3cea53b9a8331c2e6dcb8d2ea94e18bf1163ff112a22dbd92d429a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8913ef869646d14971df222c210018ab394cfe63f8eb9b4d894c0dda7368cfb69df15d049b347f8a8b9205cdcc3d6bd6690f0bd24b3da3179feb8c03f410703027c7844ff654997e38015dfc97222c15061af2a1d3fe91775b9dd4b8ede64d3d59816270a9520e393c8e60619b80d40fc1dc4f12b5aa0c2df20d02ea32960851</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Workflow.Activities">
      <topicdata group="api" />
      <apidata name="System.Workflow.Activities" group="namespace" />
      <elements>
        <element api="T:System.Workflow.Activities.IfElseActivity" />
        <element api="T:System.Workflow.Activities.IfElseBranchActivity" />
        <element api="T:System.Workflow.Activities.ConditionedActivityGroup" />
        <element api="T:System.Workflow.Activities.EventHandlingScopeActivity" />
        <element api="T:System.Workflow.Activities.EventHandlersActivity" />
        <element api="T:System.Workflow.Activities.EventDrivenActivity" />
        <element api="T:System.Workflow.Activities.InvokeWebServiceEventArgs" />
        <element api="T:System.Workflow.Activities.InvokeWebServiceActivity" />
        <element api="T:System.Workflow.Activities.ListenActivity" />
        <element api="T:System.Workflow.Activities.ParallelActivity" />
        <element api="T:System.Workflow.Activities.SequentialWorkflowActivity" />
        <element api="T:System.Workflow.Activities.SequenceActivity" />
        <element api="T:System.Workflow.Activities.SetStateActivity" />
        <element api="T:System.Workflow.Activities.SetStateEventArgs" />
        <element api="T:System.Workflow.Activities.StateActivity" />
        <element api="T:System.Workflow.Activities.StateFinalizationActivity" />
        <element api="T:System.Workflow.Activities.StateInitializationActivity" />
        <element api="T:System.Workflow.Activities.StateMachineWorkflowActivity" />
        <element api="T:System.Workflow.Activities.StateMachineWorkflowInstance" />
        <element api="T:System.Workflow.Activities.StateActivityValidator" />
        <element api="T:System.Workflow.Activities.ReplicatorActivity" />
        <element api="T:System.Workflow.Activities.ReplicatorChildEventArgs" />
        <element api="T:System.Workflow.Activities.ExecutionType" />
        <element api="T:System.Workflow.Activities.WebServiceInputActivity" />
        <element api="T:System.Workflow.Activities.WebServiceOutputActivity" />
        <element api="T:System.Workflow.Activities.WebServiceFaultActivity" />
        <element api="T:System.Workflow.Activities.WhileActivity" />
        <element api="T:System.Workflow.Activities.CodeCondition" />
        <element api="T:System.Workflow.Activities.PolicyActivity" />
        <element api="T:System.Workflow.Activities.CodeActivity" />
        <element api="T:System.Workflow.Activities.CompensatableSequenceActivity" />
        <element api="T:System.Workflow.Activities.DelayActivity" />
        <element api="T:System.Workflow.Activities.ConditionalEventArgs" />
        <element api="T:System.Workflow.Activities.IEventActivity" />
        <element api="T:System.Workflow.Activities.InvokeWorkflowActivity" />
        <element api="T:System.Workflow.Activities.WorkflowWebService" />
        <element api="T:System.Workflow.Activities.WorkflowRole" />
        <element api="T:System.Workflow.Activities.WorkflowRoleCollection" />
        <element api="T:System.Workflow.Activities.ActiveDirectoryRole" />
        <element api="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" />
        <element api="T:System.Workflow.Activities.WebWorkflowRole" />
        <element api="T:System.Workflow.Activities.WorkflowAuthorizationException" />
        <element api="T:System.Workflow.Activities.HandleExternalEventActivity" />
        <element api="T:System.Workflow.Activities.HandleExternalEventActivityValidator" />
        <element api="T:System.Workflow.Activities.CallExternalMethodActivity" />
        <element api="T:System.Workflow.Activities.CallExternalMethodActivityValidator" />
        <element api="T:System.Workflow.Activities.WorkflowSubscriptionService" />
        <element api="T:System.Workflow.Activities.MessageEventSubscription" />
        <element api="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />
        <element api="T:System.Workflow.Activities.CorrelationInitializerAttribute" />
        <element api="T:System.Workflow.Activities.CorrelationParameterAttribute" />
        <element api="T:System.Workflow.Activities.CorrelationAliasAttribute" />
        <element api="T:System.Workflow.Activities.ExternalDataEventArgs" />
        <element api="T:System.Workflow.Activities.EventDeliveryFailedException" />
        <element api="T:System.Workflow.Activities.EventQueueName" />
        <element api="T:System.Workflow.Activities.ExternalDataExchangeServiceSection" />
        <element api="T:System.Workflow.Activities.ExternalDataExchangeService" />
        <element api="T:System.Workflow.Activities.ContextToken" />
        <element api="T:System.Workflow.Activities.ChannelToken" />
        <element api="T:System.Workflow.Activities.OperationInfo" />
        <element api="T:System.Workflow.Activities.OperationInfoBase" />
        <element api="T:System.Workflow.Activities.OperationParameterInfo" />
        <element api="T:System.Workflow.Activities.OperationParameterInfoCollection" />
        <element api="T:System.Workflow.Activities.OperationValidationEventArgs" />
        <element api="T:System.Workflow.Activities.ReceiveActivity" />
        <element api="T:System.Workflow.Activities.SendActivity" />
        <element api="T:System.Workflow.Activities.SendActivityEventArgs" />
        <element api="T:System.Workflow.Activities.TypedOperationInfo" />
        <element api="T:System.Workflow.Activities.WorkflowServiceAttributes" />
        <element api="T:System.Workflow.Activities.WorkflowServiceAttributesDynamicPropertyValidator" />
      </elements>
    </api>
    <api id="T:System.Workflow.Activities.ActiveDirectoryRole">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryRole" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetEntries" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetIdentities" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetManager" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetPeers" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Workflow.Activities.ActiveDirectoryRole.Name" />
        <element api="P:System.Workflow.Activities.ActiveDirectoryRole.RootEntry" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.ActiveDirectoryRole">
      <topicdata name="ActiveDirectoryRole" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ActiveDirectoryRole" />
      <apidata name="ActiveDirectoryRole" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetEntries" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetIdentities" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetManager" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetPeers" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.ActiveDirectoryRole">
      <topicdata name="ActiveDirectoryRole" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ActiveDirectoryRole" />
      <apidata name="ActiveDirectoryRole" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Workflow.Activities.ActiveDirectoryRole.Name" />
        <element api="P:System.Workflow.Activities.ActiveDirectoryRole.RootEntry" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports">
      <topicdata group="api" />
      <apidata name="GetAllReports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports">
      <topicdata group="api" />
      <apidata name="GetDirectReports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.GetEntries">
      <topicdata group="api" />
      <apidata name="GetEntries" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.GetIdentities">
      <topicdata group="api" />
      <apidata name="GetIdentities" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.WorkflowRole.GetIdentities">
          <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.GetManager">
      <topicdata group="api" />
      <apidata name="GetManager" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain">
      <topicdata group="api" />
      <apidata name="GetManagerialChain" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.GetPeers">
      <topicdata group="api" />
      <apidata name="GetPeers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers">
      <topicdata group="api" />
      <apidata name="GetSecurityIdentifiers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Security.Principal.SecurityIdentifier" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)">
      <topicdata group="api" />
      <apidata name="IncludesIdentity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.WorkflowRole.IncludesIdentity(System.String)">
          <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identity">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ActiveDirectoryRole.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Workflow.Activities.WorkflowRole.Name">
          <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ActiveDirectoryRole.RootEntry">
      <topicdata group="api" />
      <apidata name="RootEntry" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RootEntry" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose">
      <topicdata group="api" eiiName="IDisposable.Dispose" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.ActiveDirectoryRoleFactory">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryRoleFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromAlias(System.String)" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromEmailAddress(System.String)" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromSecurityIdentifier(System.Security.Principal.SecurityIdentifier)" />
        <element api="P:System.Workflow.Activities.ActiveDirectoryRoleFactory.Configuration" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.ActiveDirectoryRoleFactory">
      <topicdata name="ActiveDirectoryRoleFactory" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" />
      <apidata name="ActiveDirectoryRoleFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromAlias(System.String)" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromEmailAddress(System.String)" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromSecurityIdentifier(System.Security.Principal.SecurityIdentifier)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.ActiveDirectoryRoleFactory">
      <topicdata name="ActiveDirectoryRoleFactory" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" />
      <apidata name="ActiveDirectoryRoleFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Workflow.Activities.ActiveDirectoryRoleFactory.Configuration" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ActiveDirectoryRoleFactory.Configuration">
      <topicdata group="api" />
      <apidata name="Configuration" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Configuration" />
      <returns>
        <type api="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromAlias(System.String)">
      <topicdata group="api" />
      <apidata name="CreateFromAlias" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="alias">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromEmailAddress(System.String)">
      <topicdata group="api" />
      <apidata name="CreateFromEmailAddress" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="emailAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromSecurityIdentifier(System.Security.Principal.SecurityIdentifier)">
      <topicdata group="api" />
      <apidata name="CreateFromSecurityIdentifier" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sid">
          <type api="T:System.Security.Principal.SecurityIdentifier" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.CallExternalMethodActivity">
      <topicdata group="api" />
      <apidata name="CallExternalMethodActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty" />
        <element api="F:System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty" />
        <element api="F:System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent" />
        <element api="F:System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty" />
        <element api="F:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.#ctor">
          <element api="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor" />
          <element api="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />
        <element api="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />
        <element api="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" />
        <element api="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>MethodInvoking</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.CallExternalMethodActivityValidator" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.CallExternalMethodActivity">
      <topicdata name="CallExternalMethodActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.CallExternalMethodActivity" />
      <apidata name="CallExternalMethodActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.CallExternalMethodActivity">
      <topicdata name="CallExternalMethodActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.CallExternalMethodActivity" />
      <apidata name="CallExternalMethodActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />
        <element api="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />
        <element api="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" />
        <element api="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.CallExternalMethodActivity">
      <topicdata name="CallExternalMethodActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.CallExternalMethodActivity" />
      <apidata name="CallExternalMethodActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.CallExternalMethodActivity">
      <topicdata name="CallExternalMethodActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.CallExternalMethodActivity" />
      <apidata name="CallExternalMethodActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty" />
        <element api="F:System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty" />
        <element api="F:System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent" />
        <element api="F:System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty" />
        <element api="F:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.CallExternalMethodActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.CallExternalMethodActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.CallExternalMethodActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken">
      <topicdata group="api" />
      <apidata name="CorrelationToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CorrelationToken" />
      <setter name="set_CorrelationToken" />
      <returns>
        <type api="T:System.Workflow.Runtime.CorrelationToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty">
      <topicdata group="api" />
      <apidata name="CorrelationTokenProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties">
      <topicdata group="api" />
      <apidata name="InitializeProperties" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties">
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType">
      <topicdata group="api" />
      <apidata name="InterfaceType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_InterfaceType" />
      <setter name="set_InterfaceType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Design.TypeBrowserEditor" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty">
      <topicdata group="api" />
      <apidata name="InterfaceTypeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking">
      <topicdata group="api" />
      <apidata name="MethodInvoking" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_MethodInvoking" />
      <remover name="remove_MethodInvoking" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent">
      <topicdata group="api" />
      <apidata name="MethodInvokingEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName">
      <topicdata group="api" />
      <apidata name="MethodName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MethodName" />
      <setter name="set_MethodName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty">
      <topicdata group="api" />
      <apidata name="MethodNameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnMethodInvoked" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnMethodInvoking" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings">
      <topicdata group="api" />
      <apidata name="ParameterBindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParameterBindings" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty">
      <topicdata group="api" />
      <apidata name="ParameterBindingsProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <topicdata group="api" eiiName="IDynamicPropertyTypeProvider.GetAccessType" />
      <apidata name="GetAccessType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.AccessTypes" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <topicdata group="api" eiiName="IDynamicPropertyTypeProvider.GetPropertyType" />
      <apidata name="GetPropertyType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.CallExternalMethodActivityValidator">
      <topicdata group="api" />
      <apidata name="CallExternalMethodActivityValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.CallExternalMethodActivityValidator.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidator" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Compiler.DependencyObjectValidator" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Compiler.Validator" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivityValidator.#ctor" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.GetFullPropertyName(System.Workflow.ComponentModel.Compiler.ValidationManager)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperties(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperty(System.Reflection.PropertyInfo,System.Object,System.Object,System.Workflow.ComponentModel.Compiler.ValidationManager)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.CallExternalMethodActivityValidator">
      <topicdata name="CallExternalMethodActivityValidator" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.CallExternalMethodActivityValidator" />
      <apidata name="CallExternalMethodActivityValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.CallExternalMethodActivityValidator.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.GetFullPropertyName(System.Workflow.ComponentModel.Compiler.ValidationManager)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperties(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperty(System.Reflection.PropertyInfo,System.Object,System.Object,System.Workflow.ComponentModel.Compiler.ValidationManager)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivityValidator" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.CallExternalMethodActivityValidator.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivityValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.CallExternalMethodActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Compiler.ActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidator" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="manager">
          <type api="T:System.Workflow.ComponentModel.Compiler.ValidationManager" ref="true" />
        </parameter>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivityValidator" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.ChannelToken">
      <topicdata group="api" />
      <apidata name="ChannelToken" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ChannelToken.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.ChannelToken.#ctor" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.ChannelToken.EndpointName" />
        <element api="P:System.Workflow.Activities.ChannelToken.Name" />
        <element api="P:System.Workflow.Activities.ChannelToken.OwnerActivityName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.ChannelToken">
      <topicdata name="ChannelToken" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ChannelToken" />
      <apidata name="ChannelToken" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ChannelToken.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ChannelToken" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.ChannelToken">
      <topicdata name="ChannelToken" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ChannelToken" />
      <apidata name="ChannelToken" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ChannelToken.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.ChannelToken.EndpointName" />
        <element api="P:System.Workflow.Activities.ChannelToken.Name" />
        <element api="P:System.Workflow.Activities.ChannelToken.OwnerActivityName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ChannelToken" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.ChannelToken">
      <topicdata name="ChannelToken" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.ChannelToken" />
      <apidata name="ChannelToken" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ChannelToken.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ChannelToken" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ChannelToken.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ChannelToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ChannelToken.EndpointName">
      <topicdata group="api" />
      <apidata name="EndpointName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EndpointName" />
      <setter name="set_EndpointName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ChannelToken" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.ChannelToken.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ChannelToken" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.ChannelToken.OwnerActivityName">
      <topicdata group="api" />
      <apidata name="OwnerActivityName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OwnerActivityName" />
      <setter name="set_OwnerActivityName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ChannelToken" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Workflow.Activities.CodeActivity">
      <topicdata group="api" />
      <apidata name="CodeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.CodeActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.Activities.CodeActivity.ExecuteCode" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.CodeActivity.ExecuteCodeEvent" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.CodeActivity.#ctor">
          <element api="M:System.Workflow.Activities.CodeActivity.#ctor" />
          <element api="M:System.Workflow.Activities.CodeActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.CodeActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.CodeActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.CodeActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.code.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ExecuteCode</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.CodeActivity">
      <topicdata name="CodeActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.CodeActivity" />
      <apidata name="CodeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.CodeActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.CodeActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.CodeActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.CodeActivity">
      <topicdata name="CodeActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.CodeActivity" />
      <apidata name="CodeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.CodeActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.CodeActivity">
      <topicdata name="CodeActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.CodeActivity" />
      <apidata name="CodeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.CodeActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.Activities.CodeActivity.ExecuteCode" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.CodeActivity">
      <topicdata name="CodeActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.CodeActivity" />
      <apidata name="CodeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.CodeActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.CodeActivity.ExecuteCodeEvent" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.CodeActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.CodeActivity.#ctor" />
        <element api="M:System.Workflow.Activities.CodeActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.CodeActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.CodeActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.CodeActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.CodeActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeActivity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.Activities.CodeActivity.ExecuteCode">
      <topicdata group="api" />
      <apidata name="ExecuteCode" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ExecuteCode" />
      <remover name="remove_ExecuteCode" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.CodeActivity.ExecuteCodeEvent">
      <topicdata group="api" />
      <apidata name="ExecuteCodeEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.CodeCondition">
      <topicdata group="api" />
      <apidata name="CodeCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.CodeCondition.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.Activities.CodeCondition.Condition" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.CodeCondition.ConditionEvent" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.CodeCondition.#ctor" />
        <element api="M:System.Workflow.Activities.CodeCondition.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.CodeCondition.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.Activities.CodeCondition.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.CodeCondition">
      <topicdata name="CodeCondition" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.CodeCondition" />
      <apidata name="CodeCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.CodeCondition.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.CodeCondition.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.CodeCondition.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.Activities.CodeCondition.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeCondition" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.CodeCondition">
      <topicdata name="CodeCondition" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.CodeCondition" />
      <apidata name="CodeCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.CodeCondition.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeCondition" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.CodeCondition">
      <topicdata name="CodeCondition" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.CodeCondition" />
      <apidata name="CodeCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.CodeCondition.#ctor" />
      <elements>
        <element api="E:System.Workflow.Activities.CodeCondition.Condition" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeCondition" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.CodeCondition">
      <topicdata name="CodeCondition" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.CodeCondition" />
      <apidata name="CodeCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.CodeCondition.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.CodeCondition.ConditionEvent" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeCondition" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.CodeCondition.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeCondition" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.Activities.CodeCondition.Condition">
      <topicdata group="api" />
      <apidata name="Condition" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Condition" />
      <remover name="remove_Condition" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.ConditionalEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.Activities.ConditionalEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeCondition" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.CodeCondition.ConditionEvent">
      <topicdata group="api" />
      <apidata name="ConditionEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeCondition" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.CodeCondition.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.ActivityCondition.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)">
          <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ownerActivity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeCondition" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.CodeCondition.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)">
      <topicdata group="api" />
      <apidata name="GetBoundValue" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)">
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="bind">
          <type api="T:System.Workflow.ComponentModel.ActivityBind" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeCondition" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.CompensatableSequenceActivity">
      <topicdata group="api" />
      <apidata name="CompensatableSequenceActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.CompensatableSequenceActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.ICompensatableActivity" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.CompensatableSequenceActivity.#ctor">
          <element api="M:System.Workflow.Activities.CompensatableSequenceActivity.#ctor" />
          <element api="M:System.Workflow.Activities.CompensatableSequenceActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.CompensatableSequenceActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.CompensatableSequenceActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.CompensatableSequenceActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.CompensatableSequenceActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Sequence.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.CompensatableSequenceActivity">
      <topicdata name="CompensatableSequenceActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.CompensatableSequenceActivity" />
      <apidata name="CompensatableSequenceActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.CompensatableSequenceActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.CompensatableSequenceActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.CompensatableSequenceActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.CompensatableSequenceActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CompensatableSequenceActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.CompensatableSequenceActivity">
      <topicdata name="CompensatableSequenceActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.CompensatableSequenceActivity" />
      <apidata name="CompensatableSequenceActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.CompensatableSequenceActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CompensatableSequenceActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.CompensatableSequenceActivity">
      <topicdata name="CompensatableSequenceActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.CompensatableSequenceActivity" />
      <apidata name="CompensatableSequenceActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.CompensatableSequenceActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CompensatableSequenceActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.CompensatableSequenceActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.CompensatableSequenceActivity.#ctor" />
        <element api="M:System.Workflow.Activities.CompensatableSequenceActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CompensatableSequenceActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.CompensatableSequenceActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.CompensatableSequenceActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CompensatableSequenceActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.CompensatableSequenceActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.CompensatableSequenceActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CompensatableSequenceActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.CompensatableSequenceActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" eiiName="ICompensatableActivity.Compensate" />
      <apidata name="Compensate" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.ICompensatableActivity.Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.ComponentModel.ICompensatableActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CompensatableSequenceActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.ConditionalEventArgs">
      <topicdata group="api" />
      <apidata name="ConditionalEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Workflow.Activities.ConditionalEventArgs.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.ConditionalEventArgs.#ctor">
          <element api="M:System.Workflow.Activities.ConditionalEventArgs.#ctor" />
          <element api="M:System.Workflow.Activities.ConditionalEventArgs.#ctor(System.Boolean)" />
        </element>
        <element api="P:System.Workflow.Activities.ConditionalEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.ConditionalEventArgs">
      <topicdata name="ConditionalEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ConditionalEventArgs" />
      <apidata name="ConditionalEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Workflow.Activities.ConditionalEventArgs.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionalEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.ConditionalEventArgs">
      <topicdata name="ConditionalEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ConditionalEventArgs" />
      <apidata name="ConditionalEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Workflow.Activities.ConditionalEventArgs.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.ConditionalEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionalEventArgs" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.ConditionalEventArgs.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.ConditionalEventArgs.#ctor" />
        <element api="M:System.Workflow.Activities.ConditionalEventArgs.#ctor(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionalEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ConditionalEventArgs.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ConditionalEventArgs.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionalEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ConditionalEventArgs.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ConditionalEventArgs.#ctor" />
      <parameters>
        <parameter name="result">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionalEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ConditionalEventArgs.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionalEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.ConditionedActivityGroup">
      <topicdata group="api" />
      <apidata name="ConditionedActivityGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty" />
        <element api="F:System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.ConditionedActivityGroup.#ctor">
          <element api="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor" />
          <element api="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(System.String)" />
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(System.Object)" />
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(System.Object,System.Object)" />
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.ConditionedActivityGroup.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.ConditionedActivityGroup.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.cag.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingAttribute" ref="true" />
          <argument>
            <type api="T:System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingOption" ref="false" />
            <enumValue>
              <field name="Concurrent" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.ConditionedActivityGroup">
      <topicdata name="ConditionedActivityGroup" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ConditionedActivityGroup" />
      <apidata name="ConditionedActivityGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(System.String)" />
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(System.Object)" />
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(System.Object,System.Object)" />
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.ConditionedActivityGroup.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.ConditionedActivityGroup.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.ConditionedActivityGroup">
      <topicdata name="ConditionedActivityGroup" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ConditionedActivityGroup" />
      <apidata name="ConditionedActivityGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.ConditionedActivityGroup">
      <topicdata name="ConditionedActivityGroup" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.ConditionedActivityGroup" />
      <apidata name="ConditionedActivityGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.ConditionedActivityGroup">
      <topicdata name="ConditionedActivityGroup" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.ConditionedActivityGroup" />
      <apidata name="ConditionedActivityGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty" />
        <element api="F:System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.ConditionedActivityGroup.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor" />
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ConditionedActivityGroup.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ConditionedActivityGroup.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="GetChildActivityExecutedCount" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="child">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(System.String)">
      <topicdata group="api" />
      <apidata name="GetDynamicActivity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="childActivityName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(System.Object)">
      <topicdata group="api" />
      <apidata name="GetWhenCondition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="SetWhenCondition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" eiiName="IActivityEventListener`1.OnEvent" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition">
      <topicdata group="api" />
      <apidata name="UntilCondition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UntilCondition" />
      <setter name="set_UntilCondition" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty">
      <topicdata group="api" />
      <apidata name="UntilConditionProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty">
      <topicdata group="api" />
      <apidata name="WhenConditionProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.ContextToken">
      <topicdata group="api" />
      <apidata name="ContextToken" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ContextToken.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.ContextToken.RootContextName" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.ContextToken.#ctor">
          <element api="M:System.Workflow.Activities.ContextToken.#ctor" />
          <element api="M:System.Workflow.Activities.ContextToken.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.ContextToken.Name" />
        <element api="P:System.Workflow.Activities.ContextToken.OwnerActivityName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.ContextToken">
      <topicdata name="ContextToken" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ContextToken" />
      <apidata name="ContextToken" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ContextToken.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ContextToken" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.ContextToken">
      <topicdata name="ContextToken" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ContextToken" />
      <apidata name="ContextToken" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ContextToken.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.ContextToken.Name" />
        <element api="P:System.Workflow.Activities.ContextToken.OwnerActivityName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ContextToken" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.ContextToken">
      <topicdata name="ContextToken" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.ContextToken" />
      <apidata name="ContextToken" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ContextToken.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ContextToken" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.ContextToken">
      <topicdata name="ContextToken" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.ContextToken" />
      <apidata name="ContextToken" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ContextToken.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.ContextToken.RootContextName" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ContextToken" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.ContextToken.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.ContextToken.#ctor" />
        <element api="M:System.Workflow.Activities.ContextToken.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ContextToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ContextToken.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ContextToken.#ctor" />
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ContextToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ContextToken.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ContextToken.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ContextToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ContextToken.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ContextToken" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.ContextToken.OwnerActivityName">
      <topicdata group="api" />
      <apidata name="OwnerActivityName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OwnerActivityName" />
      <setter name="set_OwnerActivityName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ContextToken" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.ContextToken.RootContextName">
      <topicdata group="api" />
      <apidata name="RootContextName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>(RootContext)</value>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ContextToken" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.CorrelationAliasAttribute">
      <topicdata group="api" />
      <apidata name="CorrelationAliasAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.CorrelationAliasAttribute.#ctor(System.String,System.String)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Workflow.Activities.CorrelationAliasAttribute.Name" />
        <element api="P:System.Workflow.Activities.CorrelationAliasAttribute.Path" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
              <field name="Event" />
              <field name="Delegate" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.CorrelationAliasAttribute">
      <topicdata name="CorrelationAliasAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.CorrelationAliasAttribute" />
      <apidata name="CorrelationAliasAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CorrelationAliasAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.CorrelationAliasAttribute">
      <topicdata name="CorrelationAliasAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.CorrelationAliasAttribute" />
      <apidata name="CorrelationAliasAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Workflow.Activities.CorrelationAliasAttribute.Name" />
        <element api="P:System.Workflow.Activities.CorrelationAliasAttribute.Path" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CorrelationAliasAttribute" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.CorrelationAliasAttribute.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CorrelationAliasAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.CorrelationAliasAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CorrelationAliasAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.CorrelationAliasAttribute.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CorrelationAliasAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.CorrelationInitializerAttribute">
      <topicdata group="api" />
      <apidata name="CorrelationInitializerAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.CorrelationInitializerAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.CorrelationInitializerAttribute.#ctor" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
              <field name="Event" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.CorrelationInitializerAttribute">
      <topicdata name="CorrelationInitializerAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.CorrelationInitializerAttribute" />
      <apidata name="CorrelationInitializerAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.CorrelationInitializerAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CorrelationInitializerAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.CorrelationInitializerAttribute">
      <topicdata name="CorrelationInitializerAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.CorrelationInitializerAttribute" />
      <apidata name="CorrelationInitializerAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.CorrelationInitializerAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CorrelationInitializerAttribute" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.CorrelationInitializerAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CorrelationInitializerAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.CorrelationParameterAttribute">
      <topicdata group="api" />
      <apidata name="CorrelationParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.CorrelationParameterAttribute.#ctor(System.String)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Workflow.Activities.CorrelationParameterAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Interface" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.CorrelationParameterAttribute">
      <topicdata name="CorrelationParameterAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.CorrelationParameterAttribute" />
      <apidata name="CorrelationParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CorrelationParameterAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.CorrelationParameterAttribute">
      <topicdata name="CorrelationParameterAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.CorrelationParameterAttribute" />
      <apidata name="CorrelationParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Workflow.Activities.CorrelationParameterAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CorrelationParameterAttribute" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.CorrelationParameterAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CorrelationParameterAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.CorrelationParameterAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CorrelationParameterAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.DelayActivity">
      <topicdata group="api" />
      <apidata name="DelayActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.DelayActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="E:System.Workflow.Activities.DelayActivity.InitializeTimeoutDuration" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.DelayActivity.InitializeTimeoutDurationEvent" />
        <element api="F:System.Workflow.Activities.DelayActivity.TimeoutDurationProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.DelayActivity.#ctor">
          <element api="M:System.Workflow.Activities.DelayActivity.#ctor" />
          <element api="M:System.Workflow.Activities.DelayActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.DelayActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.DelayActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.DelayActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#QueueName" />
        <element api="P:System.Workflow.Activities.DelayActivity.TimeoutDuration" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Delay.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>InitializeTimeoutDuration</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.DelayActivity">
      <topicdata name="DelayActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.DelayActivity" />
      <apidata name="DelayActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.DelayActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.DelayActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.DelayActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.DelayActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.DelayActivity">
      <topicdata name="DelayActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.DelayActivity" />
      <apidata name="DelayActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.DelayActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#QueueName" />
        <element api="P:System.Workflow.Activities.DelayActivity.TimeoutDuration" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.DelayActivity">
      <topicdata name="DelayActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.DelayActivity" />
      <apidata name="DelayActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.DelayActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.Activities.DelayActivity.InitializeTimeoutDuration" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.DelayActivity">
      <topicdata name="DelayActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.DelayActivity" />
      <apidata name="DelayActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.DelayActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.DelayActivity.InitializeTimeoutDurationEvent" />
        <element api="F:System.Workflow.Activities.DelayActivity.TimeoutDurationProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.DelayActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.DelayActivity.#ctor" />
        <element api="M:System.Workflow.Activities.DelayActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.DelayActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.DelayActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.DelayActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.DelayActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.Activities.DelayActivity.InitializeTimeoutDuration">
      <topicdata group="api" />
      <apidata name="InitializeTimeoutDuration" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_InitializeTimeoutDuration" />
      <remover name="remove_InitializeTimeoutDuration" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.DelayActivity.InitializeTimeoutDurationEvent">
      <topicdata group="api" />
      <apidata name="InitializeTimeoutDurationEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#QueueName">
      <topicdata group="api" eiiName="IEventActivity.QueueName" />
      <apidata name="QueueName" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Workflow.Activities.IEventActivity.QueueName" />
      <returns>
        <type api="T:System.IComparable" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Workflow.Activities.IEventActivity.QueueName">
          <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <topicdata group="api" eiiName="IEventActivity.Subscribe" />
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="parentContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="parentEventHandler">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <topicdata group="api" eiiName="IEventActivity.Unsubscribe" />
      <apidata name="Unsubscribe" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="parentContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="parentEventHandler">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.DelayActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)">
      <topicdata group="api" eiiName="IActivityEventListener`1.OnEvent" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.DelayActivity.TimeoutDuration">
      <topicdata group="api" />
      <apidata name="TimeoutDuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TimeoutDuration" />
      <setter name="set_TimeoutDuration" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.DelayActivity.TimeoutDurationProperty">
      <topicdata group="api" />
      <apidata name="TimeoutDurationProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.EventDeliveryFailedException">
      <topicdata group="api" />
      <apidata name="EventDeliveryFailedException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="Overload:System.Workflow.Activities.EventDeliveryFailedException.#ctor">
          <element api="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor" />
          <element api="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor(System.String)" />
          <element api="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.EventDeliveryFailedException">
      <topicdata name="EventDeliveryFailedException" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.EventDeliveryFailedException" />
      <apidata name="EventDeliveryFailedException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDeliveryFailedException" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.EventDeliveryFailedException">
      <topicdata name="EventDeliveryFailedException" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.EventDeliveryFailedException" />
      <apidata name="EventDeliveryFailedException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDeliveryFailedException" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.EventDeliveryFailedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor" />
        <element api="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor(System.String)" />
        <element api="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDeliveryFailedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventDeliveryFailedException.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDeliveryFailedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventDeliveryFailedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDeliveryFailedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventDeliveryFailedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDeliveryFailedException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.EventDrivenActivity">
      <topicdata group="api" />
      <apidata name="EventDrivenActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.EventDrivenActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.EventDrivenActivity.#ctor">
          <element api="M:System.Workflow.Activities.EventDrivenActivity.#ctor" />
          <element api="M:System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.EventDrivenActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.EventDrivenActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.EventDrivenActivity.EventActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.EventDrivenActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.EventDriven.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.EventDrivenActivity">
      <topicdata name="EventDrivenActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.EventDrivenActivity" />
      <apidata name="EventDrivenActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.EventDrivenActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.EventDrivenActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.EventDrivenActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDrivenActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.EventDrivenActivity">
      <topicdata name="EventDrivenActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.EventDrivenActivity" />
      <apidata name="EventDrivenActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.EventDrivenActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.EventDrivenActivity.EventActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDrivenActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.EventDrivenActivity">
      <topicdata name="EventDrivenActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.EventDrivenActivity" />
      <apidata name="EventDrivenActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.EventDrivenActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDrivenActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.EventDrivenActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.EventDrivenActivity.#ctor" />
        <element api="M:System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDrivenActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventDrivenActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventDrivenActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDrivenActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventDrivenActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDrivenActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.EventDrivenActivity.EventActivity">
      <topicdata group="api" />
      <apidata name="EventActivity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EventActivity" />
      <returns>
        <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDrivenActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Workflow.Activities.EventHandlersActivity">
      <topicdata group="api" />
      <apidata name="EventHandlersActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.EventHandlersActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.EventHandlersActivity.#ctor">
          <element api="M:System.Workflow.Activities.EventHandlersActivity.#ctor" />
          <element api="M:System.Workflow.Activities.EventHandlersActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity(System.String)" />
        <element api="M:System.Workflow.Activities.EventHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.EventHandlersActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.EventHandlersActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.EventHandlersActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.events.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.AlternateFlowActivityAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.EventHandlersActivity">
      <topicdata name="EventHandlersActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.EventHandlersActivity" />
      <apidata name="EventHandlersActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.EventHandlersActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity(System.String)" />
        <element api="M:System.Workflow.Activities.EventHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.EventHandlersActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.EventHandlersActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlersActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.EventHandlersActivity">
      <topicdata name="EventHandlersActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.EventHandlersActivity" />
      <apidata name="EventHandlersActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.EventHandlersActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlersActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.EventHandlersActivity">
      <topicdata name="EventHandlersActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.EventHandlersActivity" />
      <apidata name="EventHandlersActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.EventHandlersActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlersActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.EventHandlersActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.EventHandlersActivity.#ctor" />
        <element api="M:System.Workflow.Activities.EventHandlersActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlersActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventHandlersActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventHandlersActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlersActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventHandlersActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventHandlersActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlersActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity(System.String)">
      <topicdata group="api" />
      <apidata name="GetDynamicActivity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="childActivityName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlersActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" eiiName="IActivityEventListener`1.OnEvent" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlersActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.EventHandlingScopeActivity">
      <topicdata group="api" />
      <apidata name="EventHandlingScopeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.EventHandlingScopeActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.EventHandlingScopeActivity.#ctor">
          <element api="M:System.Workflow.Activities.EventHandlingScopeActivity.#ctor" />
          <element api="M:System.Workflow.Activities.EventHandlingScopeActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.EventHandlingScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.EventHandlingScopeActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.EventHandlingScopeActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.EventHandlingScopeActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Sequence.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.EventHandlingScopeActivity">
      <topicdata name="EventHandlingScopeActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.EventHandlingScopeActivity" />
      <apidata name="EventHandlingScopeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.EventHandlingScopeActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.EventHandlingScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.EventHandlingScopeActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.EventHandlingScopeActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlingScopeActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.EventHandlingScopeActivity">
      <topicdata name="EventHandlingScopeActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.EventHandlingScopeActivity" />
      <apidata name="EventHandlingScopeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.EventHandlingScopeActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlingScopeActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.EventHandlingScopeActivity">
      <topicdata name="EventHandlingScopeActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.EventHandlingScopeActivity" />
      <apidata name="EventHandlingScopeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.EventHandlingScopeActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlingScopeActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.EventHandlingScopeActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.EventHandlingScopeActivity.#ctor" />
        <element api="M:System.Workflow.Activities.EventHandlingScopeActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlingScopeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventHandlingScopeActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventHandlingScopeActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlingScopeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventHandlingScopeActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventHandlingScopeActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlingScopeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventHandlingScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" eiiName="IActivityEventListener`1.OnEvent" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlingScopeActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.EventQueueName">
      <topicdata group="api" />
      <apidata name="EventQueueName" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IComparable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.EventQueueName.#ctor">
          <element api="M:System.Workflow.Activities.EventQueueName.#ctor(System.Type,System.String)" />
          <element api="M:System.Workflow.Activities.EventQueueName.#ctor(System.Type,System.String,System.Collections.Generic.ICollection{System.Workflow.Runtime.CorrelationProperty})" />
        </element>
        <element api="Overload:System.Workflow.Activities.EventQueueName.CompareTo">
          <element api="M:System.Workflow.Activities.EventQueueName.CompareTo(System.Workflow.Activities.EventQueueName)" />
          <element api="M:System.Workflow.Activities.EventQueueName.CompareTo(System.Object)" />
        </element>
        <element api="M:System.Workflow.Activities.EventQueueName.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.EventQueueName.GetCorrelationValues" />
        <element api="M:System.Workflow.Activities.EventQueueName.GetHashCode" />
        <element api="M:System.Workflow.Activities.EventQueueName.op_Equality(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)" />
        <element api="M:System.Workflow.Activities.EventQueueName.op_GreaterThan(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)" />
        <element api="M:System.Workflow.Activities.EventQueueName.op_Inequality(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)" />
        <element api="M:System.Workflow.Activities.EventQueueName.op_LessThan(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)" />
        <element api="M:System.Workflow.Activities.EventQueueName.ToString" />
        <element api="P:System.Workflow.Activities.EventQueueName.InterfaceType" />
        <element api="P:System.Workflow.Activities.EventQueueName.MethodName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.EventQueueName">
      <topicdata name="EventQueueName" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.EventQueueName" />
      <apidata name="EventQueueName" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.EventQueueName.CompareTo">
          <element api="M:System.Workflow.Activities.EventQueueName.CompareTo(System.Workflow.Activities.EventQueueName)" />
          <element api="M:System.Workflow.Activities.EventQueueName.CompareTo(System.Object)" />
        </element>
        <element api="M:System.Workflow.Activities.EventQueueName.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.EventQueueName.GetCorrelationValues" />
        <element api="M:System.Workflow.Activities.EventQueueName.GetHashCode" />
        <element api="M:System.Workflow.Activities.EventQueueName.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" />
      </containers>
    </api>
    <api id="Operators.T:System.Workflow.Activities.EventQueueName">
      <topicdata name="EventQueueName" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Workflow.Activities.EventQueueName" />
      <apidata name="EventQueueName" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Workflow.Activities.EventQueueName.op_Equality(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)" />
        <element api="M:System.Workflow.Activities.EventQueueName.op_GreaterThan(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)" />
        <element api="M:System.Workflow.Activities.EventQueueName.op_Inequality(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)" />
        <element api="M:System.Workflow.Activities.EventQueueName.op_LessThan(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.EventQueueName">
      <topicdata name="EventQueueName" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.EventQueueName" />
      <apidata name="EventQueueName" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Workflow.Activities.EventQueueName.InterfaceType" />
        <element api="P:System.Workflow.Activities.EventQueueName.MethodName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.EventQueueName.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.EventQueueName.#ctor(System.Type,System.String)" />
        <element api="M:System.Workflow.Activities.EventQueueName.#ctor(System.Type,System.String,System.Collections.Generic.ICollection{System.Workflow.Runtime.CorrelationProperty})" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.EventQueueName.CompareTo">
      <topicdata name="CompareTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CompareTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.Activities.EventQueueName.CompareTo(System.Workflow.Activities.EventQueueName)" />
        <element api="M:System.Workflow.Activities.EventQueueName.CompareTo(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.#ctor(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventQueueName.#ctor" />
      <parameters>
        <parameter name="interfaceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="operation">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.#ctor(System.Type,System.String,System.Collections.Generic.ICollection{System.Workflow.Runtime.CorrelationProperty})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventQueueName.#ctor" />
      <parameters>
        <parameter name="interfaceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="operation">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyValues">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Runtime.CorrelationProperty" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.CompareTo(System.Object)">
      <topicdata group="api" />
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.Activities.EventQueueName.CompareTo" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="toCompare">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.CompareTo(System.Workflow.Activities.EventQueueName)">
      <topicdata group="api" />
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.Activities.EventQueueName.CompareTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventQueueName">
          <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.GetCorrelationValues">
      <topicdata group="api" />
      <apidata name="GetCorrelationValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Workflow.Runtime.CorrelationProperty" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.EventQueueName.InterfaceType">
      <topicdata group="api" />
      <apidata name="InterfaceType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InterfaceType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.EventQueueName.MethodName">
      <topicdata group="api" />
      <apidata name="MethodName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MethodName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.op_Equality(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="queueKey1">
          <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
        </parameter>
        <parameter name="queueKey2">
          <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.op_GreaterThan(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="queueKey1">
          <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
        </parameter>
        <parameter name="queueKey2">
          <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.op_Inequality(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="queueKey1">
          <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
        </parameter>
        <parameter name="queueKey2">
          <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.op_LessThan(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="queueKey1">
          <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
        </parameter>
        <parameter name="queueKey2">
          <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.ExecutionType">
      <topicdata group="api" />
      <apidata name="ExecutionType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Workflow.Activities.ExecutionType.Sequence" />
        <element api="F:System.Workflow.Activities.ExecutionType.Parallel" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.ExecutionType.Parallel">
      <topicdata group="api" notopic="" />
      <apidata name="Parallel" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.Activities.ExecutionType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExecutionType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.ExecutionType.Sequence">
      <topicdata group="api" notopic="" />
      <apidata name="Sequence" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.Activities.ExecutionType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExecutionType" ref="false" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.ExternalDataEventArgs">
      <topicdata group="api" />
      <apidata name="ExternalDataEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.ExternalDataEventArgs.#ctor">
          <element api="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor" />
          <element api="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid)" />
          <element api="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object)" />
          <element api="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object,System.Boolean)" />
        </element>
        <element api="P:System.Workflow.Activities.ExternalDataEventArgs.Identity" />
        <element api="P:System.Workflow.Activities.ExternalDataEventArgs.InstanceId" />
        <element api="P:System.Workflow.Activities.ExternalDataEventArgs.WaitForIdle" />
        <element api="P:System.Workflow.Activities.ExternalDataEventArgs.WorkHandler" />
        <element api="P:System.Workflow.Activities.ExternalDataEventArgs.WorkItem" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.ExternalDataEventArgs">
      <topicdata name="ExternalDataEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ExternalDataEventArgs" />
      <apidata name="ExternalDataEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.ExternalDataEventArgs">
      <topicdata name="ExternalDataEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ExternalDataEventArgs" />
      <apidata name="ExternalDataEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.ExternalDataEventArgs.Identity" />
        <element api="P:System.Workflow.Activities.ExternalDataEventArgs.InstanceId" />
        <element api="P:System.Workflow.Activities.ExternalDataEventArgs.WaitForIdle" />
        <element api="P:System.Workflow.Activities.ExternalDataEventArgs.WorkHandler" />
        <element api="P:System.Workflow.Activities.ExternalDataEventArgs.WorkItem" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.ExternalDataEventArgs.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor" />
        <element api="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid)" />
        <element api="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object)" />
        <element api="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ExternalDataEventArgs.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ExternalDataEventArgs.#ctor" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ExternalDataEventArgs.#ctor" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="workHandler">
          <type api="T:System.Workflow.Runtime.IPendingWork" ref="true" />
        </parameter>
        <parameter name="workItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ExternalDataEventArgs.#ctor" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="workHandler">
          <type api="T:System.Workflow.Runtime.IPendingWork" ref="true" />
        </parameter>
        <parameter name="workItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="waitForIdle">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ExternalDataEventArgs.Identity">
      <topicdata group="api" />
      <apidata name="Identity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Identity" />
      <setter name="set_Identity" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ExternalDataEventArgs.InstanceId">
      <topicdata group="api" />
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InstanceId" />
      <setter name="set_InstanceId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ExternalDataEventArgs.WaitForIdle">
      <topicdata group="api" />
      <apidata name="WaitForIdle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WaitForIdle" />
      <setter name="set_WaitForIdle" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ExternalDataEventArgs.WorkHandler">
      <topicdata group="api" />
      <apidata name="WorkHandler" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WorkHandler" />
      <setter name="set_WorkHandler" />
      <returns>
        <type api="T:System.Workflow.Runtime.IPendingWork" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ExternalDataEventArgs.WorkItem">
      <topicdata group="api" />
      <apidata name="WorkItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WorkItem" />
      <setter name="set_WorkItem" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.ExternalDataExchangeAttribute">
      <topicdata group="api" />
      <apidata name="ExternalDataExchangeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ExternalDataExchangeAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeAttribute.#ctor" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Interface" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.ExternalDataExchangeAttribute">
      <topicdata name="ExternalDataExchangeAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />
      <apidata name="ExternalDataExchangeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ExternalDataExchangeAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.ExternalDataExchangeAttribute">
      <topicdata name="ExternalDataExchangeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />
      <apidata name="ExternalDataExchangeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ExternalDataExchangeAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataExchangeAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.ExternalDataExchangeService">
      <topicdata group="api" />
      <apidata name="ExternalDataExchangeService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.ExternalDataExchangeService.#ctor">
          <element api="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor" />
          <element api="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.Workflow.Activities.ExternalDataExchangeServiceSection)" />
          <element api="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.AddService(System.Object)" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.GetService(System.Type)" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.RemoveService(System.Object)" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.Start" />
        <element api="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted" />
        <element api="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped" />
        <element api="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" />
        <element api="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop" />
        <element api="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" />
        <element api="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.ExternalDataExchangeService">
      <topicdata name="ExternalDataExchangeService" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ExternalDataExchangeService" />
      <apidata name="ExternalDataExchangeService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.AddService(System.Object)" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.GetService(System.Type)" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.RemoveService(System.Object)" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.Start" />
        <element api="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted" />
        <element api="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped" />
        <element api="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" />
        <element api="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeService" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.ExternalDataExchangeService">
      <topicdata name="ExternalDataExchangeService" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ExternalDataExchangeService" />
      <apidata name="ExternalDataExchangeService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor" />
      <elements>
        <element api="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" />
        <element api="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeService" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.ExternalDataExchangeService.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.Workflow.Activities.ExternalDataExchangeServiceSection)" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeService" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ExternalDataExchangeService.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeService" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ExternalDataExchangeService.#ctor" />
      <parameters>
        <parameter name="parameters">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeService" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ExternalDataExchangeService.#ctor" />
      <parameters>
        <parameter name="configSectionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeService" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.Workflow.Activities.ExternalDataExchangeServiceSection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ExternalDataExchangeService.#ctor" />
      <parameters>
        <parameter name="settings">
          <type api="T:System.Workflow.Activities.ExternalDataExchangeServiceSection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeService" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataExchangeService.AddService(System.Object)">
      <topicdata group="api" />
      <apidata name="AddService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="service">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeService" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataExchangeService.GetService(System.Type)">
      <topicdata group="api" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeService" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataExchangeService.RemoveService(System.Object)">
      <topicdata group="api" />
      <apidata name="RemoveService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="service">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeService" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataExchangeService.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <type api="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeService" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.ExternalDataExchangeServiceSection">
      <topicdata group="api" />
      <apidata name="ExternalDataExchangeServiceSection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.ExternalDataExchangeServiceSection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationSection.GetRuntimeObject" />
        <element api="M:System.Configuration.ConfigurationSection.IsModified" />
        <element api="M:System.Configuration.ConfigurationSection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeServiceSection.#ctor" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.Workflow.Activities.ExternalDataExchangeServiceSection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
        <element api="P:System.Workflow.Activities.ExternalDataExchangeServiceSection.Services" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.ExternalDataExchangeServiceSection">
      <topicdata name="ExternalDataExchangeServiceSection" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ExternalDataExchangeServiceSection" />
      <apidata name="ExternalDataExchangeServiceSection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.ExternalDataExchangeServiceSection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationSection.GetRuntimeObject" />
        <element api="M:System.Configuration.ConfigurationSection.IsModified" />
        <element api="M:System.Configuration.ConfigurationSection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeServiceSection" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.ExternalDataExchangeServiceSection">
      <topicdata name="ExternalDataExchangeServiceSection" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ExternalDataExchangeServiceSection" />
      <apidata name="ExternalDataExchangeServiceSection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.ExternalDataExchangeServiceSection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.Workflow.Activities.ExternalDataExchangeServiceSection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
        <element api="P:System.Workflow.Activities.ExternalDataExchangeServiceSection.Services" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeServiceSection" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataExchangeServiceSection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeServiceSection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ExternalDataExchangeServiceSection.Services">
      <topicdata group="api" />
      <apidata name="Services" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Services" />
      <returns>
        <type api="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeServiceElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeServiceSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Services</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Workflow.Activities.HandleExternalEventActivity">
      <topicdata group="api" />
      <apidata name="HandleExternalEventActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Workflow.Activities.HandleExternalEventActivity.Invoked" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.RolesProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.#ctor">
          <element api="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor" />
          <element api="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.EventName" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.Roles" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Invoked</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.HandleExternalEventActivityValidator" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.HandleExternalEventActivity">
      <topicdata name="HandleExternalEventActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.HandleExternalEventActivity" />
      <apidata name="HandleExternalEventActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.HandleExternalEventActivity">
      <topicdata name="HandleExternalEventActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.HandleExternalEventActivity" />
      <apidata name="HandleExternalEventActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.EventName" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.Roles" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.HandleExternalEventActivity">
      <topicdata name="HandleExternalEventActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.HandleExternalEventActivity" />
      <apidata name="HandleExternalEventActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.Activities.HandleExternalEventActivity.Invoked" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.HandleExternalEventActivity">
      <topicdata name="HandleExternalEventActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.HandleExternalEventActivity" />
      <apidata name="HandleExternalEventActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.RolesProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.HandleExternalEventActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.HandleExternalEventActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.HandleExternalEventActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken">
      <topicdata group="api" />
      <apidata name="CorrelationToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CorrelationToken" />
      <setter name="set_CorrelationToken" />
      <returns>
        <type api="T:System.Workflow.Runtime.CorrelationToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty">
      <topicdata group="api" />
      <apidata name="CorrelationTokenProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.HandleExternalEventActivity.EventName">
      <topicdata group="api" />
      <apidata name="EventName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_EventName" />
      <setter name="set_EventName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty">
      <topicdata group="api" />
      <apidata name="EventNameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)">
      <topicdata group="api" />
      <apidata name="HandleFault" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties">
      <topicdata group="api" />
      <apidata name="InitializeProperties" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties">
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType">
      <topicdata group="api" />
      <apidata name="InterfaceType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_InterfaceType" />
      <setter name="set_InterfaceType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Design.TypeBrowserEditor" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty">
      <topicdata group="api" />
      <apidata name="InterfaceTypeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.Activities.HandleExternalEventActivity.Invoked">
      <topicdata group="api" />
      <apidata name="Invoked" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Invoked" />
      <remover name="remove_Invoked" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent">
      <topicdata group="api" />
      <apidata name="InvokedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="OnClosed" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnInvoked" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings">
      <topicdata group="api" />
      <apidata name="ParameterBindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParameterBindings" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty">
      <topicdata group="api" />
      <apidata name="ParameterBindingsProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.HandleExternalEventActivity.Roles">
      <topicdata group="api" />
      <apidata name="Roles" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Roles" />
      <setter name="set_Roles" />
      <returns>
        <type api="T:System.Workflow.Activities.WorkflowRoleCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Design.BindUITypeEditor" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.HandleExternalEventActivity.RolesProperty">
      <topicdata group="api" />
      <apidata name="RolesProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName">
      <topicdata group="api" eiiName="IEventActivity.QueueName" />
      <apidata name="QueueName" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Workflow.Activities.IEventActivity.QueueName" />
      <returns>
        <type api="T:System.IComparable" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Workflow.Activities.IEventActivity.QueueName">
          <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <topicdata group="api" eiiName="IEventActivity.Subscribe" />
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="parentContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="parentEventHandler">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <topicdata group="api" eiiName="IEventActivity.Unsubscribe" />
      <apidata name="Unsubscribe" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="parentContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="parentEventHandler">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)">
      <topicdata group="api" eiiName="IActivityEventListener`1.OnEvent" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <topicdata group="api" eiiName="IDynamicPropertyTypeProvider.GetAccessType" />
      <apidata name="GetAccessType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.AccessTypes" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <topicdata group="api" eiiName="IDynamicPropertyTypeProvider.GetPropertyType" />
      <apidata name="GetPropertyType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.HandleExternalEventActivityValidator">
      <topicdata group="api" />
      <apidata name="HandleExternalEventActivityValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.HandleExternalEventActivityValidator.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidator" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Compiler.DependencyObjectValidator" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Compiler.Validator" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivityValidator.#ctor" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.GetFullPropertyName(System.Workflow.ComponentModel.Compiler.ValidationManager)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperties(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperty(System.Reflection.PropertyInfo,System.Object,System.Object,System.Workflow.ComponentModel.Compiler.ValidationManager)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.HandleExternalEventActivityValidator">
      <topicdata name="HandleExternalEventActivityValidator" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.HandleExternalEventActivityValidator" />
      <apidata name="HandleExternalEventActivityValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.HandleExternalEventActivityValidator.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.GetFullPropertyName(System.Workflow.ComponentModel.Compiler.ValidationManager)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperties(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperty(System.Reflection.PropertyInfo,System.Object,System.Object,System.Workflow.ComponentModel.Compiler.ValidationManager)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivityValidator" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivityValidator.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivityValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Compiler.ActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidator" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="manager">
          <type api="T:System.Workflow.ComponentModel.Compiler.ValidationManager" ref="true" />
        </parameter>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivityValidator" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.IEventActivity">
      <topicdata group="api" />
      <apidata name="IEventActivity" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="P:System.Workflow.Activities.IEventActivity.QueueName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.IEventActivity">
      <topicdata name="IEventActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.IEventActivity" />
      <apidata name="IEventActivity" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IEventActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.IEventActivity">
      <topicdata name="IEventActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.IEventActivity" />
      <apidata name="IEventActivity" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Workflow.Activities.IEventActivity.QueueName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IEventActivity" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.IEventActivity.QueueName">
      <topicdata group="api" />
      <apidata name="QueueName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_QueueName" />
      <returns>
        <type api="T:System.IComparable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <topicdata group="api" />
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="parentContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="parentEventHandler">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <topicdata group="api" />
      <apidata name="Unsubscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="parentContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="parentEventHandler">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.IfElseActivity">
      <topicdata group="api" />
      <apidata name="IfElseActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.IfElseActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.IfElseActivity.#ctor">
          <element api="M:System.Workflow.Activities.IfElseActivity.#ctor" />
          <element api="M:System.Workflow.Activities.IfElseActivity.#ctor(System.String)" />
        </element>
        <element api="Overload:System.Workflow.Activities.IfElseActivity.AddBranch">
          <element api="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity})" />
          <element api="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Workflow.ComponentModel.ActivityCondition)" />
        </element>
        <element api="M:System.Workflow.Activities.IfElseActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.IfElseActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.IfElseActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.IfElseActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Decision.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.IfElseActivity">
      <topicdata name="IfElseActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.IfElseActivity" />
      <apidata name="IfElseActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.IfElseActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.IfElseActivity.AddBranch">
          <element api="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity})" />
          <element api="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Workflow.ComponentModel.ActivityCondition)" />
        </element>
        <element api="M:System.Workflow.Activities.IfElseActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.IfElseActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.IfElseActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.IfElseActivity">
      <topicdata name="IfElseActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.IfElseActivity" />
      <apidata name="IfElseActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.IfElseActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.IfElseActivity">
      <topicdata name="IfElseActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.IfElseActivity" />
      <apidata name="IfElseActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.IfElseActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.IfElseActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.IfElseActivity.#ctor" />
        <element api="M:System.Workflow.Activities.IfElseActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.IfElseActivity.AddBranch">
      <topicdata name="AddBranch" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddBranch" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity})" />
        <element api="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Workflow.ComponentModel.ActivityCondition)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.IfElseActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.IfElseActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.IfElseActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.IfElseActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity})">
      <topicdata group="api" />
      <apidata name="AddBranch" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.Activities.IfElseActivity.AddBranch" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activities">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Workflow.ComponentModel.ActivityCondition)">
      <topicdata group="api" />
      <apidata name="AddBranch" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.Activities.IfElseActivity.AddBranch" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activities">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="branchCondition">
          <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.IfElseActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" eiiName="IActivityEventListener`1.OnEvent" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.IfElseBranchActivity">
      <topicdata group="api" />
      <apidata name="IfElseBranchActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.IfElseBranchActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.IfElseBranchActivity.ConditionProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.IfElseBranchActivity.#ctor">
          <element api="M:System.Workflow.Activities.IfElseBranchActivity.#ctor" />
          <element api="M:System.Workflow.Activities.IfElseBranchActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.IfElseBranchActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.IfElseBranchActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.IfElseBranchActivity.Condition" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.IfElseBranchActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.DecisionBranch.bmp</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.IfElseBranchActivity">
      <topicdata name="IfElseBranchActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.IfElseBranchActivity" />
      <apidata name="IfElseBranchActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.IfElseBranchActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.IfElseBranchActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.IfElseBranchActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.IfElseBranchActivity">
      <topicdata name="IfElseBranchActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.IfElseBranchActivity" />
      <apidata name="IfElseBranchActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.IfElseBranchActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.IfElseBranchActivity.Condition" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.IfElseBranchActivity">
      <topicdata name="IfElseBranchActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.IfElseBranchActivity" />
      <apidata name="IfElseBranchActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.IfElseBranchActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.IfElseBranchActivity">
      <topicdata name="IfElseBranchActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.IfElseBranchActivity" />
      <apidata name="IfElseBranchActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.IfElseBranchActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.IfElseBranchActivity.ConditionProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.IfElseBranchActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.IfElseBranchActivity.#ctor" />
        <element api="M:System.Workflow.Activities.IfElseBranchActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.IfElseBranchActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.IfElseBranchActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.IfElseBranchActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.IfElseBranchActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.IfElseBranchActivity.Condition">
      <topicdata group="api" />
      <apidata name="Condition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Condition" />
      <setter name="set_Condition" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.IfElseBranchActivity.ConditionProperty">
      <topicdata group="api" />
      <apidata name="ConditionProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.InvokeWebServiceActivity">
      <topicdata group="api" />
      <apidata name="InvokeWebServiceActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Workflow.Activities.InvokeWebServiceActivity.Invoked" />
        <element api="E:System.Workflow.Activities.InvokeWebServiceActivity.Invoking" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.InvokedEvent" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.InvokingEvent" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.MethodNameProperty" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindingsProperty" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.ProxyClassProperty" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.SessionIdProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.InvokeWebServiceActivity.#ctor">
          <element api="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor" />
          <element api="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.InvokeWebServiceActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.InvokeWebServiceActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.InvokeWebServiceActivity.MethodName" />
        <element api="P:System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindings" />
        <element api="P:System.Workflow.Activities.InvokeWebServiceActivity.ProxyClass" />
        <element api="P:System.Workflow.Activities.InvokeWebServiceActivity.SessionId" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.WebServiceInOut.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.InvokeWebServiceActivity">
      <topicdata name="InvokeWebServiceActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.InvokeWebServiceActivity" />
      <apidata name="InvokeWebServiceActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.InvokeWebServiceActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.InvokeWebServiceActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.InvokeWebServiceActivity">
      <topicdata name="InvokeWebServiceActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.InvokeWebServiceActivity" />
      <apidata name="InvokeWebServiceActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.InvokeWebServiceActivity.MethodName" />
        <element api="P:System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindings" />
        <element api="P:System.Workflow.Activities.InvokeWebServiceActivity.ProxyClass" />
        <element api="P:System.Workflow.Activities.InvokeWebServiceActivity.SessionId" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.InvokeWebServiceActivity">
      <topicdata name="InvokeWebServiceActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.InvokeWebServiceActivity" />
      <apidata name="InvokeWebServiceActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.Activities.InvokeWebServiceActivity.Invoked" />
        <element api="E:System.Workflow.Activities.InvokeWebServiceActivity.Invoking" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.InvokeWebServiceActivity">
      <topicdata name="InvokeWebServiceActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.InvokeWebServiceActivity" />
      <apidata name="InvokeWebServiceActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.InvokedEvent" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.InvokingEvent" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.MethodNameProperty" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindingsProperty" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.ProxyClassProperty" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.SessionIdProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.InvokeWebServiceActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor" />
        <element api="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.InvokeWebServiceActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.InvokeWebServiceActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.Activities.InvokeWebServiceActivity.Invoked">
      <topicdata group="api" />
      <apidata name="Invoked" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Invoked" />
      <remover name="remove_Invoked" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.InvokeWebServiceEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.Activities.InvokeWebServiceEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.InvokeWebServiceActivity.InvokedEvent">
      <topicdata group="api" />
      <apidata name="InvokedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.Activities.InvokeWebServiceActivity.Invoking">
      <topicdata group="api" />
      <apidata name="Invoking" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Invoking" />
      <remover name="remove_Invoking" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.InvokeWebServiceEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.Activities.InvokeWebServiceEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.InvokeWebServiceActivity.InvokingEvent">
      <topicdata group="api" />
      <apidata name="InvokingEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.InvokeWebServiceActivity.MethodName">
      <topicdata group="api" />
      <apidata name="MethodName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MethodName" />
      <setter name="set_MethodName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.InvokeWebServiceActivity.MethodNameProperty">
      <topicdata group="api" />
      <apidata name="MethodNameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindings">
      <topicdata group="api" />
      <apidata name="ParameterBindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParameterBindings" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindingsProperty">
      <topicdata group="api" />
      <apidata name="ParameterBindingsProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.InvokeWebServiceActivity.ProxyClass">
      <topicdata group="api" />
      <apidata name="ProxyClass" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProxyClass" />
      <setter name="set_ProxyClass" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.InvokeWebServiceActivity.ProxyClassProperty">
      <topicdata group="api" />
      <apidata name="ProxyClassProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.InvokeWebServiceActivity.SessionId">
      <topicdata group="api" />
      <apidata name="SessionId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SessionId" />
      <setter name="set_SessionId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.InvokeWebServiceActivity.SessionIdProperty">
      <topicdata group="api" />
      <apidata name="SessionIdProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <topicdata group="api" eiiName="IDynamicPropertyTypeProvider.GetAccessType" />
      <apidata name="GetAccessType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.AccessTypes" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <topicdata group="api" eiiName="IDynamicPropertyTypeProvider.GetPropertyType" />
      <apidata name="GetPropertyType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.InvokeWebServiceEventArgs">
      <topicdata group="api" />
      <apidata name="InvokeWebServiceEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.InvokeWebServiceEventArgs.#ctor(System.Object)" />
        <element api="P:System.Workflow.Activities.InvokeWebServiceEventArgs.WebServiceProxy" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.InvokeWebServiceEventArgs">
      <topicdata name="InvokeWebServiceEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.InvokeWebServiceEventArgs" />
      <apidata name="InvokeWebServiceEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.InvokeWebServiceEventArgs">
      <topicdata name="InvokeWebServiceEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.InvokeWebServiceEventArgs" />
      <apidata name="InvokeWebServiceEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Workflow.Activities.InvokeWebServiceEventArgs.WebServiceProxy" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceEventArgs" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.InvokeWebServiceEventArgs.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="proxyInstance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.InvokeWebServiceEventArgs.WebServiceProxy">
      <topicdata group="api" />
      <apidata name="WebServiceProxy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WebServiceProxy" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.InvokeWorkflowActivity">
      <topicdata group="api" />
      <apidata name="InvokeWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Workflow.Activities.InvokeWorkflowActivity.Invoking" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.InvokeWorkflowActivity.InstanceIdProperty" />
        <element api="F:System.Workflow.Activities.InvokeWorkflowActivity.InvokingEvent" />
        <element api="F:System.Workflow.Activities.InvokeWorkflowActivity.ParameterBindingsProperty" />
        <element api="F:System.Workflow.Activities.InvokeWorkflowActivity.TargetWorkflowProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.InvokeWorkflowActivity.#ctor">
          <element api="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor" />
          <element api="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.InvokeWorkflowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.InvokeWorkflowActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.InvokeWorkflowActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.InvokeWorkflowActivity.InstanceId" />
        <element api="P:System.Workflow.Activities.InvokeWorkflowActivity.ParameterBindings" />
        <element api="P:System.Workflow.Activities.InvokeWorkflowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription" />
        <element api="P:System.Workflow.Activities.InvokeWorkflowActivity.TargetWorkflow" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Service.bmp</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Invoking</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.InvokeWorkflowActivity">
      <topicdata name="InvokeWorkflowActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.InvokeWorkflowActivity" />
      <apidata name="InvokeWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.InvokeWorkflowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.InvokeWorkflowActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.InvokeWorkflowActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.InvokeWorkflowActivity">
      <topicdata name="InvokeWorkflowActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.InvokeWorkflowActivity" />
      <apidata name="InvokeWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.InvokeWorkflowActivity.InstanceId" />
        <element api="P:System.Workflow.Activities.InvokeWorkflowActivity.ParameterBindings" />
        <element api="P:System.Workflow.Activities.InvokeWorkflowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription" />
        <element api="P:System.Workflow.Activities.InvokeWorkflowActivity.TargetWorkflow" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.InvokeWorkflowActivity">
      <topicdata name="InvokeWorkflowActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.InvokeWorkflowActivity" />
      <apidata name="InvokeWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.Activities.InvokeWorkflowActivity.Invoking" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.InvokeWorkflowActivity">
      <topicdata name="InvokeWorkflowActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.InvokeWorkflowActivity" />
      <apidata name="InvokeWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.InvokeWorkflowActivity.InstanceIdProperty" />
        <element api="F:System.Workflow.Activities.InvokeWorkflowActivity.InvokingEvent" />
        <element api="F:System.Workflow.Activities.InvokeWorkflowActivity.ParameterBindingsProperty" />
        <element api="F:System.Workflow.Activities.InvokeWorkflowActivity.TargetWorkflowProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.InvokeWorkflowActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor" />
        <element api="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.InvokeWorkflowActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.InvokeWorkflowActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.InvokeWorkflowActivity.InstanceId">
      <topicdata group="api" />
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.InvokeWorkflowActivity.InstanceIdProperty">
      <topicdata group="api" />
      <apidata name="InstanceIdProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.Activities.InvokeWorkflowActivity.Invoking">
      <topicdata group="api" />
      <apidata name="Invoking" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Invoking" />
      <remover name="remove_Invoking" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.InvokeWorkflowActivity.InvokingEvent">
      <topicdata group="api" />
      <apidata name="InvokingEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.InvokeWorkflowActivity.ParameterBindings">
      <topicdata group="api" />
      <apidata name="ParameterBindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParameterBindings" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.InvokeWorkflowActivity.ParameterBindingsProperty">
      <topicdata group="api" />
      <apidata name="ParameterBindingsProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.InvokeWorkflowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)">
      <topicdata group="api" eiiName="ITypeFilterProvider.CanFilterType" />
      <apidata name="CanFilterType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="throwOnError">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)">
          <type api="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.InvokeWorkflowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription">
      <topicdata group="api" eiiName="ITypeFilterProvider.FilterDescription" />
      <apidata name="FilterDescription" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription">
          <type api="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.InvokeWorkflowActivity.TargetWorkflow">
      <topicdata group="api" />
      <apidata name="TargetWorkflow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TargetWorkflow" />
      <setter name="set_TargetWorkflow" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Design.TypeBrowserEditor" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.InvokeWorkflowActivity.TargetWorkflowProperty">
      <topicdata group="api" />
      <apidata name="TargetWorkflowProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.ListenActivity">
      <topicdata group="api" />
      <apidata name="ListenActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ListenActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.ListenActivity.#ctor">
          <element api="M:System.Workflow.Activities.ListenActivity.#ctor" />
          <element api="M:System.Workflow.Activities.ListenActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.ListenActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.ListenActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.ListenActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.ListenActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Listen.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.ListenActivity">
      <topicdata name="ListenActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ListenActivity" />
      <apidata name="ListenActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ListenActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.ListenActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.ListenActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.ListenActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ListenActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.ListenActivity">
      <topicdata name="ListenActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ListenActivity" />
      <apidata name="ListenActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ListenActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ListenActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.ListenActivity">
      <topicdata name="ListenActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.ListenActivity" />
      <apidata name="ListenActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ListenActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ListenActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.ListenActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.ListenActivity.#ctor" />
        <element api="M:System.Workflow.Activities.ListenActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ListenActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ListenActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ListenActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ListenActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ListenActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ListenActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ListenActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ListenActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" eiiName="IActivityEventListener`1.OnEvent" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ListenActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.MessageEventSubscription">
      <topicdata group="api" />
      <apidata name="MessageEventSubscription" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.MessageEventSubscription.#ctor">
          <element api="M:System.Workflow.Activities.MessageEventSubscription.#ctor" />
          <element api="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid)" />
          <element api="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Guid)" />
          <element api="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Type,System.String)" />
          <element api="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Type,System.String,System.Guid)" />
        </element>
        <element api="P:System.Workflow.Activities.MessageEventSubscription.CorrelationProperties" />
        <element api="P:System.Workflow.Activities.MessageEventSubscription.InterfaceType" />
        <element api="P:System.Workflow.Activities.MessageEventSubscription.MethodName" />
        <element api="P:System.Workflow.Activities.MessageEventSubscription.QueueName" />
        <element api="P:System.Workflow.Activities.MessageEventSubscription.SubscriptionId" />
        <element api="P:System.Workflow.Activities.MessageEventSubscription.WorkflowInstanceId" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.MessageEventSubscription">
      <topicdata name="MessageEventSubscription" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.MessageEventSubscription" />
      <apidata name="MessageEventSubscription" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.MessageEventSubscription">
      <topicdata name="MessageEventSubscription" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.MessageEventSubscription" />
      <apidata name="MessageEventSubscription" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Workflow.Activities.MessageEventSubscription.CorrelationProperties" />
        <element api="P:System.Workflow.Activities.MessageEventSubscription.InterfaceType" />
        <element api="P:System.Workflow.Activities.MessageEventSubscription.MethodName" />
        <element api="P:System.Workflow.Activities.MessageEventSubscription.QueueName" />
        <element api="P:System.Workflow.Activities.MessageEventSubscription.SubscriptionId" />
        <element api="P:System.Workflow.Activities.MessageEventSubscription.WorkflowInstanceId" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.MessageEventSubscription.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.MessageEventSubscription.#ctor" />
        <element api="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid)" />
        <element api="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Guid)" />
        <element api="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Type,System.String)" />
        <element api="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Type,System.String,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.MessageEventSubscription.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Workflow.Activities.MessageEventSubscription.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.MessageEventSubscription.#ctor" />
      <parameters>
        <parameter name="queueName">
          <type api="T:System.IComparable" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.MessageEventSubscription.#ctor" />
      <parameters>
        <parameter name="queueName">
          <type api="T:System.IComparable" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="subscriptionId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Type,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.MessageEventSubscription.#ctor" />
      <parameters>
        <parameter name="queueName">
          <type api="T:System.IComparable" ref="true" />
        </parameter>
        <parameter name="subscriptionId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="interfaceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="operation">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Type,System.String,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.MessageEventSubscription.#ctor" />
      <parameters>
        <parameter name="queueName">
          <type api="T:System.IComparable" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="interfaceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="operation">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="subscriptionId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.MessageEventSubscription.CorrelationProperties">
      <topicdata group="api" />
      <apidata name="CorrelationProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CorrelationProperties" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Runtime.CorrelationProperty" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.MessageEventSubscription.InterfaceType">
      <topicdata group="api" />
      <apidata name="InterfaceType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_InterfaceType" />
      <setter name="set_InterfaceType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.MessageEventSubscription.MethodName">
      <topicdata group="api" />
      <apidata name="MethodName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MethodName" />
      <setter name="set_MethodName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.MessageEventSubscription.QueueName">
      <topicdata group="api" />
      <apidata name="QueueName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_QueueName" />
      <setter name="set_QueueName" />
      <returns>
        <type api="T:System.IComparable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.MessageEventSubscription.SubscriptionId">
      <topicdata group="api" />
      <apidata name="SubscriptionId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_SubscriptionId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.MessageEventSubscription.WorkflowInstanceId">
      <topicdata group="api" />
      <apidata name="WorkflowInstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_WorkflowInstanceId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.OperationInfo">
      <topicdata group="api" />
      <apidata name="OperationInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.OperationInfo.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.OperationInfo.#ctor" />
        <element api="M:System.Workflow.Activities.OperationInfo.Clone" />
        <element api="M:System.Workflow.Activities.OperationInfo.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.OperationInfo.GetHashCode" />
        <element api="M:System.Workflow.Activities.OperationInfo.ToString" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.OperationInfo.ContractName" />
        <element api="P:System.Workflow.Activities.OperationInfo.HasProtectionLevel" />
        <element api="P:System.Workflow.Activities.OperationInfo.IsOneWay" />
        <element api="P:System.Workflow.Activities.OperationInfo.Parameters" />
        <element api="P:System.Workflow.Activities.OperationInfo.ProtectionLevel" />
        <element api="P:System.Workflow.Activities.OperationInfoBase.Name" />
        <element api="P:System.Workflow.Activities.OperationInfoBase.PrincipalPermissionName" />
        <element api="P:System.Workflow.Activities.OperationInfoBase.PrincipalPermissionRole" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.OperationInfo">
      <topicdata name="OperationInfo" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.OperationInfo" />
      <apidata name="OperationInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.OperationInfo.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.OperationInfo.Clone" />
        <element api="M:System.Workflow.Activities.OperationInfo.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.OperationInfo.GetHashCode" />
        <element api="M:System.Workflow.Activities.OperationInfo.ToString" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfo" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.OperationInfo">
      <topicdata name="OperationInfo" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.OperationInfo" />
      <apidata name="OperationInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.OperationInfo.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.OperationInfo.ContractName" />
        <element api="P:System.Workflow.Activities.OperationInfo.HasProtectionLevel" />
        <element api="P:System.Workflow.Activities.OperationInfo.IsOneWay" />
        <element api="P:System.Workflow.Activities.OperationInfo.Parameters" />
        <element api="P:System.Workflow.Activities.OperationInfo.ProtectionLevel" />
        <element api="P:System.Workflow.Activities.OperationInfoBase.Name" />
        <element api="P:System.Workflow.Activities.OperationInfoBase.PrincipalPermissionName" />
        <element api="P:System.Workflow.Activities.OperationInfoBase.PrincipalPermissionRole" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfo" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.OperationInfo">
      <topicdata name="OperationInfo" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.OperationInfo" />
      <apidata name="OperationInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.OperationInfo.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfo" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationInfo.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationInfo.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.OperationInfoBase.Clone">
          <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationInfo.ContractName">
      <topicdata group="api" />
      <apidata name="ContractName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContractName" />
      <setter name="set_ContractName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationInfo.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.OperationInfoBase.Equals(System.Object)">
          <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationInfo.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.OperationInfoBase.GetHashCode">
          <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationInfo.HasProtectionLevel">
      <topicdata group="api" />
      <apidata name="HasProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasProtectionLevel" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.OperationInfo.IsOneWay">
      <topicdata group="api" />
      <apidata name="IsOneWay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsOneWay" />
      <setter name="set_IsOneWay" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.OperationInfo.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.OperationInfo.ProtectionLevel">
      <topicdata group="api" />
      <apidata name="ProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProtectionLevel" />
      <setter name="set_ProtectionLevel" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Workflow.Activities.OperationInfo.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfo" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.OperationInfoBase">
      <topicdata group="api" />
      <apidata name="OperationInfoBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.Activities.OperationInfo" ref="true" />
          <type api="T:System.Workflow.Activities.TypedOperationInfo" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.OperationInfoBase.#ctor" />
        <element api="M:System.Workflow.Activities.OperationInfoBase.Clone" />
        <element api="M:System.Workflow.Activities.OperationInfoBase.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.OperationInfoBase.GetContractFullName(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.OperationInfoBase.GetContractType(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.OperationInfoBase.GetHashCode" />
        <element api="M:System.Workflow.Activities.OperationInfoBase.GetIsOneWay(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.OperationInfoBase.GetMethodInfo(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.OperationInfoBase.GetParameters(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.Activities.OperationInfoBase.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.OperationInfoBase.Name" />
        <element api="P:System.Workflow.Activities.OperationInfoBase.PrincipalPermissionName" />
        <element api="P:System.Workflow.Activities.OperationInfoBase.PrincipalPermissionRole" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.OperationInfoBase">
      <topicdata name="OperationInfoBase" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.OperationInfoBase" />
      <apidata name="OperationInfoBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.OperationInfoBase.Clone" />
        <element api="M:System.Workflow.Activities.OperationInfoBase.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.OperationInfoBase.GetContractFullName(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.OperationInfoBase.GetContractType(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.OperationInfoBase.GetHashCode" />
        <element api="M:System.Workflow.Activities.OperationInfoBase.GetIsOneWay(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.OperationInfoBase.GetMethodInfo(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.OperationInfoBase.GetParameters(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.Activities.OperationInfoBase.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfoBase" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.OperationInfoBase">
      <topicdata name="OperationInfoBase" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.OperationInfoBase" />
      <apidata name="OperationInfoBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Workflow.Activities.OperationInfoBase.Name" />
        <element api="P:System.Workflow.Activities.OperationInfoBase.PrincipalPermissionName" />
        <element api="P:System.Workflow.Activities.OperationInfoBase.PrincipalPermissionRole" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfoBase" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.OperationInfoBase">
      <topicdata name="OperationInfoBase" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.OperationInfoBase" />
      <apidata name="OperationInfoBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfoBase" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationInfoBase.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationInfoBase.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationInfoBase.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationInfoBase.GetContractFullName(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="GetContractFullName" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationInfoBase.GetContractType(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="GetContractType" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationInfoBase.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationInfoBase.GetIsOneWay(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="GetIsOneWay" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationInfoBase.GetMethodInfo(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="GetMethodInfo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationInfoBase.GetParameters(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="GetParameters" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationInfoBase.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationInfoBase.PrincipalPermissionName">
      <topicdata group="api" />
      <apidata name="PrincipalPermissionName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_PrincipalPermissionName" />
      <setter name="set_PrincipalPermissionName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.OperationInfoBase.PrincipalPermissionRole">
      <topicdata group="api" />
      <apidata name="PrincipalPermissionRole" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_PrincipalPermissionRole" />
      <setter name="set_PrincipalPermissionRole" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Workflow.Activities.OperationParameterInfo">
      <topicdata group="api" />
      <apidata name="OperationParameterInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.OperationParameterInfo.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.OperationParameterInfo.AttributesProperty" />
        <element api="F:System.Workflow.Activities.OperationParameterInfo.NameProperty" />
        <element api="F:System.Workflow.Activities.OperationParameterInfo.ParameterTypeProperty" />
        <element api="F:System.Workflow.Activities.OperationParameterInfo.PositionProperty" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfo.#ctor">
          <element api="M:System.Workflow.Activities.OperationParameterInfo.#ctor" />
          <element api="M:System.Workflow.Activities.OperationParameterInfo.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.OperationParameterInfo.Clone" />
        <element api="M:System.Workflow.Activities.OperationParameterInfo.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfo.GetHashCode" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.OperationParameterInfo.Attributes" />
        <element api="P:System.Workflow.Activities.OperationParameterInfo.IsIn" />
        <element api="P:System.Workflow.Activities.OperationParameterInfo.IsLcid" />
        <element api="P:System.Workflow.Activities.OperationParameterInfo.IsOptional" />
        <element api="P:System.Workflow.Activities.OperationParameterInfo.IsOut" />
        <element api="P:System.Workflow.Activities.OperationParameterInfo.IsRetval" />
        <element api="P:System.Workflow.Activities.OperationParameterInfo.Name" />
        <element api="P:System.Workflow.Activities.OperationParameterInfo.ParameterType" />
        <element api="P:System.Workflow.Activities.OperationParameterInfo.Position" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.OperationParameterInfo">
      <topicdata name="OperationParameterInfo" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.OperationParameterInfo" />
      <apidata name="OperationParameterInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.OperationParameterInfo.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.OperationParameterInfo.Clone" />
        <element api="M:System.Workflow.Activities.OperationParameterInfo.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfo.GetHashCode" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.OperationParameterInfo">
      <topicdata name="OperationParameterInfo" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.OperationParameterInfo" />
      <apidata name="OperationParameterInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.OperationParameterInfo.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.OperationParameterInfo.Attributes" />
        <element api="P:System.Workflow.Activities.OperationParameterInfo.IsIn" />
        <element api="P:System.Workflow.Activities.OperationParameterInfo.IsLcid" />
        <element api="P:System.Workflow.Activities.OperationParameterInfo.IsOptional" />
        <element api="P:System.Workflow.Activities.OperationParameterInfo.IsOut" />
        <element api="P:System.Workflow.Activities.OperationParameterInfo.IsRetval" />
        <element api="P:System.Workflow.Activities.OperationParameterInfo.Name" />
        <element api="P:System.Workflow.Activities.OperationParameterInfo.ParameterType" />
        <element api="P:System.Workflow.Activities.OperationParameterInfo.Position" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.OperationParameterInfo">
      <topicdata name="OperationParameterInfo" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.OperationParameterInfo" />
      <apidata name="OperationParameterInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.OperationParameterInfo.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.OperationParameterInfo">
      <topicdata name="OperationParameterInfo" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.OperationParameterInfo" />
      <apidata name="OperationParameterInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.OperationParameterInfo.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.OperationParameterInfo.AttributesProperty" />
        <element api="F:System.Workflow.Activities.OperationParameterInfo.NameProperty" />
        <element api="F:System.Workflow.Activities.OperationParameterInfo.ParameterTypeProperty" />
        <element api="F:System.Workflow.Activities.OperationParameterInfo.PositionProperty" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.OperationParameterInfo.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.OperationParameterInfo.#ctor" />
        <element api="M:System.Workflow.Activities.OperationParameterInfo.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfo.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.OperationParameterInfo.#ctor" />
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfo.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.OperationParameterInfo.#ctor" />
      <parameters>
        <parameter name="parameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationParameterInfo.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Attributes" />
      <setter name="set_Attributes" />
      <returns>
        <type api="T:System.Reflection.ParameterAttributes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.OperationParameterInfo.AttributesProperty">
      <topicdata group="api" />
      <apidata name="AttributesProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfo.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfo.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfo.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationParameterInfo.IsIn">
      <topicdata group="api" />
      <apidata name="IsIn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsIn" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationParameterInfo.IsLcid">
      <topicdata group="api" />
      <apidata name="IsLcid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsLcid" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationParameterInfo.IsOptional">
      <topicdata group="api" />
      <apidata name="IsOptional" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsOptional" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationParameterInfo.IsOut">
      <topicdata group="api" />
      <apidata name="IsOut" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsOut" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationParameterInfo.IsRetval">
      <topicdata group="api" />
      <apidata name="IsRetval" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsRetval" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationParameterInfo.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.OperationParameterInfo.NameProperty">
      <topicdata group="api" />
      <apidata name="NameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationParameterInfo.ParameterType">
      <topicdata group="api" />
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ParameterType" />
      <setter name="set_ParameterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.OperationParameterInfo.ParameterTypeProperty">
      <topicdata group="api" />
      <apidata name="ParameterTypeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationParameterInfo.Position">
      <topicdata group="api" />
      <apidata name="Position" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Position" />
      <setter name="set_Position" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.OperationParameterInfo.PositionProperty">
      <topicdata group="api" />
      <apidata name="PositionProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.OperationParameterInfoCollection">
      <topicdata group="api" />
      <apidata name="OperationParameterInfoCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Workflow.Activities.OperationParameterInfoCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.List`1.AsReadOnly" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.BinarySearch">
          <element api="M:System.Collections.Generic.List`1.BinarySearch(`0)" />
          <element api="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})" />
          <element api="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.CopyTo">
          <element api="M:System.Collections.Generic.List`1.CopyTo(`0[])" />
          <element api="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.FindIndex">
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.FindLastIndex">
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})" />
        <element api="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <element api="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.LastIndexOf">
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.Reverse">
          <element api="M:System.Collections.Generic.List`1.Reverse" />
          <element api="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.Sort">
          <element api="M:System.Collections.Generic.List`1.Sort" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.ToArray" />
        <element api="M:System.Collections.Generic.List`1.TrimExcess" />
        <element api="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.#ctor">
          <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.#ctor" />
          <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.#ctor(System.Workflow.Activities.OperationInfoBase)" />
        </element>
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.Add(System.Workflow.Activities.OperationParameterInfo)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.Clear" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.Contains(System.Workflow.Activities.OperationParameterInfo)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.GetEnumerator" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.IndexOf">
          <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.IndexOf(System.Workflow.Activities.OperationParameterInfo)" />
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.Insert(System.Int32,System.Workflow.Activities.OperationParameterInfo)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.Remove(System.Workflow.Activities.OperationParameterInfo)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Add(System.Workflow.Activities.OperationParameterInfo)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Clear" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Contains(System.Workflow.Activities.OperationParameterInfo)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#CopyTo(System.Workflow.Activities.OperationParameterInfo[],System.Int32)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Remove(System.Workflow.Activities.OperationParameterInfo)" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IEnumerable{System#Workflow#Activities#OperationParameterInfo}#GetEnumerator">
          <element api="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
          <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IEnumerable{System#Workflow#Activities#OperationParameterInfo}#GetEnumerator" />
        </element>
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#IndexOf(System.Workflow.Activities.OperationParameterInfo)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#Insert(System.Int32,System.Workflow.Activities.OperationParameterInfo)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#RemoveAt(System.Int32)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Clear" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Remove(System.Object)" />
        <element api="P:System.Collections.Generic.List`1.Capacity" />
        <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.Count" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.Item">
          <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.Item(System.Int32)" />
          <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.Item(System.String)" />
        </element>
        <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Count" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#IsReadOnly">
          <element api="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
          <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#IsReadOnly" />
        </element>
        <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#Item(System.Int32)" />
        <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.OperationParameterInfoCollection">
      <topicdata name="OperationParameterInfoCollection" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.OperationParameterInfoCollection" />
      <apidata name="OperationParameterInfoCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Workflow.Activities.OperationParameterInfoCollection.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.List`1.AsReadOnly" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.BinarySearch">
          <element api="M:System.Collections.Generic.List`1.BinarySearch(`0)" />
          <element api="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})" />
          <element api="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.CopyTo">
          <element api="M:System.Collections.Generic.List`1.CopyTo(`0[])" />
          <element api="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.FindIndex">
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.FindLastIndex">
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})" />
        <element api="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <element api="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.LastIndexOf">
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.Reverse">
          <element api="M:System.Collections.Generic.List`1.Reverse" />
          <element api="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.Sort">
          <element api="M:System.Collections.Generic.List`1.Sort" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.ToArray" />
        <element api="M:System.Collections.Generic.List`1.TrimExcess" />
        <element api="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.Add(System.Workflow.Activities.OperationParameterInfo)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.Clear" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.Contains(System.Workflow.Activities.OperationParameterInfo)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.GetEnumerator" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.IndexOf">
          <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.IndexOf(System.Workflow.Activities.OperationParameterInfo)" />
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.Insert(System.Int32,System.Workflow.Activities.OperationParameterInfo)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.Remove(System.Workflow.Activities.OperationParameterInfo)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Add(System.Workflow.Activities.OperationParameterInfo)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Clear" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Contains(System.Workflow.Activities.OperationParameterInfo)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#CopyTo(System.Workflow.Activities.OperationParameterInfo[],System.Int32)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Remove(System.Workflow.Activities.OperationParameterInfo)" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IEnumerable{System#Workflow#Activities#OperationParameterInfo}#GetEnumerator">
          <element api="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
          <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IEnumerable{System#Workflow#Activities#OperationParameterInfo}#GetEnumerator" />
        </element>
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#IndexOf(System.Workflow.Activities.OperationParameterInfo)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#Insert(System.Int32,System.Workflow.Activities.OperationParameterInfo)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#RemoveAt(System.Int32)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Clear" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.OperationParameterInfoCollection">
      <topicdata name="OperationParameterInfoCollection" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.OperationParameterInfoCollection" />
      <apidata name="OperationParameterInfoCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Workflow.Activities.OperationParameterInfoCollection.#ctor" />
      <elements>
        <element api="P:System.Collections.Generic.List`1.Capacity" />
        <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.Count" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.Item">
          <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.Item(System.Int32)" />
          <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.Item(System.String)" />
        </element>
        <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Count" />
        <element api="Overload:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#IsReadOnly">
          <element api="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
          <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#IsReadOnly" />
        </element>
        <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#Item(System.Int32)" />
        <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.OperationParameterInfoCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.#ctor" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.#ctor(System.Workflow.Activities.OperationInfoBase)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.OperationParameterInfoCollection.IndexOf">
      <topicdata name="IndexOf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.IndexOf(System.Workflow.Activities.OperationParameterInfo)" />
        <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)" />
        <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.OperationParameterInfoCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.Item(System.Int32)" />
        <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#IsReadOnly">
      <topicdata name="IsReadOnly" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IEnumerable{System#Workflow#Activities#OperationParameterInfo}#GetEnumerator">
      <topicdata name="GetEnumerator" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IEnumerable{System#Workflow#Activities#OperationParameterInfo}#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.OperationParameterInfoCollection.#ctor" />
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.#ctor(System.Workflow.Activities.OperationInfoBase)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.OperationParameterInfoCollection.#ctor" />
      <parameters>
        <parameter name="owner">
          <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.Add(System.Workflow.Activities.OperationParameterInfo)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.Contains(System.Workflow.Activities.OperationParameterInfo)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationParameterInfoCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.IndexOf(System.Workflow.Activities.OperationParameterInfo)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.Activities.OperationParameterInfoCollection.IndexOf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.Insert(System.Int32,System.Workflow.Activities.OperationParameterInfo)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationParameterInfoCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Workflow.Activities.OperationParameterInfoCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationParameterInfoCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Workflow.Activities.OperationParameterInfoCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.Remove(System.Workflow.Activities.OperationParameterInfo)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Add(System.Workflow.Activities.OperationParameterInfo)">
      <topicdata group="api" eiiName="ICollection`1.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Clear">
      <topicdata group="api" eiiName="ICollection`1.Clear" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Contains(System.Workflow.Activities.OperationParameterInfo)">
      <topicdata group="api" eiiName="ICollection`1.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#CopyTo(System.Workflow.Activities.OperationParameterInfo[],System.Int32)">
      <topicdata group="api" eiiName="ICollection`1.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Count">
      <topicdata group="api" eiiName="ICollection`1.Count" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.Generic.ICollection&lt;System.Workflow.Activities.OperationParameterInfo&gt;.Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#IsReadOnly">
      <topicdata group="api" eiiName="ICollection`1.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" overload="Overload:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#IsReadOnly" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.Generic.ICollection&lt;System.Workflow.Activities.OperationParameterInfo&gt;.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Remove(System.Workflow.Activities.OperationParameterInfo)">
      <topicdata group="api" eiiName="ICollection`1.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IEnumerable{System#Workflow#Activities#OperationParameterInfo}#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable`1.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IEnumerable{System#Workflow#Activities#OperationParameterInfo}#GetEnumerator" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#IndexOf(System.Workflow.Activities.OperationParameterInfo)">
      <topicdata group="api" eiiName="IList`1.IndexOf" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.IndexOf(`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#Insert(System.Int32,System.Workflow.Activities.OperationParameterInfo)">
      <topicdata group="api" eiiName="IList`1.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#Item(System.Int32)">
      <topicdata group="api" eiiName="IList`1.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.Generic.IList&lt;System.Workflow.Activities.OperationParameterInfo&gt;.Item" />
      <setter name="set_System.Collections.Generic.IList&lt;System.Workflow.Activities.OperationParameterInfo&gt;.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IList`1.Item(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#RemoveAt(System.Int32)">
      <topicdata group="api" eiiName="IList`1.RemoveAt" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Add(System.Object)">
      <topicdata group="api" eiiName="IList.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Clear">
      <topicdata group="api" eiiName="IList.Clear" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.IList.Clear">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Contains(System.Object)">
      <topicdata group="api" eiiName="IList.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IndexOf(System.Object)">
      <topicdata group="api" eiiName="IList.IndexOf" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <topicdata group="api" eiiName="IList.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IsFixedSize">
      <topicdata group="api" eiiName="IList.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IsReadOnly">
      <topicdata group="api" eiiName="IList.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Item(System.Int32)">
      <topicdata group="api" eiiName="IList.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IList.Item" />
      <setter name="set_System.Collections.IList.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Remove(System.Object)">
      <topicdata group="api" eiiName="IList.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationParameterInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.OperationValidationEventArgs">
      <topicdata group="api" />
      <apidata name="OperationValidationEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.OperationValidationEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Claims.ClaimSet})" />
        <element api="P:System.Workflow.Activities.OperationValidationEventArgs.ClaimSets" />
        <element api="P:System.Workflow.Activities.OperationValidationEventArgs.IsValid" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.OperationValidationEventArgs">
      <topicdata name="OperationValidationEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.OperationValidationEventArgs" />
      <apidata name="OperationValidationEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationValidationEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.OperationValidationEventArgs">
      <topicdata name="OperationValidationEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.OperationValidationEventArgs" />
      <apidata name="OperationValidationEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Workflow.Activities.OperationValidationEventArgs.ClaimSets" />
        <element api="P:System.Workflow.Activities.OperationValidationEventArgs.IsValid" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationValidationEventArgs" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.OperationValidationEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Claims.ClaimSet})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="claimSets">
          <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Claims.ClaimSet" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationValidationEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationValidationEventArgs.ClaimSets">
      <topicdata group="api" />
      <apidata name="ClaimSets" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClaimSets" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Claims.ClaimSet" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationValidationEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.OperationValidationEventArgs.IsValid">
      <topicdata group="api" />
      <apidata name="IsValid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsValid" />
      <setter name="set_IsValid" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.OperationValidationEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.ParallelActivity">
      <topicdata group="api" />
      <apidata name="ParallelActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ParallelActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.ParallelActivity.#ctor">
          <element api="M:System.Workflow.Activities.ParallelActivity.#ctor" />
          <element api="M:System.Workflow.Activities.ParallelActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.ParallelActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.ParallelActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.ParallelActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.ParallelActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Parallel.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingAttribute" ref="true" />
          <argument>
            <type api="T:System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingOption" ref="false" />
            <enumValue>
              <field name="Concurrent" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.ParallelActivity">
      <topicdata name="ParallelActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ParallelActivity" />
      <apidata name="ParallelActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ParallelActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.ParallelActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.ParallelActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.ParallelActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ParallelActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.ParallelActivity">
      <topicdata name="ParallelActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ParallelActivity" />
      <apidata name="ParallelActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ParallelActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ParallelActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.ParallelActivity">
      <topicdata name="ParallelActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.ParallelActivity" />
      <apidata name="ParallelActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ParallelActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ParallelActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.ParallelActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.ParallelActivity.#ctor" />
        <element api="M:System.Workflow.Activities.ParallelActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ParallelActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ParallelActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ParallelActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ParallelActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ParallelActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ParallelActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ParallelActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ParallelActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" eiiName="IActivityEventListener`1.OnEvent" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ParallelActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.PolicyActivity">
      <topicdata group="api" />
      <apidata name="PolicyActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.PolicyActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.PolicyActivity.RuleSetReferenceProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.PolicyActivity.#ctor">
          <element api="M:System.Workflow.Activities.PolicyActivity.#ctor" />
          <element api="M:System.Workflow.Activities.PolicyActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.PolicyActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.PolicyActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.PolicyActivity.RuleSetReference" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.PolicyActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Rule.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.PolicyActivity">
      <topicdata name="PolicyActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.PolicyActivity" />
      <apidata name="PolicyActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.PolicyActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.PolicyActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.PolicyActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.PolicyActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.PolicyActivity">
      <topicdata name="PolicyActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.PolicyActivity" />
      <apidata name="PolicyActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.PolicyActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.PolicyActivity.RuleSetReference" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.PolicyActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.PolicyActivity">
      <topicdata name="PolicyActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.PolicyActivity" />
      <apidata name="PolicyActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.PolicyActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.PolicyActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.PolicyActivity">
      <topicdata name="PolicyActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.PolicyActivity" />
      <apidata name="PolicyActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.PolicyActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.PolicyActivity.RuleSetReferenceProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.PolicyActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.PolicyActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.PolicyActivity.#ctor" />
        <element api="M:System.Workflow.Activities.PolicyActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.PolicyActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.PolicyActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.PolicyActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.PolicyActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.PolicyActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.PolicyActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.PolicyActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.PolicyActivity.RuleSetReference">
      <topicdata group="api" />
      <apidata name="RuleSetReference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RuleSetReference" />
      <setter name="set_RuleSetReference" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleSetReference" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.PolicyActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.PolicyActivity.RuleSetReferenceProperty">
      <topicdata group="api" />
      <apidata name="RuleSetReferenceProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.PolicyActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.ReceiveActivity">
      <topicdata group="api" />
      <apidata name="ReceiveActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Workflow.Activities.ReceiveActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="E:System.Workflow.Activities.ReceiveActivity.OperationValidation" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.ReceiveActivity.FaultMessageProperty" />
        <element api="F:System.Workflow.Activities.ReceiveActivity.OperationValidationEvent" />
        <element api="F:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.ReceiveActivity.#ctor">
          <element api="M:System.Workflow.Activities.ReceiveActivity.#ctor" />
          <element api="M:System.Workflow.Activities.ReceiveActivity.#ctor(System.String)" />
        </element>
        <element api="Overload:System.Workflow.Activities.ReceiveActivity.GetContext">
          <element api="M:System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)" />
          <element api="M:System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)" />
        <element api="M:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)" />
        <element api="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="Overload:System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent">
          <element api="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
          <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.ReceiveActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.ReceiveActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.ReceiveActivity.CanCreateInstance" />
        <element api="P:System.Workflow.Activities.ReceiveActivity.Context" />
        <element api="P:System.Workflow.Activities.ReceiveActivity.ContextToken" />
        <element api="P:System.Workflow.Activities.ReceiveActivity.FaultMessage" />
        <element api="P:System.Workflow.Activities.ReceiveActivity.ParameterBindings" />
        <element api="P:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo" />
        <element api="P:System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Design.Resources.ReceiveActivity.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.ReceiveActivity">
      <topicdata name="ReceiveActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ReceiveActivity" />
      <apidata name="ReceiveActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Workflow.Activities.ReceiveActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.ReceiveActivity.GetContext">
          <element api="M:System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)" />
          <element api="M:System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)" />
        <element api="M:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)" />
        <element api="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="Overload:System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent">
          <element api="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
          <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.ReceiveActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.ReceiveActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.ReceiveActivity">
      <topicdata name="ReceiveActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ReceiveActivity" />
      <apidata name="ReceiveActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Workflow.Activities.ReceiveActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.ReceiveActivity.CanCreateInstance" />
        <element api="P:System.Workflow.Activities.ReceiveActivity.Context" />
        <element api="P:System.Workflow.Activities.ReceiveActivity.ContextToken" />
        <element api="P:System.Workflow.Activities.ReceiveActivity.FaultMessage" />
        <element api="P:System.Workflow.Activities.ReceiveActivity.ParameterBindings" />
        <element api="P:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo" />
        <element api="P:System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.ReceiveActivity">
      <topicdata name="ReceiveActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.ReceiveActivity" />
      <apidata name="ReceiveActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Workflow.Activities.ReceiveActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.Activities.ReceiveActivity.OperationValidation" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.ReceiveActivity">
      <topicdata name="ReceiveActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.ReceiveActivity" />
      <apidata name="ReceiveActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Workflow.Activities.ReceiveActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.ReceiveActivity.FaultMessageProperty" />
        <element api="F:System.Workflow.Activities.ReceiveActivity.OperationValidationEvent" />
        <element api="F:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.ReceiveActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.ReceiveActivity.#ctor" />
        <element api="M:System.Workflow.Activities.ReceiveActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.ReceiveActivity.GetContext">
      <topicdata name="GetContext" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetContext" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)" />
        <element api="M:System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent">
      <topicdata name="OnEvent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ReceiveActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ReceiveActivity.#ctor" />
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ReceiveActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ReceiveActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ReceiveActivity.CanCreateInstance">
      <topicdata group="api" />
      <apidata name="CanCreateInstance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CanCreateInstance" />
      <setter name="set_CanCreateInstance" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Visible" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.ReceiveActivity.Context">
      <topicdata group="api" />
      <apidata name="Context" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Context" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.ReceiveActivity.ContextToken">
      <topicdata group="api" />
      <apidata name="ContextToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContextToken" />
      <setter name="set_ContextToken" />
      <returns>
        <type api="T:System.Workflow.Activities.ContextToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.ReceiveActivity.FaultMessage">
      <topicdata group="api" />
      <apidata name="FaultMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FaultMessage" />
      <setter name="set_FaultMessage" />
      <returns>
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Visible" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.ReceiveActivity.FaultMessageProperty">
      <topicdata group="api" />
      <apidata name="FaultMessageProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="GetContext" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Workflow.Activities.ReceiveActivity.GetContext" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
        <parameter name="contextName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ownerActivityName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)">
      <topicdata group="api" />
      <apidata name="GetContext" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Workflow.Activities.ReceiveActivity.GetContext" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
        <parameter name="contextToken">
          <type api="T:System.Workflow.Activities.ContextToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="GetRootContext" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)">
      <topicdata group="api" />
      <apidata name="GetWorkflowServiceAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.Activities.ReceiveActivity.OperationValidation">
      <topicdata group="api" />
      <apidata name="OperationValidation" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_OperationValidation" />
      <remover name="remove_OperationValidation" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.OperationValidationEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.Activities.OperationValidationEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.ReceiveActivity.OperationValidationEvent">
      <topicdata group="api" />
      <apidata name="OperationValidationEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ReceiveActivity.ParameterBindings">
      <topicdata group="api" />
      <apidata name="ParameterBindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParameterBindings" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo">
      <topicdata group="api" />
      <apidata name="ServiceOperationInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServiceOperationInfo" />
      <setter name="set_ServiceOperationInfo" />
      <returns>
        <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Visible" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="SetWorkflowServiceAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName">
      <topicdata group="api" eiiName="IEventActivity.QueueName" />
      <apidata name="QueueName" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Workflow.Activities.IEventActivity.QueueName" />
      <returns>
        <type api="T:System.IComparable" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Workflow.Activities.IEventActivity.QueueName">
          <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <topicdata group="api" eiiName="IEventActivity.Subscribe" />
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="parentContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="parentEventHandler">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <topicdata group="api" eiiName="IEventActivity.Unsubscribe" />
      <apidata name="Unsubscribe" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="parentContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="parentEventHandler">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)">
      <topicdata group="api" eiiName="IActivityEventListener`1.OnEvent" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty">
      <topicdata group="api" />
      <apidata name="WorkflowServiceAttributesProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.ReplicatorActivity">
      <topicdata group="api" />
      <apidata name="ReplicatorActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ReplicatorActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.Activities.ReplicatorActivity.ChildCompleted" />
        <element api="E:System.Workflow.Activities.ReplicatorActivity.ChildInitialized" />
        <element api="E:System.Workflow.Activities.ReplicatorActivity.Completed" />
        <element api="E:System.Workflow.Activities.ReplicatorActivity.Initialized" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.ChildCompletedEvent" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.ChildInitializedEvent" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.CompletedEvent" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.ExecutionTypeProperty" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.InitialChildDataProperty" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.InitializedEvent" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.UntilConditionProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.ReplicatorActivity.#ctor">
          <element api="M:System.Workflow.Activities.ReplicatorActivity.#ctor" />
          <element api="M:System.Workflow.Activities.ReplicatorActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.ReplicatorActivity.IsExecuting(System.Int32)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.ReplicatorActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.ReplicatorActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.CurrentChildData" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.CurrentIndex" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.DynamicActivities" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.ExecutionType" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.InitialChildData" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.UntilCondition" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Replicator.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Initialized</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingAttribute" ref="true" />
          <argument>
            <type api="T:System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingOption" ref="false" />
            <enumValue>
              <field name="Concurrent" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.ReplicatorActivity">
      <topicdata name="ReplicatorActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ReplicatorActivity" />
      <apidata name="ReplicatorActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ReplicatorActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.ReplicatorActivity.IsExecuting(System.Int32)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.ReplicatorActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.ReplicatorActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.ReplicatorActivity">
      <topicdata name="ReplicatorActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ReplicatorActivity" />
      <apidata name="ReplicatorActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ReplicatorActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.CurrentChildData" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.CurrentIndex" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.DynamicActivities" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.ExecutionType" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.InitialChildData" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.UntilCondition" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.ReplicatorActivity">
      <topicdata name="ReplicatorActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.ReplicatorActivity" />
      <apidata name="ReplicatorActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ReplicatorActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.Activities.ReplicatorActivity.ChildCompleted" />
        <element api="E:System.Workflow.Activities.ReplicatorActivity.ChildInitialized" />
        <element api="E:System.Workflow.Activities.ReplicatorActivity.Completed" />
        <element api="E:System.Workflow.Activities.ReplicatorActivity.Initialized" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.ReplicatorActivity">
      <topicdata name="ReplicatorActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.ReplicatorActivity" />
      <apidata name="ReplicatorActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.ReplicatorActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.ReplicatorActivity.ChildCompletedEvent" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.ChildInitializedEvent" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.CompletedEvent" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.ExecutionTypeProperty" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.InitialChildDataProperty" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.InitializedEvent" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.UntilConditionProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.ReplicatorActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.ReplicatorActivity.#ctor" />
        <element api="M:System.Workflow.Activities.ReplicatorActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ReplicatorActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ReplicatorActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ReplicatorActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ReplicatorActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete">
      <topicdata group="api" />
      <apidata name="AllChildrenComplete" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AllChildrenComplete" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Workflow.Activities.ReplicatorActivity.ChildCompleted">
      <topicdata group="api" />
      <apidata name="ChildCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ChildCompleted" />
      <remover name="remove_ChildCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.ReplicatorChildEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.Activities.ReplicatorChildEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.ReplicatorActivity.ChildCompletedEvent">
      <topicdata group="api" />
      <apidata name="ChildCompletedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.Activities.ReplicatorActivity.ChildInitialized">
      <topicdata group="api" />
      <apidata name="ChildInitialized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ChildInitialized" />
      <remover name="remove_ChildInitialized" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.ReplicatorChildEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.Activities.ReplicatorChildEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.ReplicatorActivity.ChildInitializedEvent">
      <topicdata group="api" />
      <apidata name="ChildInitializedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.Activities.ReplicatorActivity.Completed">
      <topicdata group="api" />
      <apidata name="Completed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Completed" />
      <remover name="remove_Completed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.ReplicatorActivity.CompletedEvent">
      <topicdata group="api" />
      <apidata name="CompletedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ReplicatorActivity.CurrentChildData">
      <topicdata group="api" />
      <apidata name="CurrentChildData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentChildData" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.ReplicatorActivity.CurrentIndex">
      <topicdata group="api" />
      <apidata name="CurrentIndex" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentIndex" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.ReplicatorActivity.DynamicActivities">
      <topicdata group="api" />
      <apidata name="DynamicActivities" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DynamicActivities" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.ReplicatorActivity.ExecutionType">
      <topicdata group="api" />
      <apidata name="ExecutionType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ExecutionType" />
      <setter name="set_ExecutionType" />
      <returns>
        <type api="T:System.Workflow.Activities.ExecutionType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Visible" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.ReplicatorActivity.ExecutionTypeProperty">
      <topicdata group="api" />
      <apidata name="ExecutionTypeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ReplicatorActivity.InitialChildData">
      <topicdata group="api" />
      <apidata name="InitialChildData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InitialChildData" />
      <setter name="set_InitialChildData" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Design.BindUITypeEditor" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Visible" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.ReplicatorActivity.InitialChildDataProperty">
      <topicdata group="api" />
      <apidata name="InitialChildDataProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.Activities.ReplicatorActivity.Initialized">
      <topicdata group="api" />
      <apidata name="Initialized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Initialized" />
      <remover name="remove_Initialized" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.ReplicatorActivity.InitializedEvent">
      <topicdata group="api" />
      <apidata name="InitializedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ReplicatorActivity.IsExecuting(System.Int32)">
      <topicdata group="api" />
      <apidata name="IsExecuting" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ReplicatorActivity.UntilCondition">
      <topicdata group="api" />
      <apidata name="UntilCondition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UntilCondition" />
      <setter name="set_UntilCondition" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.ReplicatorActivity.UntilConditionProperty">
      <topicdata group="api" />
      <apidata name="UntilConditionProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.ReplicatorChildEventArgs">
      <topicdata group="api" />
      <apidata name="ReplicatorChildEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.ReplicatorChildEventArgs.#ctor(System.Object,System.Workflow.ComponentModel.Activity)" />
        <element api="P:System.Workflow.Activities.ReplicatorChildEventArgs.Activity" />
        <element api="P:System.Workflow.Activities.ReplicatorChildEventArgs.InstanceData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.ReplicatorChildEventArgs">
      <topicdata name="ReplicatorChildEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ReplicatorChildEventArgs" />
      <apidata name="ReplicatorChildEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorChildEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.ReplicatorChildEventArgs">
      <topicdata name="ReplicatorChildEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ReplicatorChildEventArgs" />
      <apidata name="ReplicatorChildEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Workflow.Activities.ReplicatorChildEventArgs.Activity" />
        <element api="P:System.Workflow.Activities.ReplicatorChildEventArgs.InstanceData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorChildEventArgs" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.ReplicatorChildEventArgs.#ctor(System.Object,System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="instanceData">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorChildEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ReplicatorChildEventArgs.Activity">
      <topicdata group="api" />
      <apidata name="Activity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Activity" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorChildEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.ReplicatorChildEventArgs.InstanceData">
      <topicdata group="api" />
      <apidata name="InstanceData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceData" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorChildEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.SendActivity">
      <topicdata group="api" />
      <apidata name="SendActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.SendActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.Activities.SendActivity.AfterResponse" />
        <element api="E:System.Workflow.Activities.SendActivity.BeforeSend" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.SendActivity.AfterResponseEvent" />
        <element api="F:System.Workflow.Activities.SendActivity.BeforeSendEvent" />
        <element api="F:System.Workflow.Activities.SendActivity.CustomAddressProperty" />
        <element api="F:System.Workflow.Activities.SendActivity.ReturnValuePropertyName" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.SendActivity.#ctor">
          <element api="M:System.Workflow.Activities.SendActivity.#ctor" />
          <element api="M:System.Workflow.Activities.SendActivity.#ctor(System.String)" />
        </element>
        <element api="Overload:System.Workflow.Activities.SendActivity.GetContext">
          <element api="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)" />
          <element api="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)" />
        </element>
        <element api="Overload:System.Workflow.Activities.SendActivity.SetContext">
          <element api="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})" />
          <element api="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.SendActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.SendActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.SendActivity.ChannelToken" />
        <element api="P:System.Workflow.Activities.SendActivity.Context" />
        <element api="P:System.Workflow.Activities.SendActivity.CustomAddress" />
        <element api="P:System.Workflow.Activities.SendActivity.ParameterBindings" />
        <element api="P:System.Workflow.Activities.SendActivity.ServiceOperationInfo" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Design.Resources.SendActivity.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.SendActivity">
      <topicdata name="SendActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.SendActivity" />
      <apidata name="SendActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.SendActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.SendActivity.GetContext">
          <element api="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)" />
          <element api="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)" />
        </element>
        <element api="Overload:System.Workflow.Activities.SendActivity.SetContext">
          <element api="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})" />
          <element api="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.SendActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.SendActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.SendActivity">
      <topicdata name="SendActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.SendActivity" />
      <apidata name="SendActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.SendActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.SendActivity.ChannelToken" />
        <element api="P:System.Workflow.Activities.SendActivity.Context" />
        <element api="P:System.Workflow.Activities.SendActivity.CustomAddress" />
        <element api="P:System.Workflow.Activities.SendActivity.ParameterBindings" />
        <element api="P:System.Workflow.Activities.SendActivity.ServiceOperationInfo" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.SendActivity">
      <topicdata name="SendActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.SendActivity" />
      <apidata name="SendActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.SendActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.Activities.SendActivity.AfterResponse" />
        <element api="E:System.Workflow.Activities.SendActivity.BeforeSend" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.SendActivity">
      <topicdata name="SendActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.SendActivity" />
      <apidata name="SendActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.SendActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.SendActivity.AfterResponseEvent" />
        <element api="F:System.Workflow.Activities.SendActivity.BeforeSendEvent" />
        <element api="F:System.Workflow.Activities.SendActivity.CustomAddressProperty" />
        <element api="F:System.Workflow.Activities.SendActivity.ReturnValuePropertyName" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.SendActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.SendActivity.#ctor" />
        <element api="M:System.Workflow.Activities.SendActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.SendActivity.GetContext">
      <topicdata name="GetContext" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetContext" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)" />
        <element api="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.SendActivity.SetContext">
      <topicdata name="SetContext" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetContext" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.SendActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.SendActivity.#ctor" />
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.SendActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.SendActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.Activities.SendActivity.AfterResponse">
      <topicdata group="api" />
      <apidata name="AfterResponse" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AfterResponse" />
      <remover name="remove_AfterResponse" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.SendActivityEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.Activities.SendActivityEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Visible" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.SendActivity.AfterResponseEvent">
      <topicdata group="api" />
      <apidata name="AfterResponseEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.Activities.SendActivity.BeforeSend">
      <topicdata group="api" />
      <apidata name="BeforeSend" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_BeforeSend" />
      <remover name="remove_BeforeSend" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.SendActivityEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.Activities.SendActivityEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Visible" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.SendActivity.BeforeSendEvent">
      <topicdata group="api" />
      <apidata name="BeforeSendEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.SendActivity.ChannelToken">
      <topicdata group="api" />
      <apidata name="ChannelToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ChannelToken" />
      <setter name="set_ChannelToken" />
      <returns>
        <type api="T:System.Workflow.Activities.ChannelToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.SendActivity.Context">
      <topicdata group="api" />
      <apidata name="Context" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Context" />
      <setter name="set_Context" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.SendActivity.CustomAddress">
      <topicdata group="api" />
      <apidata name="CustomAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CustomAddress" />
      <setter name="set_CustomAddress" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.SendActivity.CustomAddressProperty">
      <topicdata group="api" />
      <apidata name="CustomAddressProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)">
      <topicdata group="api" />
      <apidata name="GetContext" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Workflow.Activities.SendActivity.GetContext" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
        <parameter name="endpointName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ownerActivityName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contractType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)">
      <topicdata group="api" />
      <apidata name="GetContext" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Workflow.Activities.SendActivity.GetContext" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
        <parameter name="endpoint">
          <type api="T:System.Workflow.Activities.ChannelToken" ref="true" />
        </parameter>
        <parameter name="contractType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.SendActivity.ParameterBindings">
      <topicdata group="api" />
      <apidata name="ParameterBindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParameterBindings" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.SendActivity.ReturnValuePropertyName">
      <topicdata group="api" />
      <apidata name="ReturnValuePropertyName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>(ReturnValue)</value>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.SendActivity.ServiceOperationInfo">
      <topicdata group="api" />
      <apidata name="ServiceOperationInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServiceOperationInfo" />
      <setter name="set_ServiceOperationInfo" />
      <returns>
        <type api="T:System.Workflow.Activities.TypedOperationInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Visible" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})">
      <topicdata group="api" />
      <apidata name="SetContext" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Workflow.Activities.SendActivity.SetContext" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
        <parameter name="endpointName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ownerActivityName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contractType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})">
      <topicdata group="api" />
      <apidata name="SetContext" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Workflow.Activities.SendActivity.SetContext" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
        <parameter name="endpoint">
          <type api="T:System.Workflow.Activities.ChannelToken" ref="true" />
        </parameter>
        <parameter name="contractType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.SendActivityEventArgs">
      <topicdata group="api" />
      <apidata name="SendActivityEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.SendActivityEventArgs.#ctor(System.Workflow.Activities.SendActivity)" />
        <element api="P:System.Workflow.Activities.SendActivityEventArgs.SendActivity" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.SendActivityEventArgs">
      <topicdata name="SendActivityEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.SendActivityEventArgs" />
      <apidata name="SendActivityEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivityEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.SendActivityEventArgs">
      <topicdata name="SendActivityEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.SendActivityEventArgs" />
      <apidata name="SendActivityEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Workflow.Activities.SendActivityEventArgs.SendActivity" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivityEventArgs" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.SendActivityEventArgs.#ctor(System.Workflow.Activities.SendActivity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="sendActivity">
          <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivityEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.SendActivityEventArgs.SendActivity">
      <topicdata group="api" />
      <apidata name="SendActivity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SendActivity" />
      <returns>
        <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SendActivityEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.SequenceActivity">
      <topicdata group="api" />
      <apidata name="SequenceActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.SequenceActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.Activities.IfElseBranchActivity" ref="true" />
          <type api="T:System.Workflow.Activities.EventDrivenActivity" ref="true" />
          <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
          <type api="T:System.Workflow.Activities.StateFinalizationActivity" ref="true" />
          <type api="T:System.Workflow.Activities.StateInitializationActivity" ref="true" />
          <type api="T:System.Workflow.Activities.CompensatableSequenceActivity" ref="true" />
          <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.SequenceActivity.#ctor">
          <element api="M:System.Workflow.Activities.SequenceActivity.#ctor" />
          <element api="M:System.Workflow.Activities.SequenceActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.SequenceActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.SequenceActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.SequenceActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.SequenceActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.Activities.SequenceActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Sequence.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.SequenceActivity">
      <topicdata name="SequenceActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.SequenceActivity" />
      <apidata name="SequenceActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.SequenceActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.SequenceActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.SequenceActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.SequenceActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.SequenceActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.Activities.SequenceActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.SequenceActivity">
      <topicdata name="SequenceActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.SequenceActivity" />
      <apidata name="SequenceActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.SequenceActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.SequenceActivity">
      <topicdata name="SequenceActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.SequenceActivity" />
      <apidata name="SequenceActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.SequenceActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.SequenceActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.SequenceActivity.#ctor" />
        <element api="M:System.Workflow.Activities.SequenceActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.SequenceActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.SequenceActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.SequenceActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.SequenceActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)">
      <topicdata group="api" />
      <apidata name="HandleFault" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)">
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="OnActivityChangeRemove" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="removedActivity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="OnSequenceComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="OnWorkflowChangesCompleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" eiiName="IActivityEventListener`1.OnEvent" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.SequentialWorkflowActivity">
      <topicdata group="api" />
      <apidata name="SequentialWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.Activities.SequentialWorkflowActivity.Completed" />
        <element api="E:System.Workflow.Activities.SequentialWorkflowActivity.Initialized" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.SequentialWorkflowActivity.CompletedEvent" />
        <element api="F:System.Workflow.Activities.SequentialWorkflowActivity.InitializedEvent" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.#ctor">
          <element api="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor" />
          <element api="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.SequentialWorkflowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequentialWorkflowActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.SequentialWorkflow.bmp</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.SequentialWorkflowActivity">
      <topicdata name="SequentialWorkflowActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.SequentialWorkflowActivity" />
      <apidata name="SequentialWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.Activities.SequentialWorkflowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequentialWorkflowActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.SequentialWorkflowActivity">
      <topicdata name="SequentialWorkflowActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.SequentialWorkflowActivity" />
      <apidata name="SequentialWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.SequentialWorkflowActivity">
      <topicdata name="SequentialWorkflowActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.SequentialWorkflowActivity" />
      <apidata name="SequentialWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.Activities.SequentialWorkflowActivity.Completed" />
        <element api="E:System.Workflow.Activities.SequentialWorkflowActivity.Initialized" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.SequentialWorkflowActivity">
      <topicdata name="SequentialWorkflowActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.SequentialWorkflowActivity" />
      <apidata name="SequentialWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.SequentialWorkflowActivity.CompletedEvent" />
        <element api="F:System.Workflow.Activities.SequentialWorkflowActivity.InitializedEvent" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.SequentialWorkflowActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor" />
        <element api="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.SequentialWorkflowActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.SequentialWorkflowActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.Activities.SequentialWorkflowActivity.Completed">
      <topicdata group="api" />
      <apidata name="Completed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Completed" />
      <remover name="remove_Completed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.SequentialWorkflowActivity.CompletedEvent">
      <topicdata group="api" />
      <apidata name="CompletedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition">
      <topicdata group="api" />
      <apidata name="DynamicUpdateCondition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DynamicUpdateCondition" />
      <setter name="set_DynamicUpdateCondition" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Workflow.Activities.SequentialWorkflowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.Activities.SequentialWorkflowActivity.Initialized">
      <topicdata group="api" />
      <apidata name="Initialized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Initialized" />
      <remover name="remove_Initialized" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.SequentialWorkflowActivity.InitializedEvent">
      <topicdata group="api" />
      <apidata name="InitializedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.SequentialWorkflowActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="OnSequenceComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.SetStateActivity">
      <topicdata group="api" />
      <apidata name="SetStateActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.SetStateActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.SetStateActivity.TargetStateNameProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.SetStateActivity.#ctor">
          <element api="M:System.Workflow.Activities.SetStateActivity.#ctor" />
          <element api="M:System.Workflow.Activities.SetStateActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.SetStateActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.SetStateActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.SetStateActivity.TargetStateName" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.SetStateActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.SetStateActivity.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.SetStateActivity">
      <topicdata name="SetStateActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.SetStateActivity" />
      <apidata name="SetStateActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.SetStateActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.SetStateActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.SetStateActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.SetStateActivity">
      <topicdata name="SetStateActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.SetStateActivity" />
      <apidata name="SetStateActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.SetStateActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.SetStateActivity.TargetStateName" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.SetStateActivity">
      <topicdata name="SetStateActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.SetStateActivity" />
      <apidata name="SetStateActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.SetStateActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.SetStateActivity">
      <topicdata name="SetStateActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.SetStateActivity" />
      <apidata name="SetStateActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.SetStateActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.SetStateActivity.TargetStateNameProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.SetStateActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.SetStateActivity.#ctor" />
        <element api="M:System.Workflow.Activities.SetStateActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.SetStateActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.SetStateActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.SetStateActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.SetStateActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.SetStateActivity.TargetStateName">
      <topicdata group="api" />
      <apidata name="TargetStateName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TargetStateName" />
      <setter name="set_TargetStateName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.SetStateActivity.TargetStateNameProperty">
      <topicdata group="api" />
      <apidata name="TargetStateNameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.SetStateEventArgs">
      <topicdata group="api" />
      <apidata name="SetStateEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.SetStateEventArgs.#ctor(System.String)" />
        <element api="P:System.Workflow.Activities.SetStateEventArgs.TargetStateName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.SetStateEventArgs">
      <topicdata name="SetStateEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.SetStateEventArgs" />
      <apidata name="SetStateEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.SetStateEventArgs">
      <topicdata name="SetStateEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.SetStateEventArgs" />
      <apidata name="SetStateEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Workflow.Activities.SetStateEventArgs.TargetStateName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateEventArgs" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.SetStateEventArgs.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="targetStateName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.SetStateEventArgs.TargetStateName">
      <topicdata group="api" />
      <apidata name="TargetStateName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TargetStateName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.StateActivity">
      <topicdata group="api" />
      <apidata name="StateActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.StateActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.StateActivity.StateChangeTrackingDataKey" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.StateActivity.#ctor">
          <element api="M:System.Workflow.Activities.StateActivity.#ctor" />
          <element api="M:System.Workflow.Activities.StateActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.StateActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.StateActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.StateActivity.GetDynamicActivity(System.String)" />
        <element api="M:System.Workflow.Activities.StateActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.StateActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.StateActivity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.StateActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.StateActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.StateActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.StateActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.Activities.StateActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.StateActivity.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.StateActivityValidator" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.StateActivity">
      <topicdata name="StateActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.StateActivity" />
      <apidata name="StateActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.StateActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.StateActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.StateActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.StateActivity.GetDynamicActivity(System.String)" />
        <element api="M:System.Workflow.Activities.StateActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.StateActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.StateActivity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.StateActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.StateActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.StateActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.StateActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.Activities.StateActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.StateActivity">
      <topicdata name="StateActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.StateActivity" />
      <apidata name="StateActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.StateActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.StateActivity">
      <topicdata name="StateActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.StateActivity" />
      <apidata name="StateActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.StateActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.StateActivity">
      <topicdata name="StateActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.StateActivity" />
      <apidata name="StateActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.StateActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.StateActivity.StateChangeTrackingDataKey" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.StateActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.StateActivity.#ctor" />
        <element api="M:System.Workflow.Activities.StateActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.StateActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.StateActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateActivity.GetDynamicActivity(System.String)">
      <topicdata group="api" />
      <apidata name="GetDynamicActivity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="childActivityName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateActivity.Initialize(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)">
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="OnActivityChangeAdd" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="addedActivity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateActivity.OnClosed(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="OnClosed" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.StateActivity.StateChangeTrackingDataKey">
      <topicdata group="api" />
      <apidata name="StateChangeTrackingDataKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>StateActivity.StateChange</value>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.StateActivityValidator">
      <topicdata group="api" />
      <apidata name="StateActivityValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.StateActivityValidator.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Compiler.CompositeActivityValidator" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidator" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Compiler.DependencyObjectValidator" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Compiler.Validator" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.StateActivityValidator.#ctor" />
        <element api="M:System.Workflow.Activities.StateActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.Activities.StateActivityValidator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.GetFullPropertyName(System.Workflow.ComponentModel.Compiler.ValidationManager)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperties(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperty(System.Reflection.PropertyInfo,System.Object,System.Object,System.Workflow.ComponentModel.Compiler.ValidationManager)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.StateActivityValidator">
      <topicdata name="StateActivityValidator" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.StateActivityValidator" />
      <apidata name="StateActivityValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.StateActivityValidator.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.StateActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.Activities.StateActivityValidator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.GetFullPropertyName(System.Workflow.ComponentModel.Compiler.ValidationManager)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperties(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperty(System.Reflection.PropertyInfo,System.Object,System.Object,System.Workflow.ComponentModel.Compiler.ValidationManager)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivityValidator" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateActivityValidator.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivityValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Compiler.CompositeActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
          <type api="T:System.Workflow.ComponentModel.Compiler.CompositeActivityValidator" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="manager">
          <type api="T:System.Workflow.ComponentModel.Compiler.ValidationManager" ref="true" />
        </parameter>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivityValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateActivityValidator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)">
      <topicdata group="api" />
      <apidata name="ValidateActivityChange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Compiler.CompositeActivityValidator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)">
          <type api="T:System.Workflow.ComponentModel.Compiler.CompositeActivityValidator" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.Workflow.ComponentModel.ActivityChangeAction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.ValidationError" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivityValidator" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.StateFinalizationActivity">
      <topicdata group="api" />
      <apidata name="StateFinalizationActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.StateFinalizationActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="Overload:System.Workflow.Activities.StateFinalizationActivity.#ctor">
          <element api="M:System.Workflow.Activities.StateFinalizationActivity.#ctor" />
          <element api="M:System.Workflow.Activities.StateFinalizationActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.StateFinalizationActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.StateFinalizationActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.StateFinalizationActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.StateFinalizationActivity.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.StateFinalizationActivity">
      <topicdata name="StateFinalizationActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.StateFinalizationActivity" />
      <apidata name="StateFinalizationActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.StateFinalizationActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.StateFinalizationActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.StateFinalizationActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateFinalizationActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.StateFinalizationActivity">
      <topicdata name="StateFinalizationActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.StateFinalizationActivity" />
      <apidata name="StateFinalizationActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.StateFinalizationActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateFinalizationActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.StateFinalizationActivity">
      <topicdata name="StateFinalizationActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.StateFinalizationActivity" />
      <apidata name="StateFinalizationActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.StateFinalizationActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateFinalizationActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.StateFinalizationActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.StateFinalizationActivity.#ctor" />
        <element api="M:System.Workflow.Activities.StateFinalizationActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateFinalizationActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateFinalizationActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.StateFinalizationActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateFinalizationActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateFinalizationActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.StateFinalizationActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateFinalizationActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.StateInitializationActivity">
      <topicdata group="api" />
      <apidata name="StateInitializationActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.StateInitializationActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="Overload:System.Workflow.Activities.StateInitializationActivity.#ctor">
          <element api="M:System.Workflow.Activities.StateInitializationActivity.#ctor" />
          <element api="M:System.Workflow.Activities.StateInitializationActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.StateInitializationActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.StateInitializationActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.StateInitializationActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.StateInitializationActivity.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.StateInitializationActivity">
      <topicdata name="StateInitializationActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.StateInitializationActivity" />
      <apidata name="StateInitializationActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.StateInitializationActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.StateInitializationActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.StateInitializationActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateInitializationActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.StateInitializationActivity">
      <topicdata name="StateInitializationActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.StateInitializationActivity" />
      <apidata name="StateInitializationActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.StateInitializationActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateInitializationActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.StateInitializationActivity">
      <topicdata name="StateInitializationActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.StateInitializationActivity" />
      <apidata name="StateInitializationActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.StateInitializationActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateInitializationActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.StateInitializationActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.StateInitializationActivity.#ctor" />
        <element api="M:System.Workflow.Activities.StateInitializationActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateInitializationActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateInitializationActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.StateInitializationActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateInitializationActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateInitializationActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.StateInitializationActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateInitializationActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.StateMachineWorkflowActivity">
      <topicdata group="api" />
      <apidata name="StateMachineWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty" />
        <element api="F:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty" />
        <element api="F:System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.StateActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.StateActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.StateActivity.GetDynamicActivity(System.String)" />
        <element api="M:System.Workflow.Activities.StateActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.StateActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.StateActivity.OnClosed(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor">
          <element api="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor" />
          <element api="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.StateMachineWorkflowActivity.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.StateActivityValidator" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.StateMachineWorkflowActivity">
      <topicdata name="StateMachineWorkflowActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.StateMachineWorkflowActivity" />
      <apidata name="StateMachineWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.StateActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.StateActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.StateActivity.GetDynamicActivity(System.String)" />
        <element api="M:System.Workflow.Activities.StateActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.StateActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.StateActivity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.StateMachineWorkflowActivity">
      <topicdata name="StateMachineWorkflowActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.StateMachineWorkflowActivity" />
      <apidata name="StateMachineWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.StateMachineWorkflowActivity">
      <topicdata name="StateMachineWorkflowActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.StateMachineWorkflowActivity" />
      <apidata name="StateMachineWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.StateMachineWorkflowActivity">
      <topicdata name="StateMachineWorkflowActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.StateMachineWorkflowActivity" />
      <apidata name="StateMachineWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty" />
        <element api="F:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty" />
        <element api="F:System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor" />
        <element api="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName">
      <topicdata group="api" />
      <apidata name="CompletedStateName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CompletedStateName" />
      <setter name="set_CompletedStateName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty">
      <topicdata group="api" />
      <apidata name="CompletedStateNameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName">
      <topicdata group="api" />
      <apidata name="CurrentStateName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentStateName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition">
      <topicdata group="api" />
      <apidata name="DynamicUpdateCondition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DynamicUpdateCondition" />
      <setter name="set_DynamicUpdateCondition" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName">
      <topicdata group="api" />
      <apidata name="InitialStateName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InitialStateName" />
      <setter name="set_InitialStateName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute" ref="true" />
          <argument>
            <type api="T:System.Workflow.ComponentModel.Compiler.ValidationOption" ref="false" />
            <enumValue>
              <field name="Optional" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty">
      <topicdata group="api" />
      <apidata name="InitialStateNameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName">
      <topicdata group="api" />
      <apidata name="PreviousStateName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PreviousStateName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName">
      <topicdata group="api" />
      <apidata name="SetStateQueueName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>SetStateQueue</value>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.StateMachineWorkflowInstance">
      <topicdata group="api" />
      <apidata name="StateMachineWorkflowInstance" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.#ctor(System.Workflow.Runtime.WorkflowRuntime,System.Guid)" />
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem">
          <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object)" />
          <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" />
        </element>
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowInstance.SetState">
          <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.Workflow.Activities.StateActivity)" />
          <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.String)" />
        </element>
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentState" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentStateName" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.InstanceId" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.PossibleStateTransitions" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateHistory" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateMachineWorkflow" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.States" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.WorkflowInstance" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.StateMachineWorkflowInstance">
      <topicdata name="StateMachineWorkflowInstance" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.StateMachineWorkflowInstance" />
      <apidata name="StateMachineWorkflowInstance" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem">
          <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object)" />
          <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" />
        </element>
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowInstance.SetState">
          <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.Workflow.Activities.StateActivity)" />
          <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.StateMachineWorkflowInstance">
      <topicdata name="StateMachineWorkflowInstance" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.StateMachineWorkflowInstance" />
      <apidata name="StateMachineWorkflowInstance" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentState" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentStateName" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.InstanceId" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.PossibleStateTransitions" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateHistory" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateMachineWorkflow" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.States" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.WorkflowInstance" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem">
      <topicdata name="EnqueueItem" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="EnqueueItem" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object)" />
        <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.StateMachineWorkflowInstance.SetState">
      <topicdata name="SetState" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetState" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.Workflow.Activities.StateActivity)" />
        <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateMachineWorkflowInstance.#ctor(System.Workflow.Runtime.WorkflowRuntime,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="runtime">
          <type api="T:System.Workflow.Runtime.WorkflowRuntime" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentState">
      <topicdata group="api" />
      <apidata name="CurrentState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentState" />
      <returns>
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentStateName">
      <topicdata group="api" />
      <apidata name="CurrentStateName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentStateName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object)">
      <topicdata group="api" />
      <apidata name="EnqueueItem" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="queueName">
          <type api="T:System.IComparable" ref="true" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
      <topicdata group="api" />
      <apidata name="EnqueueItem" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="queueName">
          <type api="T:System.IComparable" ref="true" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="pendingWork">
          <type api="T:System.Workflow.Runtime.IPendingWork" ref="true" />
        </parameter>
        <parameter name="workItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowInstance.InstanceId">
      <topicdata group="api" />
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowInstance.PossibleStateTransitions">
      <topicdata group="api" />
      <apidata name="PossibleStateTransitions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PossibleStateTransitions" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.String)">
      <topicdata group="api" />
      <apidata name="SetState" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.Activities.StateMachineWorkflowInstance.SetState" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetStateName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.Workflow.Activities.StateActivity)">
      <topicdata group="api" />
      <apidata name="SetState" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.Activities.StateMachineWorkflowInstance.SetState" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetState">
          <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateHistory">
      <topicdata group="api" />
      <apidata name="StateHistory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StateHistory" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateMachineWorkflow">
      <topicdata group="api" />
      <apidata name="StateMachineWorkflow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StateMachineWorkflow" />
      <returns>
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowInstance.States">
      <topicdata group="api" />
      <apidata name="States" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_States" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowInstance.WorkflowInstance">
      <topicdata group="api" />
      <apidata name="WorkflowInstance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WorkflowInstance" />
      <returns>
        <type api="T:System.Workflow.Runtime.WorkflowInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.TypedOperationInfo">
      <topicdata group="api" />
      <apidata name="TypedOperationInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.TypedOperationInfo.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.TypedOperationInfo.#ctor">
          <element api="M:System.Workflow.Activities.TypedOperationInfo.#ctor" />
          <element api="M:System.Workflow.Activities.TypedOperationInfo.#ctor(System.Type,System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.TypedOperationInfo.Clone" />
        <element api="M:System.Workflow.Activities.TypedOperationInfo.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.TypedOperationInfo.GetHashCode" />
        <element api="M:System.Workflow.Activities.TypedOperationInfo.ToString" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.OperationInfoBase.Name" />
        <element api="P:System.Workflow.Activities.OperationInfoBase.PrincipalPermissionName" />
        <element api="P:System.Workflow.Activities.OperationInfoBase.PrincipalPermissionRole" />
        <element api="P:System.Workflow.Activities.TypedOperationInfo.ContractType" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.TypedOperationInfo">
      <topicdata name="TypedOperationInfo" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.TypedOperationInfo" />
      <apidata name="TypedOperationInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.TypedOperationInfo.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.TypedOperationInfo.Clone" />
        <element api="M:System.Workflow.Activities.TypedOperationInfo.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.TypedOperationInfo.GetHashCode" />
        <element api="M:System.Workflow.Activities.TypedOperationInfo.ToString" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.TypedOperationInfo" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.TypedOperationInfo">
      <topicdata name="TypedOperationInfo" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.TypedOperationInfo" />
      <apidata name="TypedOperationInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.TypedOperationInfo.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.OperationInfoBase.Name" />
        <element api="P:System.Workflow.Activities.OperationInfoBase.PrincipalPermissionName" />
        <element api="P:System.Workflow.Activities.OperationInfoBase.PrincipalPermissionRole" />
        <element api="P:System.Workflow.Activities.TypedOperationInfo.ContractType" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.TypedOperationInfo" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.TypedOperationInfo">
      <topicdata name="TypedOperationInfo" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.TypedOperationInfo" />
      <apidata name="TypedOperationInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.TypedOperationInfo.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.TypedOperationInfo" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.TypedOperationInfo.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.TypedOperationInfo.#ctor" />
        <element api="M:System.Workflow.Activities.TypedOperationInfo.#ctor(System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.TypedOperationInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.TypedOperationInfo.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.TypedOperationInfo.#ctor" />
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.TypedOperationInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.TypedOperationInfo.#ctor(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.TypedOperationInfo.#ctor" />
      <parameters>
        <parameter name="contractType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="operationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.TypedOperationInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.TypedOperationInfo.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.OperationInfoBase.Clone">
          <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.TypedOperationInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.TypedOperationInfo.ContractType">
      <topicdata group="api" />
      <apidata name="ContractType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContractType" />
      <setter name="set_ContractType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.TypedOperationInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.TypedOperationInfo.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.OperationInfoBase.Equals(System.Object)">
          <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.TypedOperationInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.TypedOperationInfo.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.OperationInfoBase.GetHashCode">
          <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.TypedOperationInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.TypedOperationInfo.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.TypedOperationInfo" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.WebServiceFaultActivity">
      <topicdata group="api" />
      <apidata name="WebServiceFaultActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.Activities.WebServiceFaultActivity.SendingFault" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.WebServiceFaultActivity.FaultProperty" />
        <element api="F:System.Workflow.Activities.WebServiceFaultActivity.InputActivityNameProperty" />
        <element api="F:System.Workflow.Activities.WebServiceFaultActivity.SendingFaultEvent" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.WebServiceFaultActivity.#ctor">
          <element api="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor" />
          <element api="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.WebServiceFaultActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.WebServiceFaultActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.WebServiceFaultActivity.Fault" />
        <element api="P:System.Workflow.Activities.WebServiceFaultActivity.InputActivityName" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.WebServiceFaultActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.WebServiceOut.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SendingFault</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.WebServiceFaultActivity">
      <topicdata name="WebServiceFaultActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.WebServiceFaultActivity" />
      <apidata name="WebServiceFaultActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.WebServiceFaultActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.WebServiceFaultActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.WebServiceFaultActivity">
      <topicdata name="WebServiceFaultActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.WebServiceFaultActivity" />
      <apidata name="WebServiceFaultActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.WebServiceFaultActivity.Fault" />
        <element api="P:System.Workflow.Activities.WebServiceFaultActivity.InputActivityName" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.WebServiceFaultActivity">
      <topicdata name="WebServiceFaultActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.WebServiceFaultActivity" />
      <apidata name="WebServiceFaultActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.Activities.WebServiceFaultActivity.SendingFault" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.WebServiceFaultActivity">
      <topicdata name="WebServiceFaultActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.WebServiceFaultActivity" />
      <apidata name="WebServiceFaultActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.WebServiceFaultActivity.FaultProperty" />
        <element api="F:System.Workflow.Activities.WebServiceFaultActivity.InputActivityNameProperty" />
        <element api="F:System.Workflow.Activities.WebServiceFaultActivity.SendingFaultEvent" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.WebServiceFaultActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor" />
        <element api="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WebServiceFaultActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WebServiceFaultActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.WebServiceFaultActivity.Fault">
      <topicdata group="api" />
      <apidata name="Fault" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Fault" />
      <setter name="set_Fault" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Visible" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.WebServiceFaultActivity.FaultProperty">
      <topicdata group="api" />
      <apidata name="FaultProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.WebServiceFaultActivity.InputActivityName">
      <topicdata group="api" />
      <apidata name="InputActivityName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InputActivityName" />
      <setter name="set_InputActivityName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.WebServiceFaultActivity.InputActivityNameProperty">
      <topicdata group="api" />
      <apidata name="InputActivityNameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.Activities.WebServiceFaultActivity.SendingFault">
      <topicdata group="api" />
      <apidata name="SendingFault" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SendingFault" />
      <remover name="remove_SendingFault" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.WebServiceFaultActivity.SendingFaultEvent">
      <topicdata group="api" />
      <apidata name="SendingFaultEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.WebServiceInputActivity">
      <topicdata group="api" />
      <apidata name="WebServiceInputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WebServiceInputActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Workflow.Activities.WebServiceInputActivity.InputReceived" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.ActivitySubscribedProperty" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.InputReceivedEvent" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.InterfaceTypeProperty" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.IsActivatingProperty" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.MethodNameProperty" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.ParameterBindingsProperty" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.RolesProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.WebServiceInputActivity.#ctor">
          <element api="M:System.Workflow.Activities.WebServiceInputActivity.#ctor" />
          <element api="M:System.Workflow.Activities.WebServiceInputActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.WebServiceInputActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.WebServiceInputActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.InterfaceType" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.IsActivating" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.MethodName" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.ParameterBindings" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.Roles" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#QueueName" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.WebServiceIn.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>InputReceived</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.WebServiceInputActivity">
      <topicdata name="WebServiceInputActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.WebServiceInputActivity" />
      <apidata name="WebServiceInputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WebServiceInputActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.WebServiceInputActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.WebServiceInputActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.WebServiceInputActivity">
      <topicdata name="WebServiceInputActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.WebServiceInputActivity" />
      <apidata name="WebServiceInputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WebServiceInputActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.InterfaceType" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.IsActivating" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.MethodName" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.ParameterBindings" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.Roles" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#QueueName" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.WebServiceInputActivity">
      <topicdata name="WebServiceInputActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.WebServiceInputActivity" />
      <apidata name="WebServiceInputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WebServiceInputActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.Activities.WebServiceInputActivity.InputReceived" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.WebServiceInputActivity">
      <topicdata name="WebServiceInputActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.WebServiceInputActivity" />
      <apidata name="WebServiceInputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WebServiceInputActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.ActivitySubscribedProperty" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.InputReceivedEvent" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.InterfaceTypeProperty" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.IsActivatingProperty" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.MethodNameProperty" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.ParameterBindingsProperty" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.RolesProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.WebServiceInputActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.#ctor" />
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WebServiceInputActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WebServiceInputActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WebServiceInputActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WebServiceInputActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.WebServiceInputActivity.ActivitySubscribedProperty">
      <topicdata group="api" />
      <apidata name="ActivitySubscribedProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.Activities.WebServiceInputActivity.InputReceived">
      <topicdata group="api" />
      <apidata name="InputReceived" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_InputReceived" />
      <remover name="remove_InputReceived" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.WebServiceInputActivity.InputReceivedEvent">
      <topicdata group="api" />
      <apidata name="InputReceivedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.WebServiceInputActivity.InterfaceType">
      <topicdata group="api" />
      <apidata name="InterfaceType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InterfaceType" />
      <setter name="set_InterfaceType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Design.TypeBrowserEditor" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.WebServiceInputActivity.InterfaceTypeProperty">
      <topicdata group="api" />
      <apidata name="InterfaceTypeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.WebServiceInputActivity.IsActivating">
      <topicdata group="api" />
      <apidata name="IsActivating" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsActivating" />
      <setter name="set_IsActivating" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.WebServiceInputActivity.IsActivatingProperty">
      <topicdata group="api" />
      <apidata name="IsActivatingProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.WebServiceInputActivity.MethodName">
      <topicdata group="api" />
      <apidata name="MethodName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MethodName" />
      <setter name="set_MethodName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.WebServiceInputActivity.MethodNameProperty">
      <topicdata group="api" />
      <apidata name="MethodNameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.WebServiceInputActivity.ParameterBindings">
      <topicdata group="api" />
      <apidata name="ParameterBindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParameterBindings" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.WebServiceInputActivity.ParameterBindingsProperty">
      <topicdata group="api" />
      <apidata name="ParameterBindingsProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.WebServiceInputActivity.Roles">
      <topicdata group="api" />
      <apidata name="Roles" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Roles" />
      <setter name="set_Roles" />
      <returns>
        <type api="T:System.Workflow.Activities.WorkflowRoleCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Design.BindUITypeEditor" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.WebServiceInputActivity.RolesProperty">
      <topicdata group="api" />
      <apidata name="RolesProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#QueueName">
      <topicdata group="api" eiiName="IEventActivity.QueueName" />
      <apidata name="QueueName" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Workflow.Activities.IEventActivity.QueueName" />
      <returns>
        <type api="T:System.IComparable" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Workflow.Activities.IEventActivity.QueueName">
          <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <topicdata group="api" eiiName="IEventActivity.Subscribe" />
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="parentContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="parentEventHandler">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <topicdata group="api" eiiName="IEventActivity.Unsubscribe" />
      <apidata name="Unsubscribe" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="parentContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="parentEventHandler">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)">
      <topicdata group="api" eiiName="IActivityEventListener`1.OnEvent" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <topicdata group="api" eiiName="IDynamicPropertyTypeProvider.GetAccessType" />
      <apidata name="GetAccessType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.AccessTypes" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <topicdata group="api" eiiName="IDynamicPropertyTypeProvider.GetPropertyType" />
      <apidata name="GetPropertyType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.WebServiceOutputActivity">
      <topicdata group="api" />
      <apidata name="WebServiceOutputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Workflow.Activities.WebServiceOutputActivity.SendingOutput" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.WebServiceOutputActivity.InputActivityNameProperty" />
        <element api="F:System.Workflow.Activities.WebServiceOutputActivity.ParameterBindingsProperty" />
        <element api="F:System.Workflow.Activities.WebServiceOutputActivity.SendingOutputEvent" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.WebServiceOutputActivity.#ctor">
          <element api="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor" />
          <element api="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.WebServiceOutputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.Activities.WebServiceOutputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.WebServiceOutputActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.WebServiceOutputActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.WebServiceOutputActivity.InputActivityName" />
        <element api="P:System.Workflow.Activities.WebServiceOutputActivity.ParameterBindings" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.WebServiceOut.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SendingOutput</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.WebServiceOutputActivity">
      <topicdata name="WebServiceOutputActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.WebServiceOutputActivity" />
      <apidata name="WebServiceOutputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.WebServiceOutputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.Activities.WebServiceOutputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.WebServiceOutputActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.WebServiceOutputActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.WebServiceOutputActivity">
      <topicdata name="WebServiceOutputActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.WebServiceOutputActivity" />
      <apidata name="WebServiceOutputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.WebServiceOutputActivity.InputActivityName" />
        <element api="P:System.Workflow.Activities.WebServiceOutputActivity.ParameterBindings" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.WebServiceOutputActivity">
      <topicdata name="WebServiceOutputActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.WebServiceOutputActivity" />
      <apidata name="WebServiceOutputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.Activities.WebServiceOutputActivity.SendingOutput" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.WebServiceOutputActivity">
      <topicdata name="WebServiceOutputActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.WebServiceOutputActivity" />
      <apidata name="WebServiceOutputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.WebServiceOutputActivity.InputActivityNameProperty" />
        <element api="F:System.Workflow.Activities.WebServiceOutputActivity.ParameterBindingsProperty" />
        <element api="F:System.Workflow.Activities.WebServiceOutputActivity.SendingOutputEvent" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.WebServiceOutputActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor" />
        <element api="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WebServiceOutputActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WebServiceOutputActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.WebServiceOutputActivity.InputActivityName">
      <topicdata group="api" />
      <apidata name="InputActivityName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InputActivityName" />
      <setter name="set_InputActivityName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.WebServiceOutputActivity.InputActivityNameProperty">
      <topicdata group="api" />
      <apidata name="InputActivityNameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.WebServiceOutputActivity.ParameterBindings">
      <topicdata group="api" />
      <apidata name="ParameterBindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParameterBindings" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.Activities.WebServiceOutputActivity.ParameterBindingsProperty">
      <topicdata group="api" />
      <apidata name="ParameterBindingsProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.Activities.WebServiceOutputActivity.SendingOutput">
      <topicdata group="api" />
      <apidata name="SendingOutput" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SendingOutput" />
      <remover name="remove_SendingOutput" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.WebServiceOutputActivity.SendingOutputEvent">
      <topicdata group="api" />
      <apidata name="SendingOutputEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WebServiceOutputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <topicdata group="api" eiiName="IDynamicPropertyTypeProvider.GetAccessType" />
      <apidata name="GetAccessType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.AccessTypes" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WebServiceOutputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <topicdata group="api" eiiName="IDynamicPropertyTypeProvider.GetPropertyType" />
      <apidata name="GetPropertyType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.WebWorkflowRole">
      <topicdata group="api" />
      <apidata name="WebWorkflowRole" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.WebWorkflowRole.#ctor">
          <element api="M:System.Workflow.Activities.WebWorkflowRole.#ctor(System.String)" />
          <element api="M:System.Workflow.Activities.WebWorkflowRole.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.WebWorkflowRole.GetIdentities" />
        <element api="M:System.Workflow.Activities.WebWorkflowRole.IncludesIdentity(System.String)" />
        <element api="P:System.Workflow.Activities.WebWorkflowRole.Name" />
        <element api="P:System.Workflow.Activities.WebWorkflowRole.RoleProvider" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.WebWorkflowRole">
      <topicdata name="WebWorkflowRole" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.WebWorkflowRole" />
      <apidata name="WebWorkflowRole" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.WebWorkflowRole.GetIdentities" />
        <element api="M:System.Workflow.Activities.WebWorkflowRole.IncludesIdentity(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebWorkflowRole" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.WebWorkflowRole">
      <topicdata name="WebWorkflowRole" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.WebWorkflowRole" />
      <apidata name="WebWorkflowRole" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Workflow.Activities.WebWorkflowRole.Name" />
        <element api="P:System.Workflow.Activities.WebWorkflowRole.RoleProvider" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebWorkflowRole" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.WebWorkflowRole.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.WebWorkflowRole.#ctor(System.String)" />
        <element api="M:System.Workflow.Activities.WebWorkflowRole.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebWorkflowRole" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WebWorkflowRole.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WebWorkflowRole.#ctor" />
      <parameters>
        <parameter name="roleName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebWorkflowRole" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WebWorkflowRole.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WebWorkflowRole.#ctor" />
      <parameters>
        <parameter name="roleName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebWorkflowRole" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WebWorkflowRole.GetIdentities">
      <topicdata group="api" />
      <apidata name="GetIdentities" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.WorkflowRole.GetIdentities">
          <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebWorkflowRole" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WebWorkflowRole.IncludesIdentity(System.String)">
      <topicdata group="api" />
      <apidata name="IncludesIdentity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.WorkflowRole.IncludesIdentity(System.String)">
          <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identity">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebWorkflowRole" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.WebWorkflowRole.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Workflow.Activities.WorkflowRole.Name">
          <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebWorkflowRole" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.WebWorkflowRole.RoleProvider">
      <topicdata group="api" />
      <apidata name="RoleProvider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RoleProvider" />
      <setter name="set_RoleProvider" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebWorkflowRole" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.WhileActivity">
      <topicdata group="api" />
      <apidata name="WhileActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WhileActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.Activities.WhileActivity.ConditionProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.WhileActivity.#ctor">
          <element api="M:System.Workflow.Activities.WhileActivity.#ctor" />
          <element api="M:System.Workflow.Activities.WhileActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.WhileActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.WhileActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.WhileActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.WhileActivity.Condition" />
        <element api="P:System.Workflow.Activities.WhileActivity.DynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.WhileActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.While.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.WhileActivity">
      <topicdata name="WhileActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.WhileActivity" />
      <apidata name="WhileActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WhileActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.Activities.WhileActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.WhileActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.WhileActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.WhileActivity">
      <topicdata name="WhileActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.WhileActivity" />
      <apidata name="WhileActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WhileActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.WhileActivity.Condition" />
        <element api="P:System.Workflow.Activities.WhileActivity.DynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.WhileActivity">
      <topicdata name="WhileActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.WhileActivity" />
      <apidata name="WhileActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WhileActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.Activities.WhileActivity">
      <topicdata name="WhileActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.WhileActivity" />
      <apidata name="WhileActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WhileActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.Activities.WhileActivity.ConditionProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.WhileActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.WhileActivity.#ctor" />
        <element api="M:System.Workflow.Activities.WhileActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WhileActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WhileActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WhileActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WhileActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.WhileActivity.Condition">
      <topicdata group="api" />
      <apidata name="Condition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Condition" />
      <setter name="set_Condition" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.Activities.WhileActivity.ConditionProperty">
      <topicdata group="api" />
      <apidata name="ConditionProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.WhileActivity.DynamicActivity">
      <topicdata group="api" />
      <apidata name="DynamicActivity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DynamicActivity" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Workflow.Activities.WhileActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" eiiName="IActivityEventListener`1.OnEvent" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.WorkflowAuthorizationException">
      <topicdata group="api" />
      <apidata name="WorkflowAuthorizationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.WorkflowAuthorizationException.#ctor">
          <element api="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor" />
          <element api="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String)" />
          <element api="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String,System.String)" />
        </element>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.WorkflowAuthorizationException">
      <topicdata name="WorkflowAuthorizationException" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.WorkflowAuthorizationException" />
      <apidata name="WorkflowAuthorizationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowAuthorizationException" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.WorkflowAuthorizationException">
      <topicdata name="WorkflowAuthorizationException" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.WorkflowAuthorizationException" />
      <apidata name="WorkflowAuthorizationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowAuthorizationException" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.WorkflowAuthorizationException">
      <topicdata name="WorkflowAuthorizationException" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.WorkflowAuthorizationException" />
      <apidata name="WorkflowAuthorizationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowAuthorizationException" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.Activities.WorkflowAuthorizationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor" />
        <element api="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String)" />
        <element api="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowAuthorizationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WorkflowAuthorizationException.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowAuthorizationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Workflow.Activities.WorkflowAuthorizationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowAuthorizationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WorkflowAuthorizationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowAuthorizationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WorkflowAuthorizationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowAuthorizationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WorkflowAuthorizationException.#ctor" />
      <parameters>
        <parameter name="activityName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="principalName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowAuthorizationException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.WorkflowRole">
      <topicdata group="api" />
      <apidata name="WorkflowRole" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
          <type api="T:System.Workflow.Activities.WebWorkflowRole" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.WorkflowRole.#ctor" />
        <element api="M:System.Workflow.Activities.WorkflowRole.GetIdentities" />
        <element api="M:System.Workflow.Activities.WorkflowRole.IncludesIdentity(System.String)" />
        <element api="P:System.Workflow.Activities.WorkflowRole.Name" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.WorkflowRole">
      <topicdata name="WorkflowRole" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.WorkflowRole" />
      <apidata name="WorkflowRole" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.WorkflowRole.GetIdentities" />
        <element api="M:System.Workflow.Activities.WorkflowRole.IncludesIdentity(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRole" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.WorkflowRole">
      <topicdata name="WorkflowRole" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.WorkflowRole" />
      <apidata name="WorkflowRole" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="P:System.Workflow.Activities.WorkflowRole.Name" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRole" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WorkflowRole.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WorkflowRole.GetIdentities">
      <topicdata group="api" />
      <apidata name="GetIdentities" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WorkflowRole.IncludesIdentity(System.String)">
      <topicdata group="api" />
      <apidata name="IncludesIdentity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.WorkflowRole.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.WorkflowRoleCollection">
      <topicdata group="api" />
      <apidata name="WorkflowRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Workflow.Activities.WorkflowRoleCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.Generic.List`1.Add(`0)" />
        <element api="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.List`1.AsReadOnly" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.BinarySearch">
          <element api="M:System.Collections.Generic.List`1.BinarySearch(`0)" />
          <element api="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})" />
          <element api="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Clear" />
        <element api="M:System.Collections.Generic.List`1.Contains(`0)" />
        <element api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.CopyTo">
          <element api="M:System.Collections.Generic.List`1.CopyTo(`0[])" />
          <element api="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.FindIndex">
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.FindLastIndex">
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})" />
        <element api="M:System.Collections.Generic.List`1.GetEnumerator" />
        <element api="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.IndexOf">
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0)" />
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.LastIndexOf">
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Remove(`0)" />
        <element api="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.Reverse">
          <element api="M:System.Collections.Generic.List`1.Reverse" />
          <element api="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.Sort">
          <element api="M:System.Collections.Generic.List`1.Sort" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.ToArray" />
        <element api="M:System.Collections.Generic.List`1.TrimExcess" />
        <element api="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.WorkflowRoleCollection.#ctor" />
        <element api="M:System.Workflow.Activities.WorkflowRoleCollection.IncludesIdentity(System.String)" />
        <element api="P:System.Collections.Generic.List`1.Capacity" />
        <element api="P:System.Collections.Generic.List`1.Count" />
        <element api="P:System.Collections.Generic.List`1.Item(System.Int32)" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.WorkflowRoleCollection">
      <topicdata name="WorkflowRoleCollection" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.WorkflowRoleCollection" />
      <apidata name="WorkflowRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Workflow.Activities.WorkflowRoleCollection.#ctor" />
      <elements>
        <element api="M:System.Collections.Generic.List`1.Add(`0)" />
        <element api="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.List`1.AsReadOnly" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.BinarySearch">
          <element api="M:System.Collections.Generic.List`1.BinarySearch(`0)" />
          <element api="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})" />
          <element api="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Clear" />
        <element api="M:System.Collections.Generic.List`1.Contains(`0)" />
        <element api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.CopyTo">
          <element api="M:System.Collections.Generic.List`1.CopyTo(`0[])" />
          <element api="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.FindIndex">
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.FindLastIndex">
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})" />
        <element api="M:System.Collections.Generic.List`1.GetEnumerator" />
        <element api="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.IndexOf">
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0)" />
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.LastIndexOf">
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Remove(`0)" />
        <element api="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.Reverse">
          <element api="M:System.Collections.Generic.List`1.Reverse" />
          <element api="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.Sort">
          <element api="M:System.Collections.Generic.List`1.Sort" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.ToArray" />
        <element api="M:System.Collections.Generic.List`1.TrimExcess" />
        <element api="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.WorkflowRoleCollection.IncludesIdentity(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRoleCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.WorkflowRoleCollection">
      <topicdata name="WorkflowRoleCollection" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.WorkflowRoleCollection" />
      <apidata name="WorkflowRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Workflow.Activities.WorkflowRoleCollection.#ctor" />
      <elements>
        <element api="P:System.Collections.Generic.List`1.Capacity" />
        <element api="P:System.Collections.Generic.List`1.Count" />
        <element api="P:System.Collections.Generic.List`1.Item(System.Int32)" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRoleCollection" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WorkflowRoleCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRoleCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WorkflowRoleCollection.IncludesIdentity(System.String)">
      <topicdata group="api" />
      <apidata name="IncludesIdentity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRoleCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.WorkflowServiceAttributes">
      <topicdata group="api" />
      <apidata name="WorkflowServiceAttributes" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WorkflowServiceAttributes.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.WorkflowServiceAttributes.#ctor" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode" />
        <element api="P:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName" />
        <element api="P:System.Workflow.Activities.WorkflowServiceAttributes.IgnoreExtensionDataObject" />
        <element api="P:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults" />
        <element api="P:System.Workflow.Activities.WorkflowServiceAttributes.MaxItemsInObjectGraph" />
        <element api="P:System.Workflow.Activities.WorkflowServiceAttributes.Name" />
        <element api="P:System.Workflow.Activities.WorkflowServiceAttributes.Namespace" />
        <element api="P:System.Workflow.Activities.WorkflowServiceAttributes.UseSynchronizationContext" />
        <element api="P:System.Workflow.Activities.WorkflowServiceAttributes.ValidateMustUnderstand" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.WorkflowServiceAttributes">
      <topicdata name="WorkflowServiceAttributes" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.WorkflowServiceAttributes" />
      <apidata name="WorkflowServiceAttributes" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WorkflowServiceAttributes.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowServiceAttributes" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.WorkflowServiceAttributes">
      <topicdata name="WorkflowServiceAttributes" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.WorkflowServiceAttributes" />
      <apidata name="WorkflowServiceAttributes" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WorkflowServiceAttributes.#ctor" />
      <elements>
        <element api="P:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode" />
        <element api="P:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName" />
        <element api="P:System.Workflow.Activities.WorkflowServiceAttributes.IgnoreExtensionDataObject" />
        <element api="P:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults" />
        <element api="P:System.Workflow.Activities.WorkflowServiceAttributes.MaxItemsInObjectGraph" />
        <element api="P:System.Workflow.Activities.WorkflowServiceAttributes.Name" />
        <element api="P:System.Workflow.Activities.WorkflowServiceAttributes.Namespace" />
        <element api="P:System.Workflow.Activities.WorkflowServiceAttributes.UseSynchronizationContext" />
        <element api="P:System.Workflow.Activities.WorkflowServiceAttributes.ValidateMustUnderstand" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowServiceAttributes" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.WorkflowServiceAttributes">
      <topicdata name="WorkflowServiceAttributes" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.WorkflowServiceAttributes" />
      <apidata name="WorkflowServiceAttributes" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WorkflowServiceAttributes.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowServiceAttributes" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WorkflowServiceAttributes.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowServiceAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode">
      <topicdata group="api" />
      <apidata name="AddressFilterMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AddressFilterMode" />
      <setter name="set_AddressFilterMode" />
      <returns>
        <type api="T:System.ServiceModel.AddressFilterMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowServiceAttributes" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.AddressFilterMode" ref="false" />
            <enumValue>
              <field name="Exact" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName">
      <topicdata group="api" />
      <apidata name="ConfigurationName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConfigurationName" />
      <setter name="set_ConfigurationName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowServiceAttributes" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.WorkflowServiceAttributes.IgnoreExtensionDataObject">
      <topicdata group="api" />
      <apidata name="IgnoreExtensionDataObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IgnoreExtensionDataObject" />
      <setter name="set_IgnoreExtensionDataObject" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowServiceAttributes" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults">
      <topicdata group="api" />
      <apidata name="IncludeExceptionDetailInFaults" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IncludeExceptionDetailInFaults" />
      <setter name="set_IncludeExceptionDetailInFaults" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowServiceAttributes" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.WorkflowServiceAttributes.MaxItemsInObjectGraph">
      <topicdata group="api" />
      <apidata name="MaxItemsInObjectGraph" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxItemsInObjectGraph" />
      <setter name="set_MaxItemsInObjectGraph" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowServiceAttributes" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>65536</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.WorkflowServiceAttributes.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowServiceAttributes" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.WorkflowServiceAttributes.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowServiceAttributes" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.WorkflowServiceAttributes.UseSynchronizationContext">
      <topicdata group="api" />
      <apidata name="UseSynchronizationContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseSynchronizationContext" />
      <setter name="set_UseSynchronizationContext" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowServiceAttributes" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.Activities.WorkflowServiceAttributes.ValidateMustUnderstand">
      <topicdata group="api" />
      <apidata name="ValidateMustUnderstand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValidateMustUnderstand" />
      <setter name="set_ValidateMustUnderstand" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowServiceAttributes" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Workflow.Activities.WorkflowServiceAttributesDynamicPropertyValidator">
      <topicdata group="api" />
      <apidata name="WorkflowServiceAttributesDynamicPropertyValidator" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WorkflowServiceAttributesDynamicPropertyValidator.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Compiler.Validator" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.WorkflowServiceAttributesDynamicPropertyValidator.#ctor" />
        <element api="M:System.Workflow.Activities.WorkflowServiceAttributesDynamicPropertyValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperties(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.WorkflowServiceAttributesDynamicPropertyValidator">
      <topicdata name="WorkflowServiceAttributesDynamicPropertyValidator" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.WorkflowServiceAttributesDynamicPropertyValidator" />
      <apidata name="WorkflowServiceAttributesDynamicPropertyValidator" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.Activities.WorkflowServiceAttributesDynamicPropertyValidator.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.WorkflowServiceAttributesDynamicPropertyValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperties(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowServiceAttributesDynamicPropertyValidator" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WorkflowServiceAttributesDynamicPropertyValidator.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowServiceAttributesDynamicPropertyValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WorkflowServiceAttributesDynamicPropertyValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Compiler.Validator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
          <type api="T:System.Workflow.ComponentModel.Compiler.Validator" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="manager">
          <type api="T:System.Workflow.ComponentModel.Compiler.ValidationManager" ref="true" />
        </parameter>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowServiceAttributesDynamicPropertyValidator" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.WorkflowSubscriptionService">
      <topicdata group="api" />
      <apidata name="WorkflowSubscriptionService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.WorkflowSubscriptionService.#ctor" />
        <element api="M:System.Workflow.Activities.WorkflowSubscriptionService.CreateSubscription(System.Workflow.Activities.MessageEventSubscription)" />
        <element api="M:System.Workflow.Activities.WorkflowSubscriptionService.DeleteSubscription(System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.WorkflowSubscriptionService">
      <topicdata name="WorkflowSubscriptionService" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.WorkflowSubscriptionService" />
      <apidata name="WorkflowSubscriptionService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.WorkflowSubscriptionService.CreateSubscription(System.Workflow.Activities.MessageEventSubscription)" />
        <element api="M:System.Workflow.Activities.WorkflowSubscriptionService.DeleteSubscription(System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowSubscriptionService" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WorkflowSubscriptionService.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowSubscriptionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WorkflowSubscriptionService.CreateSubscription(System.Workflow.Activities.MessageEventSubscription)">
      <topicdata group="api" />
      <apidata name="CreateSubscription" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="subscription">
          <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowSubscriptionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WorkflowSubscriptionService.DeleteSubscription(System.Guid)">
      <topicdata group="api" />
      <apidata name="DeleteSubscription" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="subscriptionId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowSubscriptionService" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.Activities.WorkflowWebService">
      <topicdata group="api" />
      <apidata name="WorkflowWebService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Web.Services.WebService" ref="true" />
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="Overload:System.Workflow.Activities.WorkflowWebService.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.WorkflowWebService.#ctor(System.Type)" />
        <element api="M:System.Workflow.Activities.WorkflowWebService.Invoke(System.Type,System.String,System.Boolean,System.Object[])" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Site" />
        <element api="P:System.Web.Services.WebService.Application" />
        <element api="P:System.Web.Services.WebService.Context" />
        <element api="P:System.Web.Services.WebService.Server" />
        <element api="P:System.Web.Services.WebService.Session" />
        <element api="P:System.Web.Services.WebService.SoapVersion" />
        <element api="P:System.Web.Services.WebService.User" />
        <element api="P:System.Workflow.Activities.WorkflowWebService.WorkflowRuntime" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.Activities.WorkflowWebService">
      <topicdata name="WorkflowWebService" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.WorkflowWebService" />
      <apidata name="WorkflowWebService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.Workflow.Activities.WorkflowWebService.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.WorkflowWebService.Invoke(System.Type,System.String,System.Boolean,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowWebService" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.Activities.WorkflowWebService">
      <topicdata name="WorkflowWebService" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.WorkflowWebService" />
      <apidata name="WorkflowWebService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Site" />
        <element api="P:System.Web.Services.WebService.Application" />
        <element api="P:System.Web.Services.WebService.Context" />
        <element api="P:System.Web.Services.WebService.Server" />
        <element api="P:System.Web.Services.WebService.Session" />
        <element api="P:System.Web.Services.WebService.SoapVersion" />
        <element api="P:System.Web.Services.WebService.User" />
        <element api="P:System.Workflow.Activities.WorkflowWebService.WorkflowRuntime" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowWebService" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.Activities.WorkflowWebService">
      <topicdata name="WorkflowWebService" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.WorkflowWebService" />
      <apidata name="WorkflowWebService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowWebService" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WorkflowWebService.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="workflowType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowWebService" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.Activities.WorkflowWebService.Invoke(System.Type,System.String,System.Boolean,System.Object[])">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="interfaceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isActivation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowWebService" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.Activities.WorkflowWebService.WorkflowRuntime">
      <topicdata group="api" />
      <apidata name="WorkflowRuntime" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WorkflowRuntime" />
      <returns>
        <type api="T:System.Workflow.Runtime.WorkflowRuntime" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowWebService" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>