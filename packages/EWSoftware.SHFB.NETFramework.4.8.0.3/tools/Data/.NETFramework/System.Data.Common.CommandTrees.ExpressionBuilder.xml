<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Data.Entity">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Entity.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Entity.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Entity.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Data.Common.CommandTrees.ExpressionBuilder">
      <topicdata group="api" />
      <apidata name="System.Data.Common.CommandTrees.ExpressionBuilder" group="namespace" />
      <elements>
        <element api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" />
        <element api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" />
        <element api="T:System.Data.Common.CommandTrees.ExpressionBuilder.Row" />
      </elements>
    </api>
    <api id="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
      <topicdata group="api" />
      <apidata name="DbExpressionBuilder" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
        <element api="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False" />
        <element api="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
      <topicdata name="DbExpressionBuilder" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" />
      <apidata name="DbExpressionBuilder" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)" />
        </element>
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
      <topicdata name="DbExpressionBuilder" group="list" subgroup="Properties" typeTopicId="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" />
      <apidata name="DbExpressionBuilder" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False" />
        <element api="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All">
      <topicdata name="All" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="All" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any">
      <topicdata name="Any" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Any" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As">
      <topicdata name="As" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="As" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant">
      <topicdata name="Constant" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Constant" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef">
      <topicdata name="CreateRef" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateRef" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply">
      <topicdata name="CrossApply" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CrossApply" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin">
      <topicdata name="FullOuterJoin" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FullOuterJoin" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin">
      <topicdata name="InnerJoin" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="InnerJoin" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join">
      <topicdata name="Join" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Join" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda">
      <topicdata name="Lambda" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin">
      <topicdata name="LeftOuterJoin" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="LeftOuterJoin" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like">
      <topicdata name="Like" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Like" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate">
      <topicdata name="Navigate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Navigate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New">
      <topicdata name="New" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="New" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection">
      <topicdata name="NewCollection" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="NewCollection" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy">
      <topicdata name="OrderBy" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending">
      <topicdata name="OrderByDescending" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply">
      <topicdata name="OuterApply" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OuterApply" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property">
      <topicdata name="Property" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Property" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey">
      <topicdata name="RefFromKey" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RefFromKey" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany">
      <topicdata name="SelectMany" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SelectMany" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip">
      <topicdata name="Skip" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Skip" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy">
      <topicdata name="ThenBy" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ThenBy" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending">
      <topicdata name="ThenByDescending" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ThenByDescending" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause">
      <topicdata name="ToSortClause" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ToSortClause" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending">
      <topicdata name="ToSortClauseDescending" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ToSortClauseDescending" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Aggregate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Data.Metadata.Edm.EdmFunction" ref="true" />
        </parameter>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionAggregate" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="AggregateDistinct" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Data.Metadata.Edm.EdmFunction" ref="true" />
        </parameter>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionAggregate" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <topicdata group="api" />
      <apidata name="All" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbQuantifierExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="All" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbQuantifierExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="And" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbAndExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Any" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <topicdata group="api" />
      <apidata name="Any" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbQuantifierExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Any" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbQuantifierExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)">
      <topicdata group="api" />
      <apidata name="As" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Data.Common.CommandTrees.DbAggregate" ref="true" />
        </parameter>
        <parameter name="alias">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Data.Common.CommandTrees.DbAggregate" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)">
      <topicdata group="api" />
      <apidata name="As" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="alias">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Bind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)">
      <topicdata group="api" />
      <apidata name="BindAs" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="varName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Case" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="whenExpressions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="thenExpressions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="elseExpression">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbCaseExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
      <topicdata group="api" />
      <apidata name="CastTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="toType">
          <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbCastExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)">
      <topicdata group="api" />
      <apidata name="Constant" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constantType">
          <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbConstantExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)">
      <topicdata group="api" />
      <apidata name="Constant" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbConstantExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
      <topicdata group="api" />
      <apidata name="CreateRef" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entitySet">
          <type api="T:System.Data.Metadata.Edm.EntitySet" ref="true" />
        </parameter>
        <parameter name="keyValues">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbRefExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])">
      <topicdata group="api" />
      <apidata name="CreateRef" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entitySet">
          <type api="T:System.Data.Metadata.Edm.EntitySet" ref="true" />
        </parameter>
        <parameter name="keyValues" params="true">
          <arrayOf rank="1">
            <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbRefExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
      <topicdata group="api" />
      <apidata name="CreateRef" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entitySet">
          <type api="T:System.Data.Metadata.Edm.EntitySet" ref="true" />
        </parameter>
        <parameter name="entityType">
          <type api="T:System.Data.Metadata.Edm.EntityType" ref="true" />
        </parameter>
        <parameter name="keyValues">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbRefExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
      <topicdata group="api" />
      <apidata name="CreateRef" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entitySet">
          <type api="T:System.Data.Metadata.Edm.EntitySet" ref="true" />
        </parameter>
        <parameter name="entityType">
          <type api="T:System.Data.Metadata.Edm.EntityType" ref="true" />
        </parameter>
        <parameter name="keyValues" params="true">
          <arrayOf rank="1">
            <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbRefExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
      <topicdata group="api" />
      <apidata name="CrossApply" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="apply">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbApplyExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
      <topicdata group="api" />
      <apidata name="CrossApply" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
        </parameter>
        <parameter name="apply">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbApplyExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})">
      <topicdata group="api" />
      <apidata name="CrossJoin" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputs">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Deref" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbDerefExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Distinct" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbDistinctExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Divide" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbArithmeticExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Element" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbElementExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Equal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbComparisonExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Except" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExceptExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Exists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False">
      <topicdata group="api" />
      <apidata name="False" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_False" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbConstantExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Filter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFilterExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <topicdata group="api" />
      <apidata name="FullOuterJoin" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="joinCondition">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbJoinExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="FullOuterJoin" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
        </parameter>
        <parameter name="joinCondition">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbJoinExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="GetEntityRef" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbEntityRefExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="GetRefKey" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbRefKeyExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbComparisonExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbComparisonExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="GroupBind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="GroupBindAs" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="varName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="groupVarName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})">
      <topicdata group="api" />
      <apidata name="GroupBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" ref="true" />
        </parameter>
        <parameter name="keys">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="aggregates">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Data.Common.CommandTrees.DbAggregate" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbGroupByExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <topicdata group="api" />
      <apidata name="InnerJoin" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="joinCondition">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbJoinExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="InnerJoin" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
        </parameter>
        <parameter name="joinCondition">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbJoinExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Intersect" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbIntersectExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lambda">
          <type api="T:System.Data.Common.CommandTrees.DbLambda" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbLambdaExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lambda">
          <type api="T:System.Data.Common.CommandTrees.DbLambda" ref="true" />
        </parameter>
        <parameter name="arguments" params="true">
          <arrayOf rank="1">
            <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbLambdaExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Data.Metadata.Edm.EdmFunction" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Data.Metadata.Edm.EdmFunction" ref="true" />
        </parameter>
        <parameter name="arguments" params="true">
          <arrayOf rank="1">
            <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="IsEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="IsNull" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbIsNullExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
      <topicdata group="api" />
      <apidata name="IsOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbIsOfExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
      <topicdata group="api" />
      <apidata name="IsOfOnly" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbIsOfExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <topicdata group="api" />
      <apidata name="Join" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="outer">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="outerKey">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="innerKey">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbJoinExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
      <topicdata group="api" />
      <apidata name="Join" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSelector" />
      </templates>
      <parameters>
        <parameter name="outer">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="outerKey">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="innerKey">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <template name="TSelector" index="0" api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbProjectExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="variables">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbLambda" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="variables" params="true">
          <arrayOf rank="1">
            <type api="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbLambda" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <topicdata group="api" />
      <apidata name="LeftOuterJoin" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="joinCondition">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbJoinExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="LeftOuterJoin" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
        </parameter>
        <parameter name="joinCondition">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbJoinExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbComparisonExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbComparisonExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Like" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="pattern">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbLikeExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Like" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="pattern">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="escape">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbLikeExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Limit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbLimitExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Minus" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbArithmeticExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Modulo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbArithmeticExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Multiply" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbArithmeticExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
      <topicdata group="api" />
      <apidata name="Navigate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigateFrom">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="fromEnd">
          <type api="T:System.Data.Metadata.Edm.RelationshipEndMember" ref="true" />
        </parameter>
        <parameter name="toEnd">
          <type api="T:System.Data.Metadata.Edm.RelationshipEndMember" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Navigate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Data.Metadata.Edm.RelationshipType" ref="true" />
        </parameter>
        <parameter name="fromEndName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="toEndName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="navigateFrom">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Negate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbArithmeticExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
      <topicdata group="api" />
      <apidata name="New" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceType">
          <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
      <topicdata group="api" />
      <apidata name="New" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceType">
          <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
        </parameter>
        <parameter name="arguments" params="true">
          <arrayOf rank="1">
            <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
      <topicdata group="api" />
      <apidata name="NewCollection" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="elements">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])">
      <topicdata group="api" />
      <apidata name="NewCollection" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="elements" params="true">
          <arrayOf rank="1">
            <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)">
      <topicdata group="api" />
      <apidata name="NewEmptyCollection" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collectionType">
          <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
      <topicdata group="api" />
      <apidata name="NewRow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnValues">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Not" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbNotExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="NotEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbComparisonExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)">
      <topicdata group="api" />
      <apidata name="Null" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="nullType">
          <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbNullExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
      <topicdata group="api" />
      <apidata name="OfType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbOfTypeExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
      <topicdata group="api" />
      <apidata name="OfTypeOnly" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbOfTypeExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Or" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbOrExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <topicdata group="api" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="sortKey">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
      <topicdata group="api" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="sortKey">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="collation">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <topicdata group="api" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="sortKey">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
      <topicdata group="api" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="sortKey">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="collation">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
      <topicdata group="api" />
      <apidata name="OuterApply" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="apply">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbApplyExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
      <topicdata group="api" />
      <apidata name="OuterApply" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
        </parameter>
        <parameter name="apply">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbApplyExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)">
      <topicdata group="api" />
      <apidata name="Parameter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Plus" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbArithmeticExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Project" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
        </parameter>
        <parameter name="projection">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbProjectExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="propertyMetadata">
          <type api="T:System.Data.Metadata.Edm.EdmProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbPropertyExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="navigationProperty">
          <type api="T:System.Data.Metadata.Edm.NavigationProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbPropertyExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="relationshipEnd">
          <type api="T:System.Data.Metadata.Edm.RelationshipEndMember" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbPropertyExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbPropertyExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="RefFromKey" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entitySet">
          <type api="T:System.Data.Metadata.Edm.EntitySet" ref="true" />
        </parameter>
        <parameter name="keyRow">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbRefExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
      <topicdata group="api" />
      <apidata name="RefFromKey" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entitySet">
          <type api="T:System.Data.Metadata.Edm.EntitySet" ref="true" />
        </parameter>
        <parameter name="keyRow">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="entityType">
          <type api="T:System.Data.Metadata.Edm.EntityType" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbRefExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)">
      <topicdata group="api" />
      <apidata name="Scan" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetSet">
          <type api="T:System.Data.Metadata.Edm.EntitySetBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbScanExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
      <topicdata group="api" />
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TProjection" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="projection">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <template name="TProjection" index="0" api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbProjectExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <topicdata group="api" />
      <apidata name="SelectMany" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="apply">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbProjectExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
      <topicdata group="api" />
      <apidata name="SelectMany" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSelector" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="apply">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <template name="TSelector" index="0" api="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbProjectExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Skip" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
        </parameter>
        <parameter name="sortOrder">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbSortClause" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="count">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbSkipExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Skip" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbSkipExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})">
      <topicdata group="api" />
      <apidata name="Sort" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Data.Common.CommandTrees.DbExpressionBinding" ref="true" />
        </parameter>
        <parameter name="sortOrder">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbSortClause" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Take" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbLimitExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <topicdata group="api" />
      <apidata name="ThenBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
        </parameter>
        <parameter name="sortKey">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
      <topicdata group="api" />
      <apidata name="ThenBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
        </parameter>
        <parameter name="sortKey">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="collation">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <topicdata group="api" />
      <apidata name="ThenByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
        </parameter>
        <parameter name="sortKey">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
      <topicdata group="api" />
      <apidata name="ThenByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
        </parameter>
        <parameter name="sortKey">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="collation">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbSortExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="ToSortClause" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbSortClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)">
      <topicdata group="api" />
      <apidata name="ToSortClause" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="collation">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbSortClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="ToSortClauseDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbSortClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)">
      <topicdata group="api" />
      <apidata name="ToSortClauseDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="collation">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbSortClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
      <topicdata group="api" />
      <apidata name="TreatAs" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="treatType">
          <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbTreatExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True">
      <topicdata group="api" />
      <apidata name="True" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_True" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbConstantExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="UnaryMinus" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbArithmeticExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Union" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="UnionAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbUnionAllExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)">
      <topicdata group="api" />
      <apidata name="Variable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Data.Metadata.Edm.TypeUsage" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <topicdata group="api" />
      <apidata name="Where" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFilterExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions">
      <topicdata group="api" />
      <apidata name="EdmFunctions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions">
      <topicdata name="EdmFunctions" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" />
      <apidata name="EdmFunctions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round">
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)" />
          <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        </element>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" />
      </containers>
    </api>
    <api id="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round">
      <topicdata name="Round" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Round" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Abs" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="AddDays" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="addValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="AddHours" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="addValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="AddMicroseconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="addValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="AddMilliseconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="addValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="AddMinutes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="addValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="AddMonths" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="addValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="AddNanoseconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="addValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="AddSeconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="addValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="AddYears" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="addValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="BitwiseAnd" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="value2">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="BitwiseNot" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="BitwiseOr" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="value2">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="BitwiseXor" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value1">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="value2">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Ceiling" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Concat" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="string1">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="string2">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="searchedString">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="searchedForString">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="CreateDateTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="year">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="month">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="day">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="hour">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="minute">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="second">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="CreateDateTimeOffset" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="year">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="month">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="day">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="hour">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="minute">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="second">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="timeZoneOffset">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="CreateTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="hour">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="minute">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="second">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime">
      <topicdata group="api" />
      <apidata name="CurrentDateTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset">
      <topicdata group="api" />
      <apidata name="CurrentDateTimeOffset" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime">
      <topicdata group="api" />
      <apidata name="CurrentUtcDateTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Day" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="DayOfYear" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="DiffDays" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateValue1">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="dateValue2">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="DiffHours" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeValue1">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="timeValue2">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="DiffMicroseconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeValue1">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="timeValue2">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="DiffMilliseconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeValue1">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="timeValue2">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="DiffMinutes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeValue1">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="timeValue2">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="DiffMonths" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateValue1">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="dateValue2">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="DiffNanoseconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeValue1">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="timeValue2">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="DiffSeconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeValue1">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="timeValue2">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="DiffYears" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateValue1">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="dateValue2">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="EndsWith" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stringArgument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="suffix">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Floor" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="GetTotalOffsetMinutes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTimeOffsetArgument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Hour" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="searchString">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="stringToFind">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stringArgument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Length" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stringArgument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="LongCount" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Millisecond" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Minute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Month" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid">
      <topicdata group="api" />
      <apidata name="NewGuid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Power" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="baseArgument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="exponent">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Replace" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stringArgument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="toReplace">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="replacement">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Reverse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stringArgument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stringArgument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Round" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Round" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="digits">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Second" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="StartsWith" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stringArgument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="prefix">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="StDev" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="StDevP" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Substring" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stringArgument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="start">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="ToLower" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stringArgument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="ToUpper" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stringArgument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Trim" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stringArgument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="TrimEnd" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stringArgument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="TrimStart" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stringArgument">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Truncate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
        <parameter name="digits">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="TruncateTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Var" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="VarP" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)">
      <topicdata group="api" />
      <apidata name="Year" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateValue">
          <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbFunctionExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Data.Common.CommandTrees.ExpressionBuilder.Row">
      <topicdata group="api" />
      <apidata name="Row" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row)~System.Data.Common.CommandTrees.DbExpression" />
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Common.CommandTrees.ExpressionBuilder.Row">
      <topicdata name="Row" group="list" subgroup="Methods" typeTopicId="T:System.Data.Common.CommandTrees.ExpressionBuilder.Row" />
      <apidata name="Row" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.Row" />
      </containers>
    </api>
    <api id="Operators.T:System.Data.Common.CommandTrees.ExpressionBuilder.Row">
      <topicdata name="Row" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Data.Common.CommandTrees.ExpressionBuilder.Row" />
      <apidata name="Row" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row)~System.Data.Common.CommandTrees.DbExpression" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.Row" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="columnValue">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="columnValues" params="true">
          <arrayOf rank="1">
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.Row" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row)~System.Data.Common.CommandTrees.DbExpression">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.Row" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.Row" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression">
      <topicdata group="api" />
      <apidata name="ToExpression" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Common.CommandTrees.ExpressionBuilder" />
        <type api="T:System.Data.Common.CommandTrees.ExpressionBuilder.Row" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>