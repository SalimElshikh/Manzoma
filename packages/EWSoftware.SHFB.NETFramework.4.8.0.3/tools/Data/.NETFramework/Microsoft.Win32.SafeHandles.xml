<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="mscorlib">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>BED7F4EA-1A96-11d2-8F08-00A0C9A6186D</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>mscorlib.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>mscorlib.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>mscorlib.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.Core">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Microsoft.Win32.SafeHandles">
      <topicdata group="api" />
      <apidata name="Microsoft.Win32.SafeHandles" group="namespace" />
      <elements>
        <element api="T:Microsoft.Win32.SafeHandles.SafeFileHandle" />
        <element api="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle" />
        <element api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" />
        <element api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
        <element api="T:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid" />
        <element api="T:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid" />
        <element api="T:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid" />
        <element api="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />
        <element api="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" />
        <element api="T:Microsoft.Win32.SafeHandles.SafeX509ChainHandle" />
        <element api="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />
        <element api="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" />
        <element api="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle" />
        <element api="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" />
        <element api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" />
        <element api="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle" />
        <element api="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle" />
      </elements>
    </api>
    <api id="T:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid">
      <topicdata group="api" />
      <apidata name="CriticalHandleMinusOneIsInvalid" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Runtime.InteropServices.CriticalHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Runtime.InteropServices.CriticalHandle.handle" />
        <element api="M:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.CriticalHandle.Close" />
        <element api="Overload:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.Dispose">
          <element api="M:System.Runtime.InteropServices.CriticalHandle.Dispose" />
          <element api="M:System.Runtime.InteropServices.CriticalHandle.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Runtime.InteropServices.CriticalHandle.Finalize" />
        <element api="M:System.Runtime.InteropServices.CriticalHandle.ReleaseHandle" />
        <element api="M:System.Runtime.InteropServices.CriticalHandle.SetHandle(System.IntPtr)" />
        <element api="M:System.Runtime.InteropServices.CriticalHandle.SetHandleAsInvalid" />
        <element api="P:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.CriticalHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid">
      <topicdata name="CriticalHandleMinusOneIsInvalid" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid" />
      <apidata name="CriticalHandleMinusOneIsInvalid" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.CriticalHandle.Close" />
        <element api="Overload:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.Dispose">
          <element api="M:System.Runtime.InteropServices.CriticalHandle.Dispose" />
          <element api="M:System.Runtime.InteropServices.CriticalHandle.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Runtime.InteropServices.CriticalHandle.Finalize" />
        <element api="M:System.Runtime.InteropServices.CriticalHandle.ReleaseHandle" />
        <element api="M:System.Runtime.InteropServices.CriticalHandle.SetHandle(System.IntPtr)" />
        <element api="M:System.Runtime.InteropServices.CriticalHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid">
      <topicdata name="CriticalHandleMinusOneIsInvalid" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid" />
      <apidata name="CriticalHandleMinusOneIsInvalid" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.CriticalHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid" />
      </containers>
    </api>
    <api id="Fields.T:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid">
      <topicdata name="CriticalHandleMinusOneIsInvalid" group="list" subgroup="Fields" typeTopicId="T:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid" />
      <apidata name="CriticalHandleMinusOneIsInvalid" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:System.Runtime.InteropServices.CriticalHandle.handle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid" />
      </containers>
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.IsInvalid">
      <topicdata group="api" />
      <apidata name="IsInvalid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Runtime.InteropServices.CriticalHandle.IsInvalid">
          <type api="T:System.Runtime.InteropServices.CriticalHandle" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsInvalid">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid">
      <topicdata group="api" />
      <apidata name="CriticalHandleZeroOrMinusOneIsInvalid" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Runtime.InteropServices.CriticalHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Runtime.InteropServices.CriticalHandle.handle" />
        <element api="M:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.CriticalHandle.Close" />
        <element api="Overload:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.Dispose">
          <element api="M:System.Runtime.InteropServices.CriticalHandle.Dispose" />
          <element api="M:System.Runtime.InteropServices.CriticalHandle.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Runtime.InteropServices.CriticalHandle.Finalize" />
        <element api="M:System.Runtime.InteropServices.CriticalHandle.ReleaseHandle" />
        <element api="M:System.Runtime.InteropServices.CriticalHandle.SetHandle(System.IntPtr)" />
        <element api="M:System.Runtime.InteropServices.CriticalHandle.SetHandleAsInvalid" />
        <element api="P:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.CriticalHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid">
      <topicdata name="CriticalHandleZeroOrMinusOneIsInvalid" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid" />
      <apidata name="CriticalHandleZeroOrMinusOneIsInvalid" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.CriticalHandle.Close" />
        <element api="Overload:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.Dispose">
          <element api="M:System.Runtime.InteropServices.CriticalHandle.Dispose" />
          <element api="M:System.Runtime.InteropServices.CriticalHandle.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Runtime.InteropServices.CriticalHandle.Finalize" />
        <element api="M:System.Runtime.InteropServices.CriticalHandle.ReleaseHandle" />
        <element api="M:System.Runtime.InteropServices.CriticalHandle.SetHandle(System.IntPtr)" />
        <element api="M:System.Runtime.InteropServices.CriticalHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid">
      <topicdata name="CriticalHandleZeroOrMinusOneIsInvalid" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid" />
      <apidata name="CriticalHandleZeroOrMinusOneIsInvalid" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.CriticalHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid" />
      </containers>
    </api>
    <api id="Fields.T:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid">
      <topicdata name="CriticalHandleZeroOrMinusOneIsInvalid" group="list" subgroup="Fields" typeTopicId="T:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid" />
      <apidata name="CriticalHandleZeroOrMinusOneIsInvalid" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:System.Runtime.InteropServices.CriticalHandle.handle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid" />
      </containers>
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid">
      <topicdata group="api" />
      <apidata name="IsInvalid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Runtime.InteropServices.CriticalHandle.IsInvalid">
          <type api="T:System.Runtime.InteropServices.CriticalHandle" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsInvalid">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle">
      <topicdata group="api" />
      <apidata name="SafeAccessTokenHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.#ctor(System.IntPtr)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
        <element api="P:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.InvalidHandle" />
        <element api="P:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle">
      <topicdata name="SafeAccessTokenHandle" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />
      <apidata name="SafeAccessTokenHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle">
      <topicdata name="SafeAccessTokenHandle" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />
      <apidata name="SafeAccessTokenHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.InvalidHandle" />
        <element api="P:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />
      </containers>
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.#ctor(System.IntPtr)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="handle">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.InvalidHandle">
      <topicdata group="api" />
      <apidata name="InvalidHandle" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InvalidHandle">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.IsInvalid">
      <topicdata group="api" />
      <apidata name="IsInvalid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Runtime.InteropServices.SafeHandle.IsInvalid">
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsInvalid">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Win32.SafeHandles.SafeFileHandle">
      <topicdata group="api" />
      <apidata name="SafeFileHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" ref="true" />
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.Win32.SafeHandles.SafeFileHandle.#ctor(System.IntPtr,System.Boolean)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Microsoft.Win32.SafeHandles.SafeFileHandle">
      <topicdata name="SafeFileHandle" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeFileHandle" />
      <apidata name="SafeFileHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeFileHandle" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Win32.SafeHandles.SafeFileHandle">
      <topicdata name="SafeFileHandle" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeFileHandle" />
      <apidata name="SafeFileHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeFileHandle" />
      </containers>
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafeFileHandle.#ctor(System.IntPtr,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="preexistingHandle">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="ownsHandle">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeFileHandle" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid">
      <topicdata group="api" />
      <apidata name="SafeHandleMinusOneIsInvalid" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Runtime.InteropServices.SafeHandle.handle" />
        <element api="M:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.#ctor(System.Boolean)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="Overload:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.Dispose">
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Runtime.InteropServices.SafeHandle.Finalize" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.ReleaseHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid">
      <topicdata name="SafeHandleMinusOneIsInvalid" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid" />
      <apidata name="SafeHandleMinusOneIsInvalid" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="Overload:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.Dispose">
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Runtime.InteropServices.SafeHandle.Finalize" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.ReleaseHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid">
      <topicdata name="SafeHandleMinusOneIsInvalid" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid" />
      <apidata name="SafeHandleMinusOneIsInvalid" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid" />
      </containers>
    </api>
    <api id="Fields.T:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid">
      <topicdata name="SafeHandleMinusOneIsInvalid" group="list" subgroup="Fields" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid" />
      <apidata name="SafeHandleMinusOneIsInvalid" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:System.Runtime.InteropServices.SafeHandle.handle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid" />
      </containers>
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="ownsHandle">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid">
      <topicdata group="api" />
      <apidata name="IsInvalid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Runtime.InteropServices.SafeHandle.IsInvalid">
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsInvalid">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
      <topicdata group="api" />
      <apidata name="SafeHandleZeroOrMinusOneIsInvalid" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.Win32.SafeHandles.SafeFileHandle" ref="true" />
          <type api="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle" ref="true" />
          <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
          <type api="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" ref="true" />
          <type api="T:Microsoft.Win32.SafeHandles.SafeX509ChainHandle" ref="true" />
          <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" ref="true" />
          <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" ref="true" />
          <type api="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle" ref="true" />
          <type api="T:System.Runtime.InteropServices.SafeBuffer" ref="true" />
          <type api="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="F:System.Runtime.InteropServices.SafeHandle.handle" />
        <element api="M:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.#ctor(System.Boolean)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="Overload:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.Dispose">
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Runtime.InteropServices.SafeHandle.Finalize" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.ReleaseHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
      <topicdata name="SafeHandleZeroOrMinusOneIsInvalid" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
      <apidata name="SafeHandleZeroOrMinusOneIsInvalid" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="Overload:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.Dispose">
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Runtime.InteropServices.SafeHandle.Finalize" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.ReleaseHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
      <topicdata name="SafeHandleZeroOrMinusOneIsInvalid" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
      <apidata name="SafeHandleZeroOrMinusOneIsInvalid" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
      </containers>
    </api>
    <api id="Fields.T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
      <topicdata name="SafeHandleZeroOrMinusOneIsInvalid" group="list" subgroup="Fields" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
      <apidata name="SafeHandleZeroOrMinusOneIsInvalid" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:System.Runtime.InteropServices.SafeHandle.handle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
      </containers>
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="ownsHandle">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid">
      <topicdata group="api" />
      <apidata name="IsInvalid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Runtime.InteropServices.SafeHandle.IsInvalid">
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsInvalid">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle">
      <topicdata group="api" />
      <apidata name="SafeMemoryMappedFileHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" ref="true" />
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.SecurityCriticalScope" ref="false" />
            <enumValue>
              <field name="Everything" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle">
      <topicdata name="SafeMemoryMappedFileHandle" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle" />
      <apidata name="SafeMemoryMappedFileHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle">
      <topicdata name="SafeMemoryMappedFileHandle" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle" />
      <apidata name="SafeMemoryMappedFileHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle" />
      </containers>
    </api>
    <api id="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle">
      <topicdata group="api" />
      <apidata name="SafeMemoryMappedViewHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Runtime.InteropServices.SafeBuffer" ref="true" />
          <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" ref="true" />
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)" />
        <element api="Overload:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.Initialize">
          <element api="M:System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)" />
          <element api="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)" />
          <element api="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)" />
        </element>
        <element api="M:System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)" />
        <element api="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)" />
        <element api="M:System.Runtime.InteropServices.SafeBuffer.ReleasePointer" />
        <element api="M:System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)" />
        <element api="M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeBuffer.ByteLength" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.SecurityCriticalScope" ref="false" />
            <enumValue>
              <field name="Everything" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle">
      <topicdata name="SafeMemoryMappedViewHandle" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle" />
      <apidata name="SafeMemoryMappedViewHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)" />
        <element api="Overload:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.Initialize">
          <element api="M:System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)" />
          <element api="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)" />
          <element api="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)" />
        </element>
        <element api="M:System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)" />
        <element api="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)" />
        <element api="M:System.Runtime.InteropServices.SafeBuffer.ReleasePointer" />
        <element api="M:System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)" />
        <element api="M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle">
      <topicdata name="SafeMemoryMappedViewHandle" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle" />
      <apidata name="SafeMemoryMappedViewHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeBuffer.ByteLength" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle" />
      </containers>
    </api>
    <api id="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle">
      <topicdata group="api" />
      <apidata name="SafeNCryptHandle" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" ref="true" />
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" ref="true" />
          <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle" ref="true" />
          <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="F:System.Runtime.InteropServices.SafeHandle.handle" />
        <element api="Overload:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor">
          <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor" />
          <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor(System.IntPtr,System.Runtime.InteropServices.SafeHandle)" />
        </element>
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle" />
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="Overload:Microsoft.Win32.SafeHandles.SafeNCryptHandle.Dispose">
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Runtime.InteropServices.SafeHandle.Finalize" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.SecurityCriticalScope" ref="false" />
            <enumValue>
              <field name="Everything" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Microsoft.Win32.SafeHandles.SafeNCryptHandle">
      <topicdata name="SafeNCryptHandle" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />
      <apidata name="SafeNCryptHandle" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle" />
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="Overload:Microsoft.Win32.SafeHandles.SafeNCryptHandle.Dispose">
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Runtime.InteropServices.SafeHandle.Finalize" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Win32.SafeHandles.SafeNCryptHandle">
      <topicdata name="SafeNCryptHandle" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />
      <apidata name="SafeNCryptHandle" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />
      </containers>
    </api>
    <api id="Fields.T:Microsoft.Win32.SafeHandles.SafeNCryptHandle">
      <topicdata name="SafeNCryptHandle" group="list" subgroup="Fields" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />
      <apidata name="SafeNCryptHandle" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:System.Runtime.InteropServices.SafeHandle.handle" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor" />
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor(System.IntPtr,System.Runtime.InteropServices.SafeHandle)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor(System.IntPtr,System.Runtime.InteropServices.SafeHandle)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor" />
      <parameters>
        <parameter name="handle">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="parentHandle">
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle">
      <topicdata group="api" />
      <apidata name="ReleaseHandle" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Runtime.InteropServices.SafeHandle.ReleaseHandle">
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle">
      <topicdata group="api" />
      <apidata name="ReleaseNativeHandle" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle">
      <topicdata group="api" />
      <apidata name="SafeNCryptKeyHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor" />
      <family>
        <ancestors>
          <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" ref="true" />
          <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" ref="true" />
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor">
          <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor" />
          <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor(System.IntPtr,System.Runtime.InteropServices.SafeHandle)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.SecurityCriticalScope" ref="false" />
            <enumValue>
              <field name="Everything" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle">
      <topicdata name="SafeNCryptKeyHandle" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" />
      <apidata name="SafeNCryptKeyHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle">
      <topicdata name="SafeNCryptKeyHandle" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" />
      <apidata name="SafeNCryptKeyHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor" />
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor(System.IntPtr,System.Runtime.InteropServices.SafeHandle)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor(System.IntPtr,System.Runtime.InteropServices.SafeHandle)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor" />
      <parameters>
        <parameter name="handle">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="parentHandle">
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle">
      <topicdata group="api" />
      <apidata name="SafeNCryptProviderHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.#ctor" />
      <family>
        <ancestors>
          <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" ref="true" />
          <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" ref="true" />
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.SecurityCriticalScope" ref="false" />
            <enumValue>
              <field name="Everything" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle">
      <topicdata name="SafeNCryptProviderHandle" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle" />
      <apidata name="SafeNCryptProviderHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle">
      <topicdata name="SafeNCryptProviderHandle" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle" />
      <apidata name="SafeNCryptProviderHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.#ctor" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle" />
      </containers>
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle">
      <topicdata group="api" />
      <apidata name="SafeNCryptSecretHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor" />
      <family>
        <ancestors>
          <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" ref="true" />
          <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" ref="true" />
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.SecurityCriticalScope" ref="false" />
            <enumValue>
              <field name="Everything" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle">
      <topicdata name="SafeNCryptSecretHandle" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" />
      <apidata name="SafeNCryptSecretHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle">
      <topicdata name="SafeNCryptSecretHandle" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" />
      <apidata name="SafeNCryptSecretHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" />
      </containers>
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Win32.SafeHandles.SafePipeHandle">
      <topicdata group="api" />
      <apidata name="SafePipeHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" ref="true" />
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.Win32.SafeHandles.SafePipeHandle.#ctor(System.IntPtr,System.Boolean)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.SecurityCriticalScope" ref="false" />
            <enumValue>
              <field name="Everything" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Microsoft.Win32.SafeHandles.SafePipeHandle">
      <topicdata name="SafePipeHandle" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Win32.SafeHandles.SafePipeHandle" />
      <apidata name="SafePipeHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Win32.SafeHandles.SafePipeHandle">
      <topicdata name="SafePipeHandle" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Win32.SafeHandles.SafePipeHandle" />
      <apidata name="SafePipeHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" />
      </containers>
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafePipeHandle.#ctor(System.IntPtr,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="preexistingHandle">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="ownsHandle">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Win32.SafeHandles.SafeProcessHandle">
      <topicdata group="api" />
      <apidata name="SafeProcessHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" ref="true" />
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.Win32.SafeHandles.SafeProcessHandle.#ctor(System.IntPtr,System.Boolean)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Win32.SafeHandles.SafeProcessHandle">
      <topicdata name="SafeProcessHandle" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" />
      <apidata name="SafeProcessHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Win32.SafeHandles.SafeProcessHandle">
      <topicdata name="SafeProcessHandle" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" />
      <apidata name="SafeProcessHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" />
      </containers>
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafeProcessHandle.#ctor(System.IntPtr,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="existingHandle">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="ownsHandle">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle">
      <topicdata group="api" />
      <apidata name="SafeRegistryHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" ref="true" />
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.Win32.SafeHandles.SafeRegistryHandle.#ctor(System.IntPtr,System.Boolean)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Microsoft.Win32.SafeHandles.SafeRegistryHandle">
      <topicdata name="SafeRegistryHandle" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle" />
      <apidata name="SafeRegistryHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Win32.SafeHandles.SafeRegistryHandle">
      <topicdata name="SafeRegistryHandle" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle" />
      <apidata name="SafeRegistryHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle" />
      </containers>
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafeRegistryHandle.#ctor(System.IntPtr,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="preexistingHandle">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="ownsHandle">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Microsoft.Win32.SafeHandles.SafeWaitHandle">
      <topicdata group="api" />
      <apidata name="SafeWaitHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" ref="true" />
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.Win32.SafeHandles.SafeWaitHandle.#ctor(System.IntPtr,System.Boolean)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Microsoft.Win32.SafeHandles.SafeWaitHandle">
      <topicdata name="SafeWaitHandle" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" />
      <apidata name="SafeWaitHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Win32.SafeHandles.SafeWaitHandle">
      <topicdata name="SafeWaitHandle" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" />
      <apidata name="SafeWaitHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" />
      </containers>
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafeWaitHandle.#ctor(System.IntPtr,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="existingHandle">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="ownsHandle">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Win32.SafeHandles.SafeX509ChainHandle">
      <topicdata group="api" />
      <apidata name="SafeX509ChainHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" ref="true" />
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Microsoft.Win32.SafeHandles.SafeX509ChainHandle">
      <topicdata name="SafeX509ChainHandle" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeX509ChainHandle" />
      <apidata name="SafeX509ChainHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeX509ChainHandle" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Win32.SafeHandles.SafeX509ChainHandle">
      <topicdata name="SafeX509ChainHandle" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeX509ChainHandle" />
      <apidata name="SafeX509ChainHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeX509ChainHandle" />
      </containers>
    </api>
  </apis>
</reflection>