<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.ServiceModel.Discovery">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Discovery.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Discovery.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Discovery.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\35MSSharedLib1024.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c80000014010000060200000024000052534131000800000100010085aad0bef0688d1b994a0d78e1fd29fc24ac34ed3d3ac3fb9b3d0c48386ba834aa880035060a8848b2d8adf58e670ed20914be3681a891c9c8c01eef2ab22872547c39be00af0e6c72485d7cfd1a51df8947d36ceba9989106b58abe79e6a3e71a01ed6bdc867012883e0b1a4d35b1b5eeed6df21e401bb0c22f2246ccb69979dc9e61eef262832ed0f2064853725a75485fa8a3efb7e027319c86dec03dc3b1bca2b5081bab52a627b9917450dfad534799e1c7af58683bdfa135f1518ff1ea60e90d7b993a6c87fd3dd93408e35d1296f9a7f9a97c5db56c0f3cc25ad11e9777f94d138b3cea53b9a8331c2e6dcb8d2ea94e18bf1163ff112a22dbd92d429a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8913ef869646d14971df222c210018ab394cfe63f8eb9b4d894c0dda7368cfb69df15d049b347f8a8b9205cdcc3d6bd6690f0bd24b3da3179feb8c03f410703027c7844ff654997e38015dfc97222c15061af2a1d3fe91775b9dd4b8ede64d3d59816270a9520e393c8e60619b80d40fc1dc4f12b5aa0c2df20d02ea32960851</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ServiceModel.Discovery">
      <topicdata group="api" />
      <apidata name="System.ServiceModel.Discovery" group="namespace" />
      <elements>
        <element api="T:System.ServiceModel.Discovery.AnnouncementClient" />
        <element api="T:System.ServiceModel.Discovery.AnnouncementEndpoint" />
        <element api="T:System.ServiceModel.Discovery.AnnouncementEventArgs" />
        <element api="T:System.ServiceModel.Discovery.AnnouncementService" />
        <element api="T:System.ServiceModel.Discovery.DiscoveryClient" />
        <element api="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" />
        <element api="T:System.ServiceModel.Discovery.DiscoveryEndpoint" />
        <element api="T:System.ServiceModel.Discovery.DiscoveryEndpointProvider" />
        <element api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" />
        <element api="T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator" />
        <element api="T:System.ServiceModel.Discovery.DiscoveryOperationContextExtension" />
        <element api="T:System.ServiceModel.Discovery.DiscoveryProxy" />
        <element api="T:System.ServiceModel.Discovery.DiscoveryService" />
        <element api="T:System.ServiceModel.Discovery.DiscoveryServiceExtension" />
        <element api="T:System.ServiceModel.Discovery.DiscoveryVersion" />
        <element api="T:System.ServiceModel.Discovery.DynamicEndpoint" />
        <element api="T:System.ServiceModel.Discovery.EndpointDiscoveryBehavior" />
        <element api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" />
        <element api="T:System.ServiceModel.Discovery.FindCompletedEventArgs" />
        <element api="T:System.ServiceModel.Discovery.FindCriteria" />
        <element api="T:System.ServiceModel.Discovery.FindProgressChangedEventArgs" />
        <element api="T:System.ServiceModel.Discovery.FindRequestContext" />
        <element api="T:System.ServiceModel.Discovery.FindResponse" />
        <element api="T:System.ServiceModel.Discovery.ResolveCompletedEventArgs" />
        <element api="T:System.ServiceModel.Discovery.ResolveCriteria" />
        <element api="T:System.ServiceModel.Discovery.ResolveResponse" />
        <element api="T:System.ServiceModel.Discovery.ServiceDiscoveryBehavior" />
        <element api="T:System.ServiceModel.Discovery.ServiceDiscoveryMode" />
        <element api="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" />
        <element api="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" />
        <element api="T:System.ServiceModel.Discovery.UdpTransportSettings" />
      </elements>
    </api>
    <api id="T:System.ServiceModel.Discovery.AnnouncementClient">
      <topicdata group="api" />
      <apidata name="AnnouncementClient" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.AnnouncementClient.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineCompleted" />
        <element api="E:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineCompleted" />
        <element api="E:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Closed" />
        <element api="E:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Closing" />
        <element api="E:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Faulted" />
        <element api="E:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Opened" />
        <element api="E:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Opening" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.AnnouncementClient.#ctor">
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.#ctor" />
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.#ctor(System.ServiceModel.Discovery.AnnouncementEndpoint)" />
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.#ctor(System.String)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOffline(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
        <element api="Overload:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineAsync">
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineTaskAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnline(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
        <element api="Overload:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineAsync">
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineTaskAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.BeginAnnounceOffline(System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.BeginAnnounceOnline(System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.Close" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.EndAnnounceOffline(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.EndAnnounceOnline(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.Open" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#IDisposable#Dispose" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Abort" />
        <element api="Overload:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginClose">
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginOpen">
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Close">
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Close" />
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Open">
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Open" />
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
        </element>
        <element api="P:System.ServiceModel.Discovery.AnnouncementClient.ChannelFactory" />
        <element api="P:System.ServiceModel.Discovery.AnnouncementClient.ClientCredentials" />
        <element api="P:System.ServiceModel.Discovery.AnnouncementClient.Endpoint" />
        <element api="P:System.ServiceModel.Discovery.AnnouncementClient.InnerChannel" />
        <element api="P:System.ServiceModel.Discovery.AnnouncementClient.MessageSequenceGenerator" />
        <element api="P:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#State" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.AnnouncementClient">
      <topicdata name="AnnouncementClient" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.AnnouncementClient" />
      <apidata name="AnnouncementClient" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.AnnouncementClient.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOffline(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
        <element api="Overload:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineAsync">
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineTaskAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnline(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
        <element api="Overload:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineAsync">
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineTaskAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.BeginAnnounceOffline(System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.BeginAnnounceOnline(System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.Close" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.EndAnnounceOffline(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.EndAnnounceOnline(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.Open" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#IDisposable#Dispose" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Abort" />
        <element api="Overload:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginClose">
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginOpen">
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Close">
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Close" />
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Open">
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Open" />
          <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.AnnouncementClient">
      <topicdata name="AnnouncementClient" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.AnnouncementClient" />
      <apidata name="AnnouncementClient" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.AnnouncementClient.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Discovery.AnnouncementClient.ChannelFactory" />
        <element api="P:System.ServiceModel.Discovery.AnnouncementClient.ClientCredentials" />
        <element api="P:System.ServiceModel.Discovery.AnnouncementClient.Endpoint" />
        <element api="P:System.ServiceModel.Discovery.AnnouncementClient.InnerChannel" />
        <element api="P:System.ServiceModel.Discovery.AnnouncementClient.MessageSequenceGenerator" />
        <element api="P:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#State" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" />
      </containers>
    </api>
    <api id="Events.T:System.ServiceModel.Discovery.AnnouncementClient">
      <topicdata name="AnnouncementClient" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Discovery.AnnouncementClient" />
      <apidata name="AnnouncementClient" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.AnnouncementClient.#ctor" />
      <elements>
        <element api="E:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineCompleted" />
        <element api="E:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineCompleted" />
        <element api="E:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Closed" />
        <element api="E:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Closing" />
        <element api="E:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Faulted" />
        <element api="E:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Opened" />
        <element api="E:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.AnnouncementClient.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.#ctor" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.#ctor(System.ServiceModel.Discovery.AnnouncementEndpoint)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineAsync">
      <topicdata name="AnnounceOfflineAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AnnounceOfflineAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineAsync">
      <topicdata name="AnnounceOnlineAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AnnounceOnlineAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginClose">
      <topicdata name="BeginClose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginOpen">
      <topicdata name="BeginOpen" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Close">
      <topicdata name="Close" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Close" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Close" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Open">
      <topicdata name="Open" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Open" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Open" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.AnnouncementClient.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.#ctor(System.ServiceModel.Discovery.AnnouncementEndpoint)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.AnnouncementClient.#ctor" />
      <parameters>
        <parameter name="announcementEndpoint">
          <type api="T:System.ServiceModel.Discovery.AnnouncementEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.AnnouncementClient.#ctor" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOffline(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)">
      <topicdata group="api" />
      <apidata name="AnnounceOffline" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discoveryMetadata">
          <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)">
      <topicdata group="api" />
      <apidata name="AnnounceOfflineAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discoveryMetadata">
          <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.Object)">
      <topicdata group="api" />
      <apidata name="AnnounceOfflineAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discoveryMetadata">
          <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineCompleted">
      <topicdata group="api" />
      <apidata name="AnnounceOfflineCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AnnounceOfflineCompleted" />
      <remover name="remove_AnnounceOfflineCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOfflineTaskAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)">
      <topicdata group="api" />
      <apidata name="AnnounceOfflineTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discoveryMetadata">
          <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnline(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)">
      <topicdata group="api" />
      <apidata name="AnnounceOnline" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discoveryMetadata">
          <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)">
      <topicdata group="api" />
      <apidata name="AnnounceOnlineAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discoveryMetadata">
          <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.Object)">
      <topicdata group="api" />
      <apidata name="AnnounceOnlineAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discoveryMetadata">
          <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineCompleted">
      <topicdata group="api" />
      <apidata name="AnnounceOnlineCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AnnounceOnlineCompleted" />
      <remover name="remove_AnnounceOnlineCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.AnnounceOnlineTaskAsync(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)">
      <topicdata group="api" />
      <apidata name="AnnounceOnlineTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discoveryMetadata">
          <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.BeginAnnounceOffline(System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAnnounceOffline" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discoveryMetadata">
          <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.BeginAnnounceOnline(System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAnnounceOnline" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discoveryMetadata">
          <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.AnnouncementClient.ChannelFactory">
      <topicdata group="api" />
      <apidata name="ChannelFactory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChannelFactory" />
      <returns>
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.AnnouncementClient.ClientCredentials">
      <topicdata group="api" />
      <apidata name="ClientCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClientCredentials" />
      <returns>
        <type api="T:System.ServiceModel.Description.ClientCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.EndAnnounceOffline(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndAnnounceOffline" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.EndAnnounceOnline(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndAnnounceOnline" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.AnnouncementClient.Endpoint">
      <topicdata group="api" />
      <apidata name="Endpoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Endpoint" />
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.AnnouncementClient.InnerChannel">
      <topicdata group="api" />
      <apidata name="InnerChannel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InnerChannel" />
      <returns>
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.AnnouncementClient.MessageSequenceGenerator">
      <topicdata group="api" />
      <apidata name="MessageSequenceGenerator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MessageSequenceGenerator" />
      <setter name="set_MessageSequenceGenerator" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.Open">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.System#IDisposable#Dispose">
      <topicdata group="api" eiiName="IDisposable.Dispose" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Abort">
      <topicdata group="api" eiiName="ICommunicationObject.Abort" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Abort">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginClose" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginClose" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginClose" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginClose" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginOpen" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginOpen" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginOpen" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#BeginOpen" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Close">
      <topicdata group="api" eiiName="ICommunicationObject.Close" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Close" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Close">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <topicdata group="api" eiiName="ICommunicationObject.Close" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Close" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Closed">
      <topicdata group="api" eiiName="ICommunicationObject.Closed" />
      <apidata name="Closed" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Closed" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Closed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Closed">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Closing">
      <topicdata group="api" eiiName="ICommunicationObject.Closing" />
      <apidata name="Closing" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Closing" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Closing" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Closing">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <topicdata group="api" eiiName="ICommunicationObject.EndClose" />
      <apidata name="EndClose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <topicdata group="api" eiiName="ICommunicationObject.EndOpen" />
      <apidata name="EndOpen" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Faulted">
      <topicdata group="api" eiiName="ICommunicationObject.Faulted" />
      <apidata name="Faulted" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Faulted" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Faulted" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Faulted">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Open">
      <topicdata group="api" eiiName="ICommunicationObject.Open" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Open" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Open">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <topicdata group="api" eiiName="ICommunicationObject.Open" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Open" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Opened">
      <topicdata group="api" eiiName="ICommunicationObject.Opened" />
      <apidata name="Opened" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Opened" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Opened" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Opened">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#Opening">
      <topicdata group="api" eiiName="ICommunicationObject.Opening" />
      <apidata name="Opening" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Opening" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Opening" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Opening">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.AnnouncementClient.System#ServiceModel#ICommunicationObject#State">
      <topicdata group="api" eiiName="ICommunicationObject.State" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.ICommunicationObject.State" />
      <returns>
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.ICommunicationObject.State">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementClient" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.AnnouncementEndpoint">
      <topicdata group="api" />
      <apidata name="AnnouncementEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor">
          <element api="M:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor" />
          <element api="M:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion)" />
          <element api="M:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Address" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Binding" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Contract" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.IsSystemEndpoint" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUri" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUriMode" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Name" />
        <element api="P:System.ServiceModel.Discovery.AnnouncementEndpoint.DiscoveryVersion" />
        <element api="P:System.ServiceModel.Discovery.AnnouncementEndpoint.MaxAnnouncementDelay" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.AnnouncementEndpoint">
      <topicdata name="AnnouncementEndpoint" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.AnnouncementEndpoint" />
      <apidata name="AnnouncementEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementEndpoint" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.AnnouncementEndpoint">
      <topicdata name="AnnouncementEndpoint" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.AnnouncementEndpoint" />
      <apidata name="AnnouncementEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Address" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Binding" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Contract" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.IsSystemEndpoint" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUri" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUriMode" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Name" />
        <element api="P:System.ServiceModel.Discovery.AnnouncementEndpoint.DiscoveryVersion" />
        <element api="P:System.ServiceModel.Discovery.AnnouncementEndpoint.MaxAnnouncementDelay" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementEndpoint" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor" />
      <parameters>
        <parameter name="discoveryVersion">
          <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.AnnouncementEndpoint.#ctor" />
      <parameters>
        <parameter name="discoveryVersion">
          <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementEndpoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.AnnouncementEndpoint.DiscoveryVersion">
      <topicdata group="api" />
      <apidata name="DiscoveryVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DiscoveryVersion" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementEndpoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.AnnouncementEndpoint.MaxAnnouncementDelay">
      <topicdata group="api" />
      <apidata name="MaxAnnouncementDelay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxAnnouncementDelay" />
      <setter name="set_MaxAnnouncementDelay" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementEndpoint" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.AnnouncementEventArgs">
      <topicdata group="api" />
      <apidata name="AnnouncementEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Discovery.AnnouncementEventArgs.EndpointDiscoveryMetadata" />
        <element api="P:System.ServiceModel.Discovery.AnnouncementEventArgs.MessageSequence" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.AnnouncementEventArgs">
      <topicdata name="AnnouncementEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.AnnouncementEventArgs" />
      <apidata name="AnnouncementEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.AnnouncementEventArgs">
      <topicdata name="AnnouncementEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.AnnouncementEventArgs" />
      <apidata name="AnnouncementEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Discovery.AnnouncementEventArgs.EndpointDiscoveryMetadata" />
        <element api="P:System.ServiceModel.Discovery.AnnouncementEventArgs.MessageSequence" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementEventArgs" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.AnnouncementEventArgs.EndpointDiscoveryMetadata">
      <topicdata group="api" />
      <apidata name="EndpointDiscoveryMetadata" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EndpointDiscoveryMetadata" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.AnnouncementEventArgs.MessageSequence">
      <topicdata group="api" />
      <apidata name="MessageSequence" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MessageSequence" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.AnnouncementService">
      <topicdata group="api" />
      <apidata name="AnnouncementService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.AnnouncementService.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ServiceModel.Discovery.AnnouncementService.OfflineAnnouncementReceived" />
        <element api="E:System.ServiceModel.Discovery.AnnouncementService.OnlineAnnouncementReceived" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.AnnouncementService.#ctor">
          <element api="M:System.ServiceModel.Discovery.AnnouncementService.#ctor" />
          <element api="M:System.ServiceModel.Discovery.AnnouncementService.#ctor(System.Int32)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.AnnouncementService.OnBeginOfflineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementService.OnBeginOnlineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementService.OnEndOfflineAnnouncement(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementService.OnEndOnlineAnnouncement(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
          <assignment name="InstanceContextMode">
            <type api="T:System.ServiceModel.InstanceContextMode" ref="false" />
            <enumValue>
              <field name="Single" />
            </enumValue>
          </assignment>
          <assignment name="ConcurrencyMode">
            <type api="T:System.ServiceModel.ConcurrencyMode" ref="false" />
            <enumValue>
              <field name="Multiple" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.AnnouncementService">
      <topicdata name="AnnouncementService" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.AnnouncementService" />
      <apidata name="AnnouncementService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.AnnouncementService.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementService.OnBeginOfflineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementService.OnBeginOnlineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementService.OnEndOfflineAnnouncement(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementService.OnEndOnlineAnnouncement(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementService" />
      </containers>
    </api>
    <api id="Events.T:System.ServiceModel.Discovery.AnnouncementService">
      <topicdata name="AnnouncementService" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Discovery.AnnouncementService" />
      <apidata name="AnnouncementService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.AnnouncementService.#ctor" />
      <elements>
        <element api="E:System.ServiceModel.Discovery.AnnouncementService.OfflineAnnouncementReceived" />
        <element api="E:System.ServiceModel.Discovery.AnnouncementService.OnlineAnnouncementReceived" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementService" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.AnnouncementService.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.AnnouncementService.#ctor" />
        <element api="M:System.ServiceModel.Discovery.AnnouncementService.#ctor(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementService.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.AnnouncementService.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementService.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.AnnouncementService.#ctor" />
      <parameters>
        <parameter name="duplicateMessageHistoryLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementService" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Discovery.AnnouncementService.OfflineAnnouncementReceived">
      <topicdata group="api" />
      <apidata name="OfflineAnnouncementReceived" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_OfflineAnnouncementReceived" />
      <remover name="remove_OfflineAnnouncementReceived" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Discovery.AnnouncementEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ServiceModel.Discovery.AnnouncementEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementService.OnBeginOfflineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="OnBeginOfflineAnnouncement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="messageSequence">
          <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
        </parameter>
        <parameter name="endpointDiscoveryMetadata">
          <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementService.OnBeginOnlineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="OnBeginOnlineAnnouncement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="messageSequence">
          <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
        </parameter>
        <parameter name="endpointDiscoveryMetadata">
          <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementService.OnEndOfflineAnnouncement(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="OnEndOfflineAnnouncement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.AnnouncementService.OnEndOnlineAnnouncement(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="OnEndOnlineAnnouncement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementService" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Discovery.AnnouncementService.OnlineAnnouncementReceived">
      <topicdata group="api" />
      <apidata name="OnlineAnnouncementReceived" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_OnlineAnnouncementReceived" />
      <remover name="remove_OnlineAnnouncementReceived" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Discovery.AnnouncementEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ServiceModel.Discovery.AnnouncementEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.AnnouncementService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.DiscoveryClient">
      <topicdata group="api" />
      <apidata name="DiscoveryClient" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.DiscoveryClient.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.ServiceModel.Discovery.DiscoveryClient.FindCompleted" />
        <element api="E:System.ServiceModel.Discovery.DiscoveryClient.FindProgressChanged" />
        <element api="E:System.ServiceModel.Discovery.DiscoveryClient.ProxyAvailable" />
        <element api="E:System.ServiceModel.Discovery.DiscoveryClient.ResolveCompleted" />
        <element api="E:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Closed" />
        <element api="E:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Closing" />
        <element api="E:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Faulted" />
        <element api="E:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Opened" />
        <element api="E:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Opening" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryClient.#ctor">
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.#ctor" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.#ctor(System.ServiceModel.Discovery.DiscoveryEndpoint)" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.#ctor(System.String)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.CancelAsync(System.Object)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.Close" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.Find(System.ServiceModel.Discovery.FindCriteria)" />
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryClient.FindAsync">
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.FindAsync(System.ServiceModel.Discovery.FindCriteria)" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.FindAsync(System.ServiceModel.Discovery.FindCriteria,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync">
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync(System.ServiceModel.Discovery.FindCriteria)" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync(System.ServiceModel.Discovery.FindCriteria,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.Open" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.Resolve(System.ServiceModel.Discovery.ResolveCriteria)" />
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync">
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync(System.ServiceModel.Discovery.ResolveCriteria)" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync(System.ServiceModel.Discovery.ResolveCriteria,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync">
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync(System.ServiceModel.Discovery.ResolveCriteria)" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync(System.ServiceModel.Discovery.ResolveCriteria,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#IDisposable#Dispose" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Abort" />
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose">
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen">
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close">
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open">
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
        </element>
        <element api="P:System.ServiceModel.Discovery.DiscoveryClient.ChannelFactory" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryClient.ClientCredentials" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryClient.Endpoint" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryClient.InnerChannel" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#State" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.DiscoveryClient">
      <topicdata name="DiscoveryClient" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.DiscoveryClient" />
      <apidata name="DiscoveryClient" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.DiscoveryClient.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.CancelAsync(System.Object)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.Close" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.Find(System.ServiceModel.Discovery.FindCriteria)" />
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryClient.FindAsync">
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.FindAsync(System.ServiceModel.Discovery.FindCriteria)" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.FindAsync(System.ServiceModel.Discovery.FindCriteria,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync">
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync(System.ServiceModel.Discovery.FindCriteria)" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync(System.ServiceModel.Discovery.FindCriteria,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.Open" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.Resolve(System.ServiceModel.Discovery.ResolveCriteria)" />
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync">
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync(System.ServiceModel.Discovery.ResolveCriteria)" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync(System.ServiceModel.Discovery.ResolveCriteria,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync">
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync(System.ServiceModel.Discovery.ResolveCriteria)" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync(System.ServiceModel.Discovery.ResolveCriteria,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#IDisposable#Dispose" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Abort" />
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose">
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen">
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close">
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open">
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.DiscoveryClient">
      <topicdata name="DiscoveryClient" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.DiscoveryClient" />
      <apidata name="DiscoveryClient" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.DiscoveryClient.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Discovery.DiscoveryClient.ChannelFactory" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryClient.ClientCredentials" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryClient.Endpoint" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryClient.InnerChannel" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#State" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" />
      </containers>
    </api>
    <api id="Events.T:System.ServiceModel.Discovery.DiscoveryClient">
      <topicdata name="DiscoveryClient" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Discovery.DiscoveryClient" />
      <apidata name="DiscoveryClient" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.DiscoveryClient.#ctor" />
      <elements>
        <element api="E:System.ServiceModel.Discovery.DiscoveryClient.FindCompleted" />
        <element api="E:System.ServiceModel.Discovery.DiscoveryClient.FindProgressChanged" />
        <element api="E:System.ServiceModel.Discovery.DiscoveryClient.ProxyAvailable" />
        <element api="E:System.ServiceModel.Discovery.DiscoveryClient.ResolveCompleted" />
        <element api="E:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Closed" />
        <element api="E:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Closing" />
        <element api="E:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Faulted" />
        <element api="E:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Opened" />
        <element api="E:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.DiscoveryClient.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.#ctor" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.#ctor(System.ServiceModel.Discovery.DiscoveryEndpoint)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.DiscoveryClient.FindAsync">
      <topicdata name="FindAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.FindAsync(System.ServiceModel.Discovery.FindCriteria)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.FindAsync(System.ServiceModel.Discovery.FindCriteria,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync">
      <topicdata name="FindTaskAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindTaskAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync(System.ServiceModel.Discovery.FindCriteria)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync(System.ServiceModel.Discovery.FindCriteria,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync">
      <topicdata name="ResolveAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ResolveAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync(System.ServiceModel.Discovery.ResolveCriteria)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync(System.ServiceModel.Discovery.ResolveCriteria,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync">
      <topicdata name="ResolveTaskAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ResolveTaskAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync(System.ServiceModel.Discovery.ResolveCriteria)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync(System.ServiceModel.Discovery.ResolveCriteria,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose">
      <topicdata name="BeginClose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen">
      <topicdata name="BeginOpen" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close">
      <topicdata name="Close" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Close" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open">
      <topicdata name="Open" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Open" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.DiscoveryClient.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.#ctor(System.ServiceModel.Discovery.DiscoveryEndpoint)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.DiscoveryClient.#ctor" />
      <parameters>
        <parameter name="discoveryEndpoint">
          <type api="T:System.ServiceModel.Discovery.DiscoveryEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.DiscoveryClient.#ctor" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.CancelAsync(System.Object)">
      <topicdata group="api" />
      <apidata name="CancelAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryClient.ChannelFactory">
      <topicdata group="api" />
      <apidata name="ChannelFactory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChannelFactory" />
      <returns>
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryClient.ClientCredentials">
      <topicdata group="api" />
      <apidata name="ClientCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClientCredentials" />
      <returns>
        <type api="T:System.ServiceModel.Description.ClientCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryClient.Endpoint">
      <topicdata group="api" />
      <apidata name="Endpoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Endpoint" />
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.Find(System.ServiceModel.Discovery.FindCriteria)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="criteria">
          <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Discovery.FindResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.FindAsync(System.ServiceModel.Discovery.FindCriteria)">
      <topicdata group="api" />
      <apidata name="FindAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Discovery.DiscoveryClient.FindAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="criteria">
          <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.FindAsync(System.ServiceModel.Discovery.FindCriteria,System.Object)">
      <topicdata group="api" />
      <apidata name="FindAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Discovery.DiscoveryClient.FindAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="criteria">
          <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Discovery.DiscoveryClient.FindCompleted">
      <topicdata group="api" />
      <apidata name="FindCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_FindCompleted" />
      <remover name="remove_FindCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Discovery.FindCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ServiceModel.Discovery.FindCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Discovery.DiscoveryClient.FindProgressChanged">
      <topicdata group="api" />
      <apidata name="FindProgressChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_FindProgressChanged" />
      <remover name="remove_FindProgressChanged" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Discovery.FindProgressChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ServiceModel.Discovery.FindProgressChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync(System.ServiceModel.Discovery.FindCriteria)">
      <topicdata group="api" />
      <apidata name="FindTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="criteria">
          <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Discovery.FindResponse" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync(System.ServiceModel.Discovery.FindCriteria,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="FindTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Discovery.DiscoveryClient.FindTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="criteria">
          <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Discovery.FindResponse" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryClient.InnerChannel">
      <topicdata group="api" />
      <apidata name="InnerChannel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InnerChannel" />
      <returns>
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.Open">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Discovery.DiscoveryClient.ProxyAvailable">
      <topicdata group="api" />
      <apidata name="ProxyAvailable" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ProxyAvailable" />
      <remover name="remove_ProxyAvailable" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Discovery.AnnouncementEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ServiceModel.Discovery.AnnouncementEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.Resolve(System.ServiceModel.Discovery.ResolveCriteria)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="criteria">
          <type api="T:System.ServiceModel.Discovery.ResolveCriteria" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Discovery.ResolveResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync(System.ServiceModel.Discovery.ResolveCriteria)">
      <topicdata group="api" />
      <apidata name="ResolveAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="criteria">
          <type api="T:System.ServiceModel.Discovery.ResolveCriteria" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync(System.ServiceModel.Discovery.ResolveCriteria,System.Object)">
      <topicdata group="api" />
      <apidata name="ResolveAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Discovery.DiscoveryClient.ResolveAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="criteria">
          <type api="T:System.ServiceModel.Discovery.ResolveCriteria" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Discovery.DiscoveryClient.ResolveCompleted">
      <topicdata group="api" />
      <apidata name="ResolveCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ResolveCompleted" />
      <remover name="remove_ResolveCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Discovery.ResolveCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ServiceModel.Discovery.ResolveCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync(System.ServiceModel.Discovery.ResolveCriteria)">
      <topicdata group="api" />
      <apidata name="ResolveTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="criteria">
          <type api="T:System.ServiceModel.Discovery.ResolveCriteria" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Discovery.ResolveResponse" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync(System.ServiceModel.Discovery.ResolveCriteria,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ResolveTaskAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Discovery.DiscoveryClient.ResolveTaskAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="criteria">
          <type api="T:System.ServiceModel.Discovery.ResolveCriteria" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Discovery.ResolveResponse" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.System#IDisposable#Dispose">
      <topicdata group="api" eiiName="IDisposable.Dispose" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Abort">
      <topicdata group="api" eiiName="ICommunicationObject.Abort" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Abort">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginClose" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginClose" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginClose" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginOpen" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginOpen" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#BeginOpen" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close">
      <topicdata group="api" eiiName="ICommunicationObject.Close" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Close">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <topicdata group="api" eiiName="ICommunicationObject.Close" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Close" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Closed">
      <topicdata group="api" eiiName="ICommunicationObject.Closed" />
      <apidata name="Closed" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Closed" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Closed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Closed">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Closing">
      <topicdata group="api" eiiName="ICommunicationObject.Closing" />
      <apidata name="Closing" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Closing" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Closing" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Closing">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <topicdata group="api" eiiName="ICommunicationObject.EndClose" />
      <apidata name="EndClose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <topicdata group="api" eiiName="ICommunicationObject.EndOpen" />
      <apidata name="EndOpen" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Faulted">
      <topicdata group="api" eiiName="ICommunicationObject.Faulted" />
      <apidata name="Faulted" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Faulted" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Faulted" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Faulted">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open">
      <topicdata group="api" eiiName="ICommunicationObject.Open" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Open">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <topicdata group="api" eiiName="ICommunicationObject.Open" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Open" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Opened">
      <topicdata group="api" eiiName="ICommunicationObject.Opened" />
      <apidata name="Opened" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Opened" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Opened" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Opened">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#Opening">
      <topicdata group="api" eiiName="ICommunicationObject.Opening" />
      <apidata name="Opening" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Opening" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Opening" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Opening">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryClient.System#ServiceModel#ICommunicationObject#State">
      <topicdata group="api" eiiName="ICommunicationObject.State" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.ICommunicationObject.State" />
      <returns>
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.ICommunicationObject.State">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClient" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement">
      <topicdata group="api" />
      <apidata name="DiscoveryClientBindingElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Channels.BindingElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ServiceModel.Discovery.DiscoveryClientBindingElement.DiscoveryEndpointAddress" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryClientBindingElement.#ctor">
          <element api="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.#ctor" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.#ctor(System.ServiceModel.Discovery.DiscoveryEndpointProvider,System.ServiceModel.Discovery.FindCriteria)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.Clone" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryClientBindingElement.DiscoveryEndpointProvider" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryClientBindingElement.FindCriteria" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.DiscoveryClientBindingElement">
      <topicdata name="DiscoveryClientBindingElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" />
      <apidata name="DiscoveryClientBindingElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.Clone" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.DiscoveryClientBindingElement">
      <topicdata name="DiscoveryClientBindingElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" />
      <apidata name="DiscoveryClientBindingElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Discovery.DiscoveryClientBindingElement.DiscoveryEndpointProvider" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryClientBindingElement.FindCriteria" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" />
      </containers>
    </api>
    <api id="Fields.T:System.ServiceModel.Discovery.DiscoveryClientBindingElement">
      <topicdata name="DiscoveryClientBindingElement" group="list" subgroup="Fields" typeTopicId="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" />
      <apidata name="DiscoveryClientBindingElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.#ctor" />
      <elements>
        <element api="F:System.ServiceModel.Discovery.DiscoveryClientBindingElement.DiscoveryEndpointAddress" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.DiscoveryClientBindingElement.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.#ctor" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.#ctor(System.ServiceModel.Discovery.DiscoveryEndpointProvider,System.ServiceModel.Discovery.FindCriteria)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.DiscoveryClientBindingElement.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.#ctor(System.ServiceModel.Discovery.DiscoveryEndpointProvider,System.ServiceModel.Discovery.FindCriteria)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.DiscoveryClientBindingElement.#ctor" />
      <parameters>
        <parameter name="discoveryEndpointProvider">
          <type api="T:System.ServiceModel.Discovery.DiscoveryEndpointProvider" ref="true" />
        </parameter>
        <parameter name="findCriteria">
          <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <topicdata group="api" />
      <apidata name="BuildChannelFactory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <type api="T:System.ServiceModel.Channels.BindingElement" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TChannel" />
      </templates>
      <parameters>
        <parameter name="context">
          <type api="T:System.ServiceModel.Channels.BindingContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.IChannelFactory`1" ref="true">
          <specialization>
            <template name="TChannel" index="0" api="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <topicdata group="api" />
      <apidata name="BuildChannelListener" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <type api="T:System.ServiceModel.Channels.BindingElement" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TChannel">
          <constrained ref="true">
            <implements>
              <type api="T:System.ServiceModel.Channels.IChannel" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="context">
          <type api="T:System.ServiceModel.Channels.BindingContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.IChannelListener`1" ref="true">
          <specialization>
            <template name="TChannel" index="0" api="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <topicdata group="api" />
      <apidata name="CanBuildChannelFactory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <type api="T:System.ServiceModel.Channels.BindingElement" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TChannel" />
      </templates>
      <parameters>
        <parameter name="context">
          <type api="T:System.ServiceModel.Channels.BindingContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <topicdata group="api" />
      <apidata name="CanBuildChannelListener" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <type api="T:System.ServiceModel.Channels.BindingElement" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TChannel">
          <constrained ref="true">
            <implements>
              <type api="T:System.ServiceModel.Channels.IChannel" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="context">
          <type api="T:System.ServiceModel.Channels.BindingContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.BindingElement.Clone">
          <type api="T:System.ServiceModel.Channels.BindingElement" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.BindingElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" ref="true" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Discovery.DiscoveryClientBindingElement.DiscoveryEndpointAddress">
      <topicdata group="api" />
      <apidata name="DiscoveryEndpointAddress" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryClientBindingElement.DiscoveryEndpointProvider">
      <topicdata group="api" />
      <apidata name="DiscoveryEndpointProvider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DiscoveryEndpointProvider" />
      <setter name="set_DiscoveryEndpointProvider" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.DiscoveryEndpointProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryClientBindingElement.FindCriteria">
      <topicdata group="api" />
      <apidata name="FindCriteria" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FindCriteria" />
      <setter name="set_FindCriteria" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <topicdata group="api" />
      <apidata name="GetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <type api="T:System.ServiceModel.Channels.BindingElement" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="context">
          <type api="T:System.ServiceModel.Channels.BindingContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.ServiceModel.Discovery.DiscoveryClientBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryClientBindingElement" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.DiscoveryEndpoint">
      <topicdata group="api" />
      <apidata name="DiscoveryEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor">
          <element api="M:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.ServiceModel.Discovery.ServiceDiscoveryMode)" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.ServiceModel.Discovery.ServiceDiscoveryMode,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Address" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Binding" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Contract" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.IsSystemEndpoint" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUri" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUriMode" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Name" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryEndpoint.DiscoveryMode" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryEndpoint.DiscoveryVersion" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryEndpoint.MaxResponseDelay" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.DiscoveryEndpoint">
      <topicdata name="DiscoveryEndpoint" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.DiscoveryEndpoint" />
      <apidata name="DiscoveryEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryEndpoint" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.DiscoveryEndpoint">
      <topicdata name="DiscoveryEndpoint" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.DiscoveryEndpoint" />
      <apidata name="DiscoveryEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Address" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Binding" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Contract" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.IsSystemEndpoint" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUri" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUriMode" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Name" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryEndpoint.DiscoveryMode" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryEndpoint.DiscoveryVersion" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryEndpoint.MaxResponseDelay" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryEndpoint" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.ServiceModel.Discovery.ServiceDiscoveryMode)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.ServiceModel.Discovery.ServiceDiscoveryMode,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="endpointAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.ServiceModel.Discovery.ServiceDiscoveryMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor" />
      <parameters>
        <parameter name="discoveryVersion">
          <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
        </parameter>
        <parameter name="discoveryMode">
          <type api="T:System.ServiceModel.Discovery.ServiceDiscoveryMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.ServiceModel.Discovery.ServiceDiscoveryMode,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.DiscoveryEndpoint.#ctor" />
      <parameters>
        <parameter name="discoveryVersion">
          <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
        </parameter>
        <parameter name="discoveryMode">
          <type api="T:System.ServiceModel.Discovery.ServiceDiscoveryMode" ref="false" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="endpointAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryEndpoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryEndpoint.DiscoveryMode">
      <topicdata group="api" />
      <apidata name="DiscoveryMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DiscoveryMode" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.ServiceDiscoveryMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryEndpoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryEndpoint.DiscoveryVersion">
      <topicdata group="api" />
      <apidata name="DiscoveryVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DiscoveryVersion" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryEndpoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryEndpoint.MaxResponseDelay">
      <topicdata group="api" />
      <apidata name="MaxResponseDelay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxResponseDelay" />
      <setter name="set_MaxResponseDelay" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryEndpoint" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.DiscoveryEndpointProvider">
      <topicdata group="api" />
      <apidata name="DiscoveryEndpointProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryEndpointProvider.#ctor" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryEndpointProvider.GetDiscoveryEndpoint" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.DiscoveryEndpointProvider">
      <topicdata name="DiscoveryEndpointProvider" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.DiscoveryEndpointProvider" />
      <apidata name="DiscoveryEndpointProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryEndpointProvider.GetDiscoveryEndpoint" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryEndpointProvider" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryEndpointProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryEndpointProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryEndpointProvider.GetDiscoveryEndpoint">
      <topicdata group="api" />
      <apidata name="GetDiscoveryEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.DiscoveryEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryEndpointProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.DiscoveryMessageSequence">
      <topicdata group="api" />
      <apidata name="DiscoveryMessageSequence" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.CanCompareTo(System.ServiceModel.Discovery.DiscoveryMessageSequence)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.CompareTo(System.ServiceModel.Discovery.DiscoveryMessageSequence)" />
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryMessageSequence.Equals">
          <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.Equals(System.ServiceModel.Discovery.DiscoveryMessageSequence)" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.Equals(System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.GetHashCode" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.op_Equality(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.DiscoveryMessageSequence)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.op_Inequality(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.DiscoveryMessageSequence)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.ToString" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryMessageSequence.InstanceId" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryMessageSequence.MessageNumber" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryMessageSequence.SequenceId" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.DiscoveryMessageSequence">
      <topicdata name="DiscoveryMessageSequence" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" />
      <apidata name="DiscoveryMessageSequence" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.CanCompareTo(System.ServiceModel.Discovery.DiscoveryMessageSequence)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.CompareTo(System.ServiceModel.Discovery.DiscoveryMessageSequence)" />
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryMessageSequence.Equals">
          <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.Equals(System.ServiceModel.Discovery.DiscoveryMessageSequence)" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.Equals(System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.GetHashCode" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" />
      </containers>
    </api>
    <api id="Operators.T:System.ServiceModel.Discovery.DiscoveryMessageSequence">
      <topicdata name="DiscoveryMessageSequence" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" />
      <apidata name="DiscoveryMessageSequence" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.op_Equality(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.DiscoveryMessageSequence)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.op_Inequality(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.DiscoveryMessageSequence)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.DiscoveryMessageSequence">
      <topicdata name="DiscoveryMessageSequence" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" />
      <apidata name="DiscoveryMessageSequence" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Discovery.DiscoveryMessageSequence.InstanceId" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryMessageSequence.MessageNumber" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryMessageSequence.SequenceId" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.DiscoveryMessageSequence.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.Equals(System.ServiceModel.Discovery.DiscoveryMessageSequence)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.CanCompareTo(System.ServiceModel.Discovery.DiscoveryMessageSequence)">
      <topicdata group="api" />
      <apidata name="CanCompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="other">
          <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.CompareTo(System.ServiceModel.Discovery.DiscoveryMessageSequence)">
      <topicdata group="api" />
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Discovery.DiscoveryMessageSequence.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.Equals(System.ServiceModel.Discovery.DiscoveryMessageSequence)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Discovery.DiscoveryMessageSequence.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryMessageSequence.InstanceId">
      <topicdata group="api" />
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceId" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryMessageSequence.MessageNumber">
      <topicdata group="api" />
      <apidata name="MessageNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MessageNumber" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.op_Equality(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.DiscoveryMessageSequence)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="messageSequence1">
          <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
        </parameter>
        <parameter name="messageSequence2">
          <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.op_Inequality(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.DiscoveryMessageSequence)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="messageSequence1">
          <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
        </parameter>
        <parameter name="messageSequence2">
          <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryMessageSequence.SequenceId">
      <topicdata group="api" />
      <apidata name="SequenceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SequenceId" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryMessageSequence.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator">
      <topicdata group="api" />
      <apidata name="DiscoveryMessageSequenceGenerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator.#ctor">
          <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator.#ctor" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator.#ctor(System.Int64,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator.Next" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator">
      <topicdata name="DiscoveryMessageSequenceGenerator" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator" />
      <apidata name="DiscoveryMessageSequenceGenerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator.Next" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator.#ctor" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator.#ctor(System.Int64,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator.#ctor(System.Int64,System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator.#ctor" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="sequenceId">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator.Next">
      <topicdata group="api" />
      <apidata name="Next" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.DiscoveryOperationContextExtension">
      <topicdata group="api" />
      <apidata name="DiscoveryOperationContextExtension" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.IExtension`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.OperationContext" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.System#ServiceModel#IExtension{System#ServiceModel#OperationContext}#Attach(System.ServiceModel.OperationContext)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.System#ServiceModel#IExtension{System#ServiceModel#OperationContext}#Detach(System.ServiceModel.OperationContext)" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.DiscoveryMode" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.DiscoveryVersion" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.MaxResponseDelay" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.DiscoveryOperationContextExtension">
      <topicdata name="DiscoveryOperationContextExtension" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.DiscoveryOperationContextExtension" />
      <apidata name="DiscoveryOperationContextExtension" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.System#ServiceModel#IExtension{System#ServiceModel#OperationContext}#Attach(System.ServiceModel.OperationContext)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.System#ServiceModel#IExtension{System#ServiceModel#OperationContext}#Detach(System.ServiceModel.OperationContext)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryOperationContextExtension" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.DiscoveryOperationContextExtension">
      <topicdata name="DiscoveryOperationContextExtension" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.DiscoveryOperationContextExtension" />
      <apidata name="DiscoveryOperationContextExtension" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.DiscoveryMode" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.DiscoveryVersion" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.MaxResponseDelay" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryOperationContextExtension" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.DiscoveryMode">
      <topicdata group="api" />
      <apidata name="DiscoveryMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DiscoveryMode" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.ServiceDiscoveryMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryOperationContextExtension" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.DiscoveryVersion">
      <topicdata group="api" />
      <apidata name="DiscoveryVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DiscoveryVersion" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryOperationContextExtension" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.MaxResponseDelay">
      <topicdata group="api" />
      <apidata name="MaxResponseDelay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MaxResponseDelay" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryOperationContextExtension" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.System#ServiceModel#IExtension{System#ServiceModel#OperationContext}#Attach(System.ServiceModel.OperationContext)">
      <topicdata group="api" eiiName="IExtension`1.Attach" />
      <apidata name="Attach" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="owner">
          <type api="T:System.ServiceModel.OperationContext" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.IExtension`1.Attach(`0)">
          <type api="T:System.ServiceModel.IExtension`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.OperationContext" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryOperationContextExtension" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.System#ServiceModel#IExtension{System#ServiceModel#OperationContext}#Detach(System.ServiceModel.OperationContext)">
      <topicdata group="api" eiiName="IExtension`1.Detach" />
      <apidata name="Detach" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="owner">
          <type api="T:System.ServiceModel.OperationContext" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.IExtension`1.Detach(`0)">
          <type api="T:System.ServiceModel.IExtension`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.OperationContext" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryOperationContextExtension" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.DiscoveryProxy">
      <topicdata group="api" />
      <apidata name="DiscoveryProxy" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryProxy.#ctor">
          <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.#ctor" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.#ctor(System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator)" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.#ctor(System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator,System.Int32)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.BeginShouldRedirectFind(System.ServiceModel.Discovery.FindCriteria,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.BeginShouldRedirectResolve(System.ServiceModel.Discovery.ResolveCriteria,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.EndShouldRedirectFind(System.IAsyncResult,System.Collections.ObjectModel.Collection{System.ServiceModel.Discovery.EndpointDiscoveryMetadata}@)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.EndShouldRedirectResolve(System.IAsyncResult,System.Collections.ObjectModel.Collection{System.ServiceModel.Discovery.EndpointDiscoveryMetadata}@)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.OnBeginFind(System.ServiceModel.Discovery.FindRequestContext,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.OnBeginOfflineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.OnBeginOnlineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.OnBeginResolve(System.ServiceModel.Discovery.ResolveCriteria,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.OnEndFind(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.OnEndOfflineAnnouncement(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.OnEndOnlineAnnouncement(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.OnEndResolve(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.DiscoveryProxy">
      <topicdata name="DiscoveryProxy" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.DiscoveryProxy" />
      <apidata name="DiscoveryProxy" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.BeginShouldRedirectFind(System.ServiceModel.Discovery.FindCriteria,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.BeginShouldRedirectResolve(System.ServiceModel.Discovery.ResolveCriteria,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.EndShouldRedirectFind(System.IAsyncResult,System.Collections.ObjectModel.Collection{System.ServiceModel.Discovery.EndpointDiscoveryMetadata}@)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.EndShouldRedirectResolve(System.IAsyncResult,System.Collections.ObjectModel.Collection{System.ServiceModel.Discovery.EndpointDiscoveryMetadata}@)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.OnBeginFind(System.ServiceModel.Discovery.FindRequestContext,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.OnBeginOfflineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.OnBeginOnlineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.OnBeginResolve(System.ServiceModel.Discovery.ResolveCriteria,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.OnEndFind(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.OnEndOfflineAnnouncement(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.OnEndOnlineAnnouncement(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.OnEndResolve(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryProxy" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.DiscoveryProxy.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.#ctor" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.#ctor(System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryProxy.#ctor(System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryProxy.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Discovery.DiscoveryProxy.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryProxy.#ctor(System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Discovery.DiscoveryProxy.#ctor" />
      <parameters>
        <parameter name="messageSequenceGenerator">
          <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryProxy.#ctor(System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Discovery.DiscoveryProxy.#ctor" />
      <parameters>
        <parameter name="messageSequenceGenerator">
          <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator" ref="true" />
        </parameter>
        <parameter name="duplicateMessageHistoryLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryProxy.BeginShouldRedirectFind(System.ServiceModel.Discovery.FindCriteria,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginShouldRedirectFind" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="resolveCriteria">
          <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryProxy.BeginShouldRedirectResolve(System.ServiceModel.Discovery.ResolveCriteria,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginShouldRedirectResolve" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="findCriteria">
          <type api="T:System.ServiceModel.Discovery.ResolveCriteria" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryProxy.EndShouldRedirectFind(System.IAsyncResult,System.Collections.ObjectModel.Collection{System.ServiceModel.Discovery.EndpointDiscoveryMetadata}@)">
      <topicdata group="api" />
      <apidata name="EndShouldRedirectFind" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="redirectionEndpoints" out="true">
          <referenceTo>
            <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryProxy.EndShouldRedirectResolve(System.IAsyncResult,System.Collections.ObjectModel.Collection{System.ServiceModel.Discovery.EndpointDiscoveryMetadata}@)">
      <topicdata group="api" />
      <apidata name="EndShouldRedirectResolve" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="redirectionEndpoints" out="true">
          <referenceTo>
            <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryProxy.OnBeginFind(System.ServiceModel.Discovery.FindRequestContext,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="OnBeginFind" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="findRequestContext">
          <type api="T:System.ServiceModel.Discovery.FindRequestContext" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryProxy.OnBeginOfflineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="OnBeginOfflineAnnouncement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="messageSequence">
          <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
        </parameter>
        <parameter name="endpointDiscoveryMetadata">
          <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryProxy.OnBeginOnlineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="OnBeginOnlineAnnouncement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="messageSequence">
          <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
        </parameter>
        <parameter name="endpointDiscoveryMetadata">
          <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryProxy.OnBeginResolve(System.ServiceModel.Discovery.ResolveCriteria,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="OnBeginResolve" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="resolveCriteria">
          <type api="T:System.ServiceModel.Discovery.ResolveCriteria" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryProxy.OnEndFind(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="OnEndFind" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryProxy.OnEndOfflineAnnouncement(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="OnEndOfflineAnnouncement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryProxy.OnEndOnlineAnnouncement(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="OnEndOnlineAnnouncement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryProxy" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryProxy.OnEndResolve(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="OnEndResolve" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryProxy" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.DiscoveryService">
      <topicdata group="api" />
      <apidata name="DiscoveryService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.DiscoveryService.#ctor">
          <element api="M:System.ServiceModel.Discovery.DiscoveryService.#ctor" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryService.#ctor(System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator)" />
          <element api="M:System.ServiceModel.Discovery.DiscoveryService.#ctor(System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator,System.Int32)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.DiscoveryService.OnBeginFind(System.ServiceModel.Discovery.FindRequestContext,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryService.OnBeginResolve(System.ServiceModel.Discovery.ResolveCriteria,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryService.OnEndFind(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryService.OnEndResolve(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.DiscoveryService">
      <topicdata name="DiscoveryService" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.DiscoveryService" />
      <apidata name="DiscoveryService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryService.OnBeginFind(System.ServiceModel.Discovery.FindRequestContext,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryService.OnBeginResolve(System.ServiceModel.Discovery.ResolveCriteria,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryService.OnEndFind(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryService.OnEndResolve(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryService" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.DiscoveryService.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.DiscoveryService.#ctor" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryService.#ctor(System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryService.#ctor(System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryService.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Discovery.DiscoveryService.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryService.#ctor(System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Discovery.DiscoveryService.#ctor" />
      <parameters>
        <parameter name="discoveryMessageSequenceGenerator">
          <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryService.#ctor(System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Discovery.DiscoveryService.#ctor" />
      <parameters>
        <parameter name="discoveryMessageSequenceGenerator">
          <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator" ref="true" />
        </parameter>
        <parameter name="duplicateMessageHistoryLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryService.OnBeginFind(System.ServiceModel.Discovery.FindRequestContext,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="OnBeginFind" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="findRequestContext">
          <type api="T:System.ServiceModel.Discovery.FindRequestContext" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryService.OnBeginResolve(System.ServiceModel.Discovery.ResolveCriteria,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="OnBeginResolve" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="resolveCriteria">
          <type api="T:System.ServiceModel.Discovery.ResolveCriteria" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryService.OnEndFind(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="OnEndFind" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryService.OnEndResolve(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="OnEndResolve" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.DiscoveryServiceExtension">
      <topicdata group="api" />
      <apidata name="DiscoveryServiceExtension" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.IExtension`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.DiscoveryServiceExtension">
      <topicdata name="DiscoveryServiceExtension" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.DiscoveryServiceExtension" />
      <apidata name="DiscoveryServiceExtension" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryServiceExtension" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.DiscoveryServiceExtension">
      <topicdata name="DiscoveryServiceExtension" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.DiscoveryServiceExtension" />
      <apidata name="DiscoveryServiceExtension" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryServiceExtension" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryServiceExtension" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService">
      <topicdata group="api" />
      <apidata name="GetDiscoveryService" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.DiscoveryService" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryServiceExtension" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints">
      <topicdata group="api" />
      <apidata name="PublishedEndpoints" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PublishedEndpoints" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryServiceExtension" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)">
      <topicdata group="api" eiiName="IExtension`1.Attach" />
      <apidata name="Attach" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="owner">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.IExtension`1.Attach(`0)">
          <type api="T:System.ServiceModel.IExtension`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryServiceExtension" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)">
      <topicdata group="api" eiiName="IExtension`1.Detach" />
      <apidata name="Detach" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="owner">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.IExtension`1.Detach(`0)">
          <type api="T:System.ServiceModel.IExtension`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryServiceExtension" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.DiscoveryVersion">
      <topicdata group="api" />
      <apidata name="DiscoveryVersion" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryVersion.FromName(System.String)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryVersion.ToString" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryVersion.AdhocAddress" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryVersion.MessageVersion" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryVersion.Name" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryVersion.Namespace" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryVersion.WSDiscovery11" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryVersion.WSDiscoveryApril2005" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryVersion.WSDiscoveryCD1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.DiscoveryVersion">
      <topicdata name="DiscoveryVersion" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.DiscoveryVersion" />
      <apidata name="DiscoveryVersion" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryVersion.FromName(System.String)" />
        <element api="M:System.ServiceModel.Discovery.DiscoveryVersion.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.DiscoveryVersion">
      <topicdata name="DiscoveryVersion" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.DiscoveryVersion" />
      <apidata name="DiscoveryVersion" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Discovery.DiscoveryVersion.AdhocAddress" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryVersion.MessageVersion" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryVersion.Name" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryVersion.Namespace" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryVersion.WSDiscovery11" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryVersion.WSDiscoveryApril2005" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryVersion.WSDiscoveryCD1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryVersion.AdhocAddress">
      <topicdata group="api" />
      <apidata name="AdhocAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AdhocAddress" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryVersion.FromName(System.String)">
      <topicdata group="api" />
      <apidata name="FromName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryVersion.MessageVersion">
      <topicdata group="api" />
      <apidata name="MessageVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MessageVersion" />
      <returns>
        <type api="T:System.ServiceModel.Channels.MessageVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryVersion.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryVersion.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DiscoveryVersion.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryVersion.WSDiscovery11">
      <topicdata group="api" />
      <apidata name="WSDiscovery11" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSDiscovery11" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryVersion.WSDiscoveryApril2005">
      <topicdata group="api" />
      <apidata name="WSDiscoveryApril2005" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSDiscoveryApril2005" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DiscoveryVersion.WSDiscoveryCD1">
      <topicdata group="api" />
      <apidata name="WSDiscoveryCD1" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSDiscoveryCD1" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.DynamicEndpoint">
      <topicdata group="api" />
      <apidata name="DynamicEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.DynamicEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding)" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Address" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Binding" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Contract" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.IsSystemEndpoint" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUri" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUriMode" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Name" />
        <element api="P:System.ServiceModel.Discovery.DynamicEndpoint.DiscoveryEndpointProvider" />
        <element api="P:System.ServiceModel.Discovery.DynamicEndpoint.FindCriteria" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.DynamicEndpoint">
      <topicdata name="DynamicEndpoint" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.DynamicEndpoint" />
      <apidata name="DynamicEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DynamicEndpoint" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.DynamicEndpoint">
      <topicdata name="DynamicEndpoint" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.DynamicEndpoint" />
      <apidata name="DynamicEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Address" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Binding" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Contract" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.IsSystemEndpoint" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUri" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUriMode" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Name" />
        <element api="P:System.ServiceModel.Discovery.DynamicEndpoint.DiscoveryEndpointProvider" />
        <element api="P:System.ServiceModel.Discovery.DynamicEndpoint.FindCriteria" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DynamicEndpoint" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.DynamicEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="contract">
          <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DynamicEndpoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DynamicEndpoint.DiscoveryEndpointProvider">
      <topicdata group="api" />
      <apidata name="DiscoveryEndpointProvider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DiscoveryEndpointProvider" />
      <setter name="set_DiscoveryEndpointProvider" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.DiscoveryEndpointProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DynamicEndpoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.DynamicEndpoint.FindCriteria">
      <topicdata group="api" />
      <apidata name="FindCriteria" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FindCriteria" />
      <setter name="set_FindCriteria" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.DynamicEndpoint" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.EndpointDiscoveryBehavior">
      <topicdata group="api" />
      <apidata name="EndpointDiscoveryBehavior" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Description.IEndpointBehavior" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.#ctor" />
        <element api="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
        <element api="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
        <element api="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="P:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.ContractTypeNames" />
        <element api="P:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.Enabled" />
        <element api="P:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.Extensions" />
        <element api="P:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.Scopes" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.EndpointDiscoveryBehavior">
      <topicdata name="EndpointDiscoveryBehavior" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.EndpointDiscoveryBehavior" />
      <apidata name="EndpointDiscoveryBehavior" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
        <element api="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
        <element api="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryBehavior" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.EndpointDiscoveryBehavior">
      <topicdata name="EndpointDiscoveryBehavior" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.EndpointDiscoveryBehavior" />
      <apidata name="EndpointDiscoveryBehavior" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.ContractTypeNames" />
        <element api="P:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.Enabled" />
        <element api="P:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.Extensions" />
        <element api="P:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.Scopes" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryBehavior" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryBehavior" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.ContractTypeNames">
      <topicdata group="api" />
      <apidata name="ContractTypeNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContractTypeNames" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Xml.XmlQualifiedName" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryBehavior" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.Enabled">
      <topicdata group="api" />
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Enabled" />
      <setter name="set_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryBehavior" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.Extensions">
      <topicdata group="api" />
      <apidata name="Extensions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Extensions" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryBehavior" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.Scopes">
      <topicdata group="api" />
      <apidata name="Scopes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Scopes" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Uri" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryBehavior" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <topicdata group="api" eiiName="IEndpointBehavior.AddBindingParameters" />
      <apidata name="AddBindingParameters" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="bindingParameters">
          <type api="T:System.ServiceModel.Channels.BindingParameterCollection" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <type api="T:System.ServiceModel.Description.IEndpointBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryBehavior" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <topicdata group="api" eiiName="IEndpointBehavior.ApplyClientBehavior" />
      <apidata name="ApplyClientBehavior" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="clientRuntime">
          <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <type api="T:System.ServiceModel.Description.IEndpointBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryBehavior" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <topicdata group="api" eiiName="IEndpointBehavior.ApplyDispatchBehavior" />
      <apidata name="ApplyDispatchBehavior" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="endpointDispatcher">
          <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <type api="T:System.ServiceModel.Description.IEndpointBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryBehavior" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" eiiName="IEndpointBehavior.Validate" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <type api="T:System.ServiceModel.Description.IEndpointBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryBehavior" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata">
      <topicdata group="api" />
      <apidata name="EndpointDiscoveryMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.#ctor" />
        <element api="Overload:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.FromServiceEndpoint">
          <element api="M:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.FromServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.FromServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
        </element>
        <element api="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.Address" />
        <element api="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.ContractTypeNames" />
        <element api="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.Extensions" />
        <element api="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.ListenUris" />
        <element api="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.Scopes" />
        <element api="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.Version" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata">
      <topicdata name="EndpointDiscoveryMetadata" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" />
      <apidata name="EndpointDiscoveryMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.FromServiceEndpoint">
          <element api="M:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.FromServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.FromServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata">
      <topicdata name="EndpointDiscoveryMetadata" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" />
      <apidata name="EndpointDiscoveryMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.Address" />
        <element api="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.ContractTypeNames" />
        <element api="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.Extensions" />
        <element api="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.ListenUris" />
        <element api="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.Scopes" />
        <element api="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.Version" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.FromServiceEndpoint">
      <topicdata name="FromServiceEndpoint" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FromServiceEndpoint" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.FromServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="M:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.FromServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.Address">
      <topicdata group="api" />
      <apidata name="Address" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Address" />
      <setter name="set_Address" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.ContractTypeNames">
      <topicdata group="api" />
      <apidata name="ContractTypeNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContractTypeNames" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Xml.XmlQualifiedName" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.Extensions">
      <topicdata group="api" />
      <apidata name="Extensions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Extensions" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.FromServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" />
      <apidata name="FromServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.FromServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.FromServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <topicdata group="api" />
      <apidata name="FromServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.FromServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="endpointDispatcher">
          <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.ListenUris">
      <topicdata group="api" />
      <apidata name="ListenUris" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ListenUris" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Uri" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.Scopes">
      <topicdata group="api" />
      <apidata name="Scopes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Scopes" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Uri" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.EndpointDiscoveryMetadata.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Version" />
      <setter name="set_Version" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.FindCompletedEventArgs">
      <topicdata group="api" />
      <apidata name="FindCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.ServiceModel.Discovery.FindCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.FindCompletedEventArgs">
      <topicdata name="FindCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.FindCompletedEventArgs" />
      <apidata name="FindCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCompletedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.FindCompletedEventArgs">
      <topicdata name="FindCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.FindCompletedEventArgs" />
      <apidata name="FindCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.ServiceModel.Discovery.FindCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCompletedEventArgs" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.FindCompletedEventArgs.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.FindResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.FindCriteria">
      <topicdata group="api" />
      <apidata name="FindCriteria" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.FindCriteria.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ServiceModel.Discovery.FindCriteria.ScopeMatchByExact" />
        <element api="F:System.ServiceModel.Discovery.FindCriteria.ScopeMatchByLdap" />
        <element api="F:System.ServiceModel.Discovery.FindCriteria.ScopeMatchByNone" />
        <element api="F:System.ServiceModel.Discovery.FindCriteria.ScopeMatchByPrefix" />
        <element api="F:System.ServiceModel.Discovery.FindCriteria.ScopeMatchByUuid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.FindCriteria.#ctor">
          <element api="M:System.ServiceModel.Discovery.FindCriteria.#ctor" />
          <element api="M:System.ServiceModel.Discovery.FindCriteria.#ctor(System.Type)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria">
          <element api="M:System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria" />
          <element api="M:System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName})" />
          <element api="M:System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Type)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.FindCriteria.IsMatch(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
        <element api="P:System.ServiceModel.Discovery.FindCriteria.ContractTypeNames" />
        <element api="P:System.ServiceModel.Discovery.FindCriteria.Duration" />
        <element api="P:System.ServiceModel.Discovery.FindCriteria.Extensions" />
        <element api="P:System.ServiceModel.Discovery.FindCriteria.MaxResults" />
        <element api="P:System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy" />
        <element api="P:System.ServiceModel.Discovery.FindCriteria.Scopes" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.FindCriteria">
      <topicdata name="FindCriteria" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.FindCriteria" />
      <apidata name="FindCriteria" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.FindCriteria.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria">
          <element api="M:System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria" />
          <element api="M:System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName})" />
          <element api="M:System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Type)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.FindCriteria.IsMatch(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.FindCriteria">
      <topicdata name="FindCriteria" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.FindCriteria" />
      <apidata name="FindCriteria" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.FindCriteria.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Discovery.FindCriteria.ContractTypeNames" />
        <element api="P:System.ServiceModel.Discovery.FindCriteria.Duration" />
        <element api="P:System.ServiceModel.Discovery.FindCriteria.Extensions" />
        <element api="P:System.ServiceModel.Discovery.FindCriteria.MaxResults" />
        <element api="P:System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy" />
        <element api="P:System.ServiceModel.Discovery.FindCriteria.Scopes" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" />
      </containers>
    </api>
    <api id="Fields.T:System.ServiceModel.Discovery.FindCriteria">
      <topicdata name="FindCriteria" group="list" subgroup="Fields" typeTopicId="T:System.ServiceModel.Discovery.FindCriteria" />
      <apidata name="FindCriteria" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.FindCriteria.#ctor" />
      <elements>
        <element api="F:System.ServiceModel.Discovery.FindCriteria.ScopeMatchByExact" />
        <element api="F:System.ServiceModel.Discovery.FindCriteria.ScopeMatchByLdap" />
        <element api="F:System.ServiceModel.Discovery.FindCriteria.ScopeMatchByNone" />
        <element api="F:System.ServiceModel.Discovery.FindCriteria.ScopeMatchByPrefix" />
        <element api="F:System.ServiceModel.Discovery.FindCriteria.ScopeMatchByUuid" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.FindCriteria.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.FindCriteria.#ctor" />
        <element api="M:System.ServiceModel.Discovery.FindCriteria.#ctor(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria">
      <topicdata name="CreateMetadataExchangeEndpointCriteria" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateMetadataExchangeEndpointCriteria" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria" />
        <element api="M:System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName})" />
        <element api="M:System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.FindCriteria.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.FindCriteria.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.FindCriteria.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.FindCriteria.#ctor" />
      <parameters>
        <parameter name="contractType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.FindCriteria.ContractTypeNames">
      <topicdata group="api" />
      <apidata name="ContractTypeNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContractTypeNames" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Xml.XmlQualifiedName" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria">
      <topicdata group="api" />
      <apidata name="CreateMetadataExchangeEndpointCriteria" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName})">
      <topicdata group="api" />
      <apidata name="CreateMetadataExchangeEndpointCriteria" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="contractTypeNames">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XmlQualifiedName" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Type)">
      <topicdata group="api" />
      <apidata name="CreateMetadataExchangeEndpointCriteria" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="contractType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.FindCriteria.Duration">
      <topicdata group="api" />
      <apidata name="Duration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Duration" />
      <setter name="set_Duration" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.FindCriteria.Extensions">
      <topicdata group="api" />
      <apidata name="Extensions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Extensions" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.FindCriteria.IsMatch(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)">
      <topicdata group="api" />
      <apidata name="IsMatch" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="endpointDiscoveryMetadata">
          <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.FindCriteria.MaxResults">
      <topicdata group="api" />
      <apidata name="MaxResults" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxResults" />
      <setter name="set_MaxResults" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy">
      <topicdata group="api" />
      <apidata name="ScopeMatchBy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ScopeMatchBy" />
      <setter name="set_ScopeMatchBy" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Discovery.FindCriteria.ScopeMatchByExact">
      <topicdata group="api" />
      <apidata name="ScopeMatchByExact" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Discovery.FindCriteria.ScopeMatchByLdap">
      <topicdata group="api" />
      <apidata name="ScopeMatchByLdap" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Discovery.FindCriteria.ScopeMatchByNone">
      <topicdata group="api" />
      <apidata name="ScopeMatchByNone" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Discovery.FindCriteria.ScopeMatchByPrefix">
      <topicdata group="api" />
      <apidata name="ScopeMatchByPrefix" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Discovery.FindCriteria.ScopeMatchByUuid">
      <topicdata group="api" />
      <apidata name="ScopeMatchByUuid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.FindCriteria.Scopes">
      <topicdata group="api" />
      <apidata name="Scopes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Scopes" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Uri" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.FindProgressChangedEventArgs">
      <topicdata group="api" />
      <apidata name="FindProgressChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.ProgressChangedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage" />
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.UserState" />
        <element api="P:System.ServiceModel.Discovery.FindProgressChangedEventArgs.EndpointDiscoveryMetadata" />
        <element api="P:System.ServiceModel.Discovery.FindProgressChangedEventArgs.MessageSequence" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.FindProgressChangedEventArgs">
      <topicdata name="FindProgressChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.FindProgressChangedEventArgs" />
      <apidata name="FindProgressChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindProgressChangedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.FindProgressChangedEventArgs">
      <topicdata name="FindProgressChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.FindProgressChangedEventArgs" />
      <apidata name="FindProgressChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage" />
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.UserState" />
        <element api="P:System.ServiceModel.Discovery.FindProgressChangedEventArgs.EndpointDiscoveryMetadata" />
        <element api="P:System.ServiceModel.Discovery.FindProgressChangedEventArgs.MessageSequence" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindProgressChangedEventArgs" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.FindProgressChangedEventArgs.EndpointDiscoveryMetadata">
      <topicdata group="api" />
      <apidata name="EndpointDiscoveryMetadata" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EndpointDiscoveryMetadata" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindProgressChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.FindProgressChangedEventArgs.MessageSequence">
      <topicdata group="api" />
      <apidata name="MessageSequence" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MessageSequence" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindProgressChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.FindRequestContext">
      <topicdata group="api" />
      <apidata name="FindRequestContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.FindRequestContext.#ctor(System.ServiceModel.Discovery.FindCriteria)" />
        <element api="M:System.ServiceModel.Discovery.FindRequestContext.AddMatchingEndpoint(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
        <element api="M:System.ServiceModel.Discovery.FindRequestContext.OnAddMatchingEndpoint(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
        <element api="P:System.ServiceModel.Discovery.FindRequestContext.Criteria" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.FindRequestContext">
      <topicdata name="FindRequestContext" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.FindRequestContext" />
      <apidata name="FindRequestContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.FindRequestContext.AddMatchingEndpoint(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
        <element api="M:System.ServiceModel.Discovery.FindRequestContext.OnAddMatchingEndpoint(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindRequestContext" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.FindRequestContext">
      <topicdata name="FindRequestContext" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.FindRequestContext" />
      <apidata name="FindRequestContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Discovery.FindRequestContext.Criteria" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindRequestContext" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.FindRequestContext.#ctor(System.ServiceModel.Discovery.FindCriteria)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="criteria">
          <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindRequestContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.FindRequestContext.AddMatchingEndpoint(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)">
      <topicdata group="api" />
      <apidata name="AddMatchingEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="matchingEndpoint">
          <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindRequestContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.FindRequestContext.Criteria">
      <topicdata group="api" />
      <apidata name="Criteria" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Criteria" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.FindCriteria" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindRequestContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.FindRequestContext.OnAddMatchingEndpoint(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)">
      <topicdata group="api" />
      <apidata name="OnAddMatchingEndpoint" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="matchingEndpoint">
          <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindRequestContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.FindResponse">
      <topicdata group="api" />
      <apidata name="FindResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.FindResponse.GetMessageSequence(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
        <element api="P:System.ServiceModel.Discovery.FindResponse.Endpoints" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.FindResponse">
      <topicdata name="FindResponse" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.FindResponse" />
      <apidata name="FindResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.FindResponse.GetMessageSequence(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindResponse" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.FindResponse">
      <topicdata name="FindResponse" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.FindResponse" />
      <apidata name="FindResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Discovery.FindResponse.Endpoints" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindResponse" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.FindResponse.Endpoints">
      <topicdata group="api" />
      <apidata name="Endpoints" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Endpoints" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindResponse" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.FindResponse.GetMessageSequence(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)">
      <topicdata group="api" />
      <apidata name="GetMessageSequence" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="endpointDiscoveryMetadata">
          <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.FindResponse" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.ResolveCompletedEventArgs">
      <topicdata group="api" />
      <apidata name="ResolveCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.ServiceModel.Discovery.ResolveCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.ResolveCompletedEventArgs">
      <topicdata name="ResolveCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.ResolveCompletedEventArgs" />
      <apidata name="ResolveCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ResolveCompletedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.ResolveCompletedEventArgs">
      <topicdata name="ResolveCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.ResolveCompletedEventArgs" />
      <apidata name="ResolveCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.ServiceModel.Discovery.ResolveCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ResolveCompletedEventArgs" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.ResolveCompletedEventArgs.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.ResolveResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ResolveCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.ResolveCriteria">
      <topicdata group="api" />
      <apidata name="ResolveCriteria" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.ResolveCriteria.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.ResolveCriteria.#ctor">
          <element api="M:System.ServiceModel.Discovery.ResolveCriteria.#ctor" />
          <element api="M:System.ServiceModel.Discovery.ResolveCriteria.#ctor(System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="P:System.ServiceModel.Discovery.ResolveCriteria.Address" />
        <element api="P:System.ServiceModel.Discovery.ResolveCriteria.Duration" />
        <element api="P:System.ServiceModel.Discovery.ResolveCriteria.Extensions" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.ResolveCriteria">
      <topicdata name="ResolveCriteria" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.ResolveCriteria" />
      <apidata name="ResolveCriteria" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.ResolveCriteria.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ResolveCriteria" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.ResolveCriteria">
      <topicdata name="ResolveCriteria" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.ResolveCriteria" />
      <apidata name="ResolveCriteria" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.ResolveCriteria.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Discovery.ResolveCriteria.Address" />
        <element api="P:System.ServiceModel.Discovery.ResolveCriteria.Duration" />
        <element api="P:System.ServiceModel.Discovery.ResolveCriteria.Extensions" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ResolveCriteria" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.ResolveCriteria.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.ResolveCriteria.#ctor" />
        <element api="M:System.ServiceModel.Discovery.ResolveCriteria.#ctor(System.ServiceModel.EndpointAddress)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ResolveCriteria" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.ResolveCriteria.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.ResolveCriteria.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ResolveCriteria" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.ResolveCriteria.#ctor(System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.ResolveCriteria.#ctor" />
      <parameters>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ResolveCriteria" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.ResolveCriteria.Address">
      <topicdata group="api" />
      <apidata name="Address" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Address" />
      <setter name="set_Address" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ResolveCriteria" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.ResolveCriteria.Duration">
      <topicdata group="api" />
      <apidata name="Duration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Duration" />
      <setter name="set_Duration" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ResolveCriteria" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.ResolveCriteria.Extensions">
      <topicdata group="api" />
      <apidata name="Extensions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Extensions" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ResolveCriteria" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.ResolveResponse">
      <topicdata group="api" />
      <apidata name="ResolveResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Discovery.ResolveResponse.EndpointDiscoveryMetadata" />
        <element api="P:System.ServiceModel.Discovery.ResolveResponse.MessageSequence" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.ResolveResponse">
      <topicdata name="ResolveResponse" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.ResolveResponse" />
      <apidata name="ResolveResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ResolveResponse" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.ResolveResponse">
      <topicdata name="ResolveResponse" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.ResolveResponse" />
      <apidata name="ResolveResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Discovery.ResolveResponse.EndpointDiscoveryMetadata" />
        <element api="P:System.ServiceModel.Discovery.ResolveResponse.MessageSequence" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ResolveResponse" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.ResolveResponse.EndpointDiscoveryMetadata">
      <topicdata group="api" />
      <apidata name="EndpointDiscoveryMetadata" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EndpointDiscoveryMetadata" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.EndpointDiscoveryMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ResolveResponse" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.ResolveResponse.MessageSequence">
      <topicdata group="api" />
      <apidata name="MessageSequence" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MessageSequence" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.DiscoveryMessageSequence" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ResolveResponse" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.ServiceDiscoveryBehavior">
      <topicdata group="api" />
      <apidata name="ServiceDiscoveryBehavior" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Description.IServiceBehavior" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.#ctor" />
        <element api="M:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
        <element api="M:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
        <element api="P:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.AnnouncementEndpoints" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.ServiceDiscoveryBehavior">
      <topicdata name="ServiceDiscoveryBehavior" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.ServiceDiscoveryBehavior" />
      <apidata name="ServiceDiscoveryBehavior" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
        <element api="M:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ServiceDiscoveryBehavior" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.ServiceDiscoveryBehavior">
      <topicdata name="ServiceDiscoveryBehavior" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.ServiceDiscoveryBehavior" />
      <apidata name="ServiceDiscoveryBehavior" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.AnnouncementEndpoints" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ServiceDiscoveryBehavior" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ServiceDiscoveryBehavior" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.AnnouncementEndpoints">
      <topicdata group="api" />
      <apidata name="AnnouncementEndpoints" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AnnouncementEndpoints" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Discovery.AnnouncementEndpoint" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ServiceDiscoveryBehavior" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <topicdata group="api" eiiName="IServiceBehavior.AddBindingParameters" />
      <apidata name="AddBindingParameters" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceDescription">
          <type api="T:System.ServiceModel.Description.ServiceDescription" ref="true" />
        </parameter>
        <parameter name="serviceHostBase">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </parameter>
        <parameter name="endpoints">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="bindingParameters">
          <type api="T:System.ServiceModel.Channels.BindingParameterCollection" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <type api="T:System.ServiceModel.Description.IServiceBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ServiceDiscoveryBehavior" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <topicdata group="api" eiiName="IServiceBehavior.ApplyDispatchBehavior" />
      <apidata name="ApplyDispatchBehavior" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceDescription">
          <type api="T:System.ServiceModel.Description.ServiceDescription" ref="true" />
        </parameter>
        <parameter name="serviceHostBase">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <type api="T:System.ServiceModel.Description.IServiceBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ServiceDiscoveryBehavior" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.ServiceDiscoveryBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <topicdata group="api" eiiName="IServiceBehavior.Validate" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceDescription">
          <type api="T:System.ServiceModel.Description.ServiceDescription" ref="true" />
        </parameter>
        <parameter name="serviceHostBase">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <type api="T:System.ServiceModel.Description.IServiceBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ServiceDiscoveryBehavior" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.ServiceDiscoveryMode">
      <topicdata group="api" />
      <apidata name="ServiceDiscoveryMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.Discovery.ServiceDiscoveryMode.Adhoc" />
        <element api="F:System.ServiceModel.Discovery.ServiceDiscoveryMode.Managed" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Discovery.ServiceDiscoveryMode.Adhoc">
      <topicdata group="api" notopic="" />
      <apidata name="Adhoc" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.ServiceDiscoveryMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ServiceDiscoveryMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Discovery.ServiceDiscoveryMode.Managed">
      <topicdata group="api" notopic="" />
      <apidata name="Managed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.ServiceDiscoveryMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.ServiceDiscoveryMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint">
      <topicdata group="api" />
      <apidata name="UdpAnnouncementEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Discovery.AnnouncementEndpoint" ref="true" />
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.DefaultIPv4MulticastAddress" />
        <element api="F:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.DefaultIPv6MulticastAddress" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor">
          <element api="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor" />
          <element api="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion)" />
          <element api="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor(System.String)" />
          <element api="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor(System.Uri)" />
          <element api="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.String)" />
          <element api="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.Uri)" />
        </element>
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Address" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Binding" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Contract" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.IsSystemEndpoint" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUri" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUriMode" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Name" />
        <element api="P:System.ServiceModel.Discovery.AnnouncementEndpoint.DiscoveryVersion" />
        <element api="P:System.ServiceModel.Discovery.AnnouncementEndpoint.MaxAnnouncementDelay" />
        <element api="P:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.MulticastAddress" />
        <element api="P:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.TransportSettings" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint">
      <topicdata name="UdpAnnouncementEndpoint" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" />
      <apidata name="UdpAnnouncementEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint">
      <topicdata name="UdpAnnouncementEndpoint" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" />
      <apidata name="UdpAnnouncementEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Address" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Binding" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Contract" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.IsSystemEndpoint" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUri" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUriMode" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Name" />
        <element api="P:System.ServiceModel.Discovery.AnnouncementEndpoint.DiscoveryVersion" />
        <element api="P:System.ServiceModel.Discovery.AnnouncementEndpoint.MaxAnnouncementDelay" />
        <element api="P:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.MulticastAddress" />
        <element api="P:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.TransportSettings" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" />
      </containers>
    </api>
    <api id="Fields.T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint">
      <topicdata name="UdpAnnouncementEndpoint" group="list" subgroup="Fields" typeTopicId="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" />
      <apidata name="UdpAnnouncementEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor" />
      <elements>
        <element api="F:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.DefaultIPv4MulticastAddress" />
        <element api="F:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.DefaultIPv6MulticastAddress" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor" />
        <element api="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion)" />
        <element api="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor(System.String)" />
        <element api="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor(System.Uri)" />
        <element api="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.String)" />
        <element api="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor" />
      <parameters>
        <parameter name="discoveryVersion">
          <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor" />
      <parameters>
        <parameter name="discoveryVersion">
          <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
        </parameter>
        <parameter name="multicastAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor" />
      <parameters>
        <parameter name="discoveryVersion">
          <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
        </parameter>
        <parameter name="multicastAddress">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor" />
      <parameters>
        <parameter name="multicastAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor(System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.#ctor" />
      <parameters>
        <parameter name="multicastAddress">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" ref="true" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.DefaultIPv4MulticastAddress">
      <topicdata group="api" />
      <apidata name="DefaultIPv4MulticastAddress" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" ref="true" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.DefaultIPv6MulticastAddress">
      <topicdata group="api" />
      <apidata name="DefaultIPv6MulticastAddress" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.MulticastAddress">
      <topicdata group="api" />
      <apidata name="MulticastAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MulticastAddress" />
      <setter name="set_MulticastAddress" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.UdpAnnouncementEndpoint.TransportSettings">
      <topicdata group="api" />
      <apidata name="TransportSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TransportSettings" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.UdpTransportSettings" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TranportSettings property in System.SerivceModel.Discovery.UdpAnnouncementEndpoint is obsolete. Consider using System.ServiceModel.Channels.UdpTransportBindingElement for setting the transport properties.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint">
      <topicdata group="api" />
      <apidata name="UdpDiscoveryEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Discovery.DiscoveryEndpoint" ref="true" />
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.DefaultIPv4MulticastAddress" />
        <element api="F:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.DefaultIPv6MulticastAddress" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor">
          <element api="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor" />
          <element api="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion)" />
          <element api="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor(System.String)" />
          <element api="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor(System.Uri)" />
          <element api="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.String)" />
          <element api="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.Uri)" />
        </element>
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Address" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Binding" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Contract" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.IsSystemEndpoint" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUri" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUriMode" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Name" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryEndpoint.DiscoveryMode" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryEndpoint.DiscoveryVersion" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryEndpoint.MaxResponseDelay" />
        <element api="P:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.MulticastAddress" />
        <element api="P:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.TransportSettings" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint">
      <topicdata name="UdpDiscoveryEndpoint" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" />
      <apidata name="UdpDiscoveryEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint">
      <topicdata name="UdpDiscoveryEndpoint" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" />
      <apidata name="UdpDiscoveryEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Address" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Binding" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Contract" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.IsSystemEndpoint" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUri" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUriMode" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Name" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryEndpoint.DiscoveryMode" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryEndpoint.DiscoveryVersion" />
        <element api="P:System.ServiceModel.Discovery.DiscoveryEndpoint.MaxResponseDelay" />
        <element api="P:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.MulticastAddress" />
        <element api="P:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.TransportSettings" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" />
      </containers>
    </api>
    <api id="Fields.T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint">
      <topicdata name="UdpDiscoveryEndpoint" group="list" subgroup="Fields" typeTopicId="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" />
      <apidata name="UdpDiscoveryEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor" />
      <elements>
        <element api="F:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.DefaultIPv4MulticastAddress" />
        <element api="F:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.DefaultIPv6MulticastAddress" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor" />
        <element api="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion)" />
        <element api="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor(System.String)" />
        <element api="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor(System.Uri)" />
        <element api="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.String)" />
        <element api="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor" />
      <parameters>
        <parameter name="discoveryVersion">
          <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor" />
      <parameters>
        <parameter name="discoveryVersion">
          <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
        </parameter>
        <parameter name="multicastAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor(System.ServiceModel.Discovery.DiscoveryVersion,System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor" />
      <parameters>
        <parameter name="discoveryVersion">
          <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
        </parameter>
        <parameter name="multicastAddress">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor" />
      <parameters>
        <parameter name="multicastAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor(System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.#ctor" />
      <parameters>
        <parameter name="multicastAddress">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" ref="true" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.DefaultIPv4MulticastAddress">
      <topicdata group="api" />
      <apidata name="DefaultIPv4MulticastAddress" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" ref="true" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.DefaultIPv6MulticastAddress">
      <topicdata group="api" />
      <apidata name="DefaultIPv6MulticastAddress" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.MulticastAddress">
      <topicdata group="api" />
      <apidata name="MulticastAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MulticastAddress" />
      <setter name="set_MulticastAddress" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.TransportSettings">
      <topicdata group="api" />
      <apidata name="TransportSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TransportSettings" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.UdpTransportSettings" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TranportSettings property in System.SerivceModel.Discovery.UdpDiscoveryEndpoint is obsolete. Consider using System.ServiceModel.Channels.UdpTransportBindingElement for setting the transport properties.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Discovery.UdpTransportSettings">
      <topicdata group="api" />
      <apidata name="UdpTransportSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Discovery.UdpTransportSettings.DuplicateMessageHistoryLength" />
        <element api="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxMulticastRetransmitCount" />
        <element api="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxPendingMessageCount" />
        <element api="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxUnicastRetransmitCount" />
        <element api="P:System.ServiceModel.Discovery.UdpTransportSettings.MulticastInterfaceId" />
        <element api="P:System.ServiceModel.Discovery.UdpTransportSettings.SocketReceiveBufferSize" />
        <element api="P:System.ServiceModel.Discovery.UdpTransportSettings.TimeToLive" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.UdpTransportSettings">
      <topicdata name="UdpTransportSettings" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.UdpTransportSettings" />
      <apidata name="UdpTransportSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpTransportSettings" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.UdpTransportSettings">
      <topicdata name="UdpTransportSettings" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.UdpTransportSettings" />
      <apidata name="UdpTransportSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Discovery.UdpTransportSettings.DuplicateMessageHistoryLength" />
        <element api="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxMulticastRetransmitCount" />
        <element api="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxPendingMessageCount" />
        <element api="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxUnicastRetransmitCount" />
        <element api="P:System.ServiceModel.Discovery.UdpTransportSettings.MulticastInterfaceId" />
        <element api="P:System.ServiceModel.Discovery.UdpTransportSettings.SocketReceiveBufferSize" />
        <element api="P:System.ServiceModel.Discovery.UdpTransportSettings.TimeToLive" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpTransportSettings" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.UdpTransportSettings.DuplicateMessageHistoryLength">
      <topicdata group="api" />
      <apidata name="DuplicateMessageHistoryLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DuplicateMessageHistoryLength" />
      <setter name="set_DuplicateMessageHistoryLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpTransportSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxBufferPoolSize">
      <topicdata group="api" />
      <apidata name="MaxBufferPoolSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxBufferPoolSize" />
      <setter name="set_MaxBufferPoolSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpTransportSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxMulticastRetransmitCount">
      <topicdata group="api" />
      <apidata name="MaxMulticastRetransmitCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxMulticastRetransmitCount" />
      <setter name="set_MaxMulticastRetransmitCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpTransportSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxPendingMessageCount">
      <topicdata group="api" />
      <apidata name="MaxPendingMessageCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxPendingMessageCount" />
      <setter name="set_MaxPendingMessageCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpTransportSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxReceivedMessageSize">
      <topicdata group="api" />
      <apidata name="MaxReceivedMessageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxReceivedMessageSize" />
      <setter name="set_MaxReceivedMessageSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpTransportSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.UdpTransportSettings.MaxUnicastRetransmitCount">
      <topicdata group="api" />
      <apidata name="MaxUnicastRetransmitCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxUnicastRetransmitCount" />
      <setter name="set_MaxUnicastRetransmitCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpTransportSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.UdpTransportSettings.MulticastInterfaceId">
      <topicdata group="api" />
      <apidata name="MulticastInterfaceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MulticastInterfaceId" />
      <setter name="set_MulticastInterfaceId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpTransportSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.UdpTransportSettings.SocketReceiveBufferSize">
      <topicdata group="api" />
      <apidata name="SocketReceiveBufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SocketReceiveBufferSize" />
      <setter name="set_SocketReceiveBufferSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpTransportSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.UdpTransportSettings.TimeToLive">
      <topicdata group="api" />
      <apidata name="TimeToLive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TimeToLive" />
      <setter name="set_TimeToLive" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery" />
        <type api="T:System.ServiceModel.Discovery.UdpTransportSettings" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>