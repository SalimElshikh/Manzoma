<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="PresentationFramework">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Windows.ThemeInfoAttribute" ref="true" />
          <argument>
            <type api="T:System.Windows.ResourceDictionaryLocation" ref="false" />
            <enumValue>
              <field name="ExternalAssembly" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Windows.ResourceDictionaryLocation" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>PresentationFramework.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>PresentationFramework.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>PresentationFramework.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\wpf\src\windows.snk</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="WindowsBase">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WindowsBase.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WindowsBase.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WindowsBase.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\wpf\src\windows.snk</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="PresentationCore">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\wpf\src\windows.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.30319.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>PresentationCore.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>PresentationCore.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>PresentationCore.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Windows.Interop">
      <topicdata group="api" />
      <apidata name="System.Windows.Interop" group="namespace" />
      <elements>
        <element api="T:System.Windows.Interop.CursorInteropHelper" />
        <element api="T:System.Windows.Interop.D3DResourceType" />
        <element api="T:System.Windows.Interop.D3DImage" />
        <element api="T:System.Windows.Interop.HwndSourceParameters" />
        <element api="T:System.Windows.Interop.RenderMode" />
        <element api="T:System.Windows.Interop.HwndTarget" />
        <element api="T:System.Windows.Interop.HwndSource" />
        <element api="T:System.Windows.Interop.HwndSourceHook" />
        <element api="T:System.Windows.Interop.IWin32Window" />
        <element api="T:System.Windows.Interop.InteropBitmap" />
        <element api="T:System.Windows.Interop.Imaging" />
        <element api="T:System.Windows.Interop.ActiveXHost" />
        <element api="T:System.Windows.Interop.BrowserInteropHelper" />
        <element api="T:System.Windows.Interop.DocObjHost" />
        <element api="T:System.Windows.Interop.DynamicScriptObject" />
        <element api="T:System.Windows.Interop.HwndHost" />
        <element api="T:System.Windows.Interop.IErrorPage" />
        <element api="T:System.Windows.Interop.IProgressPage" />
        <element api="T:System.Windows.Interop.WindowInteropHelper" />
        <element api="T:System.Windows.Interop.MSG" />
        <element api="T:System.Windows.Interop.ThreadMessageEventHandler" />
        <element api="T:System.Windows.Interop.ComponentDispatcher" />
        <element api="T:System.Windows.Interop.IKeyboardInputSink" />
        <element api="T:System.Windows.Interop.IKeyboardInputSite" />
      </elements>
    </api>
    <api id="T:System.Windows.Interop.ActiveXHost">
      <topicdata group="api" />
      <apidata name="ActiveXHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Interop.HwndHost" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Controls.WebBrowser" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Windows.FrameworkElement.ContextMenuClosing" />
        <element api="E:System.Windows.FrameworkElement.ContextMenuOpening" />
        <element api="E:System.Windows.FrameworkElement.DataContextChanged" />
        <element api="E:System.Windows.FrameworkElement.Initialized" />
        <element api="E:System.Windows.FrameworkElement.Loaded" />
        <element api="E:System.Windows.FrameworkElement.RequestBringIntoView" />
        <element api="E:System.Windows.FrameworkElement.SizeChanged" />
        <element api="E:System.Windows.FrameworkElement.SourceUpdated" />
        <element api="E:System.Windows.FrameworkElement.TargetUpdated" />
        <element api="E:System.Windows.FrameworkElement.ToolTipClosing" />
        <element api="E:System.Windows.FrameworkElement.ToolTipOpening" />
        <element api="E:System.Windows.FrameworkElement.Unloaded" />
        <element api="E:System.Windows.Interop.HwndHost.DpiChanged" />
        <element api="E:System.Windows.Interop.HwndHost.MessageHook" />
        <element api="E:System.Windows.UIElement.DragEnter" />
        <element api="E:System.Windows.UIElement.DragLeave" />
        <element api="E:System.Windows.UIElement.DragOver" />
        <element api="E:System.Windows.UIElement.Drop" />
        <element api="E:System.Windows.UIElement.FocusableChanged" />
        <element api="E:System.Windows.UIElement.GiveFeedback" />
        <element api="E:System.Windows.UIElement.GotFocus" />
        <element api="E:System.Windows.UIElement.GotKeyboardFocus" />
        <element api="E:System.Windows.UIElement.GotMouseCapture" />
        <element api="E:System.Windows.UIElement.GotStylusCapture" />
        <element api="E:System.Windows.UIElement.GotTouchCapture" />
        <element api="E:System.Windows.UIElement.IsEnabledChanged" />
        <element api="E:System.Windows.UIElement.IsHitTestVisibleChanged" />
        <element api="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />
        <element api="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />
        <element api="E:System.Windows.UIElement.IsMouseCapturedChanged" />
        <element api="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />
        <element api="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />
        <element api="E:System.Windows.UIElement.IsStylusCapturedChanged" />
        <element api="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />
        <element api="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" />
        <element api="E:System.Windows.UIElement.IsVisibleChanged" />
        <element api="E:System.Windows.UIElement.KeyDown" />
        <element api="E:System.Windows.UIElement.KeyUp" />
        <element api="E:System.Windows.UIElement.LayoutUpdated" />
        <element api="E:System.Windows.UIElement.LostFocus" />
        <element api="E:System.Windows.UIElement.LostKeyboardFocus" />
        <element api="E:System.Windows.UIElement.LostMouseCapture" />
        <element api="E:System.Windows.UIElement.LostStylusCapture" />
        <element api="E:System.Windows.UIElement.LostTouchCapture" />
        <element api="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />
        <element api="E:System.Windows.UIElement.ManipulationCompleted" />
        <element api="E:System.Windows.UIElement.ManipulationDelta" />
        <element api="E:System.Windows.UIElement.ManipulationInertiaStarting" />
        <element api="E:System.Windows.UIElement.ManipulationStarted" />
        <element api="E:System.Windows.UIElement.ManipulationStarting" />
        <element api="E:System.Windows.UIElement.MouseDown" />
        <element api="E:System.Windows.UIElement.MouseEnter" />
        <element api="E:System.Windows.UIElement.MouseLeave" />
        <element api="E:System.Windows.UIElement.MouseLeftButtonDown" />
        <element api="E:System.Windows.UIElement.MouseLeftButtonUp" />
        <element api="E:System.Windows.UIElement.MouseMove" />
        <element api="E:System.Windows.UIElement.MouseRightButtonDown" />
        <element api="E:System.Windows.UIElement.MouseRightButtonUp" />
        <element api="E:System.Windows.UIElement.MouseUp" />
        <element api="E:System.Windows.UIElement.MouseWheel" />
        <element api="E:System.Windows.UIElement.PreviewDragEnter" />
        <element api="E:System.Windows.UIElement.PreviewDragLeave" />
        <element api="E:System.Windows.UIElement.PreviewDragOver" />
        <element api="E:System.Windows.UIElement.PreviewDrop" />
        <element api="E:System.Windows.UIElement.PreviewGiveFeedback" />
        <element api="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
        <element api="E:System.Windows.UIElement.PreviewKeyDown" />
        <element api="E:System.Windows.UIElement.PreviewKeyUp" />
        <element api="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
        <element api="E:System.Windows.UIElement.PreviewMouseDown" />
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />
        <element api="E:System.Windows.UIElement.PreviewMouseMove" />
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />
        <element api="E:System.Windows.UIElement.PreviewMouseUp" />
        <element api="E:System.Windows.UIElement.PreviewMouseWheel" />
        <element api="E:System.Windows.UIElement.PreviewQueryContinueDrag" />
        <element api="E:System.Windows.UIElement.PreviewStylusButtonDown" />
        <element api="E:System.Windows.UIElement.PreviewStylusButtonUp" />
        <element api="E:System.Windows.UIElement.PreviewStylusDown" />
        <element api="E:System.Windows.UIElement.PreviewStylusInAirMove" />
        <element api="E:System.Windows.UIElement.PreviewStylusInRange" />
        <element api="E:System.Windows.UIElement.PreviewStylusMove" />
        <element api="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
        <element api="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
        <element api="E:System.Windows.UIElement.PreviewStylusUp" />
        <element api="E:System.Windows.UIElement.PreviewTextInput" />
        <element api="E:System.Windows.UIElement.PreviewTouchDown" />
        <element api="E:System.Windows.UIElement.PreviewTouchMove" />
        <element api="E:System.Windows.UIElement.PreviewTouchUp" />
        <element api="E:System.Windows.UIElement.QueryContinueDrag" />
        <element api="E:System.Windows.UIElement.QueryCursor" />
        <element api="E:System.Windows.UIElement.StylusButtonDown" />
        <element api="E:System.Windows.UIElement.StylusButtonUp" />
        <element api="E:System.Windows.UIElement.StylusDown" />
        <element api="E:System.Windows.UIElement.StylusEnter" />
        <element api="E:System.Windows.UIElement.StylusInAirMove" />
        <element api="E:System.Windows.UIElement.StylusInRange" />
        <element api="E:System.Windows.UIElement.StylusLeave" />
        <element api="E:System.Windows.UIElement.StylusMove" />
        <element api="E:System.Windows.UIElement.StylusOutOfRange" />
        <element api="E:System.Windows.UIElement.StylusSystemGesture" />
        <element api="E:System.Windows.UIElement.StylusUp" />
        <element api="E:System.Windows.UIElement.TextInput" />
        <element api="E:System.Windows.UIElement.TouchDown" />
        <element api="E:System.Windows.UIElement.TouchEnter" />
        <element api="E:System.Windows.UIElement.TouchLeave" />
        <element api="E:System.Windows.UIElement.TouchMove" />
        <element api="E:System.Windows.UIElement.TouchUp" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Interop.ActiveXHost.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Interop.ActiveXHost.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)" />
        <element api="M:System.Windows.FrameworkElement.ApplyTemplate" />
        <element api="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)" />
        <element api="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
        <element api="M:System.Windows.FrameworkElement.BeginInit" />
        <element api="Overload:System.Windows.Interop.ActiveXHost.BeginStoryboard">
          <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)" />
          <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)" />
          <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
        </element>
        <element api="Overload:System.Windows.Interop.ActiveXHost.BringIntoView">
          <element api="M:System.Windows.FrameworkElement.BringIntoView" />
          <element api="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
        </element>
        <element api="M:System.Windows.FrameworkElement.EndInit" />
        <element api="M:System.Windows.FrameworkElement.FindName(System.String)" />
        <element api="M:System.Windows.FrameworkElement.FindResource(System.Object)" />
        <element api="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)" />
        <element api="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)" />
        <element api="M:System.Windows.FrameworkElement.GetUIParentCore" />
        <element api="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)" />
        <element api="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)" />
        <element api="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <element api="M:System.Windows.FrameworkElement.OnApplyTemplate" />
        <element api="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
        <element api="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)" />
        <element api="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)" />
        <element api="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
        <element api="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)" />
        <element api="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)" />
        <element api="Overload:System.Windows.Interop.ActiveXHost.SetBinding">
          <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)" />
          <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" />
        </element>
        <element api="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)" />
        <element api="M:System.Windows.FrameworkElement.TryFindResource(System.Object)" />
        <element api="M:System.Windows.FrameworkElement.UnregisterName(System.String)" />
        <element api="M:System.Windows.FrameworkElement.UpdateDefaultStyle" />
        <element api="M:System.Windows.Interop.ActiveXHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" />
        <element api="M:System.Windows.Interop.ActiveXHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)" />
        <element api="Overload:System.Windows.Interop.ActiveXHost.Dispose">
          <element api="M:System.Windows.Interop.HwndHost.Dispose" />
          <element api="M:System.Windows.Interop.ActiveXHost.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Windows.Interop.ActiveXHost.MeasureOverride(System.Windows.Size)" />
        <element api="M:System.Windows.Interop.ActiveXHost.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
        <element api="M:System.Windows.Interop.ActiveXHost.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.Interop.ActiveXHost.OnWindowPositionChanged(System.Windows.Rect)" />
        <element api="M:System.Windows.Interop.HwndHost.Finalize" />
        <element api="M:System.Windows.Interop.HwndHost.HasFocusWithinCore" />
        <element api="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer" />
        <element api="M:System.Windows.Interop.HwndHost.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)" />
        <element api="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
        <element api="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
        <element api="M:System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.TabIntoCore(System.Windows.Input.TraversalRequest)" />
        <element api="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.UpdateWindowPos" />
        <element api="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)" />
        <element api="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)" />
        <element api="M:System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)" />
        <element api="M:System.Windows.Media.Visual.PointToScreen(System.Windows.Point)" />
        <element api="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)" />
        <element api="Overload:System.Windows.Interop.ActiveXHost.TransformToAncestor">
          <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)" />
          <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)" />
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)" />
        <element api="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)" />
        <element api="Overload:System.Windows.Interop.ActiveXHost.AddHandler">
          <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
          <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
        </element>
        <element api="M:System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
        <element api="Overload:System.Windows.Interop.ActiveXHost.ApplyAnimationClock">
          <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />
        <element api="Overload:System.Windows.Interop.ActiveXHost.BeginAnimation">
          <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.UIElement.CaptureMouse" />
        <element api="M:System.Windows.UIElement.CaptureStylus" />
        <element api="M:System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)" />
        <element api="M:System.Windows.UIElement.Focus" />
        <element api="M:System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="Overload:System.Windows.Interop.ActiveXHost.HitTestCore">
          <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />
          <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
        </element>
        <element api="M:System.Windows.UIElement.InputHitTest(System.Windows.Point)" />
        <element api="M:System.Windows.UIElement.InvalidateArrange" />
        <element api="M:System.Windows.UIElement.InvalidateMeasure" />
        <element api="M:System.Windows.UIElement.InvalidateVisual" />
        <element api="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
        <element api="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" />
        <element api="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
        <element api="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
        <element api="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" />
        <element api="M:System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
        <element api="M:System.Windows.UIElement.ReleaseAllTouchCaptures" />
        <element api="M:System.Windows.UIElement.ReleaseMouseCapture" />
        <element api="M:System.Windows.UIElement.ReleaseStylusCapture" />
        <element api="M:System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
        <element api="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
        <element api="M:System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)" />
        <element api="M:System.Windows.UIElement.UpdateLayout" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.FrameworkElement.ActualHeight" />
        <element api="P:System.Windows.FrameworkElement.ActualWidth" />
        <element api="P:System.Windows.FrameworkElement.BindingGroup" />
        <element api="P:System.Windows.FrameworkElement.ContextMenu" />
        <element api="P:System.Windows.FrameworkElement.Cursor" />
        <element api="P:System.Windows.FrameworkElement.DataContext" />
        <element api="P:System.Windows.FrameworkElement.DefaultStyleKey" />
        <element api="P:System.Windows.FrameworkElement.FlowDirection" />
        <element api="P:System.Windows.FrameworkElement.FocusVisualStyle" />
        <element api="P:System.Windows.FrameworkElement.ForceCursor" />
        <element api="P:System.Windows.FrameworkElement.Height" />
        <element api="P:System.Windows.FrameworkElement.HorizontalAlignment" />
        <element api="P:System.Windows.FrameworkElement.InheritanceBehavior" />
        <element api="P:System.Windows.FrameworkElement.InputScope" />
        <element api="P:System.Windows.FrameworkElement.IsInitialized" />
        <element api="P:System.Windows.FrameworkElement.IsLoaded" />
        <element api="P:System.Windows.FrameworkElement.Language" />
        <element api="P:System.Windows.FrameworkElement.LayoutTransform" />
        <element api="P:System.Windows.FrameworkElement.LogicalChildren" />
        <element api="P:System.Windows.FrameworkElement.Margin" />
        <element api="P:System.Windows.FrameworkElement.MaxHeight" />
        <element api="P:System.Windows.FrameworkElement.MaxWidth" />
        <element api="P:System.Windows.FrameworkElement.MinHeight" />
        <element api="P:System.Windows.FrameworkElement.MinWidth" />
        <element api="P:System.Windows.FrameworkElement.Name" />
        <element api="P:System.Windows.FrameworkElement.OverridesDefaultStyle" />
        <element api="P:System.Windows.FrameworkElement.Parent" />
        <element api="P:System.Windows.FrameworkElement.Resources" />
        <element api="P:System.Windows.FrameworkElement.Style" />
        <element api="P:System.Windows.FrameworkElement.Tag" />
        <element api="P:System.Windows.FrameworkElement.TemplatedParent" />
        <element api="P:System.Windows.FrameworkElement.ToolTip" />
        <element api="P:System.Windows.FrameworkElement.Triggers" />
        <element api="P:System.Windows.FrameworkElement.UseLayoutRounding" />
        <element api="P:System.Windows.FrameworkElement.VerticalAlignment" />
        <element api="P:System.Windows.FrameworkElement.VisualChildrenCount" />
        <element api="P:System.Windows.FrameworkElement.Width" />
        <element api="P:System.Windows.Interop.ActiveXHost.IsDisposed" />
        <element api="P:System.Windows.Interop.HwndHost.Handle" />
        <element api="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite" />
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffect" />
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffectInput" />
        <element api="P:System.Windows.Media.Visual.VisualBitmapScalingMode" />
        <element api="P:System.Windows.Media.Visual.VisualCacheMode" />
        <element api="P:System.Windows.Media.Visual.VisualClearTypeHint" />
        <element api="P:System.Windows.Media.Visual.VisualClip" />
        <element api="P:System.Windows.Media.Visual.VisualEdgeMode" />
        <element api="P:System.Windows.Media.Visual.VisualEffect" />
        <element api="P:System.Windows.Media.Visual.VisualOffset" />
        <element api="P:System.Windows.Media.Visual.VisualOpacity" />
        <element api="P:System.Windows.Media.Visual.VisualOpacityMask" />
        <element api="P:System.Windows.Media.Visual.VisualParent" />
        <element api="P:System.Windows.Media.Visual.VisualScrollableAreaClip" />
        <element api="P:System.Windows.Media.Visual.VisualTextHintingMode" />
        <element api="P:System.Windows.Media.Visual.VisualTextRenderingMode" />
        <element api="P:System.Windows.Media.Visual.VisualTransform" />
        <element api="P:System.Windows.Media.Visual.VisualXSnappingGuidelines" />
        <element api="P:System.Windows.Media.Visual.VisualYSnappingGuidelines" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
        <element api="P:System.Windows.UIElement.AllowDrop" />
        <element api="P:System.Windows.UIElement.AreAnyTouchesCaptured" />
        <element api="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" />
        <element api="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" />
        <element api="P:System.Windows.UIElement.AreAnyTouchesOver" />
        <element api="P:System.Windows.UIElement.BitmapEffect" />
        <element api="P:System.Windows.UIElement.BitmapEffectInput" />
        <element api="P:System.Windows.UIElement.CacheMode" />
        <element api="P:System.Windows.UIElement.Clip" />
        <element api="P:System.Windows.UIElement.ClipToBounds" />
        <element api="P:System.Windows.UIElement.CommandBindings" />
        <element api="P:System.Windows.UIElement.DesiredSize" />
        <element api="P:System.Windows.UIElement.Effect" />
        <element api="P:System.Windows.UIElement.Focusable" />
        <element api="P:System.Windows.UIElement.HasAnimatedProperties" />
        <element api="P:System.Windows.UIElement.HasEffectiveKeyboardFocus" />
        <element api="P:System.Windows.UIElement.InputBindings" />
        <element api="P:System.Windows.UIElement.IsArrangeValid" />
        <element api="P:System.Windows.UIElement.IsEnabled" />
        <element api="P:System.Windows.UIElement.IsEnabledCore" />
        <element api="P:System.Windows.UIElement.IsFocused" />
        <element api="P:System.Windows.UIElement.IsHitTestVisible" />
        <element api="P:System.Windows.UIElement.IsInputMethodEnabled" />
        <element api="P:System.Windows.UIElement.IsKeyboardFocused" />
        <element api="P:System.Windows.UIElement.IsKeyboardFocusWithin" />
        <element api="P:System.Windows.UIElement.IsManipulationEnabled" />
        <element api="P:System.Windows.UIElement.IsMeasureValid" />
        <element api="P:System.Windows.UIElement.IsMouseCaptured" />
        <element api="P:System.Windows.UIElement.IsMouseCaptureWithin" />
        <element api="P:System.Windows.UIElement.IsMouseDirectlyOver" />
        <element api="P:System.Windows.UIElement.IsMouseOver" />
        <element api="P:System.Windows.UIElement.IsStylusCaptured" />
        <element api="P:System.Windows.UIElement.IsStylusCaptureWithin" />
        <element api="P:System.Windows.UIElement.IsStylusDirectlyOver" />
        <element api="P:System.Windows.UIElement.IsStylusOver" />
        <element api="P:System.Windows.UIElement.IsVisible" />
        <element api="P:System.Windows.UIElement.Opacity" />
        <element api="P:System.Windows.UIElement.OpacityMask" />
        <element api="P:System.Windows.UIElement.PersistId" />
        <element api="P:System.Windows.UIElement.RenderSize" />
        <element api="P:System.Windows.UIElement.RenderTransform" />
        <element api="P:System.Windows.UIElement.RenderTransformOrigin" />
        <element api="P:System.Windows.UIElement.SnapsToDevicePixels" />
        <element api="P:System.Windows.UIElement.StylusPlugIns" />
        <element api="P:System.Windows.UIElement.TouchesCaptured" />
        <element api="P:System.Windows.UIElement.TouchesCapturedWithin" />
        <element api="P:System.Windows.UIElement.TouchesDirectlyOver" />
        <element api="P:System.Windows.UIElement.TouchesOver" />
        <element api="P:System.Windows.UIElement.Uid" />
        <element api="P:System.Windows.UIElement.Visibility" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Interop.ActiveXHost">
      <topicdata name="ActiveXHost" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Interop.ActiveXHost" />
      <apidata name="ActiveXHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Interop.ActiveXHost.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Interop.ActiveXHost.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)" />
        <element api="M:System.Windows.FrameworkElement.ApplyTemplate" />
        <element api="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)" />
        <element api="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
        <element api="M:System.Windows.FrameworkElement.BeginInit" />
        <element api="Overload:System.Windows.Interop.ActiveXHost.BeginStoryboard">
          <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)" />
          <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)" />
          <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
        </element>
        <element api="Overload:System.Windows.Interop.ActiveXHost.BringIntoView">
          <element api="M:System.Windows.FrameworkElement.BringIntoView" />
          <element api="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
        </element>
        <element api="M:System.Windows.FrameworkElement.EndInit" />
        <element api="M:System.Windows.FrameworkElement.FindName(System.String)" />
        <element api="M:System.Windows.FrameworkElement.FindResource(System.Object)" />
        <element api="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)" />
        <element api="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)" />
        <element api="M:System.Windows.FrameworkElement.GetUIParentCore" />
        <element api="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)" />
        <element api="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)" />
        <element api="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <element api="M:System.Windows.FrameworkElement.OnApplyTemplate" />
        <element api="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
        <element api="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)" />
        <element api="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)" />
        <element api="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
        <element api="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)" />
        <element api="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)" />
        <element api="Overload:System.Windows.Interop.ActiveXHost.SetBinding">
          <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)" />
          <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" />
        </element>
        <element api="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)" />
        <element api="M:System.Windows.FrameworkElement.TryFindResource(System.Object)" />
        <element api="M:System.Windows.FrameworkElement.UnregisterName(System.String)" />
        <element api="M:System.Windows.FrameworkElement.UpdateDefaultStyle" />
        <element api="M:System.Windows.Interop.ActiveXHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" />
        <element api="M:System.Windows.Interop.ActiveXHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)" />
        <element api="Overload:System.Windows.Interop.ActiveXHost.Dispose">
          <element api="M:System.Windows.Interop.HwndHost.Dispose" />
          <element api="M:System.Windows.Interop.ActiveXHost.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Windows.Interop.ActiveXHost.MeasureOverride(System.Windows.Size)" />
        <element api="M:System.Windows.Interop.ActiveXHost.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
        <element api="M:System.Windows.Interop.ActiveXHost.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.Interop.ActiveXHost.OnWindowPositionChanged(System.Windows.Rect)" />
        <element api="M:System.Windows.Interop.HwndHost.Finalize" />
        <element api="M:System.Windows.Interop.HwndHost.HasFocusWithinCore" />
        <element api="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer" />
        <element api="M:System.Windows.Interop.HwndHost.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)" />
        <element api="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
        <element api="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
        <element api="M:System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.TabIntoCore(System.Windows.Input.TraversalRequest)" />
        <element api="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.UpdateWindowPos" />
        <element api="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)" />
        <element api="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)" />
        <element api="M:System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)" />
        <element api="M:System.Windows.Media.Visual.PointToScreen(System.Windows.Point)" />
        <element api="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)" />
        <element api="Overload:System.Windows.Interop.ActiveXHost.TransformToAncestor">
          <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)" />
          <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)" />
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)" />
        <element api="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)" />
        <element api="Overload:System.Windows.Interop.ActiveXHost.AddHandler">
          <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
          <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
        </element>
        <element api="M:System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
        <element api="Overload:System.Windows.Interop.ActiveXHost.ApplyAnimationClock">
          <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />
        <element api="Overload:System.Windows.Interop.ActiveXHost.BeginAnimation">
          <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.UIElement.CaptureMouse" />
        <element api="M:System.Windows.UIElement.CaptureStylus" />
        <element api="M:System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)" />
        <element api="M:System.Windows.UIElement.Focus" />
        <element api="M:System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="Overload:System.Windows.Interop.ActiveXHost.HitTestCore">
          <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />
          <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
        </element>
        <element api="M:System.Windows.UIElement.InputHitTest(System.Windows.Point)" />
        <element api="M:System.Windows.UIElement.InvalidateArrange" />
        <element api="M:System.Windows.UIElement.InvalidateMeasure" />
        <element api="M:System.Windows.UIElement.InvalidateVisual" />
        <element api="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
        <element api="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" />
        <element api="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
        <element api="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
        <element api="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" />
        <element api="M:System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
        <element api="M:System.Windows.UIElement.ReleaseAllTouchCaptures" />
        <element api="M:System.Windows.UIElement.ReleaseMouseCapture" />
        <element api="M:System.Windows.UIElement.ReleaseStylusCapture" />
        <element api="M:System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
        <element api="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
        <element api="M:System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)" />
        <element api="M:System.Windows.UIElement.UpdateLayout" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ActiveXHost" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Interop.ActiveXHost">
      <topicdata name="ActiveXHost" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Interop.ActiveXHost" />
      <apidata name="ActiveXHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.FrameworkElement.ActualHeight" />
        <element api="P:System.Windows.FrameworkElement.ActualWidth" />
        <element api="P:System.Windows.FrameworkElement.BindingGroup" />
        <element api="P:System.Windows.FrameworkElement.ContextMenu" />
        <element api="P:System.Windows.FrameworkElement.Cursor" />
        <element api="P:System.Windows.FrameworkElement.DataContext" />
        <element api="P:System.Windows.FrameworkElement.DefaultStyleKey" />
        <element api="P:System.Windows.FrameworkElement.FlowDirection" />
        <element api="P:System.Windows.FrameworkElement.FocusVisualStyle" />
        <element api="P:System.Windows.FrameworkElement.ForceCursor" />
        <element api="P:System.Windows.FrameworkElement.Height" />
        <element api="P:System.Windows.FrameworkElement.HorizontalAlignment" />
        <element api="P:System.Windows.FrameworkElement.InheritanceBehavior" />
        <element api="P:System.Windows.FrameworkElement.InputScope" />
        <element api="P:System.Windows.FrameworkElement.IsInitialized" />
        <element api="P:System.Windows.FrameworkElement.IsLoaded" />
        <element api="P:System.Windows.FrameworkElement.Language" />
        <element api="P:System.Windows.FrameworkElement.LayoutTransform" />
        <element api="P:System.Windows.FrameworkElement.LogicalChildren" />
        <element api="P:System.Windows.FrameworkElement.Margin" />
        <element api="P:System.Windows.FrameworkElement.MaxHeight" />
        <element api="P:System.Windows.FrameworkElement.MaxWidth" />
        <element api="P:System.Windows.FrameworkElement.MinHeight" />
        <element api="P:System.Windows.FrameworkElement.MinWidth" />
        <element api="P:System.Windows.FrameworkElement.Name" />
        <element api="P:System.Windows.FrameworkElement.OverridesDefaultStyle" />
        <element api="P:System.Windows.FrameworkElement.Parent" />
        <element api="P:System.Windows.FrameworkElement.Resources" />
        <element api="P:System.Windows.FrameworkElement.Style" />
        <element api="P:System.Windows.FrameworkElement.Tag" />
        <element api="P:System.Windows.FrameworkElement.TemplatedParent" />
        <element api="P:System.Windows.FrameworkElement.ToolTip" />
        <element api="P:System.Windows.FrameworkElement.Triggers" />
        <element api="P:System.Windows.FrameworkElement.UseLayoutRounding" />
        <element api="P:System.Windows.FrameworkElement.VerticalAlignment" />
        <element api="P:System.Windows.FrameworkElement.VisualChildrenCount" />
        <element api="P:System.Windows.FrameworkElement.Width" />
        <element api="P:System.Windows.Interop.ActiveXHost.IsDisposed" />
        <element api="P:System.Windows.Interop.HwndHost.Handle" />
        <element api="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite" />
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffect" />
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffectInput" />
        <element api="P:System.Windows.Media.Visual.VisualBitmapScalingMode" />
        <element api="P:System.Windows.Media.Visual.VisualCacheMode" />
        <element api="P:System.Windows.Media.Visual.VisualClearTypeHint" />
        <element api="P:System.Windows.Media.Visual.VisualClip" />
        <element api="P:System.Windows.Media.Visual.VisualEdgeMode" />
        <element api="P:System.Windows.Media.Visual.VisualEffect" />
        <element api="P:System.Windows.Media.Visual.VisualOffset" />
        <element api="P:System.Windows.Media.Visual.VisualOpacity" />
        <element api="P:System.Windows.Media.Visual.VisualOpacityMask" />
        <element api="P:System.Windows.Media.Visual.VisualParent" />
        <element api="P:System.Windows.Media.Visual.VisualScrollableAreaClip" />
        <element api="P:System.Windows.Media.Visual.VisualTextHintingMode" />
        <element api="P:System.Windows.Media.Visual.VisualTextRenderingMode" />
        <element api="P:System.Windows.Media.Visual.VisualTransform" />
        <element api="P:System.Windows.Media.Visual.VisualXSnappingGuidelines" />
        <element api="P:System.Windows.Media.Visual.VisualYSnappingGuidelines" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
        <element api="P:System.Windows.UIElement.AllowDrop" />
        <element api="P:System.Windows.UIElement.AreAnyTouchesCaptured" />
        <element api="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" />
        <element api="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" />
        <element api="P:System.Windows.UIElement.AreAnyTouchesOver" />
        <element api="P:System.Windows.UIElement.BitmapEffect" />
        <element api="P:System.Windows.UIElement.BitmapEffectInput" />
        <element api="P:System.Windows.UIElement.CacheMode" />
        <element api="P:System.Windows.UIElement.Clip" />
        <element api="P:System.Windows.UIElement.ClipToBounds" />
        <element api="P:System.Windows.UIElement.CommandBindings" />
        <element api="P:System.Windows.UIElement.DesiredSize" />
        <element api="P:System.Windows.UIElement.Effect" />
        <element api="P:System.Windows.UIElement.Focusable" />
        <element api="P:System.Windows.UIElement.HasAnimatedProperties" />
        <element api="P:System.Windows.UIElement.HasEffectiveKeyboardFocus" />
        <element api="P:System.Windows.UIElement.InputBindings" />
        <element api="P:System.Windows.UIElement.IsArrangeValid" />
        <element api="P:System.Windows.UIElement.IsEnabled" />
        <element api="P:System.Windows.UIElement.IsEnabledCore" />
        <element api="P:System.Windows.UIElement.IsFocused" />
        <element api="P:System.Windows.UIElement.IsHitTestVisible" />
        <element api="P:System.Windows.UIElement.IsInputMethodEnabled" />
        <element api="P:System.Windows.UIElement.IsKeyboardFocused" />
        <element api="P:System.Windows.UIElement.IsKeyboardFocusWithin" />
        <element api="P:System.Windows.UIElement.IsManipulationEnabled" />
        <element api="P:System.Windows.UIElement.IsMeasureValid" />
        <element api="P:System.Windows.UIElement.IsMouseCaptured" />
        <element api="P:System.Windows.UIElement.IsMouseCaptureWithin" />
        <element api="P:System.Windows.UIElement.IsMouseDirectlyOver" />
        <element api="P:System.Windows.UIElement.IsMouseOver" />
        <element api="P:System.Windows.UIElement.IsStylusCaptured" />
        <element api="P:System.Windows.UIElement.IsStylusCaptureWithin" />
        <element api="P:System.Windows.UIElement.IsStylusDirectlyOver" />
        <element api="P:System.Windows.UIElement.IsStylusOver" />
        <element api="P:System.Windows.UIElement.IsVisible" />
        <element api="P:System.Windows.UIElement.Opacity" />
        <element api="P:System.Windows.UIElement.OpacityMask" />
        <element api="P:System.Windows.UIElement.PersistId" />
        <element api="P:System.Windows.UIElement.RenderSize" />
        <element api="P:System.Windows.UIElement.RenderTransform" />
        <element api="P:System.Windows.UIElement.RenderTransformOrigin" />
        <element api="P:System.Windows.UIElement.SnapsToDevicePixels" />
        <element api="P:System.Windows.UIElement.StylusPlugIns" />
        <element api="P:System.Windows.UIElement.TouchesCaptured" />
        <element api="P:System.Windows.UIElement.TouchesCapturedWithin" />
        <element api="P:System.Windows.UIElement.TouchesDirectlyOver" />
        <element api="P:System.Windows.UIElement.TouchesOver" />
        <element api="P:System.Windows.UIElement.Uid" />
        <element api="P:System.Windows.UIElement.Visibility" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ActiveXHost" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Interop.ActiveXHost">
      <topicdata name="ActiveXHost" group="list" subgroup="Events" typeTopicId="T:System.Windows.Interop.ActiveXHost" />
      <apidata name="ActiveXHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Windows.FrameworkElement.ContextMenuClosing" />
        <element api="E:System.Windows.FrameworkElement.ContextMenuOpening" />
        <element api="E:System.Windows.FrameworkElement.DataContextChanged" />
        <element api="E:System.Windows.FrameworkElement.Initialized" />
        <element api="E:System.Windows.FrameworkElement.Loaded" />
        <element api="E:System.Windows.FrameworkElement.RequestBringIntoView" />
        <element api="E:System.Windows.FrameworkElement.SizeChanged" />
        <element api="E:System.Windows.FrameworkElement.SourceUpdated" />
        <element api="E:System.Windows.FrameworkElement.TargetUpdated" />
        <element api="E:System.Windows.FrameworkElement.ToolTipClosing" />
        <element api="E:System.Windows.FrameworkElement.ToolTipOpening" />
        <element api="E:System.Windows.FrameworkElement.Unloaded" />
        <element api="E:System.Windows.Interop.HwndHost.DpiChanged" />
        <element api="E:System.Windows.Interop.HwndHost.MessageHook" />
        <element api="E:System.Windows.UIElement.DragEnter" />
        <element api="E:System.Windows.UIElement.DragLeave" />
        <element api="E:System.Windows.UIElement.DragOver" />
        <element api="E:System.Windows.UIElement.Drop" />
        <element api="E:System.Windows.UIElement.FocusableChanged" />
        <element api="E:System.Windows.UIElement.GiveFeedback" />
        <element api="E:System.Windows.UIElement.GotFocus" />
        <element api="E:System.Windows.UIElement.GotKeyboardFocus" />
        <element api="E:System.Windows.UIElement.GotMouseCapture" />
        <element api="E:System.Windows.UIElement.GotStylusCapture" />
        <element api="E:System.Windows.UIElement.GotTouchCapture" />
        <element api="E:System.Windows.UIElement.IsEnabledChanged" />
        <element api="E:System.Windows.UIElement.IsHitTestVisibleChanged" />
        <element api="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />
        <element api="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />
        <element api="E:System.Windows.UIElement.IsMouseCapturedChanged" />
        <element api="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />
        <element api="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />
        <element api="E:System.Windows.UIElement.IsStylusCapturedChanged" />
        <element api="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />
        <element api="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" />
        <element api="E:System.Windows.UIElement.IsVisibleChanged" />
        <element api="E:System.Windows.UIElement.KeyDown" />
        <element api="E:System.Windows.UIElement.KeyUp" />
        <element api="E:System.Windows.UIElement.LayoutUpdated" />
        <element api="E:System.Windows.UIElement.LostFocus" />
        <element api="E:System.Windows.UIElement.LostKeyboardFocus" />
        <element api="E:System.Windows.UIElement.LostMouseCapture" />
        <element api="E:System.Windows.UIElement.LostStylusCapture" />
        <element api="E:System.Windows.UIElement.LostTouchCapture" />
        <element api="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />
        <element api="E:System.Windows.UIElement.ManipulationCompleted" />
        <element api="E:System.Windows.UIElement.ManipulationDelta" />
        <element api="E:System.Windows.UIElement.ManipulationInertiaStarting" />
        <element api="E:System.Windows.UIElement.ManipulationStarted" />
        <element api="E:System.Windows.UIElement.ManipulationStarting" />
        <element api="E:System.Windows.UIElement.MouseDown" />
        <element api="E:System.Windows.UIElement.MouseEnter" />
        <element api="E:System.Windows.UIElement.MouseLeave" />
        <element api="E:System.Windows.UIElement.MouseLeftButtonDown" />
        <element api="E:System.Windows.UIElement.MouseLeftButtonUp" />
        <element api="E:System.Windows.UIElement.MouseMove" />
        <element api="E:System.Windows.UIElement.MouseRightButtonDown" />
        <element api="E:System.Windows.UIElement.MouseRightButtonUp" />
        <element api="E:System.Windows.UIElement.MouseUp" />
        <element api="E:System.Windows.UIElement.MouseWheel" />
        <element api="E:System.Windows.UIElement.PreviewDragEnter" />
        <element api="E:System.Windows.UIElement.PreviewDragLeave" />
        <element api="E:System.Windows.UIElement.PreviewDragOver" />
        <element api="E:System.Windows.UIElement.PreviewDrop" />
        <element api="E:System.Windows.UIElement.PreviewGiveFeedback" />
        <element api="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
        <element api="E:System.Windows.UIElement.PreviewKeyDown" />
        <element api="E:System.Windows.UIElement.PreviewKeyUp" />
        <element api="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
        <element api="E:System.Windows.UIElement.PreviewMouseDown" />
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />
        <element api="E:System.Windows.UIElement.PreviewMouseMove" />
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />
        <element api="E:System.Windows.UIElement.PreviewMouseUp" />
        <element api="E:System.Windows.UIElement.PreviewMouseWheel" />
        <element api="E:System.Windows.UIElement.PreviewQueryContinueDrag" />
        <element api="E:System.Windows.UIElement.PreviewStylusButtonDown" />
        <element api="E:System.Windows.UIElement.PreviewStylusButtonUp" />
        <element api="E:System.Windows.UIElement.PreviewStylusDown" />
        <element api="E:System.Windows.UIElement.PreviewStylusInAirMove" />
        <element api="E:System.Windows.UIElement.PreviewStylusInRange" />
        <element api="E:System.Windows.UIElement.PreviewStylusMove" />
        <element api="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
        <element api="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
        <element api="E:System.Windows.UIElement.PreviewStylusUp" />
        <element api="E:System.Windows.UIElement.PreviewTextInput" />
        <element api="E:System.Windows.UIElement.PreviewTouchDown" />
        <element api="E:System.Windows.UIElement.PreviewTouchMove" />
        <element api="E:System.Windows.UIElement.PreviewTouchUp" />
        <element api="E:System.Windows.UIElement.QueryContinueDrag" />
        <element api="E:System.Windows.UIElement.QueryCursor" />
        <element api="E:System.Windows.UIElement.StylusButtonDown" />
        <element api="E:System.Windows.UIElement.StylusButtonUp" />
        <element api="E:System.Windows.UIElement.StylusDown" />
        <element api="E:System.Windows.UIElement.StylusEnter" />
        <element api="E:System.Windows.UIElement.StylusInAirMove" />
        <element api="E:System.Windows.UIElement.StylusInRange" />
        <element api="E:System.Windows.UIElement.StylusLeave" />
        <element api="E:System.Windows.UIElement.StylusMove" />
        <element api="E:System.Windows.UIElement.StylusOutOfRange" />
        <element api="E:System.Windows.UIElement.StylusSystemGesture" />
        <element api="E:System.Windows.UIElement.StylusUp" />
        <element api="E:System.Windows.UIElement.TextInput" />
        <element api="E:System.Windows.UIElement.TouchDown" />
        <element api="E:System.Windows.UIElement.TouchEnter" />
        <element api="E:System.Windows.UIElement.TouchLeave" />
        <element api="E:System.Windows.UIElement.TouchMove" />
        <element api="E:System.Windows.UIElement.TouchUp" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ActiveXHost" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Interop.ActiveXHost.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Interop.HwndHost.Dispose" />
        <element api="M:System.Windows.Interop.ActiveXHost.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ActiveXHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.ActiveXHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
      <topicdata group="api" />
      <apidata name="BuildWindowCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
          <type api="T:System.Windows.Interop.HwndHost" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="hwndParent">
          <type api="T:System.Runtime.InteropServices.HandleRef" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Runtime.InteropServices.HandleRef" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ActiveXHost" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.ActiveXHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
      <topicdata group="api" />
      <apidata name="DestroyWindowCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
          <type api="T:System.Windows.Interop.HwndHost" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="hwnd">
          <type api="T:System.Runtime.InteropServices.HandleRef" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ActiveXHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.ActiveXHost.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Windows.Interop.ActiveXHost.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
          <type api="T:System.Windows.Interop.HwndHost" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ActiveXHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.ActiveXHost.IsDisposed">
      <topicdata group="api" />
      <apidata name="IsDisposed" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDisposed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ActiveXHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.ActiveXHost.MeasureOverride(System.Windows.Size)">
      <topicdata group="api" />
      <apidata name="MeasureOverride" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
          <type api="T:System.Windows.Interop.HwndHost" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="swConstraint">
          <type api="T:System.Windows.Size" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ActiveXHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.ActiveXHost.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <topicdata group="api" />
      <apidata name="OnAccessKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
          <type api="T:System.Windows.UIElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="args">
          <type api="T:System.Windows.Input.AccessKeyEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ActiveXHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.ActiveXHost.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <type api="T:System.Windows.FrameworkElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ActiveXHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.ActiveXHost.OnWindowPositionChanged(System.Windows.Rect)">
      <topicdata group="api" />
      <apidata name="OnWindowPositionChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Interop.HwndHost.OnWindowPositionChanged(System.Windows.Rect)">
          <type api="T:System.Windows.Interop.HwndHost" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="bounds">
          <type api="T:System.Windows.Rect" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ActiveXHost" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Windows.Interop.BrowserInteropHelper">
      <topicdata group="api" />
      <apidata name="BrowserInteropHelper" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:System.Windows.Interop.BrowserInteropHelper.ClientSite" />
        <element api="P:System.Windows.Interop.BrowserInteropHelper.HostScript" />
        <element api="P:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted" />
        <element api="P:System.Windows.Interop.BrowserInteropHelper.Source" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Interop.BrowserInteropHelper">
      <topicdata name="BrowserInteropHelper" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Interop.BrowserInteropHelper" />
      <apidata name="BrowserInteropHelper" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Interop.BrowserInteropHelper.ClientSite" />
        <element api="P:System.Windows.Interop.BrowserInteropHelper.HostScript" />
        <element api="P:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted" />
        <element api="P:System.Windows.Interop.BrowserInteropHelper.Source" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.BrowserInteropHelper" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.BrowserInteropHelper.ClientSite">
      <topicdata group="api" />
      <apidata name="ClientSite" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClientSite">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.BrowserInteropHelper" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.BrowserInteropHelper.HostScript">
      <topicdata group="api" />
      <apidata name="HostScript" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HostScript">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
          <attribute>
            <type api="T:System.Security.SecurityTreatAsSafeAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.BrowserInteropHelper" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted">
      <topicdata group="api" />
      <apidata name="IsBrowserHosted" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsBrowserHosted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.BrowserInteropHelper" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.BrowserInteropHelper.Source">
      <topicdata group="api" />
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Source" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.BrowserInteropHelper" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Interop.ComponentDispatcher">
      <topicdata group="api" />
      <apidata name="ComponentDispatcher" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal" />
        <element api="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal" />
        <element api="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" />
        <element api="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle" />
        <element api="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />
        <element api="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
        <element api="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
        <element api="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle" />
        <element api="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)" />
        <element api="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage" />
        <element api="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Interop.ComponentDispatcher">
      <topicdata name="ComponentDispatcher" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Interop.ComponentDispatcher" />
      <apidata name="ComponentDispatcher" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
        <element api="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
        <element api="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle" />
        <element api="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ComponentDispatcher" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Interop.ComponentDispatcher">
      <topicdata name="ComponentDispatcher" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Interop.ComponentDispatcher" />
      <apidata name="ComponentDispatcher" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage" />
        <element api="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ComponentDispatcher" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Interop.ComponentDispatcher">
      <topicdata name="ComponentDispatcher" group="list" subgroup="Events" typeTopicId="T:System.Windows.Interop.ComponentDispatcher" />
      <apidata name="ComponentDispatcher" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal" />
        <element api="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal" />
        <element api="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" />
        <element api="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle" />
        <element api="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ComponentDispatcher" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
      <topicdata group="api" />
      <apidata name="CurrentKeyboardMessage" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentKeyboardMessage">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Windows.Interop.MSG" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ComponentDispatcher" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal">
      <topicdata group="api" />
      <apidata name="EnterThreadModal" group="member" subgroup="event" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_EnterThreadModal">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </adder>
      <remover name="remove_EnterThreadModal">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </remover>
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ComponentDispatcher" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
      <topicdata group="api" />
      <apidata name="IsThreadModal" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsThreadModal">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ComponentDispatcher" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal">
      <topicdata group="api" />
      <apidata name="LeaveThreadModal" group="member" subgroup="event" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_LeaveThreadModal">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </adder>
      <remover name="remove_LeaveThreadModal">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </remover>
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ComponentDispatcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.ComponentDispatcher.PopModal">
      <topicdata group="api" />
      <apidata name="PopModal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ComponentDispatcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.ComponentDispatcher.PushModal">
      <topicdata group="api" />
      <apidata name="PushModal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ComponentDispatcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle">
      <topicdata group="api" />
      <apidata name="RaiseIdle" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ComponentDispatcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
      <topicdata group="api" />
      <apidata name="RaiseThreadMessage" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="msg">
          <referenceTo>
            <type api="T:System.Windows.Interop.MSG" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ComponentDispatcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage">
      <topicdata group="api" />
      <apidata name="ThreadFilterMessage" group="member" subgroup="event" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ThreadFilterMessage">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </adder>
      <remover name="remove_ThreadFilterMessage">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </remover>
      <eventhandler>
        <type api="T:System.Windows.Interop.ThreadMessageEventHandler" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ComponentDispatcher" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
      <topicdata group="api" />
      <apidata name="ThreadIdle" group="member" subgroup="event" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ThreadIdle">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </adder>
      <remover name="remove_ThreadIdle">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </remover>
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ComponentDispatcher" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
      <topicdata group="api" />
      <apidata name="ThreadPreprocessMessage" group="member" subgroup="event" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ThreadPreprocessMessage">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </adder>
      <remover name="remove_ThreadPreprocessMessage">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </remover>
      <eventhandler>
        <type api="T:System.Windows.Interop.ThreadMessageEventHandler" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.ComponentDispatcher" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Interop.CursorInteropHelper">
      <topicdata group="api" />
      <apidata name="CursorInteropHelper" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Windows.Interop.CursorInteropHelper.Create(System.Runtime.InteropServices.SafeHandle)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Interop.CursorInteropHelper">
      <topicdata name="CursorInteropHelper" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Interop.CursorInteropHelper" />
      <apidata name="CursorInteropHelper" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.Interop.CursorInteropHelper.Create(System.Runtime.InteropServices.SafeHandle)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.CursorInteropHelper" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.CursorInteropHelper.Create(System.Runtime.InteropServices.SafeHandle)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cursorHandle">
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Input.Cursor" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.CursorInteropHelper" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Windows.Interop.D3DImage">
      <topicdata group="api" />
      <apidata name="D3DImage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Interop.D3DImage.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Media.ImageSource" ref="true" />
          <type api="T:System.Windows.Media.Animation.Animatable" ref="true" />
          <type api="T:System.Windows.Freezable" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
        <element api="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged" />
        <element api="F:System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Windows.Interop.D3DImage.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Interop.D3DImage.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Freezable.CreateInstance" />
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="M:System.Windows.Freezable.OnChanged" />
        <element api="Overload:System.Windows.Interop.D3DImage.OnFreezablePropertyChanged">
          <element api="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
          <element api="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        </element>
        <element api="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.Freezable.ReadPreamble" />
        <element api="M:System.Windows.Freezable.WritePostscript" />
        <element api="M:System.Windows.Freezable.WritePreamble" />
        <element api="Overload:System.Windows.Interop.D3DImage.#ctor">
          <element api="M:System.Windows.Interop.D3DImage.#ctor" />
          <element api="M:System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)" />
        </element>
        <element api="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)" />
        <element api="M:System.Windows.Interop.D3DImage.Clone" />
        <element api="M:System.Windows.Interop.D3DImage.CloneCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Interop.D3DImage.CloneCurrentValue" />
        <element api="M:System.Windows.Interop.D3DImage.CloneCurrentValueCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Interop.D3DImage.CopyBackBuffer" />
        <element api="M:System.Windows.Interop.D3DImage.CreateInstanceCore" />
        <element api="M:System.Windows.Interop.D3DImage.Finalize" />
        <element api="M:System.Windows.Interop.D3DImage.FreezeCore(System.Boolean)" />
        <element api="M:System.Windows.Interop.D3DImage.GetAsFrozenCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Interop.D3DImage.Lock" />
        <element api="Overload:System.Windows.Interop.D3DImage.SetBackBuffer">
          <element api="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
          <element api="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)" />
        </element>
        <element api="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
        <element api="M:System.Windows.Interop.D3DImage.Unlock" />
        <element api="Overload:System.Windows.Interop.D3DImage.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Interop.D3DImage.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.ImageSource.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
        <element api="Overload:System.Windows.Interop.D3DImage.ToString">
          <element api="M:System.Windows.Media.ImageSource.ToString" />
          <element api="M:System.Windows.Media.ImageSource.ToString(System.IFormatProvider)" />
        </element>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Interop.D3DImage.Height" />
        <element api="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
        <element api="P:System.Windows.Interop.D3DImage.Metadata" />
        <element api="P:System.Windows.Interop.D3DImage.PixelHeight" />
        <element api="P:System.Windows.Interop.D3DImage.PixelWidth" />
        <element api="P:System.Windows.Interop.D3DImage.Width" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Interop.D3DImage">
      <topicdata name="D3DImage" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Interop.D3DImage" />
      <apidata name="D3DImage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Interop.D3DImage.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Windows.Interop.D3DImage.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Interop.D3DImage.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Freezable.CreateInstance" />
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="M:System.Windows.Freezable.OnChanged" />
        <element api="Overload:System.Windows.Interop.D3DImage.OnFreezablePropertyChanged">
          <element api="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
          <element api="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        </element>
        <element api="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.Freezable.ReadPreamble" />
        <element api="M:System.Windows.Freezable.WritePostscript" />
        <element api="M:System.Windows.Freezable.WritePreamble" />
        <element api="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)" />
        <element api="M:System.Windows.Interop.D3DImage.Clone" />
        <element api="M:System.Windows.Interop.D3DImage.CloneCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Interop.D3DImage.CloneCurrentValue" />
        <element api="M:System.Windows.Interop.D3DImage.CloneCurrentValueCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Interop.D3DImage.CopyBackBuffer" />
        <element api="M:System.Windows.Interop.D3DImage.CreateInstanceCore" />
        <element api="M:System.Windows.Interop.D3DImage.Finalize" />
        <element api="M:System.Windows.Interop.D3DImage.FreezeCore(System.Boolean)" />
        <element api="M:System.Windows.Interop.D3DImage.GetAsFrozenCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Interop.D3DImage.Lock" />
        <element api="Overload:System.Windows.Interop.D3DImage.SetBackBuffer">
          <element api="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
          <element api="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)" />
        </element>
        <element api="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
        <element api="M:System.Windows.Interop.D3DImage.Unlock" />
        <element api="Overload:System.Windows.Interop.D3DImage.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Interop.D3DImage.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.ImageSource.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
        <element api="Overload:System.Windows.Interop.D3DImage.ToString">
          <element api="M:System.Windows.Media.ImageSource.ToString" />
          <element api="M:System.Windows.Media.ImageSource.ToString(System.IFormatProvider)" />
        </element>
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Interop.D3DImage">
      <topicdata name="D3DImage" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Interop.D3DImage" />
      <apidata name="D3DImage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Interop.D3DImage.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Interop.D3DImage.Height" />
        <element api="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
        <element api="P:System.Windows.Interop.D3DImage.Metadata" />
        <element api="P:System.Windows.Interop.D3DImage.PixelHeight" />
        <element api="P:System.Windows.Interop.D3DImage.PixelWidth" />
        <element api="P:System.Windows.Interop.D3DImage.Width" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Interop.D3DImage">
      <topicdata name="D3DImage" group="list" subgroup="Events" typeTopicId="T:System.Windows.Interop.D3DImage" />
      <apidata name="D3DImage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Interop.D3DImage.#ctor" />
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
        <element api="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" />
      </containers>
    </api>
    <api id="Fields.T:System.Windows.Interop.D3DImage">
      <topicdata name="D3DImage" group="list" subgroup="Fields" typeTopicId="T:System.Windows.Interop.D3DImage" />
      <apidata name="D3DImage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Interop.D3DImage.#ctor" />
      <elements>
        <element api="F:System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Interop.D3DImage.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Windows.Interop.D3DImage.#ctor" />
        <element api="M:System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Interop.D3DImage.SetBackBuffer">
      <topicdata name="SetBackBuffer" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetBackBuffer" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
        <element api="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.D3DImage.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Interop.D3DImage.#ctor" />
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Interop.D3DImage.#ctor" />
      <parameters>
        <parameter name="dpiX">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="dpiY">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
      <topicdata group="api" />
      <apidata name="AddDirtyRect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dirtyRect">
          <type api="T:System.Windows.Int32Rect" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.D3DImage.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.D3DImage.CloneCore(System.Windows.Freezable)">
      <topicdata group="api" />
      <apidata name="CloneCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)">
          <type api="T:System.Windows.Freezable" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="sourceFreezable">
          <type api="T:System.Windows.Freezable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.D3DImage.CloneCurrentValue">
      <topicdata group="api" />
      <apidata name="CloneCurrentValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.D3DImage.CloneCurrentValueCore(System.Windows.Freezable)">
      <topicdata group="api" />
      <apidata name="CloneCurrentValueCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)">
          <type api="T:System.Windows.Freezable" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="sourceFreezable">
          <type api="T:System.Windows.Freezable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.D3DImage.CopyBackBuffer">
      <topicdata group="api" />
      <apidata name="CopyBackBuffer" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Windows.Media.Imaging.BitmapSource" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityTreatAsSafeAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.D3DImage.CreateInstanceCore">
      <topicdata group="api" />
      <apidata name="CreateInstanceCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Freezable.CreateInstanceCore">
          <type api="T:System.Windows.Freezable" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Windows.Freezable" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.D3DImage.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityTreatAsSafeAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.D3DImage.FreezeCore(System.Boolean)">
      <topicdata group="api" />
      <apidata name="FreezeCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <type api="T:System.Windows.Media.Animation.Animatable" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="isChecking">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.D3DImage.GetAsFrozenCore(System.Windows.Freezable)">
      <topicdata group="api" />
      <apidata name="GetAsFrozenCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)">
          <type api="T:System.Windows.Freezable" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="sourceFreezable">
          <type api="T:System.Windows.Freezable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <topicdata group="api" />
      <apidata name="GetCurrentValueAsFrozenCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
          <type api="T:System.Windows.Freezable" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="sourceFreezable">
          <type api="T:System.Windows.Freezable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.D3DImage.Height">
      <topicdata group="api" />
      <apidata name="Height" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Windows.Media.ImageSource.Height">
          <type api="T:System.Windows.Media.ImageSource" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Height" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable">
      <topicdata group="api" />
      <apidata name="IsFrontBufferAvailable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsFrontBufferAvailable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged">
      <topicdata group="api" />
      <apidata name="IsFrontBufferAvailableChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_IsFrontBufferAvailableChanged" />
      <remover name="remove_IsFrontBufferAvailableChanged" />
      <eventhandler>
        <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
      </eventargs>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty">
      <topicdata group="api" />
      <apidata name="IsFrontBufferAvailableProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.D3DImage.Lock">
      <topicdata group="api" />
      <apidata name="Lock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.D3DImage.Metadata">
      <topicdata group="api" />
      <apidata name="Metadata" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Windows.Media.ImageSource.Metadata">
          <type api="T:System.Windows.Media.ImageSource" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Metadata" />
      <returns>
        <type api="T:System.Windows.Media.ImageMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.D3DImage.PixelHeight">
      <topicdata group="api" />
      <apidata name="PixelHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PixelHeight" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.D3DImage.PixelWidth">
      <topicdata group="api" />
      <apidata name="PixelWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PixelWidth" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
      <topicdata group="api" />
      <apidata name="SetBackBuffer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Interop.D3DImage.SetBackBuffer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="backBufferType">
          <type api="T:System.Windows.Interop.D3DResourceType" ref="false" />
        </parameter>
        <parameter name="backBuffer">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetBackBuffer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Interop.D3DImage.SetBackBuffer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="backBufferType">
          <type api="T:System.Windows.Interop.D3DResourceType" ref="false" />
        </parameter>
        <parameter name="backBuffer">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="enableSoftwareFallback">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)">
      <topicdata group="api" />
      <apidata name="TryLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.D3DImage.Unlock">
      <topicdata group="api" />
      <apidata name="Unlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.D3DImage.Width">
      <topicdata group="api" />
      <apidata name="Width" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Windows.Media.ImageSource.Width">
          <type api="T:System.Windows.Media.ImageSource" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Width" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DImage" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Interop.D3DResourceType">
      <topicdata group="api" />
      <apidata name="D3DResourceType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.Interop.D3DResourceType.IDirect3DSurface9" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="F:System.Windows.Interop.D3DResourceType.IDirect3DSurface9">
      <topicdata group="api" notopic="" />
      <apidata name="IDirect3DSurface9" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Interop.D3DResourceType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.D3DResourceType" ref="false" />
      </containers>
    </api>
    <api id="T:System.Windows.Interop.DocObjHost">
      <topicdata group="api" />
      <apidata name="DocObjHost" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Interop.DocObjHost.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IServiceProvider" ref="true" />
      </implements>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Interop.DocObjHost.#ctor" />
        <element api="M:System.Windows.Interop.DocObjHost.InitializeLifetimeService" />
        <element api="M:System.Windows.Interop.DocObjHost.System#IServiceProvider#GetService(System.Type)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Interop.DocObjHost">
      <topicdata name="DocObjHost" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Interop.DocObjHost" />
      <apidata name="DocObjHost" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Interop.DocObjHost.#ctor" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Interop.DocObjHost.InitializeLifetimeService" />
        <element api="M:System.Windows.Interop.DocObjHost.System#IServiceProvider#GetService(System.Type)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.DocObjHost" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.DocObjHost.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.DocObjHost" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.DocObjHost.InitializeLifetimeService">
      <topicdata group="api" />
      <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <type api="T:System.MarshalByRefObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.DocObjHost" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.DocObjHost.System#IServiceProvider#GetService(System.Type)">
      <topicdata group="api" eiiName="IServiceProvider.GetService" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IServiceProvider.GetService(System.Type)">
          <type api="T:System.IServiceProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.DocObjHost" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Interop.DynamicScriptObject">
      <topicdata group="api" />
      <apidata name="DynamicScriptObject" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Dynamic.DynamicObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Dynamic.DynamicObject.GetDynamicMemberNames" />
        <element api="M:System.Dynamic.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)" />
        <element api="M:System.Dynamic.DynamicObject.TryBinaryOperation(System.Dynamic.BinaryOperationBinder,System.Object,System.Object@)" />
        <element api="M:System.Dynamic.DynamicObject.TryConvert(System.Dynamic.ConvertBinder,System.Object@)" />
        <element api="M:System.Dynamic.DynamicObject.TryCreateInstance(System.Dynamic.CreateInstanceBinder,System.Object[],System.Object@)" />
        <element api="M:System.Dynamic.DynamicObject.TryDeleteIndex(System.Dynamic.DeleteIndexBinder,System.Object[])" />
        <element api="M:System.Dynamic.DynamicObject.TryDeleteMember(System.Dynamic.DeleteMemberBinder)" />
        <element api="M:System.Dynamic.DynamicObject.TryUnaryOperation(System.Dynamic.UnaryOperationBinder,System.Object@)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Windows.Interop.DynamicScriptObject.ToString" />
        <element api="M:System.Windows.Interop.DynamicScriptObject.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)" />
        <element api="M:System.Windows.Interop.DynamicScriptObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)" />
        <element api="M:System.Windows.Interop.DynamicScriptObject.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)" />
        <element api="M:System.Windows.Interop.DynamicScriptObject.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)" />
        <element api="M:System.Windows.Interop.DynamicScriptObject.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)" />
        <element api="M:System.Windows.Interop.DynamicScriptObject.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Interop.DynamicScriptObject">
      <topicdata name="DynamicScriptObject" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Interop.DynamicScriptObject" />
      <apidata name="DynamicScriptObject" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Dynamic.DynamicObject.GetDynamicMemberNames" />
        <element api="M:System.Dynamic.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)" />
        <element api="M:System.Dynamic.DynamicObject.TryBinaryOperation(System.Dynamic.BinaryOperationBinder,System.Object,System.Object@)" />
        <element api="M:System.Dynamic.DynamicObject.TryConvert(System.Dynamic.ConvertBinder,System.Object@)" />
        <element api="M:System.Dynamic.DynamicObject.TryCreateInstance(System.Dynamic.CreateInstanceBinder,System.Object[],System.Object@)" />
        <element api="M:System.Dynamic.DynamicObject.TryDeleteIndex(System.Dynamic.DeleteIndexBinder,System.Object[])" />
        <element api="M:System.Dynamic.DynamicObject.TryDeleteMember(System.Dynamic.DeleteMemberBinder)" />
        <element api="M:System.Dynamic.DynamicObject.TryUnaryOperation(System.Dynamic.UnaryOperationBinder,System.Object@)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Windows.Interop.DynamicScriptObject.ToString" />
        <element api="M:System.Windows.Interop.DynamicScriptObject.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)" />
        <element api="M:System.Windows.Interop.DynamicScriptObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)" />
        <element api="M:System.Windows.Interop.DynamicScriptObject.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)" />
        <element api="M:System.Windows.Interop.DynamicScriptObject.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)" />
        <element api="M:System.Windows.Interop.DynamicScriptObject.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)" />
        <element api="M:System.Windows.Interop.DynamicScriptObject.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.DynamicScriptObject" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.DynamicScriptObject.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.DynamicScriptObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.DynamicScriptObject.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
      <topicdata group="api" />
      <apidata name="TryGetIndex" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Dynamic.DynamicObject.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
          <type api="T:System.Dynamic.DynamicObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="binder">
          <type api="T:System.Dynamic.GetIndexBinder" ref="true" />
        </parameter>
        <parameter name="indexes">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.DynamicScriptObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.DynamicScriptObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <topicdata group="api" />
      <apidata name="TryGetMember" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Dynamic.DynamicObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
          <type api="T:System.Dynamic.DynamicObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="binder">
          <type api="T:System.Dynamic.GetMemberBinder" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.DynamicScriptObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.DynamicScriptObject.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)">
      <topicdata group="api" />
      <apidata name="TryInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Dynamic.DynamicObject.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)">
          <type api="T:System.Dynamic.DynamicObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="binder">
          <type api="T:System.Dynamic.InvokeBinder" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.DynamicScriptObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.DynamicScriptObject.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <topicdata group="api" />
      <apidata name="TryInvokeMember" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Dynamic.DynamicObject.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
          <type api="T:System.Dynamic.DynamicObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="binder">
          <type api="T:System.Dynamic.InvokeMemberBinder" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.DynamicScriptObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.DynamicScriptObject.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
      <topicdata group="api" />
      <apidata name="TrySetIndex" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Dynamic.DynamicObject.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
          <type api="T:System.Dynamic.DynamicObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="binder">
          <type api="T:System.Dynamic.SetIndexBinder" ref="true" />
        </parameter>
        <parameter name="indexes">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.DynamicScriptObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.DynamicScriptObject.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <topicdata group="api" />
      <apidata name="TrySetMember" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Dynamic.DynamicObject.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
          <type api="T:System.Dynamic.DynamicObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="binder">
          <type api="T:System.Dynamic.SetMemberBinder" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.DynamicScriptObject" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Interop.HwndHost">
      <topicdata group="api" />
      <apidata name="HwndHost" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Interop.ActiveXHost" ref="true" />
          <type api="T:System.Windows.Forms.Integration.WindowsFormsHost" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:System.Windows.Interop.IWin32Window" ref="true" />
        <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Windows.FrameworkElement.ContextMenuClosing" />
        <element api="E:System.Windows.FrameworkElement.ContextMenuOpening" />
        <element api="E:System.Windows.FrameworkElement.DataContextChanged" />
        <element api="E:System.Windows.FrameworkElement.Initialized" />
        <element api="E:System.Windows.FrameworkElement.Loaded" />
        <element api="E:System.Windows.FrameworkElement.RequestBringIntoView" />
        <element api="E:System.Windows.FrameworkElement.SizeChanged" />
        <element api="E:System.Windows.FrameworkElement.SourceUpdated" />
        <element api="E:System.Windows.FrameworkElement.TargetUpdated" />
        <element api="E:System.Windows.FrameworkElement.ToolTipClosing" />
        <element api="E:System.Windows.FrameworkElement.ToolTipOpening" />
        <element api="E:System.Windows.FrameworkElement.Unloaded" />
        <element api="E:System.Windows.Interop.HwndHost.DpiChanged" />
        <element api="E:System.Windows.Interop.HwndHost.MessageHook" />
        <element api="E:System.Windows.UIElement.DragEnter" />
        <element api="E:System.Windows.UIElement.DragLeave" />
        <element api="E:System.Windows.UIElement.DragOver" />
        <element api="E:System.Windows.UIElement.Drop" />
        <element api="E:System.Windows.UIElement.FocusableChanged" />
        <element api="E:System.Windows.UIElement.GiveFeedback" />
        <element api="E:System.Windows.UIElement.GotFocus" />
        <element api="E:System.Windows.UIElement.GotKeyboardFocus" />
        <element api="E:System.Windows.UIElement.GotMouseCapture" />
        <element api="E:System.Windows.UIElement.GotStylusCapture" />
        <element api="E:System.Windows.UIElement.GotTouchCapture" />
        <element api="E:System.Windows.UIElement.IsEnabledChanged" />
        <element api="E:System.Windows.UIElement.IsHitTestVisibleChanged" />
        <element api="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />
        <element api="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />
        <element api="E:System.Windows.UIElement.IsMouseCapturedChanged" />
        <element api="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />
        <element api="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />
        <element api="E:System.Windows.UIElement.IsStylusCapturedChanged" />
        <element api="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />
        <element api="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" />
        <element api="E:System.Windows.UIElement.IsVisibleChanged" />
        <element api="E:System.Windows.UIElement.KeyDown" />
        <element api="E:System.Windows.UIElement.KeyUp" />
        <element api="E:System.Windows.UIElement.LayoutUpdated" />
        <element api="E:System.Windows.UIElement.LostFocus" />
        <element api="E:System.Windows.UIElement.LostKeyboardFocus" />
        <element api="E:System.Windows.UIElement.LostMouseCapture" />
        <element api="E:System.Windows.UIElement.LostStylusCapture" />
        <element api="E:System.Windows.UIElement.LostTouchCapture" />
        <element api="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />
        <element api="E:System.Windows.UIElement.ManipulationCompleted" />
        <element api="E:System.Windows.UIElement.ManipulationDelta" />
        <element api="E:System.Windows.UIElement.ManipulationInertiaStarting" />
        <element api="E:System.Windows.UIElement.ManipulationStarted" />
        <element api="E:System.Windows.UIElement.ManipulationStarting" />
        <element api="E:System.Windows.UIElement.MouseDown" />
        <element api="E:System.Windows.UIElement.MouseEnter" />
        <element api="E:System.Windows.UIElement.MouseLeave" />
        <element api="E:System.Windows.UIElement.MouseLeftButtonDown" />
        <element api="E:System.Windows.UIElement.MouseLeftButtonUp" />
        <element api="E:System.Windows.UIElement.MouseMove" />
        <element api="E:System.Windows.UIElement.MouseRightButtonDown" />
        <element api="E:System.Windows.UIElement.MouseRightButtonUp" />
        <element api="E:System.Windows.UIElement.MouseUp" />
        <element api="E:System.Windows.UIElement.MouseWheel" />
        <element api="E:System.Windows.UIElement.PreviewDragEnter" />
        <element api="E:System.Windows.UIElement.PreviewDragLeave" />
        <element api="E:System.Windows.UIElement.PreviewDragOver" />
        <element api="E:System.Windows.UIElement.PreviewDrop" />
        <element api="E:System.Windows.UIElement.PreviewGiveFeedback" />
        <element api="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
        <element api="E:System.Windows.UIElement.PreviewKeyDown" />
        <element api="E:System.Windows.UIElement.PreviewKeyUp" />
        <element api="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
        <element api="E:System.Windows.UIElement.PreviewMouseDown" />
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />
        <element api="E:System.Windows.UIElement.PreviewMouseMove" />
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />
        <element api="E:System.Windows.UIElement.PreviewMouseUp" />
        <element api="E:System.Windows.UIElement.PreviewMouseWheel" />
        <element api="E:System.Windows.UIElement.PreviewQueryContinueDrag" />
        <element api="E:System.Windows.UIElement.PreviewStylusButtonDown" />
        <element api="E:System.Windows.UIElement.PreviewStylusButtonUp" />
        <element api="E:System.Windows.UIElement.PreviewStylusDown" />
        <element api="E:System.Windows.UIElement.PreviewStylusInAirMove" />
        <element api="E:System.Windows.UIElement.PreviewStylusInRange" />
        <element api="E:System.Windows.UIElement.PreviewStylusMove" />
        <element api="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
        <element api="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
        <element api="E:System.Windows.UIElement.PreviewStylusUp" />
        <element api="E:System.Windows.UIElement.PreviewTextInput" />
        <element api="E:System.Windows.UIElement.PreviewTouchDown" />
        <element api="E:System.Windows.UIElement.PreviewTouchMove" />
        <element api="E:System.Windows.UIElement.PreviewTouchUp" />
        <element api="E:System.Windows.UIElement.QueryContinueDrag" />
        <element api="E:System.Windows.UIElement.QueryCursor" />
        <element api="E:System.Windows.UIElement.StylusButtonDown" />
        <element api="E:System.Windows.UIElement.StylusButtonUp" />
        <element api="E:System.Windows.UIElement.StylusDown" />
        <element api="E:System.Windows.UIElement.StylusEnter" />
        <element api="E:System.Windows.UIElement.StylusInAirMove" />
        <element api="E:System.Windows.UIElement.StylusInRange" />
        <element api="E:System.Windows.UIElement.StylusLeave" />
        <element api="E:System.Windows.UIElement.StylusMove" />
        <element api="E:System.Windows.UIElement.StylusOutOfRange" />
        <element api="E:System.Windows.UIElement.StylusSystemGesture" />
        <element api="E:System.Windows.UIElement.StylusUp" />
        <element api="E:System.Windows.UIElement.TextInput" />
        <element api="E:System.Windows.UIElement.TouchDown" />
        <element api="E:System.Windows.UIElement.TouchEnter" />
        <element api="E:System.Windows.UIElement.TouchLeave" />
        <element api="E:System.Windows.UIElement.TouchMove" />
        <element api="E:System.Windows.UIElement.TouchUp" />
        <element api="F:System.Windows.Interop.HwndHost.DpiChangedEvent" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Interop.HwndHost.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Interop.HwndHost.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)" />
        <element api="M:System.Windows.FrameworkElement.ApplyTemplate" />
        <element api="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)" />
        <element api="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
        <element api="M:System.Windows.FrameworkElement.BeginInit" />
        <element api="Overload:System.Windows.Interop.HwndHost.BeginStoryboard">
          <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)" />
          <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)" />
          <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
        </element>
        <element api="Overload:System.Windows.Interop.HwndHost.BringIntoView">
          <element api="M:System.Windows.FrameworkElement.BringIntoView" />
          <element api="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
        </element>
        <element api="M:System.Windows.FrameworkElement.EndInit" />
        <element api="M:System.Windows.FrameworkElement.FindName(System.String)" />
        <element api="M:System.Windows.FrameworkElement.FindResource(System.Object)" />
        <element api="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)" />
        <element api="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)" />
        <element api="M:System.Windows.FrameworkElement.GetUIParentCore" />
        <element api="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)" />
        <element api="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)" />
        <element api="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <element api="M:System.Windows.FrameworkElement.OnApplyTemplate" />
        <element api="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
        <element api="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)" />
        <element api="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)" />
        <element api="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
        <element api="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)" />
        <element api="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)" />
        <element api="Overload:System.Windows.Interop.HwndHost.SetBinding">
          <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)" />
          <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" />
        </element>
        <element api="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)" />
        <element api="M:System.Windows.FrameworkElement.TryFindResource(System.Object)" />
        <element api="M:System.Windows.FrameworkElement.UnregisterName(System.String)" />
        <element api="M:System.Windows.FrameworkElement.UpdateDefaultStyle" />
        <element api="M:System.Windows.Interop.HwndHost.#ctor" />
        <element api="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" />
        <element api="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)" />
        <element api="Overload:System.Windows.Interop.HwndHost.Dispose">
          <element api="M:System.Windows.Interop.HwndHost.Dispose" />
          <element api="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Windows.Interop.HwndHost.Finalize" />
        <element api="M:System.Windows.Interop.HwndHost.HasFocusWithinCore" />
        <element api="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)" />
        <element api="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer" />
        <element api="M:System.Windows.Interop.HwndHost.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)" />
        <element api="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
        <element api="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
        <element api="M:System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.OnWindowPositionChanged(System.Windows.Rect)" />
        <element api="M:System.Windows.Interop.HwndHost.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.TabIntoCore(System.Windows.Input.TraversalRequest)" />
        <element api="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.UpdateWindowPos" />
        <element api="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)" />
        <element api="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)" />
        <element api="M:System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)" />
        <element api="M:System.Windows.Media.Visual.PointToScreen(System.Windows.Point)" />
        <element api="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)" />
        <element api="Overload:System.Windows.Interop.HwndHost.TransformToAncestor">
          <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)" />
          <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)" />
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)" />
        <element api="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)" />
        <element api="Overload:System.Windows.Interop.HwndHost.AddHandler">
          <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
          <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
        </element>
        <element api="M:System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
        <element api="Overload:System.Windows.Interop.HwndHost.ApplyAnimationClock">
          <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />
        <element api="Overload:System.Windows.Interop.HwndHost.BeginAnimation">
          <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.UIElement.CaptureMouse" />
        <element api="M:System.Windows.UIElement.CaptureStylus" />
        <element api="M:System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)" />
        <element api="M:System.Windows.UIElement.Focus" />
        <element api="M:System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="Overload:System.Windows.Interop.HwndHost.HitTestCore">
          <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />
          <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
        </element>
        <element api="M:System.Windows.UIElement.InputHitTest(System.Windows.Point)" />
        <element api="M:System.Windows.UIElement.InvalidateArrange" />
        <element api="M:System.Windows.UIElement.InvalidateMeasure" />
        <element api="M:System.Windows.UIElement.InvalidateVisual" />
        <element api="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
        <element api="M:System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
        <element api="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" />
        <element api="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
        <element api="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
        <element api="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" />
        <element api="M:System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
        <element api="M:System.Windows.UIElement.ReleaseAllTouchCaptures" />
        <element api="M:System.Windows.UIElement.ReleaseMouseCapture" />
        <element api="M:System.Windows.UIElement.ReleaseStylusCapture" />
        <element api="M:System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
        <element api="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
        <element api="M:System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)" />
        <element api="M:System.Windows.UIElement.UpdateLayout" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.FrameworkElement.ActualHeight" />
        <element api="P:System.Windows.FrameworkElement.ActualWidth" />
        <element api="P:System.Windows.FrameworkElement.BindingGroup" />
        <element api="P:System.Windows.FrameworkElement.ContextMenu" />
        <element api="P:System.Windows.FrameworkElement.Cursor" />
        <element api="P:System.Windows.FrameworkElement.DataContext" />
        <element api="P:System.Windows.FrameworkElement.DefaultStyleKey" />
        <element api="P:System.Windows.FrameworkElement.FlowDirection" />
        <element api="P:System.Windows.FrameworkElement.FocusVisualStyle" />
        <element api="P:System.Windows.FrameworkElement.ForceCursor" />
        <element api="P:System.Windows.FrameworkElement.Height" />
        <element api="P:System.Windows.FrameworkElement.HorizontalAlignment" />
        <element api="P:System.Windows.FrameworkElement.InheritanceBehavior" />
        <element api="P:System.Windows.FrameworkElement.InputScope" />
        <element api="P:System.Windows.FrameworkElement.IsInitialized" />
        <element api="P:System.Windows.FrameworkElement.IsLoaded" />
        <element api="P:System.Windows.FrameworkElement.Language" />
        <element api="P:System.Windows.FrameworkElement.LayoutTransform" />
        <element api="P:System.Windows.FrameworkElement.LogicalChildren" />
        <element api="P:System.Windows.FrameworkElement.Margin" />
        <element api="P:System.Windows.FrameworkElement.MaxHeight" />
        <element api="P:System.Windows.FrameworkElement.MaxWidth" />
        <element api="P:System.Windows.FrameworkElement.MinHeight" />
        <element api="P:System.Windows.FrameworkElement.MinWidth" />
        <element api="P:System.Windows.FrameworkElement.Name" />
        <element api="P:System.Windows.FrameworkElement.OverridesDefaultStyle" />
        <element api="P:System.Windows.FrameworkElement.Parent" />
        <element api="P:System.Windows.FrameworkElement.Resources" />
        <element api="P:System.Windows.FrameworkElement.Style" />
        <element api="P:System.Windows.FrameworkElement.Tag" />
        <element api="P:System.Windows.FrameworkElement.TemplatedParent" />
        <element api="P:System.Windows.FrameworkElement.ToolTip" />
        <element api="P:System.Windows.FrameworkElement.Triggers" />
        <element api="P:System.Windows.FrameworkElement.UseLayoutRounding" />
        <element api="P:System.Windows.FrameworkElement.VerticalAlignment" />
        <element api="P:System.Windows.FrameworkElement.VisualChildrenCount" />
        <element api="P:System.Windows.FrameworkElement.Width" />
        <element api="P:System.Windows.Interop.HwndHost.Handle" />
        <element api="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite" />
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffect" />
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffectInput" />
        <element api="P:System.Windows.Media.Visual.VisualBitmapScalingMode" />
        <element api="P:System.Windows.Media.Visual.VisualCacheMode" />
        <element api="P:System.Windows.Media.Visual.VisualClearTypeHint" />
        <element api="P:System.Windows.Media.Visual.VisualClip" />
        <element api="P:System.Windows.Media.Visual.VisualEdgeMode" />
        <element api="P:System.Windows.Media.Visual.VisualEffect" />
        <element api="P:System.Windows.Media.Visual.VisualOffset" />
        <element api="P:System.Windows.Media.Visual.VisualOpacity" />
        <element api="P:System.Windows.Media.Visual.VisualOpacityMask" />
        <element api="P:System.Windows.Media.Visual.VisualParent" />
        <element api="P:System.Windows.Media.Visual.VisualScrollableAreaClip" />
        <element api="P:System.Windows.Media.Visual.VisualTextHintingMode" />
        <element api="P:System.Windows.Media.Visual.VisualTextRenderingMode" />
        <element api="P:System.Windows.Media.Visual.VisualTransform" />
        <element api="P:System.Windows.Media.Visual.VisualXSnappingGuidelines" />
        <element api="P:System.Windows.Media.Visual.VisualYSnappingGuidelines" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
        <element api="P:System.Windows.UIElement.AllowDrop" />
        <element api="P:System.Windows.UIElement.AreAnyTouchesCaptured" />
        <element api="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" />
        <element api="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" />
        <element api="P:System.Windows.UIElement.AreAnyTouchesOver" />
        <element api="P:System.Windows.UIElement.BitmapEffect" />
        <element api="P:System.Windows.UIElement.BitmapEffectInput" />
        <element api="P:System.Windows.UIElement.CacheMode" />
        <element api="P:System.Windows.UIElement.Clip" />
        <element api="P:System.Windows.UIElement.ClipToBounds" />
        <element api="P:System.Windows.UIElement.CommandBindings" />
        <element api="P:System.Windows.UIElement.DesiredSize" />
        <element api="P:System.Windows.UIElement.Effect" />
        <element api="P:System.Windows.UIElement.Focusable" />
        <element api="P:System.Windows.UIElement.HasAnimatedProperties" />
        <element api="P:System.Windows.UIElement.HasEffectiveKeyboardFocus" />
        <element api="P:System.Windows.UIElement.InputBindings" />
        <element api="P:System.Windows.UIElement.IsArrangeValid" />
        <element api="P:System.Windows.UIElement.IsEnabled" />
        <element api="P:System.Windows.UIElement.IsEnabledCore" />
        <element api="P:System.Windows.UIElement.IsFocused" />
        <element api="P:System.Windows.UIElement.IsHitTestVisible" />
        <element api="P:System.Windows.UIElement.IsInputMethodEnabled" />
        <element api="P:System.Windows.UIElement.IsKeyboardFocused" />
        <element api="P:System.Windows.UIElement.IsKeyboardFocusWithin" />
        <element api="P:System.Windows.UIElement.IsManipulationEnabled" />
        <element api="P:System.Windows.UIElement.IsMeasureValid" />
        <element api="P:System.Windows.UIElement.IsMouseCaptured" />
        <element api="P:System.Windows.UIElement.IsMouseCaptureWithin" />
        <element api="P:System.Windows.UIElement.IsMouseDirectlyOver" />
        <element api="P:System.Windows.UIElement.IsMouseOver" />
        <element api="P:System.Windows.UIElement.IsStylusCaptured" />
        <element api="P:System.Windows.UIElement.IsStylusCaptureWithin" />
        <element api="P:System.Windows.UIElement.IsStylusDirectlyOver" />
        <element api="P:System.Windows.UIElement.IsStylusOver" />
        <element api="P:System.Windows.UIElement.IsVisible" />
        <element api="P:System.Windows.UIElement.Opacity" />
        <element api="P:System.Windows.UIElement.OpacityMask" />
        <element api="P:System.Windows.UIElement.PersistId" />
        <element api="P:System.Windows.UIElement.RenderSize" />
        <element api="P:System.Windows.UIElement.RenderTransform" />
        <element api="P:System.Windows.UIElement.RenderTransformOrigin" />
        <element api="P:System.Windows.UIElement.SnapsToDevicePixels" />
        <element api="P:System.Windows.UIElement.StylusPlugIns" />
        <element api="P:System.Windows.UIElement.TouchesCaptured" />
        <element api="P:System.Windows.UIElement.TouchesCapturedWithin" />
        <element api="P:System.Windows.UIElement.TouchesDirectlyOver" />
        <element api="P:System.Windows.UIElement.TouchesOver" />
        <element api="P:System.Windows.UIElement.Uid" />
        <element api="P:System.Windows.UIElement.Visibility" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Interop.HwndHost">
      <topicdata name="HwndHost" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Interop.HwndHost" />
      <apidata name="HwndHost" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Interop.HwndHost.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Interop.HwndHost.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)" />
        <element api="M:System.Windows.FrameworkElement.ApplyTemplate" />
        <element api="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)" />
        <element api="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
        <element api="M:System.Windows.FrameworkElement.BeginInit" />
        <element api="Overload:System.Windows.Interop.HwndHost.BeginStoryboard">
          <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)" />
          <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)" />
          <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
        </element>
        <element api="Overload:System.Windows.Interop.HwndHost.BringIntoView">
          <element api="M:System.Windows.FrameworkElement.BringIntoView" />
          <element api="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
        </element>
        <element api="M:System.Windows.FrameworkElement.EndInit" />
        <element api="M:System.Windows.FrameworkElement.FindName(System.String)" />
        <element api="M:System.Windows.FrameworkElement.FindResource(System.Object)" />
        <element api="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)" />
        <element api="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)" />
        <element api="M:System.Windows.FrameworkElement.GetUIParentCore" />
        <element api="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)" />
        <element api="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)" />
        <element api="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <element api="M:System.Windows.FrameworkElement.OnApplyTemplate" />
        <element api="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
        <element api="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)" />
        <element api="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)" />
        <element api="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)" />
        <element api="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
        <element api="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)" />
        <element api="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)" />
        <element api="Overload:System.Windows.Interop.HwndHost.SetBinding">
          <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)" />
          <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" />
        </element>
        <element api="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)" />
        <element api="M:System.Windows.FrameworkElement.TryFindResource(System.Object)" />
        <element api="M:System.Windows.FrameworkElement.UnregisterName(System.String)" />
        <element api="M:System.Windows.FrameworkElement.UpdateDefaultStyle" />
        <element api="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" />
        <element api="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)" />
        <element api="Overload:System.Windows.Interop.HwndHost.Dispose">
          <element api="M:System.Windows.Interop.HwndHost.Dispose" />
          <element api="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Windows.Interop.HwndHost.Finalize" />
        <element api="M:System.Windows.Interop.HwndHost.HasFocusWithinCore" />
        <element api="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)" />
        <element api="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer" />
        <element api="M:System.Windows.Interop.HwndHost.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)" />
        <element api="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
        <element api="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
        <element api="M:System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.OnWindowPositionChanged(System.Windows.Rect)" />
        <element api="M:System.Windows.Interop.HwndHost.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.TabIntoCore(System.Windows.Input.TraversalRequest)" />
        <element api="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndHost.UpdateWindowPos" />
        <element api="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)" />
        <element api="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)" />
        <element api="M:System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)" />
        <element api="M:System.Windows.Media.Visual.PointToScreen(System.Windows.Point)" />
        <element api="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)" />
        <element api="Overload:System.Windows.Interop.HwndHost.TransformToAncestor">
          <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)" />
          <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)" />
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)" />
        <element api="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)" />
        <element api="Overload:System.Windows.Interop.HwndHost.AddHandler">
          <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
          <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
        </element>
        <element api="M:System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
        <element api="Overload:System.Windows.Interop.HwndHost.ApplyAnimationClock">
          <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />
        <element api="Overload:System.Windows.Interop.HwndHost.BeginAnimation">
          <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.UIElement.CaptureMouse" />
        <element api="M:System.Windows.UIElement.CaptureStylus" />
        <element api="M:System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)" />
        <element api="M:System.Windows.UIElement.Focus" />
        <element api="M:System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="Overload:System.Windows.Interop.HwndHost.HitTestCore">
          <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />
          <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
        </element>
        <element api="M:System.Windows.UIElement.InputHitTest(System.Windows.Point)" />
        <element api="M:System.Windows.UIElement.InvalidateArrange" />
        <element api="M:System.Windows.UIElement.InvalidateMeasure" />
        <element api="M:System.Windows.UIElement.InvalidateVisual" />
        <element api="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
        <element api="M:System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
        <element api="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" />
        <element api="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
        <element api="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
        <element api="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
        <element api="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" />
        <element api="M:System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
        <element api="M:System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
        <element api="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
        <element api="M:System.Windows.UIElement.ReleaseAllTouchCaptures" />
        <element api="M:System.Windows.UIElement.ReleaseMouseCapture" />
        <element api="M:System.Windows.UIElement.ReleaseStylusCapture" />
        <element api="M:System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
        <element api="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
        <element api="M:System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)" />
        <element api="M:System.Windows.UIElement.UpdateLayout" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Interop.HwndHost">
      <topicdata name="HwndHost" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Interop.HwndHost" />
      <apidata name="HwndHost" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.FrameworkElement.ActualHeight" />
        <element api="P:System.Windows.FrameworkElement.ActualWidth" />
        <element api="P:System.Windows.FrameworkElement.BindingGroup" />
        <element api="P:System.Windows.FrameworkElement.ContextMenu" />
        <element api="P:System.Windows.FrameworkElement.Cursor" />
        <element api="P:System.Windows.FrameworkElement.DataContext" />
        <element api="P:System.Windows.FrameworkElement.DefaultStyleKey" />
        <element api="P:System.Windows.FrameworkElement.FlowDirection" />
        <element api="P:System.Windows.FrameworkElement.FocusVisualStyle" />
        <element api="P:System.Windows.FrameworkElement.ForceCursor" />
        <element api="P:System.Windows.FrameworkElement.Height" />
        <element api="P:System.Windows.FrameworkElement.HorizontalAlignment" />
        <element api="P:System.Windows.FrameworkElement.InheritanceBehavior" />
        <element api="P:System.Windows.FrameworkElement.InputScope" />
        <element api="P:System.Windows.FrameworkElement.IsInitialized" />
        <element api="P:System.Windows.FrameworkElement.IsLoaded" />
        <element api="P:System.Windows.FrameworkElement.Language" />
        <element api="P:System.Windows.FrameworkElement.LayoutTransform" />
        <element api="P:System.Windows.FrameworkElement.LogicalChildren" />
        <element api="P:System.Windows.FrameworkElement.Margin" />
        <element api="P:System.Windows.FrameworkElement.MaxHeight" />
        <element api="P:System.Windows.FrameworkElement.MaxWidth" />
        <element api="P:System.Windows.FrameworkElement.MinHeight" />
        <element api="P:System.Windows.FrameworkElement.MinWidth" />
        <element api="P:System.Windows.FrameworkElement.Name" />
        <element api="P:System.Windows.FrameworkElement.OverridesDefaultStyle" />
        <element api="P:System.Windows.FrameworkElement.Parent" />
        <element api="P:System.Windows.FrameworkElement.Resources" />
        <element api="P:System.Windows.FrameworkElement.Style" />
        <element api="P:System.Windows.FrameworkElement.Tag" />
        <element api="P:System.Windows.FrameworkElement.TemplatedParent" />
        <element api="P:System.Windows.FrameworkElement.ToolTip" />
        <element api="P:System.Windows.FrameworkElement.Triggers" />
        <element api="P:System.Windows.FrameworkElement.UseLayoutRounding" />
        <element api="P:System.Windows.FrameworkElement.VerticalAlignment" />
        <element api="P:System.Windows.FrameworkElement.VisualChildrenCount" />
        <element api="P:System.Windows.FrameworkElement.Width" />
        <element api="P:System.Windows.Interop.HwndHost.Handle" />
        <element api="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite" />
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffect" />
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffectInput" />
        <element api="P:System.Windows.Media.Visual.VisualBitmapScalingMode" />
        <element api="P:System.Windows.Media.Visual.VisualCacheMode" />
        <element api="P:System.Windows.Media.Visual.VisualClearTypeHint" />
        <element api="P:System.Windows.Media.Visual.VisualClip" />
        <element api="P:System.Windows.Media.Visual.VisualEdgeMode" />
        <element api="P:System.Windows.Media.Visual.VisualEffect" />
        <element api="P:System.Windows.Media.Visual.VisualOffset" />
        <element api="P:System.Windows.Media.Visual.VisualOpacity" />
        <element api="P:System.Windows.Media.Visual.VisualOpacityMask" />
        <element api="P:System.Windows.Media.Visual.VisualParent" />
        <element api="P:System.Windows.Media.Visual.VisualScrollableAreaClip" />
        <element api="P:System.Windows.Media.Visual.VisualTextHintingMode" />
        <element api="P:System.Windows.Media.Visual.VisualTextRenderingMode" />
        <element api="P:System.Windows.Media.Visual.VisualTransform" />
        <element api="P:System.Windows.Media.Visual.VisualXSnappingGuidelines" />
        <element api="P:System.Windows.Media.Visual.VisualYSnappingGuidelines" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
        <element api="P:System.Windows.UIElement.AllowDrop" />
        <element api="P:System.Windows.UIElement.AreAnyTouchesCaptured" />
        <element api="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" />
        <element api="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" />
        <element api="P:System.Windows.UIElement.AreAnyTouchesOver" />
        <element api="P:System.Windows.UIElement.BitmapEffect" />
        <element api="P:System.Windows.UIElement.BitmapEffectInput" />
        <element api="P:System.Windows.UIElement.CacheMode" />
        <element api="P:System.Windows.UIElement.Clip" />
        <element api="P:System.Windows.UIElement.ClipToBounds" />
        <element api="P:System.Windows.UIElement.CommandBindings" />
        <element api="P:System.Windows.UIElement.DesiredSize" />
        <element api="P:System.Windows.UIElement.Effect" />
        <element api="P:System.Windows.UIElement.Focusable" />
        <element api="P:System.Windows.UIElement.HasAnimatedProperties" />
        <element api="P:System.Windows.UIElement.HasEffectiveKeyboardFocus" />
        <element api="P:System.Windows.UIElement.InputBindings" />
        <element api="P:System.Windows.UIElement.IsArrangeValid" />
        <element api="P:System.Windows.UIElement.IsEnabled" />
        <element api="P:System.Windows.UIElement.IsEnabledCore" />
        <element api="P:System.Windows.UIElement.IsFocused" />
        <element api="P:System.Windows.UIElement.IsHitTestVisible" />
        <element api="P:System.Windows.UIElement.IsInputMethodEnabled" />
        <element api="P:System.Windows.UIElement.IsKeyboardFocused" />
        <element api="P:System.Windows.UIElement.IsKeyboardFocusWithin" />
        <element api="P:System.Windows.UIElement.IsManipulationEnabled" />
        <element api="P:System.Windows.UIElement.IsMeasureValid" />
        <element api="P:System.Windows.UIElement.IsMouseCaptured" />
        <element api="P:System.Windows.UIElement.IsMouseCaptureWithin" />
        <element api="P:System.Windows.UIElement.IsMouseDirectlyOver" />
        <element api="P:System.Windows.UIElement.IsMouseOver" />
        <element api="P:System.Windows.UIElement.IsStylusCaptured" />
        <element api="P:System.Windows.UIElement.IsStylusCaptureWithin" />
        <element api="P:System.Windows.UIElement.IsStylusDirectlyOver" />
        <element api="P:System.Windows.UIElement.IsStylusOver" />
        <element api="P:System.Windows.UIElement.IsVisible" />
        <element api="P:System.Windows.UIElement.Opacity" />
        <element api="P:System.Windows.UIElement.OpacityMask" />
        <element api="P:System.Windows.UIElement.PersistId" />
        <element api="P:System.Windows.UIElement.RenderSize" />
        <element api="P:System.Windows.UIElement.RenderTransform" />
        <element api="P:System.Windows.UIElement.RenderTransformOrigin" />
        <element api="P:System.Windows.UIElement.SnapsToDevicePixels" />
        <element api="P:System.Windows.UIElement.StylusPlugIns" />
        <element api="P:System.Windows.UIElement.TouchesCaptured" />
        <element api="P:System.Windows.UIElement.TouchesCapturedWithin" />
        <element api="P:System.Windows.UIElement.TouchesDirectlyOver" />
        <element api="P:System.Windows.UIElement.TouchesOver" />
        <element api="P:System.Windows.UIElement.Uid" />
        <element api="P:System.Windows.UIElement.Visibility" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Interop.HwndHost">
      <topicdata name="HwndHost" group="list" subgroup="Events" typeTopicId="T:System.Windows.Interop.HwndHost" />
      <apidata name="HwndHost" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.Windows.FrameworkElement.ContextMenuClosing" />
        <element api="E:System.Windows.FrameworkElement.ContextMenuOpening" />
        <element api="E:System.Windows.FrameworkElement.DataContextChanged" />
        <element api="E:System.Windows.FrameworkElement.Initialized" />
        <element api="E:System.Windows.FrameworkElement.Loaded" />
        <element api="E:System.Windows.FrameworkElement.RequestBringIntoView" />
        <element api="E:System.Windows.FrameworkElement.SizeChanged" />
        <element api="E:System.Windows.FrameworkElement.SourceUpdated" />
        <element api="E:System.Windows.FrameworkElement.TargetUpdated" />
        <element api="E:System.Windows.FrameworkElement.ToolTipClosing" />
        <element api="E:System.Windows.FrameworkElement.ToolTipOpening" />
        <element api="E:System.Windows.FrameworkElement.Unloaded" />
        <element api="E:System.Windows.Interop.HwndHost.DpiChanged" />
        <element api="E:System.Windows.Interop.HwndHost.MessageHook" />
        <element api="E:System.Windows.UIElement.DragEnter" />
        <element api="E:System.Windows.UIElement.DragLeave" />
        <element api="E:System.Windows.UIElement.DragOver" />
        <element api="E:System.Windows.UIElement.Drop" />
        <element api="E:System.Windows.UIElement.FocusableChanged" />
        <element api="E:System.Windows.UIElement.GiveFeedback" />
        <element api="E:System.Windows.UIElement.GotFocus" />
        <element api="E:System.Windows.UIElement.GotKeyboardFocus" />
        <element api="E:System.Windows.UIElement.GotMouseCapture" />
        <element api="E:System.Windows.UIElement.GotStylusCapture" />
        <element api="E:System.Windows.UIElement.GotTouchCapture" />
        <element api="E:System.Windows.UIElement.IsEnabledChanged" />
        <element api="E:System.Windows.UIElement.IsHitTestVisibleChanged" />
        <element api="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />
        <element api="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />
        <element api="E:System.Windows.UIElement.IsMouseCapturedChanged" />
        <element api="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />
        <element api="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />
        <element api="E:System.Windows.UIElement.IsStylusCapturedChanged" />
        <element api="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />
        <element api="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" />
        <element api="E:System.Windows.UIElement.IsVisibleChanged" />
        <element api="E:System.Windows.UIElement.KeyDown" />
        <element api="E:System.Windows.UIElement.KeyUp" />
        <element api="E:System.Windows.UIElement.LayoutUpdated" />
        <element api="E:System.Windows.UIElement.LostFocus" />
        <element api="E:System.Windows.UIElement.LostKeyboardFocus" />
        <element api="E:System.Windows.UIElement.LostMouseCapture" />
        <element api="E:System.Windows.UIElement.LostStylusCapture" />
        <element api="E:System.Windows.UIElement.LostTouchCapture" />
        <element api="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />
        <element api="E:System.Windows.UIElement.ManipulationCompleted" />
        <element api="E:System.Windows.UIElement.ManipulationDelta" />
        <element api="E:System.Windows.UIElement.ManipulationInertiaStarting" />
        <element api="E:System.Windows.UIElement.ManipulationStarted" />
        <element api="E:System.Windows.UIElement.ManipulationStarting" />
        <element api="E:System.Windows.UIElement.MouseDown" />
        <element api="E:System.Windows.UIElement.MouseEnter" />
        <element api="E:System.Windows.UIElement.MouseLeave" />
        <element api="E:System.Windows.UIElement.MouseLeftButtonDown" />
        <element api="E:System.Windows.UIElement.MouseLeftButtonUp" />
        <element api="E:System.Windows.UIElement.MouseMove" />
        <element api="E:System.Windows.UIElement.MouseRightButtonDown" />
        <element api="E:System.Windows.UIElement.MouseRightButtonUp" />
        <element api="E:System.Windows.UIElement.MouseUp" />
        <element api="E:System.Windows.UIElement.MouseWheel" />
        <element api="E:System.Windows.UIElement.PreviewDragEnter" />
        <element api="E:System.Windows.UIElement.PreviewDragLeave" />
        <element api="E:System.Windows.UIElement.PreviewDragOver" />
        <element api="E:System.Windows.UIElement.PreviewDrop" />
        <element api="E:System.Windows.UIElement.PreviewGiveFeedback" />
        <element api="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
        <element api="E:System.Windows.UIElement.PreviewKeyDown" />
        <element api="E:System.Windows.UIElement.PreviewKeyUp" />
        <element api="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
        <element api="E:System.Windows.UIElement.PreviewMouseDown" />
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />
        <element api="E:System.Windows.UIElement.PreviewMouseMove" />
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />
        <element api="E:System.Windows.UIElement.PreviewMouseUp" />
        <element api="E:System.Windows.UIElement.PreviewMouseWheel" />
        <element api="E:System.Windows.UIElement.PreviewQueryContinueDrag" />
        <element api="E:System.Windows.UIElement.PreviewStylusButtonDown" />
        <element api="E:System.Windows.UIElement.PreviewStylusButtonUp" />
        <element api="E:System.Windows.UIElement.PreviewStylusDown" />
        <element api="E:System.Windows.UIElement.PreviewStylusInAirMove" />
        <element api="E:System.Windows.UIElement.PreviewStylusInRange" />
        <element api="E:System.Windows.UIElement.PreviewStylusMove" />
        <element api="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
        <element api="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
        <element api="E:System.Windows.UIElement.PreviewStylusUp" />
        <element api="E:System.Windows.UIElement.PreviewTextInput" />
        <element api="E:System.Windows.UIElement.PreviewTouchDown" />
        <element api="E:System.Windows.UIElement.PreviewTouchMove" />
        <element api="E:System.Windows.UIElement.PreviewTouchUp" />
        <element api="E:System.Windows.UIElement.QueryContinueDrag" />
        <element api="E:System.Windows.UIElement.QueryCursor" />
        <element api="E:System.Windows.UIElement.StylusButtonDown" />
        <element api="E:System.Windows.UIElement.StylusButtonUp" />
        <element api="E:System.Windows.UIElement.StylusDown" />
        <element api="E:System.Windows.UIElement.StylusEnter" />
        <element api="E:System.Windows.UIElement.StylusInAirMove" />
        <element api="E:System.Windows.UIElement.StylusInRange" />
        <element api="E:System.Windows.UIElement.StylusLeave" />
        <element api="E:System.Windows.UIElement.StylusMove" />
        <element api="E:System.Windows.UIElement.StylusOutOfRange" />
        <element api="E:System.Windows.UIElement.StylusSystemGesture" />
        <element api="E:System.Windows.UIElement.StylusUp" />
        <element api="E:System.Windows.UIElement.TextInput" />
        <element api="E:System.Windows.UIElement.TouchDown" />
        <element api="E:System.Windows.UIElement.TouchEnter" />
        <element api="E:System.Windows.UIElement.TouchLeave" />
        <element api="E:System.Windows.UIElement.TouchMove" />
        <element api="E:System.Windows.UIElement.TouchUp" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" />
      </containers>
    </api>
    <api id="Fields.T:System.Windows.Interop.HwndHost">
      <topicdata name="HwndHost" group="list" subgroup="Fields" typeTopicId="T:System.Windows.Interop.HwndHost" />
      <apidata name="HwndHost" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.Interop.HwndHost.DpiChangedEvent" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Interop.HwndHost.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Interop.HwndHost.Dispose" />
        <element api="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
      <topicdata group="api" />
      <apidata name="BuildWindowCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="hwndParent">
          <type api="T:System.Runtime.InteropServices.HandleRef" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Runtime.InteropServices.HandleRef" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
      <topicdata group="api" />
      <apidata name="DestroyWindowCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="hwnd">
          <type api="T:System.Runtime.InteropServices.HandleRef" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Interop.HwndHost.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Windows.Interop.HwndHost.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityTreatAsSafeAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Windows.Interop.HwndHost.DpiChanged">
      <topicdata group="api" />
      <apidata name="DpiChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_DpiChanged" />
      <remover name="remove_DpiChanged" />
      <eventhandler>
        <type api="T:System.Windows.DpiChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.DpiChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Interop.HwndHost.DpiChangedEvent">
      <topicdata group="api" />
      <apidata name="DpiChangedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndHost.Handle">
      <topicdata group="api" />
      <apidata name="Handle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Handle">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Windows.Interop.IWin32Window.Handle">
          <type api="T:System.Windows.Interop.IWin32Window" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.HasFocusWithinCore">
      <topicdata group="api" />
      <apidata name="HasFocusWithinCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityTreatAsSafeAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
      <topicdata group="api" />
      <apidata name="MeasureOverride" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
          <type api="T:System.Windows.FrameworkElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="constraint">
          <type api="T:System.Windows.Size" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityTreatAsSafeAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Windows.Interop.HwndHost.MessageHook">
      <topicdata group="api" />
      <apidata name="MessageHook" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_MessageHook" />
      <remover name="remove_MessageHook" />
      <eventhandler>
        <type api="T:System.Windows.Interop.HwndSourceHook" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer">
      <topicdata group="api" />
      <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.UIElement.OnCreateAutomationPeer">
          <type api="T:System.Windows.UIElement" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Windows.Automation.Peers.AutomationPeer" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <topicdata group="api" />
      <apidata name="OnDpiChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
          <type api="T:System.Windows.Media.Visual" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="oldDpi">
          <type api="T:System.Windows.DpiScale" ref="false" />
        </parameter>
        <parameter name="newDpi">
          <type api="T:System.Windows.DpiScale" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <topicdata group="api" />
      <apidata name="OnKeyDown" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <type api="T:System.Windows.UIElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityTreatAsSafeAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <topicdata group="api" />
      <apidata name="OnKeyUp" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <type api="T:System.Windows.UIElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityTreatAsSafeAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <topicdata group="api" />
      <apidata name="OnMnemonicCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="msg">
          <referenceTo>
            <type api="T:System.Windows.Interop.MSG" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="modifiers">
          <type api="T:System.Windows.Input.ModifierKeys" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.OnWindowPositionChanged(System.Windows.Rect)">
      <topicdata group="api" />
      <apidata name="OnWindowPositionChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="rcBoundingBox">
          <type api="T:System.Windows.Rect" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)">
      <topicdata group="api" />
      <apidata name="RegisterKeyboardInputSinkCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sink">
          <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Interop.IKeyboardInputSite" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin">
      <topicdata group="api" eiiName="IKeyboardInputSink.HasFocusWithin" />
      <apidata name="HasFocusWithin" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
          <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
      <topicdata group="api" eiiName="IKeyboardInputSink.KeyboardInputSite" />
      <apidata name="KeyboardInputSite" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <setter name="set_System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Windows.Interop.IKeyboardInputSite" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
          <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <topicdata group="api" eiiName="IKeyboardInputSink.OnMnemonic" />
      <apidata name="OnMnemonic" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="msg">
          <referenceTo>
            <type api="T:System.Windows.Interop.MSG" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="modifiers">
          <type api="T:System.Windows.Input.ModifierKeys" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <topicdata group="api" eiiName="IKeyboardInputSink.RegisterKeyboardInputSink" />
      <apidata name="RegisterKeyboardInputSink" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sink">
          <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Interop.IKeyboardInputSite" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
      <topicdata group="api" eiiName="IKeyboardInputSink.TabInto" />
      <apidata name="TabInto" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Windows.Input.TraversalRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
          <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <topicdata group="api" eiiName="IKeyboardInputSink.TranslateAccelerator" />
      <apidata name="TranslateAccelerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="msg">
          <referenceTo>
            <type api="T:System.Windows.Interop.MSG" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="modifiers">
          <type api="T:System.Windows.Input.ModifierKeys" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <topicdata group="api" eiiName="IKeyboardInputSink.TranslateChar" />
      <apidata name="TranslateChar" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="msg">
          <referenceTo>
            <type api="T:System.Windows.Interop.MSG" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="modifiers">
          <type api="T:System.Windows.Input.ModifierKeys" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.TabIntoCore(System.Windows.Input.TraversalRequest)">
      <topicdata group="api" />
      <apidata name="TabIntoCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Windows.Input.TraversalRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <topicdata group="api" />
      <apidata name="TranslateAcceleratorCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="msg">
          <referenceTo>
            <type api="T:System.Windows.Interop.MSG" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="modifiers">
          <type api="T:System.Windows.Input.ModifierKeys" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <topicdata group="api" />
      <apidata name="TranslateCharCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="msg">
          <referenceTo>
            <type api="T:System.Windows.Interop.MSG" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="modifiers">
          <type api="T:System.Windows.Input.ModifierKeys" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.UpdateWindowPos">
      <topicdata group="api" />
      <apidata name="UpdateWindowPos" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
      <topicdata group="api" />
      <apidata name="WndProc" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="hwnd">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="msg">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="wParam">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="lParam">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="handled">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Windows.Interop.HwndSource">
      <topicdata group="api" />
      <apidata name="HwndSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.PresentationSource" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:System.Windows.Interop.IWin32Window" ref="true" />
        <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Windows.Interop.HwndSource.AutoResized" />
        <element api="E:System.Windows.Interop.HwndSource.Disposed" />
        <element api="E:System.Windows.Interop.HwndSource.DpiChanged" />
        <element api="E:System.Windows.Interop.HwndSource.SizeToContentChanged" />
        <element api="E:System.Windows.PresentationSource.ContentRendered" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Interop.HwndSource.#ctor">
          <element api="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)" />
          <element api="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)" />
          <element api="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)" />
          <element api="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)" />
        </element>
        <element api="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />
        <element api="M:System.Windows.Interop.HwndSource.CreateHandleRef" />
        <element api="M:System.Windows.Interop.HwndSource.Dispose" />
        <element api="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)" />
        <element api="M:System.Windows.Interop.HwndSource.GetCompositionTargetCore" />
        <element api="M:System.Windows.Interop.HwndSource.HasFocusWithinCore" />
        <element api="M:System.Windows.Interop.HwndSource.OnDpiChanged(System.Windows.HwndDpiChangedEventArgs)" />
        <element api="M:System.Windows.Interop.HwndSource.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)" />
        <element api="M:System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)" />
        <element api="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin" />
        <element api="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
        <element api="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)" />
        <element api="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndSource.TabIntoCore(System.Windows.Input.TraversalRequest)" />
        <element api="M:System.Windows.Interop.HwndSource.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndSource.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.PresentationSource.AddSource" />
        <element api="M:System.Windows.PresentationSource.ClearContentRenderedListeners" />
        <element api="M:System.Windows.PresentationSource.RemoveSource" />
        <element api="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)" />
        <element api="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" />
        <element api="P:System.Windows.Interop.HwndSource.ChildKeyboardInputSinks" />
        <element api="P:System.Windows.Interop.HwndSource.CompositionTarget" />
        <element api="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode" />
        <element api="P:System.Windows.Interop.HwndSource.Handle" />
        <element api="P:System.Windows.Interop.HwndSource.IsDisposed" />
        <element api="P:System.Windows.Interop.HwndSource.KeyboardInputSiteCore" />
        <element api="P:System.Windows.Interop.HwndSource.RestoreFocusMode" />
        <element api="P:System.Windows.Interop.HwndSource.RootVisual" />
        <element api="P:System.Windows.Interop.HwndSource.SizeToContent" />
        <element api="P:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite" />
        <element api="P:System.Windows.Interop.HwndSource.UsesPerPixelOpacity" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Interop.HwndSource">
      <topicdata name="HwndSource" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Interop.HwndSource" />
      <apidata name="HwndSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />
        <element api="M:System.Windows.Interop.HwndSource.CreateHandleRef" />
        <element api="M:System.Windows.Interop.HwndSource.Dispose" />
        <element api="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)" />
        <element api="M:System.Windows.Interop.HwndSource.GetCompositionTargetCore" />
        <element api="M:System.Windows.Interop.HwndSource.HasFocusWithinCore" />
        <element api="M:System.Windows.Interop.HwndSource.OnDpiChanged(System.Windows.HwndDpiChangedEventArgs)" />
        <element api="M:System.Windows.Interop.HwndSource.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)" />
        <element api="M:System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)" />
        <element api="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin" />
        <element api="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
        <element api="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)" />
        <element api="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndSource.TabIntoCore(System.Windows.Input.TraversalRequest)" />
        <element api="M:System.Windows.Interop.HwndSource.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.HwndSource.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.PresentationSource.AddSource" />
        <element api="M:System.Windows.PresentationSource.ClearContentRenderedListeners" />
        <element api="M:System.Windows.PresentationSource.RemoveSource" />
        <element api="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Interop.HwndSource">
      <topicdata name="HwndSource" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Interop.HwndSource" />
      <apidata name="HwndSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" />
        <element api="P:System.Windows.Interop.HwndSource.ChildKeyboardInputSinks" />
        <element api="P:System.Windows.Interop.HwndSource.CompositionTarget" />
        <element api="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode" />
        <element api="P:System.Windows.Interop.HwndSource.Handle" />
        <element api="P:System.Windows.Interop.HwndSource.IsDisposed" />
        <element api="P:System.Windows.Interop.HwndSource.KeyboardInputSiteCore" />
        <element api="P:System.Windows.Interop.HwndSource.RestoreFocusMode" />
        <element api="P:System.Windows.Interop.HwndSource.RootVisual" />
        <element api="P:System.Windows.Interop.HwndSource.SizeToContent" />
        <element api="P:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite" />
        <element api="P:System.Windows.Interop.HwndSource.UsesPerPixelOpacity" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Interop.HwndSource">
      <topicdata name="HwndSource" group="list" subgroup="Events" typeTopicId="T:System.Windows.Interop.HwndSource" />
      <apidata name="HwndSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Windows.Interop.HwndSource.AutoResized" />
        <element api="E:System.Windows.Interop.HwndSource.Disposed" />
        <element api="E:System.Windows.Interop.HwndSource.DpiChanged" />
        <element api="E:System.Windows.Interop.HwndSource.SizeToContentChanged" />
        <element api="E:System.Windows.PresentationSource.ContentRendered" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Interop.HwndSource.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)" />
        <element api="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)" />
        <element api="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)" />
        <element api="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Interop.HwndSource.#ctor" />
      <parameters>
        <parameter name="classStyle">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="exStyle">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="x">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parent">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Interop.HwndSource.#ctor" />
      <parameters>
        <parameter name="classStyle">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="exStyle">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="x">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parent">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="adjustSizingForNonClientArea">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Interop.HwndSource.#ctor" />
      <parameters>
        <parameter name="classStyle">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="exStyle">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="x">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parent">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Interop.HwndSource.#ctor" />
      <parameters>
        <parameter name="parameters">
          <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode">
      <topicdata group="api" />
      <apidata name="AcquireHwndFocusInMenuMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AcquireHwndFocusInMenuMode" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)">
      <topicdata group="api" />
      <apidata name="AddHook" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="hook">
          <type api="T:System.Windows.Interop.HwndSourceHook" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Windows.Interop.HwndSource.AutoResized">
      <topicdata group="api" />
      <apidata name="AutoResized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AutoResized" />
      <remover name="remove_AutoResized" />
      <eventhandler>
        <type api="T:System.Windows.AutoResizedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.AutoResizedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSource.ChildKeyboardInputSinks">
      <topicdata group="api" />
      <apidata name="ChildKeyboardInputSinks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChildKeyboardInputSinks" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSource.CompositionTarget">
      <topicdata group="api" />
      <apidata name="CompositionTarget" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CompositionTarget">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Windows.Interop.HwndTarget" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.CreateHandleRef">
      <topicdata group="api" />
      <apidata name="CreateHandleRef" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Runtime.InteropServices.HandleRef" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode">
      <topicdata group="api" />
      <apidata name="DefaultAcquireHwndFocusInMenuMode" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultAcquireHwndFocusInMenuMode" />
      <setter name="set_DefaultAcquireHwndFocusInMenuMode" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Interop.HwndSource.Disposed">
      <topicdata group="api" />
      <apidata name="Disposed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Disposed" />
      <remover name="remove_Disposed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Interop.HwndSource.DpiChanged">
      <topicdata group="api" />
      <apidata name="DpiChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_DpiChanged" />
      <remover name="remove_DpiChanged" />
      <eventhandler>
        <type api="T:System.Windows.HwndDpiChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.HwndDpiChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)">
      <topicdata group="api" />
      <apidata name="FromHwnd" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="hwnd">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.GetCompositionTargetCore">
      <topicdata group="api" />
      <apidata name="GetCompositionTargetCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.PresentationSource.GetCompositionTargetCore">
          <type api="T:System.Windows.PresentationSource" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Windows.Media.CompositionTarget" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Interop.HwndSource.Handle">
      <topicdata group="api" />
      <apidata name="Handle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Handle">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Windows.Interop.IWin32Window.Handle">
          <type api="T:System.Windows.Interop.IWin32Window" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.HasFocusWithinCore">
      <topicdata group="api" />
      <apidata name="HasFocusWithinCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSource.IsDisposed">
      <topicdata group="api" />
      <apidata name="IsDisposed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.PresentationSource.IsDisposed">
          <type api="T:System.Windows.PresentationSource" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsDisposed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSource.KeyboardInputSiteCore">
      <topicdata group="api" />
      <apidata name="KeyboardInputSiteCore" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeyboardInputSiteCore">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_KeyboardInputSiteCore">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Windows.Interop.IKeyboardInputSite" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.OnDpiChanged(System.Windows.HwndDpiChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnDpiChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Windows.HwndDpiChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <topicdata group="api" />
      <apidata name="OnMnemonicCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="msg">
          <referenceTo>
            <type api="T:System.Windows.Interop.MSG" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="modifiers">
          <type api="T:System.Windows.Input.ModifierKeys" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)">
      <topicdata group="api" />
      <apidata name="RegisterKeyboardInputSinkCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sink">
          <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Interop.IKeyboardInputSite" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)">
      <topicdata group="api" />
      <apidata name="RemoveHook" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="hook">
          <type api="T:System.Windows.Interop.HwndSourceHook" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Interop.HwndSource.RestoreFocusMode">
      <topicdata group="api" />
      <apidata name="RestoreFocusMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RestoreFocusMode" />
      <returns>
        <type api="T:System.Windows.Input.RestoreFocusMode" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSource.RootVisual">
      <topicdata group="api" />
      <apidata name="RootVisual" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.PresentationSource.RootVisual">
          <type api="T:System.Windows.PresentationSource" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_RootVisual">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_RootVisual">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Windows.Media.Visual" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSource.SizeToContent">
      <topicdata group="api" />
      <apidata name="SizeToContent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SizeToContent" />
      <setter name="set_SizeToContent" />
      <returns>
        <type api="T:System.Windows.SizeToContent" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Interop.HwndSource.SizeToContentChanged">
      <topicdata group="api" />
      <apidata name="SizeToContentChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SizeToContentChanged" />
      <remover name="remove_SizeToContentChanged" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin">
      <topicdata group="api" eiiName="IKeyboardInputSink.HasFocusWithin" />
      <apidata name="HasFocusWithin" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
          <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
      <topicdata group="api" eiiName="IKeyboardInputSink.KeyboardInputSite" />
      <apidata name="KeyboardInputSite" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <setter name="set_System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Windows.Interop.IKeyboardInputSite" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
          <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <topicdata group="api" eiiName="IKeyboardInputSink.OnMnemonic" />
      <apidata name="OnMnemonic" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="msg">
          <referenceTo>
            <type api="T:System.Windows.Interop.MSG" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="modifiers">
          <type api="T:System.Windows.Input.ModifierKeys" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <topicdata group="api" eiiName="IKeyboardInputSink.RegisterKeyboardInputSink" />
      <apidata name="RegisterKeyboardInputSink" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sink">
          <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Interop.IKeyboardInputSite" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
      <topicdata group="api" eiiName="IKeyboardInputSink.TabInto" />
      <apidata name="TabInto" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Windows.Input.TraversalRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
          <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <topicdata group="api" eiiName="IKeyboardInputSink.TranslateAccelerator" />
      <apidata name="TranslateAccelerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="msg">
          <referenceTo>
            <type api="T:System.Windows.Interop.MSG" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="modifiers">
          <type api="T:System.Windows.Input.ModifierKeys" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <topicdata group="api" eiiName="IKeyboardInputSink.TranslateChar" />
      <apidata name="TranslateChar" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="msg">
          <referenceTo>
            <type api="T:System.Windows.Interop.MSG" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="modifiers">
          <type api="T:System.Windows.Input.ModifierKeys" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.TabIntoCore(System.Windows.Input.TraversalRequest)">
      <topicdata group="api" />
      <apidata name="TabIntoCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Windows.Input.TraversalRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <topicdata group="api" />
      <apidata name="TranslateAcceleratorCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="msg">
          <referenceTo>
            <type api="T:System.Windows.Interop.MSG" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="modifiers">
          <type api="T:System.Windows.Input.ModifierKeys" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.HwndSource.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <topicdata group="api" />
      <apidata name="TranslateCharCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="msg">
          <referenceTo>
            <type api="T:System.Windows.Interop.MSG" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="modifiers">
          <type api="T:System.Windows.Input.ModifierKeys" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Interop.HwndSource.UsesPerPixelOpacity">
      <topicdata group="api" />
      <apidata name="UsesPerPixelOpacity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UsesPerPixelOpacity">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Interop.HwndSourceHook">
      <topicdata group="api" />
      <apidata name="HwndSourceHook" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="hwnd">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="msg">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="wParam">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="lParam">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="handled">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="T:System.Windows.Interop.HwndSourceParameters">
      <topicdata group="api" />
      <apidata name="HwndSourceParameters" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.ToString" />
        <element api="Overload:System.Windows.Interop.HwndSourceParameters.#ctor">
          <element api="M:System.Windows.Interop.HwndSourceParameters.#ctor(System.String)" />
          <element api="M:System.Windows.Interop.HwndSourceParameters.#ctor(System.String,System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Windows.Interop.HwndSourceParameters.Equals">
          <element api="M:System.Windows.Interop.HwndSourceParameters.Equals(System.Windows.Interop.HwndSourceParameters)" />
          <element api="M:System.Windows.Interop.HwndSourceParameters.Equals(System.Object)" />
        </element>
        <element api="M:System.Windows.Interop.HwndSourceParameters.GetHashCode" />
        <element api="M:System.Windows.Interop.HwndSourceParameters.op_Equality(System.Windows.Interop.HwndSourceParameters,System.Windows.Interop.HwndSourceParameters)" />
        <element api="M:System.Windows.Interop.HwndSourceParameters.op_Inequality(System.Windows.Interop.HwndSourceParameters,System.Windows.Interop.HwndSourceParameters)" />
        <element api="M:System.Windows.Interop.HwndSourceParameters.SetPosition(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Interop.HwndSourceParameters.SetSize(System.Int32,System.Int32)" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.AdjustSizingForNonClientArea" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.ExtendedWindowStyle" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.HasAssignedSize" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.Height" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.HwndSourceHook" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.ParentWindow" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.PositionX" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.PositionY" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.TreatAncestorsAsNonClientArea" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.TreatAsInputRoot" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.UsesPerPixelTransparency" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.Width" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.WindowClassStyle" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.WindowName" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.WindowStyle" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Interop.HwndSourceParameters">
      <topicdata name="HwndSourceParameters" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Interop.HwndSourceParameters" />
      <apidata name="HwndSourceParameters" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.ToString" />
        <element api="Overload:System.Windows.Interop.HwndSourceParameters.Equals">
          <element api="M:System.Windows.Interop.HwndSourceParameters.Equals(System.Windows.Interop.HwndSourceParameters)" />
          <element api="M:System.Windows.Interop.HwndSourceParameters.Equals(System.Object)" />
        </element>
        <element api="M:System.Windows.Interop.HwndSourceParameters.GetHashCode" />
        <element api="M:System.Windows.Interop.HwndSourceParameters.SetPosition(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Interop.HwndSourceParameters.SetSize(System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" />
      </containers>
    </api>
    <api id="Operators.T:System.Windows.Interop.HwndSourceParameters">
      <topicdata name="HwndSourceParameters" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Windows.Interop.HwndSourceParameters" />
      <apidata name="HwndSourceParameters" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.Interop.HwndSourceParameters.op_Equality(System.Windows.Interop.HwndSourceParameters,System.Windows.Interop.HwndSourceParameters)" />
        <element api="M:System.Windows.Interop.HwndSourceParameters.op_Inequality(System.Windows.Interop.HwndSourceParameters,System.Windows.Interop.HwndSourceParameters)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Interop.HwndSourceParameters">
      <topicdata name="HwndSourceParameters" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Interop.HwndSourceParameters" />
      <apidata name="HwndSourceParameters" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.AdjustSizingForNonClientArea" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.ExtendedWindowStyle" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.HasAssignedSize" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.Height" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.HwndSourceHook" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.ParentWindow" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.PositionX" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.PositionY" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.TreatAncestorsAsNonClientArea" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.TreatAsInputRoot" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.UsesPerPixelTransparency" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.Width" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.WindowClassStyle" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.WindowName" />
        <element api="P:System.Windows.Interop.HwndSourceParameters.WindowStyle" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Interop.HwndSourceParameters.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Windows.Interop.HwndSourceParameters.#ctor(System.String)" />
        <element api="M:System.Windows.Interop.HwndSourceParameters.#ctor(System.String,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Interop.HwndSourceParameters.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Interop.HwndSourceParameters.Equals(System.Windows.Interop.HwndSourceParameters)" />
        <element api="M:System.Windows.Interop.HwndSourceParameters.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndSourceParameters.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Interop.HwndSourceParameters.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndSourceParameters.#ctor(System.String,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Interop.HwndSourceParameters.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode">
      <topicdata group="api" />
      <apidata name="AcquireHwndFocusInMenuMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AcquireHwndFocusInMenuMode" />
      <setter name="set_AcquireHwndFocusInMenuMode" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSourceParameters.AdjustSizingForNonClientArea">
      <topicdata group="api" />
      <apidata name="AdjustSizingForNonClientArea" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AdjustSizingForNonClientArea" />
      <setter name="set_AdjustSizingForNonClientArea" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndSourceParameters.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Interop.HwndSourceParameters.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndSourceParameters.Equals(System.Windows.Interop.HwndSourceParameters)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Interop.HwndSourceParameters.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSourceParameters.ExtendedWindowStyle">
      <topicdata group="api" />
      <apidata name="ExtendedWindowStyle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ExtendedWindowStyle" />
      <setter name="set_ExtendedWindowStyle" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndSourceParameters.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSourceParameters.HasAssignedSize">
      <topicdata group="api" />
      <apidata name="HasAssignedSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasAssignedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSourceParameters.Height">
      <topicdata group="api" />
      <apidata name="Height" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Height" />
      <setter name="set_Height" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSourceParameters.HwndSourceHook">
      <topicdata group="api" />
      <apidata name="HwndSourceHook" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HwndSourceHook" />
      <setter name="set_HwndSourceHook" />
      <returns>
        <type api="T:System.Windows.Interop.HwndSourceHook" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndSourceParameters.op_Equality(System.Windows.Interop.HwndSourceParameters,System.Windows.Interop.HwndSourceParameters)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="a">
          <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
        </parameter>
        <parameter name="b">
          <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndSourceParameters.op_Inequality(System.Windows.Interop.HwndSourceParameters,System.Windows.Interop.HwndSourceParameters)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="a">
          <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
        </parameter>
        <parameter name="b">
          <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSourceParameters.ParentWindow">
      <topicdata group="api" />
      <apidata name="ParentWindow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ParentWindow" />
      <setter name="set_ParentWindow" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSourceParameters.PositionX">
      <topicdata group="api" />
      <apidata name="PositionX" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PositionX" />
      <setter name="set_PositionX" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSourceParameters.PositionY">
      <topicdata group="api" />
      <apidata name="PositionY" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PositionY" />
      <setter name="set_PositionY" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode">
      <topicdata group="api" />
      <apidata name="RestoreFocusMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RestoreFocusMode" />
      <setter name="set_RestoreFocusMode" />
      <returns>
        <type api="T:System.Windows.Input.RestoreFocusMode" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndSourceParameters.SetPosition(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="SetPosition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="x">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndSourceParameters.SetSize(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="SetSize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSourceParameters.TreatAncestorsAsNonClientArea">
      <topicdata group="api" />
      <apidata name="TreatAncestorsAsNonClientArea" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TreatAncestorsAsNonClientArea" />
      <setter name="set_TreatAncestorsAsNonClientArea" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSourceParameters.TreatAsInputRoot">
      <topicdata group="api" />
      <apidata name="TreatAsInputRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TreatAsInputRoot" />
      <setter name="set_TreatAsInputRoot" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity">
      <topicdata group="api" />
      <apidata name="UsesPerPixelOpacity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UsesPerPixelOpacity" />
      <setter name="set_UsesPerPixelOpacity" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSourceParameters.UsesPerPixelTransparency">
      <topicdata group="api" />
      <apidata name="UsesPerPixelTransparency" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UsesPerPixelTransparency" />
      <setter name="set_UsesPerPixelTransparency" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSourceParameters.Width">
      <topicdata group="api" />
      <apidata name="Width" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Width" />
      <setter name="set_Width" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSourceParameters.WindowClassStyle">
      <topicdata group="api" />
      <apidata name="WindowClassStyle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WindowClassStyle" />
      <setter name="set_WindowClassStyle" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSourceParameters.WindowName">
      <topicdata group="api" />
      <apidata name="WindowName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WindowName" />
      <setter name="set_WindowName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndSourceParameters.WindowStyle">
      <topicdata group="api" />
      <apidata name="WindowStyle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WindowStyle" />
      <setter name="set_WindowStyle" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndSourceParameters" ref="false" />
      </containers>
    </api>
    <api id="T:System.Windows.Interop.HwndTarget">
      <topicdata group="api" />
      <apidata name="HwndTarget" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Media.CompositionTarget" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Interop.HwndTarget.#ctor(System.IntPtr)" />
        <element api="M:System.Windows.Interop.HwndTarget.Dispose" />
        <element api="P:System.Windows.Interop.HwndTarget.BackgroundColor" />
        <element api="P:System.Windows.Interop.HwndTarget.RenderMode" />
        <element api="P:System.Windows.Interop.HwndTarget.RootVisual" />
        <element api="P:System.Windows.Interop.HwndTarget.TransformFromDevice" />
        <element api="P:System.Windows.Interop.HwndTarget.TransformToDevice" />
        <element api="P:System.Windows.Interop.HwndTarget.UsesPerPixelOpacity" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Interop.HwndTarget">
      <topicdata name="HwndTarget" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Interop.HwndTarget" />
      <apidata name="HwndTarget" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Interop.HwndTarget.Dispose" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndTarget" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Interop.HwndTarget">
      <topicdata name="HwndTarget" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Interop.HwndTarget" />
      <apidata name="HwndTarget" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Windows.Interop.HwndTarget.BackgroundColor" />
        <element api="P:System.Windows.Interop.HwndTarget.RenderMode" />
        <element api="P:System.Windows.Interop.HwndTarget.RootVisual" />
        <element api="P:System.Windows.Interop.HwndTarget.TransformFromDevice" />
        <element api="P:System.Windows.Interop.HwndTarget.TransformToDevice" />
        <element api="P:System.Windows.Interop.HwndTarget.UsesPerPixelOpacity" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndTarget" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndTarget.#ctor(System.IntPtr)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="hwnd">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndTarget" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Interop.HwndTarget.BackgroundColor">
      <topicdata group="api" />
      <apidata name="BackgroundColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BackgroundColor" />
      <setter name="set_BackgroundColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndTarget" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.HwndTarget.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Media.CompositionTarget.Dispose">
          <type api="T:System.Windows.Media.CompositionTarget" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndTarget" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Interop.HwndTarget.RenderMode">
      <topicdata group="api" />
      <apidata name="RenderMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RenderMode" />
      <setter name="set_RenderMode">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Windows.Interop.RenderMode" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndTarget" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndTarget.RootVisual">
      <topicdata group="api" />
      <apidata name="RootVisual" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Media.CompositionTarget.RootVisual">
          <type api="T:System.Windows.Media.CompositionTarget" ref="true" />
        </member>
      </overrides>
      <propertydata set="true" />
      <setter name="set_RootVisual">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Windows.Media.Visual" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndTarget" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndTarget.TransformFromDevice">
      <topicdata group="api" />
      <apidata name="TransformFromDevice" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Media.CompositionTarget.TransformFromDevice">
          <type api="T:System.Windows.Media.CompositionTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TransformFromDevice" />
      <returns>
        <type api="T:System.Windows.Media.Matrix" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndTarget" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndTarget.TransformToDevice">
      <topicdata group="api" />
      <apidata name="TransformToDevice" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Media.CompositionTarget.TransformToDevice">
          <type api="T:System.Windows.Media.CompositionTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TransformToDevice" />
      <returns>
        <type api="T:System.Windows.Media.Matrix" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndTarget" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.HwndTarget.UsesPerPixelOpacity">
      <topicdata group="api" />
      <apidata name="UsesPerPixelOpacity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UsesPerPixelOpacity" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.HwndTarget" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Interop.IErrorPage">
      <topicdata group="api" />
      <apidata name="IErrorPage" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Interop.IErrorPage.DeploymentPath" />
        <element api="P:System.Windows.Interop.IErrorPage.ErrorFlag" />
        <element api="P:System.Windows.Interop.IErrorPage.ErrorText" />
        <element api="P:System.Windows.Interop.IErrorPage.ErrorTitle" />
        <element api="P:System.Windows.Interop.IErrorPage.GetWinFxCallback" />
        <element api="P:System.Windows.Interop.IErrorPage.LogFilePath" />
        <element api="P:System.Windows.Interop.IErrorPage.RefreshCallback" />
        <element api="P:System.Windows.Interop.IErrorPage.SupportUri" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Interop.IErrorPage">
      <topicdata name="IErrorPage" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Interop.IErrorPage" />
      <apidata name="IErrorPage" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Interop.IErrorPage.DeploymentPath" />
        <element api="P:System.Windows.Interop.IErrorPage.ErrorFlag" />
        <element api="P:System.Windows.Interop.IErrorPage.ErrorText" />
        <element api="P:System.Windows.Interop.IErrorPage.ErrorTitle" />
        <element api="P:System.Windows.Interop.IErrorPage.GetWinFxCallback" />
        <element api="P:System.Windows.Interop.IErrorPage.LogFilePath" />
        <element api="P:System.Windows.Interop.IErrorPage.RefreshCallback" />
        <element api="P:System.Windows.Interop.IErrorPage.SupportUri" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IErrorPage" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.IErrorPage.DeploymentPath">
      <topicdata group="api" />
      <apidata name="DeploymentPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DeploymentPath" />
      <setter name="set_DeploymentPath" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IErrorPage" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.IErrorPage.ErrorFlag">
      <topicdata group="api" />
      <apidata name="ErrorFlag" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ErrorFlag" />
      <setter name="set_ErrorFlag" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IErrorPage" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.IErrorPage.ErrorText">
      <topicdata group="api" />
      <apidata name="ErrorText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ErrorText" />
      <setter name="set_ErrorText" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IErrorPage" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.IErrorPage.ErrorTitle">
      <topicdata group="api" />
      <apidata name="ErrorTitle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ErrorTitle" />
      <setter name="set_ErrorTitle" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IErrorPage" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.IErrorPage.GetWinFxCallback">
      <topicdata group="api" />
      <apidata name="GetWinFxCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_GetWinFxCallback" />
      <setter name="set_GetWinFxCallback" />
      <returns>
        <type api="T:System.Windows.Threading.DispatcherOperationCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IErrorPage" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.IErrorPage.LogFilePath">
      <topicdata group="api" />
      <apidata name="LogFilePath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_LogFilePath" />
      <setter name="set_LogFilePath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IErrorPage" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.IErrorPage.RefreshCallback">
      <topicdata group="api" />
      <apidata name="RefreshCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_RefreshCallback" />
      <setter name="set_RefreshCallback" />
      <returns>
        <type api="T:System.Windows.Threading.DispatcherOperationCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IErrorPage" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.IErrorPage.SupportUri">
      <topicdata group="api" />
      <apidata name="SupportUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SupportUri" />
      <setter name="set_SupportUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IErrorPage" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Interop.IKeyboardInputSink">
      <topicdata group="api" />
      <apidata name="IKeyboardInputSink" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
        <type api="T:System.Windows.Forms.Integration.WindowsFormsHost" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
        <element api="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
        <element api="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
        <element api="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Interop.IKeyboardInputSink">
      <topicdata name="IKeyboardInputSink" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Interop.IKeyboardInputSink" />
      <apidata name="IKeyboardInputSink" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
        <element api="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
        <element api="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
        <element api="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <element api="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IKeyboardInputSink" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Interop.IKeyboardInputSink">
      <topicdata name="IKeyboardInputSink" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Interop.IKeyboardInputSink" />
      <apidata name="IKeyboardInputSink" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IKeyboardInputSink" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <topicdata group="api" />
      <apidata name="HasFocusWithin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <topicdata group="api" />
      <apidata name="KeyboardInputSite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_KeyboardInputSite" />
      <setter name="set_KeyboardInputSite">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Windows.Interop.IKeyboardInputSite" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <topicdata group="api" />
      <apidata name="OnMnemonic" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="msg">
          <referenceTo>
            <type api="T:System.Windows.Interop.MSG" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="modifiers">
          <type api="T:System.Windows.Input.ModifierKeys" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <topicdata group="api" />
      <apidata name="RegisterKeyboardInputSink" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sink">
          <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Interop.IKeyboardInputSite" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
      <topicdata group="api" />
      <apidata name="TabInto" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Windows.Input.TraversalRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <topicdata group="api" />
      <apidata name="TranslateAccelerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="msg">
          <referenceTo>
            <type api="T:System.Windows.Interop.MSG" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="modifiers">
          <type api="T:System.Windows.Input.ModifierKeys" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <topicdata group="api" />
      <apidata name="TranslateChar" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="msg">
          <referenceTo>
            <type api="T:System.Windows.Interop.MSG" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="modifiers">
          <type api="T:System.Windows.Input.ModifierKeys" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Windows.Interop.IKeyboardInputSite">
      <topicdata group="api" />
      <apidata name="IKeyboardInputSite" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops(System.Windows.Input.TraversalRequest)" />
        <element api="M:System.Windows.Interop.IKeyboardInputSite.Unregister" />
        <element api="P:System.Windows.Interop.IKeyboardInputSite.Sink" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Interop.IKeyboardInputSite">
      <topicdata name="IKeyboardInputSite" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Interop.IKeyboardInputSite" />
      <apidata name="IKeyboardInputSite" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops(System.Windows.Input.TraversalRequest)" />
        <element api="M:System.Windows.Interop.IKeyboardInputSite.Unregister" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IKeyboardInputSite" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Interop.IKeyboardInputSite">
      <topicdata name="IKeyboardInputSite" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Interop.IKeyboardInputSite" />
      <apidata name="IKeyboardInputSite" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Interop.IKeyboardInputSite.Sink" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IKeyboardInputSite" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops(System.Windows.Input.TraversalRequest)">
      <topicdata group="api" />
      <apidata name="OnNoMoreTabStops" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Windows.Input.TraversalRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IKeyboardInputSite" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.IKeyboardInputSite.Sink">
      <topicdata group="api" />
      <apidata name="Sink" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Sink" />
      <returns>
        <type api="T:System.Windows.Interop.IKeyboardInputSink" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IKeyboardInputSite" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.IKeyboardInputSite.Unregister">
      <topicdata group="api" />
      <apidata name="Unregister" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IKeyboardInputSite" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Windows.Interop.Imaging">
      <topicdata group="api" />
      <apidata name="Imaging" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap(System.IntPtr,System.IntPtr,System.Windows.Int32Rect,System.Windows.Media.Imaging.BitmapSizeOptions)" />
        <element api="M:System.Windows.Interop.Imaging.CreateBitmapSourceFromHIcon(System.IntPtr,System.Windows.Int32Rect,System.Windows.Media.Imaging.BitmapSizeOptions)" />
        <element api="M:System.Windows.Interop.Imaging.CreateBitmapSourceFromMemorySection(System.IntPtr,System.Int32,System.Int32,System.Windows.Media.PixelFormat,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Interop.Imaging">
      <topicdata name="Imaging" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Interop.Imaging" />
      <apidata name="Imaging" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap(System.IntPtr,System.IntPtr,System.Windows.Int32Rect,System.Windows.Media.Imaging.BitmapSizeOptions)" />
        <element api="M:System.Windows.Interop.Imaging.CreateBitmapSourceFromHIcon(System.IntPtr,System.Windows.Int32Rect,System.Windows.Media.Imaging.BitmapSizeOptions)" />
        <element api="M:System.Windows.Interop.Imaging.CreateBitmapSourceFromMemorySection(System.IntPtr,System.Int32,System.Int32,System.Windows.Media.PixelFormat,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.Imaging" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap(System.IntPtr,System.IntPtr,System.Windows.Int32Rect,System.Windows.Media.Imaging.BitmapSizeOptions)">
      <topicdata group="api" />
      <apidata name="CreateBitmapSourceFromHBitmap" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bitmap">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="palette">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="sourceRect">
          <type api="T:System.Windows.Int32Rect" ref="false" />
        </parameter>
        <parameter name="sizeOptions">
          <type api="T:System.Windows.Media.Imaging.BitmapSizeOptions" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Media.Imaging.BitmapSource" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.Imaging" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.Imaging.CreateBitmapSourceFromHIcon(System.IntPtr,System.Windows.Int32Rect,System.Windows.Media.Imaging.BitmapSizeOptions)">
      <topicdata group="api" />
      <apidata name="CreateBitmapSourceFromHIcon" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="icon">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="sourceRect">
          <type api="T:System.Windows.Int32Rect" ref="false" />
        </parameter>
        <parameter name="sizeOptions">
          <type api="T:System.Windows.Media.Imaging.BitmapSizeOptions" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Media.Imaging.BitmapSource" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.Imaging" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.Imaging.CreateBitmapSourceFromMemorySection(System.IntPtr,System.Int32,System.Int32,System.Windows.Media.PixelFormat,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="CreateBitmapSourceFromMemorySection" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="section">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="pixelWidth">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pixelHeight">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="format">
          <type api="T:System.Windows.Media.PixelFormat" ref="false" />
        </parameter>
        <parameter name="stride">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Media.Imaging.BitmapSource" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.Imaging" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Windows.Interop.InteropBitmap">
      <topicdata group="api" />
      <apidata name="InteropBitmap" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Media.Imaging.BitmapSource" ref="true" />
          <type api="T:System.Windows.Media.ImageSource" ref="true" />
          <type api="T:System.Windows.Media.Animation.Animatable" ref="true" />
          <type api="T:System.Windows.Freezable" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
        <element api="E:System.Windows.Media.Imaging.BitmapSource.DecodeFailed" />
        <element api="E:System.Windows.Media.Imaging.BitmapSource.DownloadCompleted" />
        <element api="E:System.Windows.Media.Imaging.BitmapSource.DownloadFailed" />
        <element api="E:System.Windows.Media.Imaging.BitmapSource.DownloadProgress" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Windows.Interop.InteropBitmap.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Interop.InteropBitmap.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Interop.InteropBitmap.Invalidate">
          <element api="M:System.Windows.Interop.InteropBitmap.Invalidate" />
          <element api="M:System.Windows.Interop.InteropBitmap.Invalidate(System.Nullable{System.Windows.Int32Rect})" />
        </element>
        <element api="Overload:System.Windows.Interop.InteropBitmap.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Interop.InteropBitmap.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.ImageSource.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
        <element api="Overload:System.Windows.Interop.InteropBitmap.ToString">
          <element api="M:System.Windows.Media.ImageSource.ToString" />
          <element api="M:System.Windows.Media.ImageSource.ToString(System.IFormatProvider)" />
        </element>
        <element api="M:System.Windows.Media.Imaging.BitmapSource.Clone" />
        <element api="M:System.Windows.Media.Imaging.BitmapSource.CloneCurrentValue" />
        <element api="Overload:System.Windows.Interop.InteropBitmap.CopyPixels">
          <element api="M:System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Array,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)" />
        </element>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Imaging.BitmapSource.DpiX" />
        <element api="P:System.Windows.Media.Imaging.BitmapSource.DpiY" />
        <element api="P:System.Windows.Media.Imaging.BitmapSource.Format" />
        <element api="P:System.Windows.Media.Imaging.BitmapSource.Height" />
        <element api="P:System.Windows.Media.Imaging.BitmapSource.IsDownloading" />
        <element api="P:System.Windows.Media.Imaging.BitmapSource.Metadata" />
        <element api="P:System.Windows.Media.Imaging.BitmapSource.Palette" />
        <element api="P:System.Windows.Media.Imaging.BitmapSource.PixelHeight" />
        <element api="P:System.Windows.Media.Imaging.BitmapSource.PixelWidth" />
        <element api="P:System.Windows.Media.Imaging.BitmapSource.Width" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Interop.InteropBitmap">
      <topicdata name="InteropBitmap" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Interop.InteropBitmap" />
      <apidata name="InteropBitmap" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Windows.Interop.InteropBitmap.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Interop.InteropBitmap.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Interop.InteropBitmap.Invalidate">
          <element api="M:System.Windows.Interop.InteropBitmap.Invalidate" />
          <element api="M:System.Windows.Interop.InteropBitmap.Invalidate(System.Nullable{System.Windows.Int32Rect})" />
        </element>
        <element api="Overload:System.Windows.Interop.InteropBitmap.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Interop.InteropBitmap.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.ImageSource.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
        <element api="Overload:System.Windows.Interop.InteropBitmap.ToString">
          <element api="M:System.Windows.Media.ImageSource.ToString" />
          <element api="M:System.Windows.Media.ImageSource.ToString(System.IFormatProvider)" />
        </element>
        <element api="M:System.Windows.Media.Imaging.BitmapSource.Clone" />
        <element api="M:System.Windows.Media.Imaging.BitmapSource.CloneCurrentValue" />
        <element api="Overload:System.Windows.Interop.InteropBitmap.CopyPixels">
          <element api="M:System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Array,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)" />
        </element>
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.InteropBitmap" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Interop.InteropBitmap">
      <topicdata name="InteropBitmap" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Interop.InteropBitmap" />
      <apidata name="InteropBitmap" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Imaging.BitmapSource.DpiX" />
        <element api="P:System.Windows.Media.Imaging.BitmapSource.DpiY" />
        <element api="P:System.Windows.Media.Imaging.BitmapSource.Format" />
        <element api="P:System.Windows.Media.Imaging.BitmapSource.Height" />
        <element api="P:System.Windows.Media.Imaging.BitmapSource.IsDownloading" />
        <element api="P:System.Windows.Media.Imaging.BitmapSource.Metadata" />
        <element api="P:System.Windows.Media.Imaging.BitmapSource.Palette" />
        <element api="P:System.Windows.Media.Imaging.BitmapSource.PixelHeight" />
        <element api="P:System.Windows.Media.Imaging.BitmapSource.PixelWidth" />
        <element api="P:System.Windows.Media.Imaging.BitmapSource.Width" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.InteropBitmap" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Interop.InteropBitmap">
      <topicdata name="InteropBitmap" group="list" subgroup="Events" typeTopicId="T:System.Windows.Interop.InteropBitmap" />
      <apidata name="InteropBitmap" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
        <element api="E:System.Windows.Media.Imaging.BitmapSource.DecodeFailed" />
        <element api="E:System.Windows.Media.Imaging.BitmapSource.DownloadCompleted" />
        <element api="E:System.Windows.Media.Imaging.BitmapSource.DownloadFailed" />
        <element api="E:System.Windows.Media.Imaging.BitmapSource.DownloadProgress" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.InteropBitmap" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Interop.InteropBitmap.Invalidate">
      <topicdata name="Invalidate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Invalidate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Interop.InteropBitmap.Invalidate" />
        <element api="M:System.Windows.Interop.InteropBitmap.Invalidate(System.Nullable{System.Windows.Int32Rect})" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.InteropBitmap" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.InteropBitmap.Invalidate">
      <topicdata group="api" />
      <apidata name="Invalidate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Interop.InteropBitmap.Invalidate" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.InteropBitmap" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Interop.InteropBitmap.Invalidate(System.Nullable{System.Windows.Int32Rect})">
      <topicdata group="api" />
      <apidata name="Invalidate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Interop.InteropBitmap.Invalidate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dirtyRect">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Windows.Int32Rect" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.InteropBitmap" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Windows.Interop.IProgressPage">
      <topicdata group="api" />
      <apidata name="IProgressPage" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.Interop.IProgressPage.UpdateProgress(System.Int64,System.Int64)" />
        <element api="P:System.Windows.Interop.IProgressPage.ApplicationName" />
        <element api="P:System.Windows.Interop.IProgressPage.DeploymentPath" />
        <element api="P:System.Windows.Interop.IProgressPage.PublisherName" />
        <element api="P:System.Windows.Interop.IProgressPage.RefreshCallback" />
        <element api="P:System.Windows.Interop.IProgressPage.StopCallback" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Interop.IProgressPage">
      <topicdata name="IProgressPage" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Interop.IProgressPage" />
      <apidata name="IProgressPage" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.Interop.IProgressPage.UpdateProgress(System.Int64,System.Int64)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IProgressPage" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Interop.IProgressPage">
      <topicdata name="IProgressPage" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Interop.IProgressPage" />
      <apidata name="IProgressPage" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Interop.IProgressPage.ApplicationName" />
        <element api="P:System.Windows.Interop.IProgressPage.DeploymentPath" />
        <element api="P:System.Windows.Interop.IProgressPage.PublisherName" />
        <element api="P:System.Windows.Interop.IProgressPage.RefreshCallback" />
        <element api="P:System.Windows.Interop.IProgressPage.StopCallback" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IProgressPage" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.IProgressPage.ApplicationName">
      <topicdata group="api" />
      <apidata name="ApplicationName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ApplicationName" />
      <setter name="set_ApplicationName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IProgressPage" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.IProgressPage.DeploymentPath">
      <topicdata group="api" />
      <apidata name="DeploymentPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DeploymentPath" />
      <setter name="set_DeploymentPath" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IProgressPage" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.IProgressPage.PublisherName">
      <topicdata group="api" />
      <apidata name="PublisherName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_PublisherName" />
      <setter name="set_PublisherName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IProgressPage" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.IProgressPage.RefreshCallback">
      <topicdata group="api" />
      <apidata name="RefreshCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_RefreshCallback" />
      <setter name="set_RefreshCallback" />
      <returns>
        <type api="T:System.Windows.Threading.DispatcherOperationCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IProgressPage" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.IProgressPage.StopCallback">
      <topicdata group="api" />
      <apidata name="StopCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_StopCallback" />
      <setter name="set_StopCallback" />
      <returns>
        <type api="T:System.Windows.Threading.DispatcherOperationCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IProgressPage" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.IProgressPage.UpdateProgress(System.Int64,System.Int64)">
      <topicdata group="api" />
      <apidata name="UpdateProgress" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="bytesDownloaded">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="bytesTotal">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IProgressPage" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Interop.IWin32Window">
      <topicdata group="api" />
      <apidata name="IWin32Window" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Windows.Interop.HwndSource" ref="true" />
        <type api="T:System.Windows.Interop.HwndHost" ref="true" />
      </implementors>
      <elements>
        <element api="P:System.Windows.Interop.IWin32Window.Handle" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Interop.IWin32Window">
      <topicdata name="IWin32Window" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Interop.IWin32Window" />
      <apidata name="IWin32Window" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Interop.IWin32Window.Handle" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IWin32Window" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.IWin32Window.Handle">
      <topicdata group="api" />
      <apidata name="Handle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Handle" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.IWin32Window" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Interop.MSG">
      <topicdata group="api" />
      <apidata name="MSG" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="P:System.Windows.Interop.MSG.hwnd" />
        <element api="P:System.Windows.Interop.MSG.lParam" />
        <element api="P:System.Windows.Interop.MSG.message" />
        <element api="P:System.Windows.Interop.MSG.pt_x" />
        <element api="P:System.Windows.Interop.MSG.pt_y" />
        <element api="P:System.Windows.Interop.MSG.time" />
        <element api="P:System.Windows.Interop.MSG.wParam" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Interop.MSG">
      <topicdata name="MSG" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Interop.MSG" />
      <apidata name="MSG" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.MSG" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Interop.MSG">
      <topicdata name="MSG" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Interop.MSG" />
      <apidata name="MSG" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Windows.Interop.MSG.hwnd" />
        <element api="P:System.Windows.Interop.MSG.lParam" />
        <element api="P:System.Windows.Interop.MSG.message" />
        <element api="P:System.Windows.Interop.MSG.pt_x" />
        <element api="P:System.Windows.Interop.MSG.pt_y" />
        <element api="P:System.Windows.Interop.MSG.time" />
        <element api="P:System.Windows.Interop.MSG.wParam" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.MSG" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.MSG.hwnd">
      <topicdata group="api" />
      <apidata name="hwnd" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_hwnd">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_hwnd">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.MSG" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.MSG.lParam">
      <topicdata group="api" />
      <apidata name="lParam" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_lParam">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_lParam">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.MSG" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.MSG.message">
      <topicdata group="api" />
      <apidata name="message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_message">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_message">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.MSG" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.MSG.pt_x">
      <topicdata group="api" />
      <apidata name="pt_x" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_pt_x">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_pt_x">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.MSG" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.MSG.pt_y">
      <topicdata group="api" />
      <apidata name="pt_y" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_pt_y">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_pt_y">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.MSG" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.MSG.time">
      <topicdata group="api" />
      <apidata name="time" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_time">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_time">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.MSG" ref="false" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.MSG.wParam">
      <topicdata group="api" />
      <apidata name="wParam" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_wParam">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_wParam">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.MSG" ref="false" />
      </containers>
    </api>
    <api id="T:System.Windows.Interop.RenderMode">
      <topicdata group="api" />
      <apidata name="RenderMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.Interop.RenderMode.Default" />
        <element api="F:System.Windows.Interop.RenderMode.SoftwareOnly" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="F:System.Windows.Interop.RenderMode.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Interop.RenderMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.RenderMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Interop.RenderMode.SoftwareOnly">
      <topicdata group="api" notopic="" />
      <apidata name="SoftwareOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Interop.RenderMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.RenderMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.Windows.Interop.ThreadMessageEventHandler">
      <topicdata group="api" />
      <apidata name="ThreadMessageEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="msg">
          <referenceTo>
            <type api="T:System.Windows.Interop.MSG" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="handled">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="T:System.Windows.Interop.WindowInteropHelper">
      <topicdata group="api" />
      <apidata name="WindowInteropHelper" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)" />
        <element api="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle" />
        <element api="P:System.Windows.Interop.WindowInteropHelper.Handle" />
        <element api="P:System.Windows.Interop.WindowInteropHelper.Owner" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Interop.WindowInteropHelper">
      <topicdata name="WindowInteropHelper" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Interop.WindowInteropHelper" />
      <apidata name="WindowInteropHelper" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.WindowInteropHelper" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Interop.WindowInteropHelper">
      <topicdata name="WindowInteropHelper" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Interop.WindowInteropHelper" />
      <apidata name="WindowInteropHelper" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Interop.WindowInteropHelper.Handle" />
        <element api="P:System.Windows.Interop.WindowInteropHelper.Owner" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.WindowInteropHelper" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="window">
          <type api="T:System.Windows.Window" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.WindowInteropHelper" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
      <topicdata group="api" />
      <apidata name="EnsureHandle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.WindowInteropHelper" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Interop.WindowInteropHelper.Handle">
      <topicdata group="api" />
      <apidata name="Handle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Handle">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.WindowInteropHelper" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Interop.WindowInteropHelper.Owner">
      <topicdata group="api" />
      <apidata name="Owner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Owner">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_Owner">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Interop" />
        <type api="T:System.Windows.Interop.WindowInteropHelper" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>