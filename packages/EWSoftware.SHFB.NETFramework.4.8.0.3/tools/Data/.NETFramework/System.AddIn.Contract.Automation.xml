<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.AddIn.Contract">
      <assemblydata version="4.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.AddIn.Contract.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.AddIn.Contract.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.AddIn.Contract.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.AddIn.Contract.Automation">
      <topicdata group="api" />
      <apidata name="System.AddIn.Contract.Automation" group="namespace" />
      <elements>
        <element api="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />
        <element api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />
        <element api="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" />
        <element api="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" />
        <element api="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" />
        <element api="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" />
        <element api="T:System.AddIn.Contract.Automation.IRemoteDelegateContract" />
        <element api="T:System.AddIn.Contract.Automation.RemoteMemberData" />
        <element api="T:System.AddIn.Contract.Automation.RemoteTypeData" />
        <element api="T:System.AddIn.Contract.Automation.RemoteMethodData" />
        <element api="T:System.AddIn.Contract.Automation.RemotePropertyData" />
        <element api="T:System.AddIn.Contract.Automation.RemoteFieldData" />
        <element api="T:System.AddIn.Contract.Automation.RemoteParameterData" />
      </elements>
    </api>
    <api id="T:System.AddIn.Contract.Automation.IRemoteDelegateContract">
      <topicdata group="api" />
      <apidata name="IRemoteDelegateContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.AddIn.Contract.Automation.IRemoteObjectContract" ref="true" />
        <type api="T:System.AddIn.Contract.IContract" ref="true" />
      </implements>
      <elements>
        <element api="M:System.AddIn.Contract.Automation.IRemoteDelegateContract.InvokeDelegate(System.AddIn.Contract.Collections.IRemoteArgumentArrayContract)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)" />
        <element api="M:System.AddIn.Contract.IContract.AcquireLifetimeToken" />
        <element api="M:System.AddIn.Contract.IContract.GetRemoteHashCode" />
        <element api="M:System.AddIn.Contract.IContract.QueryContract(System.String)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteToString" />
        <element api="M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
      </containers>
    </api>
    <api id="Methods.T:System.AddIn.Contract.Automation.IRemoteDelegateContract">
      <topicdata name="IRemoteDelegateContract" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Contract.Automation.IRemoteDelegateContract" />
      <apidata name="IRemoteDelegateContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.AddIn.Contract.Automation.IRemoteDelegateContract.InvokeDelegate(System.AddIn.Contract.Collections.IRemoteArgumentArrayContract)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)" />
        <element api="M:System.AddIn.Contract.IContract.AcquireLifetimeToken" />
        <element api="M:System.AddIn.Contract.IContract.GetRemoteHashCode" />
        <element api="M:System.AddIn.Contract.IContract.QueryContract(System.String)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteToString" />
        <element api="M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteDelegateContract" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteDelegateContract.InvokeDelegate(System.AddIn.Contract.Collections.IRemoteArgumentArrayContract)">
      <topicdata group="api" />
      <apidata name="InvokeDelegate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="args">
          <type api="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.RemoteArgument" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteDelegateContract" ref="true" />
      </containers>
    </api>
    <api id="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract">
      <topicdata group="api" />
      <apidata name="IRemoteEventInfoContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.AddIn.Contract.IContract" ref="true" />
      </implements>
      <elements>
        <element api="M:System.AddIn.Contract.Automation.IRemoteEventInfoContract.GetAddMethod" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteEventInfoContract.GetMemberData" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteEventInfoContract.GetRemoveMethod" />
        <element api="M:System.AddIn.Contract.IContract.AcquireLifetimeToken" />
        <element api="M:System.AddIn.Contract.IContract.GetRemoteHashCode" />
        <element api="M:System.AddIn.Contract.IContract.QueryContract(System.String)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteToString" />
        <element api="M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
      </containers>
    </api>
    <api id="Methods.T:System.AddIn.Contract.Automation.IRemoteEventInfoContract">
      <topicdata name="IRemoteEventInfoContract" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" />
      <apidata name="IRemoteEventInfoContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.AddIn.Contract.Automation.IRemoteEventInfoContract.GetAddMethod" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteEventInfoContract.GetMemberData" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteEventInfoContract.GetRemoveMethod" />
        <element api="M:System.AddIn.Contract.IContract.AcquireLifetimeToken" />
        <element api="M:System.AddIn.Contract.IContract.GetRemoteHashCode" />
        <element api="M:System.AddIn.Contract.IContract.QueryContract(System.String)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteToString" />
        <element api="M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteEventInfoContract.GetAddMethod">
      <topicdata group="api" />
      <apidata name="GetAddMethod" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteEventInfoContract.GetMemberData">
      <topicdata group="api" />
      <apidata name="GetMemberData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Automation.RemoteMemberData" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteEventInfoContract.GetRemoveMethod">
      <topicdata group="api" />
      <apidata name="GetRemoveMethod" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" ref="true" />
      </containers>
    </api>
    <api id="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract">
      <topicdata group="api" />
      <apidata name="IRemoteFieldInfoContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.AddIn.Contract.IContract" ref="true" />
      </implements>
      <elements>
        <element api="M:System.AddIn.Contract.Automation.IRemoteFieldInfoContract.GetFieldData" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteFieldInfoContract.GetValue(System.AddIn.Contract.Automation.IRemoteObjectContract)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteFieldInfoContract.SetValue(System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.RemoteArgument,System.Int32)" />
        <element api="M:System.AddIn.Contract.IContract.AcquireLifetimeToken" />
        <element api="M:System.AddIn.Contract.IContract.GetRemoteHashCode" />
        <element api="M:System.AddIn.Contract.IContract.QueryContract(System.String)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteToString" />
        <element api="M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
      </containers>
    </api>
    <api id="Methods.T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract">
      <topicdata name="IRemoteFieldInfoContract" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" />
      <apidata name="IRemoteFieldInfoContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.AddIn.Contract.Automation.IRemoteFieldInfoContract.GetFieldData" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteFieldInfoContract.GetValue(System.AddIn.Contract.Automation.IRemoteObjectContract)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteFieldInfoContract.SetValue(System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.RemoteArgument,System.Int32)" />
        <element api="M:System.AddIn.Contract.IContract.AcquireLifetimeToken" />
        <element api="M:System.AddIn.Contract.IContract.GetRemoteHashCode" />
        <element api="M:System.AddIn.Contract.IContract.QueryContract(System.String)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteToString" />
        <element api="M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteFieldInfoContract.GetFieldData">
      <topicdata group="api" />
      <apidata name="GetFieldData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Automation.RemoteFieldData" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteFieldInfoContract.GetValue(System.AddIn.Contract.Automation.IRemoteObjectContract)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.AddIn.Contract.Automation.IRemoteObjectContract" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.RemoteArgument" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteFieldInfoContract.SetValue(System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.RemoteArgument,System.Int32)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.AddIn.Contract.Automation.IRemoteObjectContract" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.AddIn.Contract.RemoteArgument" ref="false" />
        </parameter>
        <parameter name="localeId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" ref="true" />
      </containers>
    </api>
    <api id="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract">
      <topicdata group="api" />
      <apidata name="IRemoteMethodInfoContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.AddIn.Contract.IContract" ref="true" />
      </implements>
      <elements>
        <element api="M:System.AddIn.Contract.Automation.IRemoteMethodInfoContract.GetMethodData" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteMethodInfoContract.Invoke(System.AddIn.Contract.Automation.IRemoteObjectContract,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Int32)" />
        <element api="M:System.AddIn.Contract.IContract.AcquireLifetimeToken" />
        <element api="M:System.AddIn.Contract.IContract.GetRemoteHashCode" />
        <element api="M:System.AddIn.Contract.IContract.QueryContract(System.String)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteToString" />
        <element api="M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
      </containers>
    </api>
    <api id="Methods.T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract">
      <topicdata name="IRemoteMethodInfoContract" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" />
      <apidata name="IRemoteMethodInfoContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.AddIn.Contract.Automation.IRemoteMethodInfoContract.GetMethodData" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteMethodInfoContract.Invoke(System.AddIn.Contract.Automation.IRemoteObjectContract,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Int32)" />
        <element api="M:System.AddIn.Contract.IContract.AcquireLifetimeToken" />
        <element api="M:System.AddIn.Contract.IContract.GetRemoteHashCode" />
        <element api="M:System.AddIn.Contract.IContract.QueryContract(System.String)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteToString" />
        <element api="M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteMethodInfoContract.GetMethodData">
      <topicdata group="api" />
      <apidata name="GetMethodData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Automation.RemoteMethodData" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteMethodInfoContract.Invoke(System.AddIn.Contract.Automation.IRemoteObjectContract,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Int32)">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="target">
          <type api="T:System.AddIn.Contract.Automation.IRemoteObjectContract" ref="true" />
        </parameter>
        <parameter name="bindingFlags">
          <type api="T:System.Reflection.BindingFlags" ref="false" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" ref="true" />
        </parameter>
        <parameter name="localeId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.RemoteArgument" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" ref="true" />
      </containers>
    </api>
    <api id="T:System.AddIn.Contract.Automation.IRemoteObjectContract">
      <topicdata group="api" />
      <apidata name="IRemoteObjectContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.AddIn.Contract.IContract" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.AddIn.Contract.Automation.IRemoteDelegateContract" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)" />
        <element api="M:System.AddIn.Contract.IContract.AcquireLifetimeToken" />
        <element api="M:System.AddIn.Contract.IContract.GetRemoteHashCode" />
        <element api="M:System.AddIn.Contract.IContract.QueryContract(System.String)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteToString" />
        <element api="M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
      </containers>
    </api>
    <api id="Methods.T:System.AddIn.Contract.Automation.IRemoteObjectContract">
      <topicdata name="IRemoteObjectContract" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />
      <apidata name="IRemoteObjectContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)" />
        <element api="M:System.AddIn.Contract.IContract.AcquireLifetimeToken" />
        <element api="M:System.AddIn.Contract.IContract.GetRemoteHashCode" />
        <element api="M:System.AddIn.Contract.IContract.QueryContract(System.String)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteToString" />
        <element api="M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType">
      <topicdata group="api" />
      <apidata name="GetRemoteType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteObjectContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)">
      <topicdata group="api" />
      <apidata name="RemoteCast" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="canonicalName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.RemoteArgument" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteObjectContract" ref="true" />
      </containers>
    </api>
    <api id="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract">
      <topicdata group="api" />
      <apidata name="IRemotePropertyInfoContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.AddIn.Contract.IContract" ref="true" />
      </implements>
      <elements>
        <element api="M:System.AddIn.Contract.Automation.IRemotePropertyInfoContract.GetGetMethod" />
        <element api="M:System.AddIn.Contract.Automation.IRemotePropertyInfoContract.GetPropertyData" />
        <element api="M:System.AddIn.Contract.Automation.IRemotePropertyInfoContract.GetSetMethod" />
        <element api="M:System.AddIn.Contract.Automation.IRemotePropertyInfoContract.GetValue(System.AddIn.Contract.Automation.IRemoteObjectContract,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Int32)" />
        <element api="M:System.AddIn.Contract.Automation.IRemotePropertyInfoContract.SetValue(System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.RemoteArgument@,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Int32)" />
        <element api="M:System.AddIn.Contract.IContract.AcquireLifetimeToken" />
        <element api="M:System.AddIn.Contract.IContract.GetRemoteHashCode" />
        <element api="M:System.AddIn.Contract.IContract.QueryContract(System.String)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteToString" />
        <element api="M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
      </containers>
    </api>
    <api id="Methods.T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract">
      <topicdata name="IRemotePropertyInfoContract" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" />
      <apidata name="IRemotePropertyInfoContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.AddIn.Contract.Automation.IRemotePropertyInfoContract.GetGetMethod" />
        <element api="M:System.AddIn.Contract.Automation.IRemotePropertyInfoContract.GetPropertyData" />
        <element api="M:System.AddIn.Contract.Automation.IRemotePropertyInfoContract.GetSetMethod" />
        <element api="M:System.AddIn.Contract.Automation.IRemotePropertyInfoContract.GetValue(System.AddIn.Contract.Automation.IRemoteObjectContract,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Int32)" />
        <element api="M:System.AddIn.Contract.Automation.IRemotePropertyInfoContract.SetValue(System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.RemoteArgument@,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Int32)" />
        <element api="M:System.AddIn.Contract.IContract.AcquireLifetimeToken" />
        <element api="M:System.AddIn.Contract.IContract.GetRemoteHashCode" />
        <element api="M:System.AddIn.Contract.IContract.QueryContract(System.String)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteToString" />
        <element api="M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemotePropertyInfoContract.GetGetMethod">
      <topicdata group="api" />
      <apidata name="GetGetMethod" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemotePropertyInfoContract.GetPropertyData">
      <topicdata group="api" />
      <apidata name="GetPropertyData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Automation.RemotePropertyData" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemotePropertyInfoContract.GetSetMethod">
      <topicdata group="api" />
      <apidata name="GetSetMethod" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemotePropertyInfoContract.GetValue(System.AddIn.Contract.Automation.IRemoteObjectContract,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.AddIn.Contract.Automation.IRemoteObjectContract" ref="true" />
        </parameter>
        <parameter name="bindingFlags">
          <type api="T:System.Reflection.BindingFlags" ref="false" />
        </parameter>
        <parameter name="index">
          <type api="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" ref="true" />
        </parameter>
        <parameter name="localeId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.RemoteArgument" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemotePropertyInfoContract.SetValue(System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.RemoteArgument@,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Int32)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="target">
          <type api="T:System.AddIn.Contract.Automation.IRemoteObjectContract" ref="true" />
        </parameter>
        <parameter name="value">
          <referenceTo>
            <type api="T:System.AddIn.Contract.RemoteArgument" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="bindingFlags">
          <type api="T:System.Reflection.BindingFlags" ref="false" />
        </parameter>
        <parameter name="index">
          <type api="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" ref="true" />
        </parameter>
        <parameter name="localeId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" ref="true" />
      </containers>
    </api>
    <api id="T:System.AddIn.Contract.Automation.IRemoteTypeContract">
      <topicdata group="api" />
      <apidata name="IRemoteTypeContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.AddIn.Contract.IContract" ref="true" />
      </implements>
      <elements>
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)" />
        <element api="M:System.AddIn.Contract.IContract.AcquireLifetimeToken" />
        <element api="M:System.AddIn.Contract.IContract.GetRemoteHashCode" />
        <element api="M:System.AddIn.Contract.IContract.QueryContract(System.String)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteToString" />
        <element api="M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
      </containers>
    </api>
    <api id="Methods.T:System.AddIn.Contract.Automation.IRemoteTypeContract">
      <topicdata name="IRemoteTypeContract" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />
      <apidata name="IRemoteTypeContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData" />
        <element api="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)" />
        <element api="M:System.AddIn.Contract.IContract.AcquireLifetimeToken" />
        <element api="M:System.AddIn.Contract.IContract.GetRemoteHashCode" />
        <element api="M:System.AddIn.Contract.IContract.QueryContract(System.String)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)" />
        <element api="M:System.AddIn.Contract.IContract.RemoteToString" />
        <element api="M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
      <topicdata group="api" />
      <apidata name="GetCanonicalName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)">
      <topicdata group="api" />
      <apidata name="GetEvent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="bindingFlags">
          <type api="T:System.Reflection.BindingFlags" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)">
      <topicdata group="api" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="bindingFlags">
          <type api="T:System.Reflection.BindingFlags" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.Collections.IArrayContract`1" ref="true">
          <specialization>
            <type api="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)">
      <topicdata group="api" />
      <apidata name="GetField" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="bindingFlags">
          <type api="T:System.Reflection.BindingFlags" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)">
      <topicdata group="api" />
      <apidata name="GetFields" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="bindingFlags">
          <type api="T:System.Reflection.BindingFlags" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.Collections.IArrayContract`1" ref="true">
          <specialization>
            <type api="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
      <topicdata group="api" />
      <apidata name="GetInterface" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="canonicalName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces">
      <topicdata group="api" />
      <apidata name="GetInterfaces" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Collections.IArrayContract`1" ref="true">
          <specialization>
            <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
      <topicdata group="api" />
      <apidata name="GetMember" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="memberTypes">
          <type api="T:System.Reflection.MemberTypes" ref="false" />
        </parameter>
        <parameter name="bindingFlags">
          <type api="T:System.Reflection.BindingFlags" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.Collections.IArrayContract`1" ref="true">
          <specialization>
            <type api="T:System.AddIn.Contract.IContract" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)">
      <topicdata group="api" />
      <apidata name="GetMembers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="bindingFlags">
          <type api="T:System.Reflection.BindingFlags" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.Collections.IArrayContract`1" ref="true">
          <specialization>
            <type api="T:System.AddIn.Contract.IContract" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
      <topicdata group="api" />
      <apidata name="GetMethod" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="bindingFlags">
          <type api="T:System.Reflection.BindingFlags" ref="false" />
        </parameter>
        <parameter name="remoteTypes">
          <type api="T:System.AddIn.Contract.Collections.IArrayContract`1" ref="true">
            <specialization>
              <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)">
      <topicdata group="api" />
      <apidata name="GetMethods" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="bindingFlags">
          <type api="T:System.Reflection.BindingFlags" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.Collections.IArrayContract`1" ref="true">
          <specialization>
            <type api="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="bindingFlags">
          <type api="T:System.Reflection.BindingFlags" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.Collections.IArrayContract`1" ref="true">
          <specialization>
            <type api="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
      <topicdata group="api" />
      <apidata name="GetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="bindingFlags">
          <type api="T:System.Reflection.BindingFlags" ref="false" />
        </parameter>
        <parameter name="remoteReturnType">
          <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
        </parameter>
        <parameter name="remoteTypes">
          <type api="T:System.AddIn.Contract.Collections.IArrayContract`1" ref="true">
            <specialization>
              <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData">
      <topicdata group="api" />
      <apidata name="GetTypeData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Automation.RemoteTypeData" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
      <topicdata group="api" />
      <apidata name="InvokeMember" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="bindingFlags">
          <type api="T:System.Reflection.BindingFlags" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.AddIn.Contract.Automation.IRemoteObjectContract" ref="true" />
        </parameter>
        <parameter name="remoteArgs">
          <type api="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" ref="true" />
        </parameter>
        <parameter name="remoteArgModifiers">
          <arrayOf rank="1">
            <type api="T:System.Boolean" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="localeId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.RemoteArgument" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </containers>
    </api>
    <api id="T:System.AddIn.Contract.Automation.RemoteFieldData">
      <topicdata group="api" />
      <apidata name="RemoteFieldData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.AddIn.Contract.Automation.RemoteFieldData.Attributes" />
        <element api="F:System.AddIn.Contract.Automation.RemoteFieldData.FieldType" />
        <element api="F:System.AddIn.Contract.Automation.RemoteFieldData.MemberData" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
      </containers>
    </api>
    <api id="Methods.T:System.AddIn.Contract.Automation.RemoteFieldData">
      <topicdata name="RemoteFieldData" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Contract.Automation.RemoteFieldData" />
      <apidata name="RemoteFieldData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteFieldData" />
      </containers>
    </api>
    <api id="Fields.T:System.AddIn.Contract.Automation.RemoteFieldData">
      <topicdata name="RemoteFieldData" group="list" subgroup="Fields" typeTopicId="T:System.AddIn.Contract.Automation.RemoteFieldData" />
      <apidata name="RemoteFieldData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" noSettableProperties="true" />
      <elements>
        <element api="F:System.AddIn.Contract.Automation.RemoteFieldData.Attributes" />
        <element api="F:System.AddIn.Contract.Automation.RemoteFieldData.FieldType" />
        <element api="F:System.AddIn.Contract.Automation.RemoteFieldData.MemberData" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteFieldData" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteFieldData.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Reflection.FieldAttributes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteFieldData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteFieldData.FieldType">
      <topicdata group="api" />
      <apidata name="FieldType" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteFieldData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteFieldData.MemberData">
      <topicdata group="api" />
      <apidata name="MemberData" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Automation.RemoteMemberData" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteFieldData" ref="false" />
      </containers>
    </api>
    <api id="T:System.AddIn.Contract.Automation.RemoteMemberData">
      <topicdata group="api" />
      <apidata name="RemoteMemberData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.AddIn.Contract.Automation.RemoteMemberData.DeclaringType" />
        <element api="F:System.AddIn.Contract.Automation.RemoteMemberData.Name" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
      </containers>
    </api>
    <api id="Methods.T:System.AddIn.Contract.Automation.RemoteMemberData">
      <topicdata name="RemoteMemberData" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Contract.Automation.RemoteMemberData" />
      <apidata name="RemoteMemberData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteMemberData" />
      </containers>
    </api>
    <api id="Fields.T:System.AddIn.Contract.Automation.RemoteMemberData">
      <topicdata name="RemoteMemberData" group="list" subgroup="Fields" typeTopicId="T:System.AddIn.Contract.Automation.RemoteMemberData" />
      <apidata name="RemoteMemberData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" noSettableProperties="true" />
      <elements>
        <element api="F:System.AddIn.Contract.Automation.RemoteMemberData.DeclaringType" />
        <element api="F:System.AddIn.Contract.Automation.RemoteMemberData.Name" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteMemberData" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteMemberData.DeclaringType">
      <topicdata group="api" />
      <apidata name="DeclaringType" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteMemberData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteMemberData.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteMemberData" ref="false" />
      </containers>
    </api>
    <api id="T:System.AddIn.Contract.Automation.RemoteMethodData">
      <topicdata group="api" />
      <apidata name="RemoteMethodData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.AddIn.Contract.Automation.RemoteMethodData.Attributes" />
        <element api="F:System.AddIn.Contract.Automation.RemoteMethodData.MemberData" />
        <element api="F:System.AddIn.Contract.Automation.RemoteMethodData.Parameters" />
        <element api="F:System.AddIn.Contract.Automation.RemoteMethodData.ReturnParameter" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
      </containers>
    </api>
    <api id="Methods.T:System.AddIn.Contract.Automation.RemoteMethodData">
      <topicdata name="RemoteMethodData" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Contract.Automation.RemoteMethodData" />
      <apidata name="RemoteMethodData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteMethodData" />
      </containers>
    </api>
    <api id="Fields.T:System.AddIn.Contract.Automation.RemoteMethodData">
      <topicdata name="RemoteMethodData" group="list" subgroup="Fields" typeTopicId="T:System.AddIn.Contract.Automation.RemoteMethodData" />
      <apidata name="RemoteMethodData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" noSettableProperties="true" />
      <elements>
        <element api="F:System.AddIn.Contract.Automation.RemoteMethodData.Attributes" />
        <element api="F:System.AddIn.Contract.Automation.RemoteMethodData.MemberData" />
        <element api="F:System.AddIn.Contract.Automation.RemoteMethodData.Parameters" />
        <element api="F:System.AddIn.Contract.Automation.RemoteMethodData.ReturnParameter" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteMethodData" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteMethodData.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Reflection.MethodAttributes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteMethodData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteMethodData.MemberData">
      <topicdata group="api" />
      <apidata name="MemberData" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Automation.RemoteMemberData" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteMethodData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteMethodData.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.AddIn.Contract.Automation.RemoteParameterData" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteMethodData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteMethodData.ReturnParameter">
      <topicdata group="api" />
      <apidata name="ReturnParameter" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Automation.RemoteParameterData" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteMethodData" ref="false" />
      </containers>
    </api>
    <api id="T:System.AddIn.Contract.Automation.RemoteParameterData">
      <topicdata group="api" />
      <apidata name="RemoteParameterData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.AddIn.Contract.Automation.RemoteParameterData.Attributes" />
        <element api="F:System.AddIn.Contract.Automation.RemoteParameterData.DefaultValue" />
        <element api="F:System.AddIn.Contract.Automation.RemoteParameterData.IsByRef" />
        <element api="F:System.AddIn.Contract.Automation.RemoteParameterData.IsParameterArray" />
        <element api="F:System.AddIn.Contract.Automation.RemoteParameterData.Name" />
        <element api="F:System.AddIn.Contract.Automation.RemoteParameterData.ParameterType" />
        <element api="F:System.AddIn.Contract.Automation.RemoteParameterData.Position" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
      </containers>
    </api>
    <api id="Methods.T:System.AddIn.Contract.Automation.RemoteParameterData">
      <topicdata name="RemoteParameterData" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Contract.Automation.RemoteParameterData" />
      <apidata name="RemoteParameterData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteParameterData" />
      </containers>
    </api>
    <api id="Fields.T:System.AddIn.Contract.Automation.RemoteParameterData">
      <topicdata name="RemoteParameterData" group="list" subgroup="Fields" typeTopicId="T:System.AddIn.Contract.Automation.RemoteParameterData" />
      <apidata name="RemoteParameterData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" noSettableProperties="true" />
      <elements>
        <element api="F:System.AddIn.Contract.Automation.RemoteParameterData.Attributes" />
        <element api="F:System.AddIn.Contract.Automation.RemoteParameterData.DefaultValue" />
        <element api="F:System.AddIn.Contract.Automation.RemoteParameterData.IsByRef" />
        <element api="F:System.AddIn.Contract.Automation.RemoteParameterData.IsParameterArray" />
        <element api="F:System.AddIn.Contract.Automation.RemoteParameterData.Name" />
        <element api="F:System.AddIn.Contract.Automation.RemoteParameterData.ParameterType" />
        <element api="F:System.AddIn.Contract.Automation.RemoteParameterData.Position" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteParameterData" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteParameterData.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Reflection.ParameterAttributes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteParameterData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteParameterData.DefaultValue">
      <topicdata group="api" />
      <apidata name="DefaultValue" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.AddIn.Contract.RemoteArgument" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteParameterData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteParameterData.IsByRef">
      <topicdata group="api" />
      <apidata name="IsByRef" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteParameterData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteParameterData.IsParameterArray">
      <topicdata group="api" />
      <apidata name="IsParameterArray" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteParameterData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteParameterData.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteParameterData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteParameterData.ParameterType">
      <topicdata group="api" />
      <apidata name="ParameterType" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteParameterData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteParameterData.Position">
      <topicdata group="api" />
      <apidata name="Position" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteParameterData" ref="false" />
      </containers>
    </api>
    <api id="T:System.AddIn.Contract.Automation.RemotePropertyData">
      <topicdata group="api" />
      <apidata name="RemotePropertyData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.AddIn.Contract.Automation.RemotePropertyData.Attributes" />
        <element api="F:System.AddIn.Contract.Automation.RemotePropertyData.CanRead" />
        <element api="F:System.AddIn.Contract.Automation.RemotePropertyData.CanWrite" />
        <element api="F:System.AddIn.Contract.Automation.RemotePropertyData.IndexParameters" />
        <element api="F:System.AddIn.Contract.Automation.RemotePropertyData.MemberData" />
        <element api="F:System.AddIn.Contract.Automation.RemotePropertyData.PropertyType" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
      </containers>
    </api>
    <api id="Methods.T:System.AddIn.Contract.Automation.RemotePropertyData">
      <topicdata name="RemotePropertyData" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Contract.Automation.RemotePropertyData" />
      <apidata name="RemotePropertyData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemotePropertyData" />
      </containers>
    </api>
    <api id="Fields.T:System.AddIn.Contract.Automation.RemotePropertyData">
      <topicdata name="RemotePropertyData" group="list" subgroup="Fields" typeTopicId="T:System.AddIn.Contract.Automation.RemotePropertyData" />
      <apidata name="RemotePropertyData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" noSettableProperties="true" />
      <elements>
        <element api="F:System.AddIn.Contract.Automation.RemotePropertyData.Attributes" />
        <element api="F:System.AddIn.Contract.Automation.RemotePropertyData.CanRead" />
        <element api="F:System.AddIn.Contract.Automation.RemotePropertyData.CanWrite" />
        <element api="F:System.AddIn.Contract.Automation.RemotePropertyData.IndexParameters" />
        <element api="F:System.AddIn.Contract.Automation.RemotePropertyData.MemberData" />
        <element api="F:System.AddIn.Contract.Automation.RemotePropertyData.PropertyType" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemotePropertyData" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemotePropertyData.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Reflection.PropertyAttributes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemotePropertyData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemotePropertyData.CanRead">
      <topicdata group="api" />
      <apidata name="CanRead" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemotePropertyData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemotePropertyData.CanWrite">
      <topicdata group="api" />
      <apidata name="CanWrite" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemotePropertyData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemotePropertyData.IndexParameters">
      <topicdata group="api" />
      <apidata name="IndexParameters" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.AddIn.Contract.Automation.RemoteParameterData" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemotePropertyData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemotePropertyData.MemberData">
      <topicdata group="api" />
      <apidata name="MemberData" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Automation.RemoteMemberData" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemotePropertyData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemotePropertyData.PropertyType">
      <topicdata group="api" />
      <apidata name="PropertyType" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemotePropertyData" ref="false" />
      </containers>
    </api>
    <api id="T:System.AddIn.Contract.Automation.RemoteTypeData">
      <topicdata group="api" />
      <apidata name="RemoteTypeData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.ArrayRank" />
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.AssemblyName" />
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.AssemblyQualifiedName" />
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.Attributes" />
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.BaseType" />
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.ElementType" />
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.FullName" />
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.IsArray" />
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.IsByRef" />
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.MemberData" />
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.TypeCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
      </containers>
    </api>
    <api id="Methods.T:System.AddIn.Contract.Automation.RemoteTypeData">
      <topicdata name="RemoteTypeData" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Contract.Automation.RemoteTypeData" />
      <apidata name="RemoteTypeData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteTypeData" />
      </containers>
    </api>
    <api id="Fields.T:System.AddIn.Contract.Automation.RemoteTypeData">
      <topicdata name="RemoteTypeData" group="list" subgroup="Fields" typeTopicId="T:System.AddIn.Contract.Automation.RemoteTypeData" />
      <apidata name="RemoteTypeData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" noSettableProperties="true" />
      <elements>
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.ArrayRank" />
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.AssemblyName" />
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.AssemblyQualifiedName" />
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.Attributes" />
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.BaseType" />
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.ElementType" />
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.FullName" />
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.IsArray" />
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.IsByRef" />
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.MemberData" />
        <element api="F:System.AddIn.Contract.Automation.RemoteTypeData.TypeCode" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteTypeData" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteTypeData.ArrayRank">
      <topicdata group="api" />
      <apidata name="ArrayRank" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteTypeData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteTypeData.AssemblyName">
      <topicdata group="api" />
      <apidata name="AssemblyName" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteTypeData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteTypeData.AssemblyQualifiedName">
      <topicdata group="api" />
      <apidata name="AssemblyQualifiedName" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteTypeData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteTypeData.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Reflection.TypeAttributes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteTypeData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteTypeData.BaseType">
      <topicdata group="api" />
      <apidata name="BaseType" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteTypeData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteTypeData.ElementType">
      <topicdata group="api" />
      <apidata name="ElementType" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Automation.IRemoteTypeContract" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteTypeData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteTypeData.FullName">
      <topicdata group="api" />
      <apidata name="FullName" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteTypeData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteTypeData.IsArray">
      <topicdata group="api" />
      <apidata name="IsArray" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteTypeData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteTypeData.IsByRef">
      <topicdata group="api" />
      <apidata name="IsByRef" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteTypeData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteTypeData.MemberData">
      <topicdata group="api" />
      <apidata name="MemberData" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.AddIn.Contract.Automation.RemoteMemberData" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteTypeData" ref="false" />
      </containers>
    </api>
    <api id="F:System.AddIn.Contract.Automation.RemoteTypeData.TypeCode">
      <topicdata group="api" />
      <apidata name="TypeCode" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.TypeCode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Contract.Automation" />
        <type api="T:System.AddIn.Contract.Automation.RemoteTypeData" ref="false" />
      </containers>
    </api>
  </apis>
</reflection>