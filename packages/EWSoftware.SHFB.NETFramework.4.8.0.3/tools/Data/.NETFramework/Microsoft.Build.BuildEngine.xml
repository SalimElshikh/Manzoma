<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="Microsoft.Build.Engine">
      <assemblydata version="4.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.Build.Engine.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.Build.Engine.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.Build.Engine.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Microsoft.Build.BuildEngine">
      <topicdata group="api" />
      <apidata name="Microsoft.Build.BuildEngine" group="namespace" />
      <elements>
        <element api="T:Microsoft.Build.BuildEngine.BuildTask" />
        <element api="T:Microsoft.Build.BuildEngine.BuildSettings" />
        <element api="T:Microsoft.Build.BuildEngine.ProjectLoadSettings" />
        <element api="T:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations" />
        <element api="T:Microsoft.Build.BuildEngine.Engine" />
        <element api="T:Microsoft.Build.BuildEngine.Import" />
        <element api="T:Microsoft.Build.BuildEngine.ImportCollection" />
        <element api="T:Microsoft.Build.BuildEngine.PropertyPosition" />
        <element api="T:Microsoft.Build.BuildEngine.Project" />
        <element api="T:Microsoft.Build.BuildEngine.Target" />
        <element api="T:Microsoft.Build.BuildEngine.TargetCollection" />
        <element api="T:Microsoft.Build.BuildEngine.Toolset" />
        <element api="T:Microsoft.Build.BuildEngine.ToolsetCollection" />
        <element api="T:Microsoft.Build.BuildEngine.UsingTask" />
        <element api="T:Microsoft.Build.BuildEngine.UsingTaskCollection" />
        <element api="T:Microsoft.Build.BuildEngine.Utilities" />
        <element api="T:Microsoft.Build.BuildEngine.InternalLoggerException" />
        <element api="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" />
        <element api="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" />
        <element api="T:Microsoft.Build.BuildEngine.RemoteErrorException" />
        <element api="T:Microsoft.Build.BuildEngine.BuildItem" />
        <element api="T:Microsoft.Build.BuildEngine.BuildItemGroup" />
        <element api="T:Microsoft.Build.BuildEngine.BuildItemGroupCollection" />
        <element api="T:Microsoft.Build.BuildEngine.LocalNode" />
        <element api="T:Microsoft.Build.BuildEngine.WriteHandler" />
        <element api="T:Microsoft.Build.BuildEngine.ColorSetter" />
        <element api="T:Microsoft.Build.BuildEngine.ColorResetter" />
        <element api="T:Microsoft.Build.BuildEngine.ConsoleLogger" />
        <element api="T:Microsoft.Build.BuildEngine.DistributedFileLogger" />
        <element api="T:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger" />
        <element api="T:Microsoft.Build.BuildEngine.LoggerDescription" />
        <element api="T:Microsoft.Build.BuildEngine.FileLogger" />
        <element api="T:Microsoft.Build.BuildEngine.BuildProperty" />
        <element api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" />
        <element api="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection" />
        <element api="T:Microsoft.Build.BuildEngine.SolutionWrapperProject" />
      </elements>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.BuildItem">
      <topicdata group="api" />
      <apidata name="BuildItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Microsoft.Build.BuildEngine.BuildItem.#ctor">
          <element api="M:Microsoft.Build.BuildEngine.BuildItem.#ctor(System.String,Microsoft.Build.Framework.ITaskItem)" />
          <element api="M:Microsoft.Build.BuildEngine.BuildItem.#ctor(System.String,System.String)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.BuildItem.Clone" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItem.CopyCustomMetadataTo(Microsoft.Build.BuildEngine.BuildItem)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItem.GetEvaluatedMetadata(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItem.GetMetadata(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItem.HasMetadata(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItem.RemoveMetadata(System.String)" />
        <element api="Overload:Microsoft.Build.BuildEngine.BuildItem.SetMetadata">
          <element api="M:Microsoft.Build.BuildEngine.BuildItem.SetMetadata(System.String,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.BuildItem.SetMetadata(System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItem.Condition" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItem.CustomMetadataCount" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItem.CustomMetadataNames" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItem.Exclude" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItem.FinalItemSpec" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItem.Include" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItem.IsImported" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItem.MetadataCount" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItem.MetadataNames" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItem.Name" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.BuildItem">
      <topicdata name="BuildItem" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.BuildItem" />
      <apidata name="BuildItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.BuildItem.Clone" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItem.CopyCustomMetadataTo(Microsoft.Build.BuildEngine.BuildItem)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItem.GetEvaluatedMetadata(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItem.GetMetadata(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItem.HasMetadata(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItem.RemoveMetadata(System.String)" />
        <element api="Overload:Microsoft.Build.BuildEngine.BuildItem.SetMetadata">
          <element api="M:Microsoft.Build.BuildEngine.BuildItem.SetMetadata(System.String,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.BuildItem.SetMetadata(System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.BuildItem">
      <topicdata name="BuildItem" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.BuildItem" />
      <apidata name="BuildItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.BuildItem.Condition" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItem.CustomMetadataCount" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItem.CustomMetadataNames" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItem.Exclude" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItem.FinalItemSpec" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItem.Include" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItem.IsImported" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItem.MetadataCount" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItem.MetadataNames" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItem.Name" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.BuildItem.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.BuildItem.#ctor(System.String,Microsoft.Build.Framework.ITaskItem)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItem.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.BuildItem.SetMetadata">
      <topicdata name="SetMetadata" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetMetadata" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.BuildItem.SetMetadata(System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItem.SetMetadata(System.String,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildItem.#ctor(System.String,Microsoft.Build.Framework.ITaskItem)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.BuildItem.#ctor" />
      <parameters>
        <parameter name="itemName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="taskItem">
          <type api="T:Microsoft.Build.Framework.ITaskItem" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildItem.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.BuildItem.#ctor" />
      <parameters>
        <parameter name="itemName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="itemInclude">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildItem.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildItem.Condition">
      <topicdata group="api" />
      <apidata name="Condition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Condition" />
      <setter name="set_Condition" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildItem.CopyCustomMetadataTo(Microsoft.Build.BuildEngine.BuildItem)">
      <topicdata group="api" />
      <apidata name="CopyCustomMetadataTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="destinationItem">
          <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildItem.CustomMetadataCount">
      <topicdata group="api" />
      <apidata name="CustomMetadataCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CustomMetadataCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildItem.CustomMetadataNames">
      <topicdata group="api" />
      <apidata name="CustomMetadataNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CustomMetadataNames" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildItem.Exclude">
      <topicdata group="api" />
      <apidata name="Exclude" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Exclude" />
      <setter name="set_Exclude" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildItem.FinalItemSpec">
      <topicdata group="api" />
      <apidata name="FinalItemSpec" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FinalItemSpec" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildItem.GetEvaluatedMetadata(System.String)">
      <topicdata group="api" />
      <apidata name="GetEvaluatedMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadataName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildItem.GetMetadata(System.String)">
      <topicdata group="api" />
      <apidata name="GetMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadataName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildItem.HasMetadata(System.String)">
      <topicdata group="api" />
      <apidata name="HasMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadataName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildItem.Include">
      <topicdata group="api" />
      <apidata name="Include" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Include" />
      <setter name="set_Include" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildItem.IsImported">
      <topicdata group="api" />
      <apidata name="IsImported" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsImported" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildItem.MetadataCount">
      <topicdata group="api" />
      <apidata name="MetadataCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MetadataCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildItem.MetadataNames">
      <topicdata group="api" />
      <apidata name="MetadataNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MetadataNames" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildItem.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildItem.RemoveMetadata(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadataName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildItem.SetMetadata(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SetMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.BuildItem.SetMetadata" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadataName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="metadataValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildItem.SetMetadata(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.BuildItem.SetMetadata" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadataName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="metadataValue">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="treatMetadataValueAsLiteral">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.BuildItemGroup">
      <topicdata group="api" />
      <apidata name="BuildItemGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.BuildItemGroup.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Build.BuildEngine.BuildItemGroup.#ctor" />
        <element api="Overload:Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem">
          <element api="M:Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(System.String,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.BuildItemGroup.Clear" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItemGroup.Clone(System.Boolean)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItemGroup.GetEnumerator" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItem(Microsoft.Build.BuildEngine.BuildItem)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItemAt(System.Int32)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItemGroup.ToArray" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItemGroup.Condition" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItemGroup.Count" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItemGroup.IsImported" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItemGroup.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.BuildItemGroup">
      <topicdata name="BuildItemGroup" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.BuildItemGroup" />
      <apidata name="BuildItemGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.BuildItemGroup.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="Overload:Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem">
          <element api="M:Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(System.String,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.BuildItemGroup.Clear" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItemGroup.Clone(System.Boolean)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItemGroup.GetEnumerator" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItem(Microsoft.Build.BuildEngine.BuildItem)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItemAt(System.Int32)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItemGroup.ToArray" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.BuildItemGroup">
      <topicdata name="BuildItemGroup" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.BuildItemGroup" />
      <apidata name="BuildItemGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.BuildItemGroup.#ctor" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.BuildItemGroup.Condition" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItemGroup.Count" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItemGroup.IsImported" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItemGroup.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem">
      <topicdata name="AddNewItem" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddNewItem" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(System.String,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildItemGroup.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AddNewItem" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="itemInclude">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AddNewItem" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="itemInclude">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="treatItemIncludeAsLiteral">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildItemGroup.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildItemGroup.Clone(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="deepClone">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildItemGroup.Condition">
      <topicdata group="api" />
      <apidata name="Condition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Condition" />
      <setter name="set_Condition" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildItemGroup.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildItemGroup.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildItemGroup.IsImported">
      <topicdata group="api" />
      <apidata name="IsImported" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsImported" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildItemGroup.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItem(Microsoft.Build.BuildEngine.BuildItem)">
      <topicdata group="api" />
      <apidata name="RemoveItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemToRemove">
          <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItemAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveItemAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildItemGroup.ToArray">
      <topicdata group="api" />
      <apidata name="ToArray" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.BuildItemGroupCollection">
      <topicdata group="api" />
      <apidata name="BuildItemGroupCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Build.BuildEngine.BuildItemGroupCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItemGroupCollection.GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItemGroupCollection.Count" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItemGroupCollection.IsSynchronized" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItemGroupCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.BuildItemGroupCollection">
      <topicdata name="BuildItemGroupCollection" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.BuildItemGroupCollection" />
      <apidata name="BuildItemGroupCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Build.BuildEngine.BuildItemGroupCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildItemGroupCollection.GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroupCollection" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.BuildItemGroupCollection">
      <topicdata name="BuildItemGroupCollection" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.BuildItemGroupCollection" />
      <apidata name="BuildItemGroupCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.BuildItemGroupCollection.Count" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItemGroupCollection.IsSynchronized" />
        <element api="P:Microsoft.Build.BuildEngine.BuildItemGroupCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroupCollection" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildItemGroupCollection.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildItemGroupCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildItemGroupCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildItemGroupCollection.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildItemGroupCollection.SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.BuildProperty">
      <topicdata group="api" />
      <apidata name="BuildProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.BuildProperty.#ctor(System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildProperty.Clone(System.Boolean)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildProperty.op_Explicit(Microsoft.Build.BuildEngine.BuildProperty)~System.String" />
        <element api="M:Microsoft.Build.BuildEngine.BuildProperty.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:Microsoft.Build.BuildEngine.BuildProperty.Condition" />
        <element api="P:Microsoft.Build.BuildEngine.BuildProperty.FinalValue" />
        <element api="P:Microsoft.Build.BuildEngine.BuildProperty.IsImported" />
        <element api="P:Microsoft.Build.BuildEngine.BuildProperty.Name" />
        <element api="P:Microsoft.Build.BuildEngine.BuildProperty.Value" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.BuildProperty">
      <topicdata name="BuildProperty" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.BuildProperty" />
      <apidata name="BuildProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.BuildProperty.Clone(System.Boolean)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildProperty.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildProperty" />
      </containers>
    </api>
    <api id="Operators.T:Microsoft.Build.BuildEngine.BuildProperty">
      <topicdata name="BuildProperty" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Microsoft.Build.BuildEngine.BuildProperty" />
      <apidata name="BuildProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.BuildProperty.op_Explicit(Microsoft.Build.BuildEngine.BuildProperty)~System.String" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildProperty" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.BuildProperty">
      <topicdata name="BuildProperty" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.BuildProperty" />
      <apidata name="BuildProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.BuildProperty.Condition" />
        <element api="P:Microsoft.Build.BuildEngine.BuildProperty.FinalValue" />
        <element api="P:Microsoft.Build.BuildEngine.BuildProperty.IsImported" />
        <element api="P:Microsoft.Build.BuildEngine.BuildProperty.Name" />
        <element api="P:Microsoft.Build.BuildEngine.BuildProperty.Value" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildProperty" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildProperty.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildProperty" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildProperty.Clone(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="deepClone">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildProperty" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildProperty.Condition">
      <topicdata group="api" />
      <apidata name="Condition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Condition" />
      <setter name="set_Condition" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildProperty" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildProperty.FinalValue">
      <topicdata group="api" />
      <apidata name="FinalValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FinalValue" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildProperty" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildProperty.IsImported">
      <topicdata group="api" />
      <apidata name="IsImported" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsImported" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildProperty" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildProperty.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildProperty" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildProperty.op_Explicit(Microsoft.Build.BuildEngine.BuildProperty)~System.String">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyToCast">
          <type api="T:Microsoft.Build.BuildEngine.BuildProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildProperty" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildProperty.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildProperty" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildProperty.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildProperty" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.BuildPropertyGroup">
      <topicdata group="api" />
      <apidata name="BuildPropertyGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="Overload:Microsoft.Build.BuildEngine.BuildPropertyGroup.#ctor">
          <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.#ctor" />
          <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.#ctor(Microsoft.Build.BuildEngine.Project)" />
        </element>
        <element api="Overload:Microsoft.Build.BuildEngine.BuildPropertyGroup.AddNewProperty">
          <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.AddNewProperty(System.String,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.AddNewProperty(System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.Clear" />
        <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.Clone(System.Boolean)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.GetEnumerator" />
        <element api="Overload:Microsoft.Build.BuildEngine.BuildPropertyGroup.RemoveProperty">
          <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.RemoveProperty(Microsoft.Build.BuildEngine.BuildProperty)" />
          <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.RemoveProperty(System.String)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.SetImportedPropertyGroupCondition(System.String)" />
        <element api="Overload:Microsoft.Build.BuildEngine.BuildPropertyGroup.SetProperty">
          <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.SetProperty(System.String,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.SetProperty(System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.BuildEngine.BuildPropertyGroup.Condition" />
        <element api="P:Microsoft.Build.BuildEngine.BuildPropertyGroup.Count" />
        <element api="P:Microsoft.Build.BuildEngine.BuildPropertyGroup.IsImported" />
        <element api="P:Microsoft.Build.BuildEngine.BuildPropertyGroup.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.BuildPropertyGroup">
      <topicdata name="BuildPropertyGroup" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" />
      <apidata name="BuildPropertyGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="Overload:Microsoft.Build.BuildEngine.BuildPropertyGroup.AddNewProperty">
          <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.AddNewProperty(System.String,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.AddNewProperty(System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.Clear" />
        <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.Clone(System.Boolean)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.GetEnumerator" />
        <element api="Overload:Microsoft.Build.BuildEngine.BuildPropertyGroup.RemoveProperty">
          <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.RemoveProperty(Microsoft.Build.BuildEngine.BuildProperty)" />
          <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.RemoveProperty(System.String)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.SetImportedPropertyGroupCondition(System.String)" />
        <element api="Overload:Microsoft.Build.BuildEngine.BuildPropertyGroup.SetProperty">
          <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.SetProperty(System.String,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.SetProperty(System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.BuildPropertyGroup">
      <topicdata name="BuildPropertyGroup" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" />
      <apidata name="BuildPropertyGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.#ctor" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.BuildPropertyGroup.Condition" />
        <element api="P:Microsoft.Build.BuildEngine.BuildPropertyGroup.Count" />
        <element api="P:Microsoft.Build.BuildEngine.BuildPropertyGroup.IsImported" />
        <element api="P:Microsoft.Build.BuildEngine.BuildPropertyGroup.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.BuildPropertyGroup.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.#ctor" />
        <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.#ctor(Microsoft.Build.BuildEngine.Project)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.BuildPropertyGroup.AddNewProperty">
      <topicdata name="AddNewProperty" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddNewProperty" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.AddNewProperty(System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.AddNewProperty(System.String,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.BuildPropertyGroup.RemoveProperty">
      <topicdata name="RemoveProperty" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemoveProperty" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.RemoveProperty(Microsoft.Build.BuildEngine.BuildProperty)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.RemoveProperty(System.String)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.BuildPropertyGroup.SetProperty">
      <topicdata name="SetProperty" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetProperty" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.SetProperty(System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.SetProperty(System.String,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.BuildPropertyGroup.#ctor" />
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.#ctor(Microsoft.Build.BuildEngine.Project)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.BuildPropertyGroup.#ctor" />
      <parameters>
        <parameter name="parentProject">
          <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.AddNewProperty(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AddNewProperty" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.BuildPropertyGroup.AddNewProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.AddNewProperty(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AddNewProperty" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.BuildPropertyGroup.AddNewProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyValue">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="treatPropertyValueAsLiteral">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.Clone(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="deepClone">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildPropertyGroup.Condition">
      <topicdata group="api" />
      <apidata name="Condition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Condition" />
      <setter name="set_Condition" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildPropertyGroup.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildPropertyGroup.IsImported">
      <topicdata group="api" />
      <apidata name="IsImported" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsImported" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildPropertyGroup.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.RemoveProperty(Microsoft.Build.BuildEngine.BuildProperty)">
      <topicdata group="api" />
      <apidata name="RemoveProperty" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.BuildPropertyGroup.RemoveProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="property">
          <type api="T:Microsoft.Build.BuildEngine.BuildProperty" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.RemoveProperty(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveProperty" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.BuildPropertyGroup.RemoveProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.SetImportedPropertyGroupCondition(System.String)">
      <topicdata group="api" />
      <apidata name="SetImportedPropertyGroupCondition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.SetProperty(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.BuildPropertyGroup.SetProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildPropertyGroup.SetProperty(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.BuildPropertyGroup.SetProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyValue">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="treatPropertyValueAsLiteral">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection">
      <topicdata group="api" />
      <apidata name="BuildPropertyGroupCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.Count" />
        <element api="P:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.IsSynchronized" />
        <element api="P:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection">
      <topicdata name="BuildPropertyGroupCollection" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection" />
      <apidata name="BuildPropertyGroupCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection">
      <topicdata name="BuildPropertyGroupCollection" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection" />
      <apidata name="BuildPropertyGroupCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.Count" />
        <element api="P:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.IsSynchronized" />
        <element api="P:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection.SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.BuildSettings">
      <topicdata group="api" />
      <apidata name="BuildSettings" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.Build.BuildEngine.BuildSettings.None" />
        <element api="F:Microsoft.Build.BuildEngine.BuildSettings.DoNotResetPreviouslyBuiltTargets" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:Microsoft.Build.BuildEngine.BuildSettings.DoNotResetPreviouslyBuiltTargets">
      <topicdata group="api" notopic="" />
      <apidata name="DoNotResetPreviouslyBuiltTargets" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildSettings" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildSettings" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.Build.BuildEngine.BuildSettings.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildSettings" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildSettings" ref="false" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.BuildTask">
      <topicdata group="api" />
      <apidata name="BuildTask" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.BuildTask.AddOutputItem(System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildTask.AddOutputProperty(System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildTask.Execute" />
        <element api="M:Microsoft.Build.BuildEngine.BuildTask.GetParameterNames" />
        <element api="M:Microsoft.Build.BuildEngine.BuildTask.GetParameterValue(System.String)" />
        <element api="Overload:Microsoft.Build.BuildEngine.BuildTask.SetParameterValue">
          <element api="M:Microsoft.Build.BuildEngine.BuildTask.SetParameterValue(System.String,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.BuildTask.SetParameterValue(System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.BuildEngine.BuildTask.Condition" />
        <element api="P:Microsoft.Build.BuildEngine.BuildTask.ContinueOnError" />
        <element api="P:Microsoft.Build.BuildEngine.BuildTask.HostObject" />
        <element api="P:Microsoft.Build.BuildEngine.BuildTask.Name" />
        <element api="P:Microsoft.Build.BuildEngine.BuildTask.Type" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.BuildTask">
      <topicdata name="BuildTask" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.BuildTask" />
      <apidata name="BuildTask" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.BuildTask.AddOutputItem(System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildTask.AddOutputProperty(System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildTask.Execute" />
        <element api="M:Microsoft.Build.BuildEngine.BuildTask.GetParameterNames" />
        <element api="M:Microsoft.Build.BuildEngine.BuildTask.GetParameterValue(System.String)" />
        <element api="Overload:Microsoft.Build.BuildEngine.BuildTask.SetParameterValue">
          <element api="M:Microsoft.Build.BuildEngine.BuildTask.SetParameterValue(System.String,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.BuildTask.SetParameterValue(System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildTask" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.BuildTask">
      <topicdata name="BuildTask" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.BuildTask" />
      <apidata name="BuildTask" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.BuildTask.Condition" />
        <element api="P:Microsoft.Build.BuildEngine.BuildTask.ContinueOnError" />
        <element api="P:Microsoft.Build.BuildEngine.BuildTask.HostObject" />
        <element api="P:Microsoft.Build.BuildEngine.BuildTask.Name" />
        <element api="P:Microsoft.Build.BuildEngine.BuildTask.Type" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildTask" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.BuildTask.SetParameterValue">
      <topicdata name="SetParameterValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetParameterValue" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.BuildTask.SetParameterValue(System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.BuildTask.SetParameterValue(System.String,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildTask" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildTask.AddOutputItem(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AddOutputItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="taskParameter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="itemName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildTask" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildTask.AddOutputProperty(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AddOutputProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="taskParameter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildTask" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildTask.Condition">
      <topicdata group="api" />
      <apidata name="Condition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Condition" />
      <setter name="set_Condition" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildTask" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildTask.ContinueOnError">
      <topicdata group="api" />
      <apidata name="ContinueOnError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContinueOnError" />
      <setter name="set_ContinueOnError" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildTask" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildTask.Execute">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildTask" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildTask.GetParameterNames">
      <topicdata group="api" />
      <apidata name="GetParameterNames" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildTask" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildTask.GetParameterValue(System.String)">
      <topicdata group="api" />
      <apidata name="GetParameterValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attributeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildTask" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildTask.HostObject">
      <topicdata group="api" />
      <apidata name="HostObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HostObject" />
      <setter name="set_HostObject" />
      <returns>
        <type api="T:Microsoft.Build.Framework.ITaskHost" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildTask" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildTask.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildTask" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildTask.SetParameterValue(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SetParameterValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.BuildTask.SetParameterValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameterValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildTask" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.BuildTask.SetParameterValue(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetParameterValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.BuildTask.SetParameterValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameterValue">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="treatParameterValueAsLiteral">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildTask" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.BuildTask.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.BuildTask" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.ColorResetter">
      <topicdata group="api" />
      <apidata name="ColorResetter" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.ColorSetter">
      <topicdata group="api" />
      <apidata name="ColorSetter" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="color">
          <type api="T:System.ConsoleColor" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger">
      <topicdata group="api" />
      <apidata name="ConfigurableForwardingLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Microsoft.Build.Framework.IForwardingLogger" ref="true" />
        <type api="T:Microsoft.Build.Framework.INodeLogger" ref="true" />
        <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
      </implements>
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.#ctor" />
        <element api="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.ForwardToCentralLogger(Microsoft.Build.Framework.BuildEventArgs)" />
        <element api="Overload:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Initialize">
          <element api="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
          <element api="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Shutdown" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.BuildEventRedirector" />
        <element api="P:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.NodeId" />
        <element api="P:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Parameters" />
        <element api="P:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Verbosity" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger">
      <topicdata name="ConfigurableForwardingLogger" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger" />
      <apidata name="ConfigurableForwardingLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.#ctor" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.ForwardToCentralLogger(Microsoft.Build.Framework.BuildEventArgs)" />
        <element api="Overload:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Initialize">
          <element api="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
          <element api="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Shutdown" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger">
      <topicdata name="ConfigurableForwardingLogger" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger" />
      <apidata name="ConfigurableForwardingLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.#ctor" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.BuildEventRedirector" />
        <element api="P:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.NodeId" />
        <element api="P:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Parameters" />
        <element api="P:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Verbosity" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Initialize">
      <topicdata name="Initialize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
        <element api="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.BuildEventRedirector">
      <topicdata group="api" />
      <apidata name="BuildEventRedirector" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_BuildEventRedirector" />
      <setter name="set_BuildEventRedirector" />
      <returns>
        <type api="T:Microsoft.Build.Framework.IEventRedirector" ref="true" />
      </returns>
      <implements>
        <member api="P:Microsoft.Build.Framework.IForwardingLogger.BuildEventRedirector">
          <type api="T:Microsoft.Build.Framework.IForwardingLogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.ForwardToCentralLogger(Microsoft.Build.Framework.BuildEventArgs)">
      <topicdata group="api" />
      <apidata name="ForwardToCentralLogger" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:Microsoft.Build.Framework.BuildEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Initialize" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="eventSource">
          <type api="T:Microsoft.Build.Framework.IEventSource" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)">
          <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Initialize" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="eventSource">
          <type api="T:Microsoft.Build.Framework.IEventSource" ref="true" />
        </parameter>
        <parameter name="nodeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Microsoft.Build.Framework.INodeLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
          <type api="T:Microsoft.Build.Framework.INodeLogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.NodeId">
      <topicdata group="api" />
      <apidata name="NodeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_NodeId" />
      <setter name="set_NodeId" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Microsoft.Build.Framework.IForwardingLogger.NodeId">
          <type api="T:Microsoft.Build.Framework.IForwardingLogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Parameters" />
      <setter name="set_Parameters" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Microsoft.Build.Framework.ILogger.Parameters">
          <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Shutdown">
      <topicdata group="api" />
      <apidata name="Shutdown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:Microsoft.Build.Framework.ILogger.Shutdown">
          <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger.Verbosity">
      <topicdata group="api" />
      <apidata name="Verbosity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Verbosity" />
      <setter name="set_Verbosity" />
      <returns>
        <type api="T:Microsoft.Build.Framework.LoggerVerbosity" ref="false" />
      </returns>
      <implements>
        <member api="P:Microsoft.Build.Framework.ILogger.Verbosity">
          <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConfigurableForwardingLogger" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.ConsoleLogger">
      <topicdata group="api" />
      <apidata name="ConsoleLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.ConsoleLogger.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.Build.BuildEngine.FileLogger" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Microsoft.Build.Framework.INodeLogger" ref="true" />
        <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
      </implements>
      <elements>
        <element api="Overload:Microsoft.Build.BuildEngine.ConsoleLogger.#ctor">
          <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.#ctor" />
          <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.#ctor(Microsoft.Build.Framework.LoggerVerbosity)" />
          <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.#ctor(Microsoft.Build.Framework.LoggerVerbosity,Microsoft.Build.BuildEngine.WriteHandler,Microsoft.Build.BuildEngine.ColorSetter,Microsoft.Build.BuildEngine.ColorResetter)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.ApplyParameter(System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.BuildFinishedHandler(System.Object,Microsoft.Build.Framework.BuildFinishedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.BuildStartedHandler(System.Object,Microsoft.Build.Framework.BuildStartedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.CustomEventHandler(System.Object,Microsoft.Build.Framework.CustomBuildEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.ErrorHandler(System.Object,Microsoft.Build.Framework.BuildErrorEventArgs)" />
        <element api="Overload:Microsoft.Build.BuildEngine.ConsoleLogger.Initialize">
          <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
          <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.MessageHandler(System.Object,Microsoft.Build.Framework.BuildMessageEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.ProjectFinishedHandler(System.Object,Microsoft.Build.Framework.ProjectFinishedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.ProjectStartedHandler(System.Object,Microsoft.Build.Framework.ProjectStartedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.Shutdown" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.TargetFinishedHandler(System.Object,Microsoft.Build.Framework.TargetFinishedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.TargetStartedHandler(System.Object,Microsoft.Build.Framework.TargetStartedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.TaskFinishedHandler(System.Object,Microsoft.Build.Framework.TaskFinishedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.TaskStartedHandler(System.Object,Microsoft.Build.Framework.TaskStartedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.WarningHandler(System.Object,Microsoft.Build.Framework.BuildWarningEventArgs)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.BuildEngine.ConsoleLogger.Parameters" />
        <element api="P:Microsoft.Build.BuildEngine.ConsoleLogger.ShowSummary" />
        <element api="P:Microsoft.Build.BuildEngine.ConsoleLogger.SkipProjectStartedText" />
        <element api="P:Microsoft.Build.BuildEngine.ConsoleLogger.Verbosity" />
        <element api="P:Microsoft.Build.BuildEngine.ConsoleLogger.WriteHandler" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.ConsoleLogger">
      <topicdata name="ConsoleLogger" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.ConsoleLogger" />
      <apidata name="ConsoleLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.ConsoleLogger.#ctor" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.ApplyParameter(System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.BuildFinishedHandler(System.Object,Microsoft.Build.Framework.BuildFinishedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.BuildStartedHandler(System.Object,Microsoft.Build.Framework.BuildStartedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.CustomEventHandler(System.Object,Microsoft.Build.Framework.CustomBuildEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.ErrorHandler(System.Object,Microsoft.Build.Framework.BuildErrorEventArgs)" />
        <element api="Overload:Microsoft.Build.BuildEngine.ConsoleLogger.Initialize">
          <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
          <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.MessageHandler(System.Object,Microsoft.Build.Framework.BuildMessageEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.ProjectFinishedHandler(System.Object,Microsoft.Build.Framework.ProjectFinishedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.ProjectStartedHandler(System.Object,Microsoft.Build.Framework.ProjectStartedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.Shutdown" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.TargetFinishedHandler(System.Object,Microsoft.Build.Framework.TargetFinishedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.TargetStartedHandler(System.Object,Microsoft.Build.Framework.TargetStartedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.TaskFinishedHandler(System.Object,Microsoft.Build.Framework.TaskFinishedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.TaskStartedHandler(System.Object,Microsoft.Build.Framework.TaskStartedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.WarningHandler(System.Object,Microsoft.Build.Framework.BuildWarningEventArgs)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.ConsoleLogger">
      <topicdata name="ConsoleLogger" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.ConsoleLogger" />
      <apidata name="ConsoleLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.ConsoleLogger.#ctor" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.ConsoleLogger.Parameters" />
        <element api="P:Microsoft.Build.BuildEngine.ConsoleLogger.ShowSummary" />
        <element api="P:Microsoft.Build.BuildEngine.ConsoleLogger.SkipProjectStartedText" />
        <element api="P:Microsoft.Build.BuildEngine.ConsoleLogger.Verbosity" />
        <element api="P:Microsoft.Build.BuildEngine.ConsoleLogger.WriteHandler" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.ConsoleLogger.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.#ctor" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.#ctor(Microsoft.Build.Framework.LoggerVerbosity)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.#ctor(Microsoft.Build.Framework.LoggerVerbosity,Microsoft.Build.BuildEngine.WriteHandler,Microsoft.Build.BuildEngine.ColorSetter,Microsoft.Build.BuildEngine.ColorResetter)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.ConsoleLogger.Initialize">
      <topicdata name="Initialize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConsoleLogger.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.ConsoleLogger.#ctor" />
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConsoleLogger.#ctor(Microsoft.Build.Framework.LoggerVerbosity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.ConsoleLogger.#ctor" />
      <parameters>
        <parameter name="verbosity">
          <type api="T:Microsoft.Build.Framework.LoggerVerbosity" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConsoleLogger.#ctor(Microsoft.Build.Framework.LoggerVerbosity,Microsoft.Build.BuildEngine.WriteHandler,Microsoft.Build.BuildEngine.ColorSetter,Microsoft.Build.BuildEngine.ColorResetter)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.ConsoleLogger.#ctor" />
      <parameters>
        <parameter name="verbosity">
          <type api="T:Microsoft.Build.Framework.LoggerVerbosity" ref="false" />
        </parameter>
        <parameter name="write">
          <type api="T:Microsoft.Build.BuildEngine.WriteHandler" ref="true" />
        </parameter>
        <parameter name="colorSet">
          <type api="T:Microsoft.Build.BuildEngine.ColorSetter" ref="true" />
        </parameter>
        <parameter name="colorReset">
          <type api="T:Microsoft.Build.BuildEngine.ColorResetter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConsoleLogger.ApplyParameter(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ApplyParameter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameterValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConsoleLogger.BuildFinishedHandler(System.Object,Microsoft.Build.Framework.BuildFinishedEventArgs)">
      <topicdata group="api" />
      <apidata name="BuildFinishedHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Microsoft.Build.Framework.BuildFinishedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConsoleLogger.BuildStartedHandler(System.Object,Microsoft.Build.Framework.BuildStartedEventArgs)">
      <topicdata group="api" />
      <apidata name="BuildStartedHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Microsoft.Build.Framework.BuildStartedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConsoleLogger.CustomEventHandler(System.Object,Microsoft.Build.Framework.CustomBuildEventArgs)">
      <topicdata group="api" />
      <apidata name="CustomEventHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Microsoft.Build.Framework.CustomBuildEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConsoleLogger.ErrorHandler(System.Object,Microsoft.Build.Framework.BuildErrorEventArgs)">
      <topicdata group="api" />
      <apidata name="ErrorHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Microsoft.Build.Framework.BuildErrorEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.ConsoleLogger.Initialize" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="eventSource">
          <type api="T:Microsoft.Build.Framework.IEventSource" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)">
          <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.ConsoleLogger.Initialize" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="eventSource">
          <type api="T:Microsoft.Build.Framework.IEventSource" ref="true" />
        </parameter>
        <parameter name="nodeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Microsoft.Build.Framework.INodeLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
          <type api="T:Microsoft.Build.Framework.INodeLogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConsoleLogger.MessageHandler(System.Object,Microsoft.Build.Framework.BuildMessageEventArgs)">
      <topicdata group="api" />
      <apidata name="MessageHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Microsoft.Build.Framework.BuildMessageEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.ConsoleLogger.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Parameters" />
      <setter name="set_Parameters" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Microsoft.Build.Framework.ILogger.Parameters">
          <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConsoleLogger.ProjectFinishedHandler(System.Object,Microsoft.Build.Framework.ProjectFinishedEventArgs)">
      <topicdata group="api" />
      <apidata name="ProjectFinishedHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Microsoft.Build.Framework.ProjectFinishedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConsoleLogger.ProjectStartedHandler(System.Object,Microsoft.Build.Framework.ProjectStartedEventArgs)">
      <topicdata group="api" />
      <apidata name="ProjectStartedHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Microsoft.Build.Framework.ProjectStartedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.ConsoleLogger.ShowSummary">
      <topicdata group="api" />
      <apidata name="ShowSummary" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ShowSummary" />
      <setter name="set_ShowSummary" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConsoleLogger.Shutdown">
      <topicdata group="api" />
      <apidata name="Shutdown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:Microsoft.Build.Framework.ILogger.Shutdown">
          <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.ConsoleLogger.SkipProjectStartedText">
      <topicdata group="api" />
      <apidata name="SkipProjectStartedText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SkipProjectStartedText" />
      <setter name="set_SkipProjectStartedText" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConsoleLogger.TargetFinishedHandler(System.Object,Microsoft.Build.Framework.TargetFinishedEventArgs)">
      <topicdata group="api" />
      <apidata name="TargetFinishedHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Microsoft.Build.Framework.TargetFinishedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConsoleLogger.TargetStartedHandler(System.Object,Microsoft.Build.Framework.TargetStartedEventArgs)">
      <topicdata group="api" />
      <apidata name="TargetStartedHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Microsoft.Build.Framework.TargetStartedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConsoleLogger.TaskFinishedHandler(System.Object,Microsoft.Build.Framework.TaskFinishedEventArgs)">
      <topicdata group="api" />
      <apidata name="TaskFinishedHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Microsoft.Build.Framework.TaskFinishedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConsoleLogger.TaskStartedHandler(System.Object,Microsoft.Build.Framework.TaskStartedEventArgs)">
      <topicdata group="api" />
      <apidata name="TaskStartedHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Microsoft.Build.Framework.TaskStartedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.ConsoleLogger.Verbosity">
      <topicdata group="api" />
      <apidata name="Verbosity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Verbosity" />
      <setter name="set_Verbosity" />
      <returns>
        <type api="T:Microsoft.Build.Framework.LoggerVerbosity" ref="false" />
      </returns>
      <implements>
        <member api="P:Microsoft.Build.Framework.ILogger.Verbosity">
          <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ConsoleLogger.WarningHandler(System.Object,Microsoft.Build.Framework.BuildWarningEventArgs)">
      <topicdata group="api" />
      <apidata name="WarningHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Microsoft.Build.Framework.BuildWarningEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.ConsoleLogger.WriteHandler">
      <topicdata group="api" />
      <apidata name="WriteHandler" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WriteHandler" />
      <setter name="set_WriteHandler" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.WriteHandler" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.DistributedFileLogger">
      <topicdata group="api" />
      <apidata name="DistributedFileLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.DistributedFileLogger.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Microsoft.Build.Framework.IForwardingLogger" ref="true" />
        <type api="T:Microsoft.Build.Framework.INodeLogger" ref="true" />
        <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
      </implements>
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.DistributedFileLogger.#ctor" />
        <element api="Overload:Microsoft.Build.BuildEngine.DistributedFileLogger.Initialize">
          <element api="M:Microsoft.Build.BuildEngine.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
          <element api="M:Microsoft.Build.BuildEngine.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.DistributedFileLogger.Shutdown" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.BuildEngine.DistributedFileLogger.BuildEventRedirector" />
        <element api="P:Microsoft.Build.BuildEngine.DistributedFileLogger.NodeId" />
        <element api="P:Microsoft.Build.BuildEngine.DistributedFileLogger.Parameters" />
        <element api="P:Microsoft.Build.BuildEngine.DistributedFileLogger.Verbosity" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.DistributedFileLogger">
      <topicdata name="DistributedFileLogger" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.DistributedFileLogger" />
      <apidata name="DistributedFileLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.DistributedFileLogger.#ctor" />
      <elements>
        <element api="Overload:Microsoft.Build.BuildEngine.DistributedFileLogger.Initialize">
          <element api="M:Microsoft.Build.BuildEngine.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
          <element api="M:Microsoft.Build.BuildEngine.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.DistributedFileLogger.Shutdown" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.DistributedFileLogger" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.DistributedFileLogger">
      <topicdata name="DistributedFileLogger" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.DistributedFileLogger" />
      <apidata name="DistributedFileLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.DistributedFileLogger.#ctor" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.DistributedFileLogger.BuildEventRedirector" />
        <element api="P:Microsoft.Build.BuildEngine.DistributedFileLogger.NodeId" />
        <element api="P:Microsoft.Build.BuildEngine.DistributedFileLogger.Parameters" />
        <element api="P:Microsoft.Build.BuildEngine.DistributedFileLogger.Verbosity" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.DistributedFileLogger" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.DistributedFileLogger.Initialize">
      <topicdata name="Initialize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
        <element api="M:Microsoft.Build.BuildEngine.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.DistributedFileLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.DistributedFileLogger.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.DistributedFileLogger" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.DistributedFileLogger.BuildEventRedirector">
      <topicdata group="api" />
      <apidata name="BuildEventRedirector" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_BuildEventRedirector" />
      <setter name="set_BuildEventRedirector" />
      <returns>
        <type api="T:Microsoft.Build.Framework.IEventRedirector" ref="true" />
      </returns>
      <implements>
        <member api="P:Microsoft.Build.Framework.IForwardingLogger.BuildEventRedirector">
          <type api="T:Microsoft.Build.Framework.IForwardingLogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.DistributedFileLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.DistributedFileLogger.Initialize" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="eventSource">
          <type api="T:Microsoft.Build.Framework.IEventSource" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)">
          <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.DistributedFileLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.DistributedFileLogger.Initialize" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="eventSource">
          <type api="T:Microsoft.Build.Framework.IEventSource" ref="true" />
        </parameter>
        <parameter name="nodeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Microsoft.Build.Framework.INodeLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
          <type api="T:Microsoft.Build.Framework.INodeLogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.DistributedFileLogger" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.DistributedFileLogger.NodeId">
      <topicdata group="api" />
      <apidata name="NodeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_NodeId" />
      <setter name="set_NodeId" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Microsoft.Build.Framework.IForwardingLogger.NodeId">
          <type api="T:Microsoft.Build.Framework.IForwardingLogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.DistributedFileLogger" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.DistributedFileLogger.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Parameters" />
      <setter name="set_Parameters" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Microsoft.Build.Framework.ILogger.Parameters">
          <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.DistributedFileLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.DistributedFileLogger.Shutdown">
      <topicdata group="api" />
      <apidata name="Shutdown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Microsoft.Build.Framework.ILogger.Shutdown">
          <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.DistributedFileLogger" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.DistributedFileLogger.Verbosity">
      <topicdata group="api" />
      <apidata name="Verbosity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Verbosity" />
      <setter name="set_Verbosity" />
      <returns>
        <type api="T:Microsoft.Build.Framework.LoggerVerbosity" ref="false" />
      </returns>
      <implements>
        <member api="P:Microsoft.Build.Framework.ILogger.Verbosity">
          <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.DistributedFileLogger" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.Engine">
      <topicdata group="api" />
      <apidata name="Engine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.Engine.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Microsoft.Build.BuildEngine.Engine.#ctor">
          <element api="M:Microsoft.Build.BuildEngine.Engine.#ctor" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup)" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.#ctor(System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.ToolsetDefinitionLocations)" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup,Microsoft.Build.BuildEngine.ToolsetDefinitionLocations)" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup,Microsoft.Build.BuildEngine.ToolsetDefinitionLocations,System.Int32,System.String)" />
        </element>
        <element api="Overload:Microsoft.Build.BuildEngine.Engine.BuildProject">
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project)" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[])" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[],System.Collections.IDictionary)" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[],System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)" />
        </element>
        <element api="Overload:Microsoft.Build.BuildEngine.Engine.BuildProjectFile">
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[])" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup)" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary)" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings,System.String)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFiles(System.String[],System.String[][],Microsoft.Build.BuildEngine.BuildPropertyGroup[],System.Collections.IDictionary[],Microsoft.Build.BuildEngine.BuildSettings,System.String[])" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.CreateNewProject" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.GetLoadedProject(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.RegisterDistributedLogger(Microsoft.Build.Framework.ILogger,Microsoft.Build.BuildEngine.LoggerDescription)" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.RegisterLogger(Microsoft.Build.Framework.ILogger)" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.Shutdown" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.UnloadAllProjects" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.UnloadProject(Microsoft.Build.BuildEngine.Project)" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.UnregisterAllLoggers" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.BuildEngine.Engine.BinPath" />
        <element api="P:Microsoft.Build.BuildEngine.Engine.BuildEnabled" />
        <element api="P:Microsoft.Build.BuildEngine.Engine.DefaultToolsVersion" />
        <element api="P:Microsoft.Build.BuildEngine.Engine.GlobalEngine" />
        <element api="P:Microsoft.Build.BuildEngine.Engine.GlobalProperties" />
        <element api="P:Microsoft.Build.BuildEngine.Engine.IsBuilding" />
        <element api="P:Microsoft.Build.BuildEngine.Engine.OnlyLogCriticalEvents" />
        <element api="P:Microsoft.Build.BuildEngine.Engine.Toolsets" />
        <element api="P:Microsoft.Build.BuildEngine.Engine.Version" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This class has been deprecated. Please use Microsoft.Build.Evaluation.ProjectCollection from the Microsoft.Build assembly instead.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.Engine">
      <topicdata name="Engine" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.Engine" />
      <apidata name="Engine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.Engine.#ctor" />
      <elements>
        <element api="Overload:Microsoft.Build.BuildEngine.Engine.BuildProject">
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project)" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[])" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[],System.Collections.IDictionary)" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[],System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)" />
        </element>
        <element api="Overload:Microsoft.Build.BuildEngine.Engine.BuildProjectFile">
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[])" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup)" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary)" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)" />
          <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings,System.String)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFiles(System.String[],System.String[][],Microsoft.Build.BuildEngine.BuildPropertyGroup[],System.Collections.IDictionary[],Microsoft.Build.BuildEngine.BuildSettings,System.String[])" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.CreateNewProject" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.GetLoadedProject(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.RegisterDistributedLogger(Microsoft.Build.Framework.ILogger,Microsoft.Build.BuildEngine.LoggerDescription)" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.RegisterLogger(Microsoft.Build.Framework.ILogger)" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.Shutdown" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.UnloadAllProjects" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.UnloadProject(Microsoft.Build.BuildEngine.Project)" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.UnregisterAllLoggers" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.Engine">
      <topicdata name="Engine" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.Engine" />
      <apidata name="Engine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.Engine.#ctor" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.Engine.BinPath" />
        <element api="P:Microsoft.Build.BuildEngine.Engine.BuildEnabled" />
        <element api="P:Microsoft.Build.BuildEngine.Engine.DefaultToolsVersion" />
        <element api="P:Microsoft.Build.BuildEngine.Engine.GlobalEngine" />
        <element api="P:Microsoft.Build.BuildEngine.Engine.GlobalProperties" />
        <element api="P:Microsoft.Build.BuildEngine.Engine.IsBuilding" />
        <element api="P:Microsoft.Build.BuildEngine.Engine.OnlyLogCriticalEvents" />
        <element api="P:Microsoft.Build.BuildEngine.Engine.Toolsets" />
        <element api="P:Microsoft.Build.BuildEngine.Engine.Version" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.Engine.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.Engine.#ctor" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup)" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.#ctor(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.ToolsetDefinitionLocations)" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup,Microsoft.Build.BuildEngine.ToolsetDefinitionLocations)" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup,Microsoft.Build.BuildEngine.ToolsetDefinitionLocations,System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.Engine.BuildProject">
      <topicdata name="BuildProject" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BuildProject" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project)" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[])" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[],System.Collections.IDictionary)" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[],System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.Engine.BuildProjectFile">
      <topicdata name="BuildProjectFile" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BuildProjectFile" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[])" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup)" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary)" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)" />
        <element api="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings,System.String)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.Engine.#ctor" />
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.Engine.#ctor" />
      <parameters>
        <parameter name="globalProperties">
          <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup,Microsoft.Build.BuildEngine.ToolsetDefinitionLocations)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.Engine.#ctor" />
      <parameters>
        <parameter name="globalProperties">
          <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
        </parameter>
        <parameter name="locations">
          <type api="T:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup,Microsoft.Build.BuildEngine.ToolsetDefinitionLocations,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.Engine.#ctor" />
      <parameters>
        <parameter name="globalProperties">
          <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
        </parameter>
        <parameter name="locations">
          <type api="T:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations" ref="false" />
        </parameter>
        <parameter name="numberOfCpus">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="localNodeProviderParameters">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.ToolsetDefinitionLocations)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.Engine.#ctor" />
      <parameters>
        <parameter name="locations">
          <type api="T:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.Engine.#ctor" />
      <parameters>
        <parameter name="binPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>If you were simply passing in the .NET Framework location as the BinPath, just change to the parameterless Engine() constructor. Otherwise, you can define custom toolsets in the registry or config file, or by adding elements to the Engine's ToolsetCollection. Then use either the Engine() or Engine(ToolsetLocations) constructor instead.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Engine.BinPath">
      <topicdata group="api" />
      <apidata name="BinPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BinPath" />
      <setter name="set_BinPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Avoid setting BinPath. If you were simply passing in the .NET Framework location as the BinPath, no other action is necessary. Otherwise, define Toolsets instead in the registry or config file, or by adding elements to the Engine's ToolsetCollection, in order to use a custom BinPath.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Engine.BuildEnabled">
      <topicdata group="api" />
      <apidata name="BuildEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BuildEnabled" />
      <setter name="set_BuildEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project)">
      <topicdata group="api" />
      <apidata name="BuildProject" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Engine.BuildProject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="project">
          <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String)">
      <topicdata group="api" />
      <apidata name="BuildProject" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Engine.BuildProject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="project">
          <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[])">
      <topicdata group="api" />
      <apidata name="BuildProject" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Engine.BuildProject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="project">
          <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
        </parameter>
        <parameter name="targetNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[],System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="BuildProject" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Engine.BuildProject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="project">
          <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
        </parameter>
        <parameter name="targetNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="targetOutputs">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[],System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)">
      <topicdata group="api" />
      <apidata name="BuildProject" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Engine.BuildProject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="project">
          <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
        </parameter>
        <parameter name="targetNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="targetOutputs">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
        <parameter name="buildFlags">
          <type api="T:Microsoft.Build.BuildEngine.BuildSettings" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String)">
      <topicdata group="api" />
      <apidata name="BuildProjectFile" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Engine.BuildProjectFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="projectFile">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="BuildProjectFile" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Engine.BuildProjectFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="projectFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[])">
      <topicdata group="api" />
      <apidata name="BuildProjectFile" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Engine.BuildProjectFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="projectFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup)">
      <topicdata group="api" />
      <apidata name="BuildProjectFile" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Engine.BuildProjectFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="projectFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="globalProperties">
          <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="BuildProjectFile" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Engine.BuildProjectFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="projectFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="globalProperties">
          <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
        </parameter>
        <parameter name="targetOutputs">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)">
      <topicdata group="api" />
      <apidata name="BuildProjectFile" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Engine.BuildProjectFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="projectFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="globalProperties">
          <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
        </parameter>
        <parameter name="targetOutputs">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
        <parameter name="buildFlags">
          <type api="T:Microsoft.Build.BuildEngine.BuildSettings" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings,System.String)">
      <topicdata group="api" />
      <apidata name="BuildProjectFile" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Engine.BuildProjectFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="projectFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="globalProperties">
          <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
        </parameter>
        <parameter name="targetOutputs">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
        <parameter name="buildFlags">
          <type api="T:Microsoft.Build.BuildEngine.BuildSettings" ref="false" />
        </parameter>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.BuildProjectFiles(System.String[],System.String[][],Microsoft.Build.BuildEngine.BuildPropertyGroup[],System.Collections.IDictionary[],Microsoft.Build.BuildEngine.BuildSettings,System.String[])">
      <topicdata group="api" />
      <apidata name="BuildProjectFiles" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="projectFiles">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="targetNamesPerProject">
          <arrayOf rank="1">
            <arrayOf rank="1">
              <type api="T:System.String" ref="true" />
            </arrayOf>
          </arrayOf>
        </parameter>
        <parameter name="globalPropertiesPerProject">
          <arrayOf rank="1">
            <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="targetOutputsPerProject">
          <arrayOf rank="1">
            <type api="T:System.Collections.IDictionary" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="buildFlags">
          <type api="T:Microsoft.Build.BuildEngine.BuildSettings" ref="false" />
        </parameter>
        <parameter name="toolsVersions">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.CreateNewProject">
      <topicdata group="api" />
      <apidata name="CreateNewProject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Engine.DefaultToolsVersion">
      <topicdata group="api" />
      <apidata name="DefaultToolsVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultToolsVersion" />
      <setter name="set_DefaultToolsVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.GetLoadedProject(System.String)">
      <topicdata group="api" />
      <apidata name="GetLoadedProject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="projectFullFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Engine.GlobalEngine">
      <topicdata group="api" />
      <apidata name="GlobalEngine" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GlobalEngine" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Engine.GlobalProperties">
      <topicdata group="api" />
      <apidata name="GlobalProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GlobalProperties" />
      <setter name="set_GlobalProperties" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Engine.IsBuilding">
      <topicdata group="api" />
      <apidata name="IsBuilding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsBuilding" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Engine.OnlyLogCriticalEvents">
      <topicdata group="api" />
      <apidata name="OnlyLogCriticalEvents" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OnlyLogCriticalEvents" />
      <setter name="set_OnlyLogCriticalEvents" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.RegisterDistributedLogger(Microsoft.Build.Framework.ILogger,Microsoft.Build.BuildEngine.LoggerDescription)">
      <topicdata group="api" />
      <apidata name="RegisterDistributedLogger" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="centralLogger">
          <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
        </parameter>
        <parameter name="forwardingLogger">
          <type api="T:Microsoft.Build.BuildEngine.LoggerDescription" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.RegisterLogger(Microsoft.Build.Framework.ILogger)">
      <topicdata group="api" />
      <apidata name="RegisterLogger" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="logger">
          <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.Shutdown">
      <topicdata group="api" />
      <apidata name="Shutdown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Engine.Toolsets">
      <topicdata group="api" />
      <apidata name="Toolsets" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Toolsets" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.ToolsetCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.UnloadAllProjects">
      <topicdata group="api" />
      <apidata name="UnloadAllProjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.UnloadProject(Microsoft.Build.BuildEngine.Project)">
      <topicdata group="api" />
      <apidata name="UnloadProject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="project">
          <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Engine.UnregisterAllLoggers">
      <topicdata group="api" />
      <apidata name="UnregisterAllLoggers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Engine.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Version" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.FileLogger">
      <topicdata group="api" />
      <apidata name="FileLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.FileLogger.#ctor" />
      <family>
        <ancestors>
          <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.ApplyParameter(System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.BuildFinishedHandler(System.Object,Microsoft.Build.Framework.BuildFinishedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.BuildStartedHandler(System.Object,Microsoft.Build.Framework.BuildStartedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.CustomEventHandler(System.Object,Microsoft.Build.Framework.CustomBuildEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.ErrorHandler(System.Object,Microsoft.Build.Framework.BuildErrorEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.MessageHandler(System.Object,Microsoft.Build.Framework.BuildMessageEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.ProjectFinishedHandler(System.Object,Microsoft.Build.Framework.ProjectFinishedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.ProjectStartedHandler(System.Object,Microsoft.Build.Framework.ProjectStartedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.TargetFinishedHandler(System.Object,Microsoft.Build.Framework.TargetFinishedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.TargetStartedHandler(System.Object,Microsoft.Build.Framework.TargetStartedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.TaskFinishedHandler(System.Object,Microsoft.Build.Framework.TaskFinishedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.TaskStartedHandler(System.Object,Microsoft.Build.Framework.TaskStartedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.WarningHandler(System.Object,Microsoft.Build.Framework.BuildWarningEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.FileLogger.#ctor" />
        <element api="Overload:Microsoft.Build.BuildEngine.FileLogger.Initialize">
          <element api="M:Microsoft.Build.BuildEngine.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
          <element api="M:Microsoft.Build.BuildEngine.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.FileLogger.Shutdown" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.BuildEngine.ConsoleLogger.Parameters" />
        <element api="P:Microsoft.Build.BuildEngine.ConsoleLogger.ShowSummary" />
        <element api="P:Microsoft.Build.BuildEngine.ConsoleLogger.SkipProjectStartedText" />
        <element api="P:Microsoft.Build.BuildEngine.ConsoleLogger.Verbosity" />
        <element api="P:Microsoft.Build.BuildEngine.ConsoleLogger.WriteHandler" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.FileLogger">
      <topicdata name="FileLogger" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.FileLogger" />
      <apidata name="FileLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.FileLogger.#ctor" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.ApplyParameter(System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.BuildFinishedHandler(System.Object,Microsoft.Build.Framework.BuildFinishedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.BuildStartedHandler(System.Object,Microsoft.Build.Framework.BuildStartedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.CustomEventHandler(System.Object,Microsoft.Build.Framework.CustomBuildEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.ErrorHandler(System.Object,Microsoft.Build.Framework.BuildErrorEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.MessageHandler(System.Object,Microsoft.Build.Framework.BuildMessageEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.ProjectFinishedHandler(System.Object,Microsoft.Build.Framework.ProjectFinishedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.ProjectStartedHandler(System.Object,Microsoft.Build.Framework.ProjectStartedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.TargetFinishedHandler(System.Object,Microsoft.Build.Framework.TargetFinishedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.TargetStartedHandler(System.Object,Microsoft.Build.Framework.TargetStartedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.TaskFinishedHandler(System.Object,Microsoft.Build.Framework.TaskFinishedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.TaskStartedHandler(System.Object,Microsoft.Build.Framework.TaskStartedEventArgs)" />
        <element api="M:Microsoft.Build.BuildEngine.ConsoleLogger.WarningHandler(System.Object,Microsoft.Build.Framework.BuildWarningEventArgs)" />
        <element api="Overload:Microsoft.Build.BuildEngine.FileLogger.Initialize">
          <element api="M:Microsoft.Build.BuildEngine.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
          <element api="M:Microsoft.Build.BuildEngine.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.FileLogger.Shutdown" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.FileLogger" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.FileLogger">
      <topicdata name="FileLogger" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.FileLogger" />
      <apidata name="FileLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.FileLogger.#ctor" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.ConsoleLogger.Parameters" />
        <element api="P:Microsoft.Build.BuildEngine.ConsoleLogger.ShowSummary" />
        <element api="P:Microsoft.Build.BuildEngine.ConsoleLogger.SkipProjectStartedText" />
        <element api="P:Microsoft.Build.BuildEngine.ConsoleLogger.Verbosity" />
        <element api="P:Microsoft.Build.BuildEngine.ConsoleLogger.WriteHandler" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.FileLogger" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.FileLogger.Initialize">
      <topicdata name="Initialize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
        <element api="M:Microsoft.Build.BuildEngine.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.FileLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.FileLogger.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.FileLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.FileLogger.Initialize" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.Build.BuildEngine.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
          <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventSource">
          <type api="T:Microsoft.Build.Framework.IEventSource" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)">
          <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.FileLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.FileLogger.Initialize" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.Build.BuildEngine.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
          <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventSource">
          <type api="T:Microsoft.Build.Framework.IEventSource" ref="true" />
        </parameter>
        <parameter name="nodeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Microsoft.Build.Framework.INodeLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
          <type api="T:Microsoft.Build.Framework.INodeLogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.FileLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.FileLogger.Shutdown">
      <topicdata group="api" />
      <apidata name="Shutdown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.Build.BuildEngine.ConsoleLogger.Shutdown">
          <type api="T:Microsoft.Build.BuildEngine.ConsoleLogger" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:Microsoft.Build.Framework.ILogger.Shutdown">
          <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.FileLogger" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.Import">
      <topicdata group="api" />
      <apidata name="Import" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.BuildEngine.Import.Condition" />
        <element api="P:Microsoft.Build.BuildEngine.Import.EvaluatedProjectPath" />
        <element api="P:Microsoft.Build.BuildEngine.Import.IsImported" />
        <element api="P:Microsoft.Build.BuildEngine.Import.ProjectPath" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.Import">
      <topicdata name="Import" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.Import" />
      <apidata name="Import" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Import" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.Import">
      <topicdata name="Import" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.Import" />
      <apidata name="Import" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.Import.Condition" />
        <element api="P:Microsoft.Build.BuildEngine.Import.EvaluatedProjectPath" />
        <element api="P:Microsoft.Build.BuildEngine.Import.IsImported" />
        <element api="P:Microsoft.Build.BuildEngine.Import.ProjectPath" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Import" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Import.Condition">
      <topicdata group="api" />
      <apidata name="Condition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Condition" />
      <setter name="set_Condition" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Import" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Import.EvaluatedProjectPath">
      <topicdata group="api" />
      <apidata name="EvaluatedProjectPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EvaluatedProjectPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Import" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Import.IsImported">
      <topicdata group="api" />
      <apidata name="IsImported" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsImported" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Import" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Import.ProjectPath">
      <topicdata group="api" />
      <apidata name="ProjectPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProjectPath" />
      <setter name="set_ProjectPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Import" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.ImportCollection">
      <topicdata group="api" />
      <apidata name="ImportCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Build.BuildEngine.ImportCollection.AddNewImport(System.String,System.String)" />
        <element api="Overload:Microsoft.Build.BuildEngine.ImportCollection.CopyTo">
          <element api="M:Microsoft.Build.BuildEngine.ImportCollection.CopyTo(System.Array,System.Int32)" />
          <element api="M:Microsoft.Build.BuildEngine.ImportCollection.CopyTo(Microsoft.Build.BuildEngine.Import[],System.Int32)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.ImportCollection.GetEnumerator" />
        <element api="M:Microsoft.Build.BuildEngine.ImportCollection.RemoveImport(Microsoft.Build.BuildEngine.Import)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.BuildEngine.ImportCollection.Count" />
        <element api="P:Microsoft.Build.BuildEngine.ImportCollection.IsSynchronized" />
        <element api="P:Microsoft.Build.BuildEngine.ImportCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.ImportCollection">
      <topicdata name="ImportCollection" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.ImportCollection" />
      <apidata name="ImportCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Build.BuildEngine.ImportCollection.AddNewImport(System.String,System.String)" />
        <element api="Overload:Microsoft.Build.BuildEngine.ImportCollection.CopyTo">
          <element api="M:Microsoft.Build.BuildEngine.ImportCollection.CopyTo(System.Array,System.Int32)" />
          <element api="M:Microsoft.Build.BuildEngine.ImportCollection.CopyTo(Microsoft.Build.BuildEngine.Import[],System.Int32)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.ImportCollection.GetEnumerator" />
        <element api="M:Microsoft.Build.BuildEngine.ImportCollection.RemoveImport(Microsoft.Build.BuildEngine.Import)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ImportCollection" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.ImportCollection">
      <topicdata name="ImportCollection" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.ImportCollection" />
      <apidata name="ImportCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.ImportCollection.Count" />
        <element api="P:Microsoft.Build.BuildEngine.ImportCollection.IsSynchronized" />
        <element api="P:Microsoft.Build.BuildEngine.ImportCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ImportCollection" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.ImportCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.ImportCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:Microsoft.Build.BuildEngine.ImportCollection.CopyTo(Microsoft.Build.BuildEngine.Import[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ImportCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ImportCollection.AddNewImport(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AddNewImport" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="projectFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="condition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ImportCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ImportCollection.CopyTo(Microsoft.Build.BuildEngine.Import[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.ImportCollection.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:Microsoft.Build.BuildEngine.Import" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ImportCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ImportCollection.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.ImportCollection.CopyTo" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ImportCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.ImportCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ImportCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ImportCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ImportCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.ImportCollection.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ImportCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ImportCollection.RemoveImport(Microsoft.Build.BuildEngine.Import)">
      <topicdata group="api" />
      <apidata name="RemoveImport" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importToRemove">
          <type api="T:Microsoft.Build.BuildEngine.Import" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ImportCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.ImportCollection.SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ImportCollection" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.InternalLoggerException">
      <topicdata group="api" />
      <apidata name="InternalLoggerException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.Build.BuildEngine.InternalLoggerException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Microsoft.Build.BuildEngine.InternalLoggerException.#ctor">
          <element api="M:Microsoft.Build.BuildEngine.InternalLoggerException.#ctor" />
          <element api="M:Microsoft.Build.BuildEngine.InternalLoggerException.#ctor(System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.InternalLoggerException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.InternalLoggerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="P:Microsoft.Build.BuildEngine.InternalLoggerException.BuildEventArgs" />
        <element api="P:Microsoft.Build.BuildEngine.InternalLoggerException.ErrorCode" />
        <element api="P:Microsoft.Build.BuildEngine.InternalLoggerException.HelpKeyword" />
        <element api="P:Microsoft.Build.BuildEngine.InternalLoggerException.InitializationException" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.InternalLoggerException">
      <topicdata name="InternalLoggerException" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.InternalLoggerException" />
      <apidata name="InternalLoggerException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.Build.BuildEngine.InternalLoggerException.#ctor" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.InternalLoggerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InternalLoggerException" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.InternalLoggerException">
      <topicdata name="InternalLoggerException" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.InternalLoggerException" />
      <apidata name="InternalLoggerException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.Build.BuildEngine.InternalLoggerException.#ctor" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.InternalLoggerException.BuildEventArgs" />
        <element api="P:Microsoft.Build.BuildEngine.InternalLoggerException.ErrorCode" />
        <element api="P:Microsoft.Build.BuildEngine.InternalLoggerException.HelpKeyword" />
        <element api="P:Microsoft.Build.BuildEngine.InternalLoggerException.InitializationException" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InternalLoggerException" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.InternalLoggerException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.InternalLoggerException.#ctor" />
        <element api="M:Microsoft.Build.BuildEngine.InternalLoggerException.#ctor(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.InternalLoggerException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InternalLoggerException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.InternalLoggerException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.InternalLoggerException.#ctor" />
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InternalLoggerException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.InternalLoggerException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.InternalLoggerException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InternalLoggerException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.InternalLoggerException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.InternalLoggerException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InternalLoggerException" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.InternalLoggerException.BuildEventArgs">
      <topicdata group="api" />
      <apidata name="BuildEventArgs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BuildEventArgs" />
      <returns>
        <type api="T:Microsoft.Build.Framework.BuildEventArgs" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InternalLoggerException" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.InternalLoggerException.ErrorCode">
      <topicdata group="api" />
      <apidata name="ErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorCode" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InternalLoggerException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.InternalLoggerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InternalLoggerException" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.InternalLoggerException.HelpKeyword">
      <topicdata group="api" />
      <apidata name="HelpKeyword" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HelpKeyword" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InternalLoggerException" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.InternalLoggerException.InitializationException">
      <topicdata group="api" />
      <apidata name="InitializationException" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InitializationException" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InternalLoggerException" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.InvalidProjectFileException">
      <topicdata group="api" />
      <apidata name="InvalidProjectFileException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor">
          <element api="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor" />
          <element api="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor(System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor(System.String,System.Exception)" />
          <element api="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor(System.Xml.XmlNode,System.String,System.String,System.String,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.BaseMessage" />
        <element api="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.ColumnNumber" />
        <element api="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.EndColumnNumber" />
        <element api="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.EndLineNumber" />
        <element api="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.ErrorCode" />
        <element api="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.ErrorSubcategory" />
        <element api="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.HelpKeyword" />
        <element api="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.LineNumber" />
        <element api="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.Message" />
        <element api="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.ProjectFile" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.InvalidProjectFileException">
      <topicdata name="InvalidProjectFileException" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" />
      <apidata name="InvalidProjectFileException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.InvalidProjectFileException">
      <topicdata name="InvalidProjectFileException" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" />
      <apidata name="InvalidProjectFileException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.BaseMessage" />
        <element api="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.ColumnNumber" />
        <element api="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.EndColumnNumber" />
        <element api="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.EndLineNumber" />
        <element api="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.ErrorCode" />
        <element api="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.ErrorSubcategory" />
        <element api="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.HelpKeyword" />
        <element api="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.LineNumber" />
        <element api="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.Message" />
        <element api="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.ProjectFile" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor" />
        <element api="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor(System.String,System.Exception)" />
        <element api="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor(System.Xml.XmlNode,System.String,System.String,System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor" />
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor" />
      <parameters>
        <parameter name="projectFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lineNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="columnNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="endLineNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="endColumnNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="errorSubcategory">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="helpKeyword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor(System.Xml.XmlNode,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.InvalidProjectFileException.#ctor" />
      <parameters>
        <parameter name="xmlNode">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="errorSubcategory">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="helpKeyword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.BaseMessage">
      <topicdata group="api" />
      <apidata name="BaseMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BaseMessage" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.ColumnNumber">
      <topicdata group="api" />
      <apidata name="ColumnNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ColumnNumber" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.EndColumnNumber">
      <topicdata group="api" />
      <apidata name="EndColumnNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EndColumnNumber" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.EndLineNumber">
      <topicdata group="api" />
      <apidata name="EndLineNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EndLineNumber" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.ErrorCode">
      <topicdata group="api" />
      <apidata name="ErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorCode" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.ErrorSubcategory">
      <topicdata group="api" />
      <apidata name="ErrorSubcategory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorSubcategory" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.InvalidProjectFileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.HelpKeyword">
      <topicdata group="api" />
      <apidata name="HelpKeyword" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HelpKeyword" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.LineNumber">
      <topicdata group="api" />
      <apidata name="LineNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LineNumber" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Exception.Message">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Runtime.InteropServices._Exception.Message">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.InvalidProjectFileException.ProjectFile">
      <topicdata group="api" />
      <apidata name="ProjectFile" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProjectFile" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException">
      <topicdata group="api" />
      <apidata name="InvalidToolsetDefinitionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor">
          <element api="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor" />
          <element api="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor(System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor(System.String,System.Exception)" />
          <element api="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor(System.String,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor(System.String,System.String,System.Exception)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.ErrorCode" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException">
      <topicdata name="InvalidToolsetDefinitionException" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" />
      <apidata name="InvalidToolsetDefinitionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException">
      <topicdata name="InvalidToolsetDefinitionException" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" />
      <apidata name="InvalidToolsetDefinitionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.ErrorCode" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" />
      </containers>
    </api>
    <api id="Events.T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException">
      <topicdata name="InvalidToolsetDefinitionException" group="list" subgroup="Events" typeTopicId="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" />
      <apidata name="InvalidToolsetDefinitionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor" />
        <element api="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor(System.String,System.Exception)" />
        <element api="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor(System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor(System.String,System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor" />
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor(System.String,System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.ErrorCode">
      <topicdata group="api" />
      <apidata name="ErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorCode" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.InvalidToolsetDefinitionException" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.LocalNode">
      <topicdata group="api" />
      <apidata name="LocalNode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.LocalNode.StartLocalNodeServer(System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.LocalNode">
      <topicdata name="LocalNode" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.LocalNode" />
      <apidata name="LocalNode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.LocalNode.StartLocalNodeServer(System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.LocalNode" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.LocalNode.StartLocalNodeServer(System.Int32)">
      <topicdata group="api" />
      <apidata name="StartLocalNodeServer" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="nodeNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.LocalNode" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.LoggerDescription">
      <topicdata group="api" />
      <apidata name="LoggerDescription" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.LoggerDescription.#ctor(System.String,System.String,System.String,System.String,Microsoft.Build.Framework.LoggerVerbosity)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.BuildEngine.LoggerDescription.LoggerSwitchParameters" />
        <element api="P:Microsoft.Build.BuildEngine.LoggerDescription.Verbosity" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.LoggerDescription">
      <topicdata name="LoggerDescription" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.LoggerDescription" />
      <apidata name="LoggerDescription" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.LoggerDescription" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.LoggerDescription">
      <topicdata name="LoggerDescription" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.LoggerDescription" />
      <apidata name="LoggerDescription" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.LoggerDescription.LoggerSwitchParameters" />
        <element api="P:Microsoft.Build.BuildEngine.LoggerDescription.Verbosity" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.LoggerDescription" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.LoggerDescription.#ctor(System.String,System.String,System.String,System.String,Microsoft.Build.Framework.LoggerVerbosity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="loggerClassName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="loggerAssemblyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="loggerAssemblyFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="loggerSwitchParameters">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="verbosity">
          <type api="T:Microsoft.Build.Framework.LoggerVerbosity" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.LoggerDescription" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.LoggerDescription.LoggerSwitchParameters">
      <topicdata group="api" />
      <apidata name="LoggerSwitchParameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LoggerSwitchParameters" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.LoggerDescription" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.LoggerDescription.Verbosity">
      <topicdata group="api" />
      <apidata name="Verbosity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Verbosity" />
      <returns>
        <type api="T:Microsoft.Build.Framework.LoggerVerbosity" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.LoggerDescription" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.Project">
      <topicdata group="api" />
      <apidata name="Project" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.Project.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Microsoft.Build.BuildEngine.Project.#ctor">
          <element api="M:Microsoft.Build.BuildEngine.Project.#ctor" />
          <element api="M:Microsoft.Build.BuildEngine.Project.#ctor(Microsoft.Build.BuildEngine.Engine)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.#ctor(Microsoft.Build.BuildEngine.Engine,System.String)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.Project.AddNewImport(System.String,System.String)" />
        <element api="Overload:Microsoft.Build.BuildEngine.Project.AddNewItem">
          <element api="M:Microsoft.Build.BuildEngine.Project.AddNewItem(System.String,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.AddNewItem(System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.Project.AddNewItemGroup" />
        <element api="M:Microsoft.Build.BuildEngine.Project.AddNewPropertyGroup(System.Boolean)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.AddNewUsingTaskFromAssemblyFile(System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.AddNewUsingTaskFromAssemblyName(System.String,System.String)" />
        <element api="Overload:Microsoft.Build.BuildEngine.Project.Build">
          <element api="M:Microsoft.Build.BuildEngine.Project.Build" />
          <element api="M:Microsoft.Build.BuildEngine.Project.Build(System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.Build(System.String[])" />
          <element api="M:Microsoft.Build.BuildEngine.Project.Build(System.String[],System.Collections.IDictionary)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.Build(System.String[],System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.Project.GetConditionedPropertyValues(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.GetEvaluatedItemsByName(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.GetEvaluatedItemsByNameIgnoringCondition(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.GetEvaluatedProperty(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.GetProjectExtensions(System.String)" />
        <element api="Overload:Microsoft.Build.BuildEngine.Project.Load">
          <element api="M:Microsoft.Build.BuildEngine.Project.Load(System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.Load(System.IO.TextReader)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.Load(System.String,Microsoft.Build.BuildEngine.ProjectLoadSettings)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.Load(System.IO.TextReader,Microsoft.Build.BuildEngine.ProjectLoadSettings)" />
        </element>
        <element api="Overload:Microsoft.Build.BuildEngine.Project.LoadXml">
          <element api="M:Microsoft.Build.BuildEngine.Project.LoadXml(System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.LoadXml(System.String,Microsoft.Build.BuildEngine.ProjectLoadSettings)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.Project.MarkProjectAsDirty" />
        <element api="M:Microsoft.Build.BuildEngine.Project.RemoveAllItemGroups" />
        <element api="M:Microsoft.Build.BuildEngine.Project.RemoveAllPropertyGroups" />
        <element api="M:Microsoft.Build.BuildEngine.Project.RemoveImportedPropertyGroup(Microsoft.Build.BuildEngine.BuildPropertyGroup)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.RemoveItem(Microsoft.Build.BuildEngine.BuildItem)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.RemoveItemGroup(Microsoft.Build.BuildEngine.BuildItemGroup)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.RemoveItemGroupsWithMatchingCondition(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.RemoveItemsByName(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.RemovePropertyGroup(Microsoft.Build.BuildEngine.BuildPropertyGroup)" />
        <element api="Overload:Microsoft.Build.BuildEngine.Project.RemovePropertyGroupsWithMatchingCondition">
          <element api="M:Microsoft.Build.BuildEngine.Project.RemovePropertyGroupsWithMatchingCondition(System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.RemovePropertyGroupsWithMatchingCondition(System.String,System.Boolean)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.Project.ResetBuildStatus" />
        <element api="Overload:Microsoft.Build.BuildEngine.Project.Save">
          <element api="M:Microsoft.Build.BuildEngine.Project.Save(System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.Save(System.IO.TextWriter)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.Save(System.String,System.Text.Encoding)" />
        </element>
        <element api="Overload:Microsoft.Build.BuildEngine.Project.SetImportedProperty">
          <element api="M:Microsoft.Build.BuildEngine.Project.SetImportedProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.Project)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.SetImportedProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.Project,Microsoft.Build.BuildEngine.PropertyPosition)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.SetImportedProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.Project,Microsoft.Build.BuildEngine.PropertyPosition,System.Boolean)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.Project.SetProjectExtensions(System.String,System.String)" />
        <element api="Overload:Microsoft.Build.BuildEngine.Project.SetProperty">
          <element api="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.PropertyPosition)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.PropertyPosition,System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.BuildEngine.Project.BuildEnabled" />
        <element api="P:Microsoft.Build.BuildEngine.Project.DefaultTargets" />
        <element api="P:Microsoft.Build.BuildEngine.Project.DefaultToolsVersion" />
        <element api="P:Microsoft.Build.BuildEngine.Project.Encoding" />
        <element api="P:Microsoft.Build.BuildEngine.Project.EvaluatedItems" />
        <element api="P:Microsoft.Build.BuildEngine.Project.EvaluatedItemsIgnoringCondition" />
        <element api="P:Microsoft.Build.BuildEngine.Project.EvaluatedProperties" />
        <element api="P:Microsoft.Build.BuildEngine.Project.FullFileName" />
        <element api="P:Microsoft.Build.BuildEngine.Project.GlobalProperties" />
        <element api="P:Microsoft.Build.BuildEngine.Project.HasToolsVersionAttribute" />
        <element api="P:Microsoft.Build.BuildEngine.Project.Imports" />
        <element api="P:Microsoft.Build.BuildEngine.Project.InitialTargets" />
        <element api="P:Microsoft.Build.BuildEngine.Project.IsDirty" />
        <element api="P:Microsoft.Build.BuildEngine.Project.IsValidated" />
        <element api="P:Microsoft.Build.BuildEngine.Project.ItemGroups" />
        <element api="P:Microsoft.Build.BuildEngine.Project.ParentEngine" />
        <element api="P:Microsoft.Build.BuildEngine.Project.PropertyGroups" />
        <element api="P:Microsoft.Build.BuildEngine.Project.SchemaFile" />
        <element api="P:Microsoft.Build.BuildEngine.Project.Targets" />
        <element api="P:Microsoft.Build.BuildEngine.Project.TimeOfLastDirty" />
        <element api="P:Microsoft.Build.BuildEngine.Project.ToolsVersion" />
        <element api="P:Microsoft.Build.BuildEngine.Project.UsingTasks" />
        <element api="P:Microsoft.Build.BuildEngine.Project.Xml" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This class has been deprecated. Please use Microsoft.Build.Evaluation.Project from the Microsoft.Build assembly instead.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.Project">
      <topicdata name="Project" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.Project" />
      <apidata name="Project" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.Project.#ctor" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.Project.AddNewImport(System.String,System.String)" />
        <element api="Overload:Microsoft.Build.BuildEngine.Project.AddNewItem">
          <element api="M:Microsoft.Build.BuildEngine.Project.AddNewItem(System.String,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.AddNewItem(System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.Project.AddNewItemGroup" />
        <element api="M:Microsoft.Build.BuildEngine.Project.AddNewPropertyGroup(System.Boolean)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.AddNewUsingTaskFromAssemblyFile(System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.AddNewUsingTaskFromAssemblyName(System.String,System.String)" />
        <element api="Overload:Microsoft.Build.BuildEngine.Project.Build">
          <element api="M:Microsoft.Build.BuildEngine.Project.Build" />
          <element api="M:Microsoft.Build.BuildEngine.Project.Build(System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.Build(System.String[])" />
          <element api="M:Microsoft.Build.BuildEngine.Project.Build(System.String[],System.Collections.IDictionary)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.Build(System.String[],System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.Project.GetConditionedPropertyValues(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.GetEvaluatedItemsByName(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.GetEvaluatedItemsByNameIgnoringCondition(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.GetEvaluatedProperty(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.GetProjectExtensions(System.String)" />
        <element api="Overload:Microsoft.Build.BuildEngine.Project.Load">
          <element api="M:Microsoft.Build.BuildEngine.Project.Load(System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.Load(System.IO.TextReader)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.Load(System.String,Microsoft.Build.BuildEngine.ProjectLoadSettings)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.Load(System.IO.TextReader,Microsoft.Build.BuildEngine.ProjectLoadSettings)" />
        </element>
        <element api="Overload:Microsoft.Build.BuildEngine.Project.LoadXml">
          <element api="M:Microsoft.Build.BuildEngine.Project.LoadXml(System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.LoadXml(System.String,Microsoft.Build.BuildEngine.ProjectLoadSettings)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.Project.MarkProjectAsDirty" />
        <element api="M:Microsoft.Build.BuildEngine.Project.RemoveAllItemGroups" />
        <element api="M:Microsoft.Build.BuildEngine.Project.RemoveAllPropertyGroups" />
        <element api="M:Microsoft.Build.BuildEngine.Project.RemoveImportedPropertyGroup(Microsoft.Build.BuildEngine.BuildPropertyGroup)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.RemoveItem(Microsoft.Build.BuildEngine.BuildItem)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.RemoveItemGroup(Microsoft.Build.BuildEngine.BuildItemGroup)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.RemoveItemGroupsWithMatchingCondition(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.RemoveItemsByName(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.RemovePropertyGroup(Microsoft.Build.BuildEngine.BuildPropertyGroup)" />
        <element api="Overload:Microsoft.Build.BuildEngine.Project.RemovePropertyGroupsWithMatchingCondition">
          <element api="M:Microsoft.Build.BuildEngine.Project.RemovePropertyGroupsWithMatchingCondition(System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.RemovePropertyGroupsWithMatchingCondition(System.String,System.Boolean)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.Project.ResetBuildStatus" />
        <element api="Overload:Microsoft.Build.BuildEngine.Project.Save">
          <element api="M:Microsoft.Build.BuildEngine.Project.Save(System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.Save(System.IO.TextWriter)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.Save(System.String,System.Text.Encoding)" />
        </element>
        <element api="Overload:Microsoft.Build.BuildEngine.Project.SetImportedProperty">
          <element api="M:Microsoft.Build.BuildEngine.Project.SetImportedProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.Project)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.SetImportedProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.Project,Microsoft.Build.BuildEngine.PropertyPosition)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.SetImportedProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.Project,Microsoft.Build.BuildEngine.PropertyPosition,System.Boolean)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.Project.SetProjectExtensions(System.String,System.String)" />
        <element api="Overload:Microsoft.Build.BuildEngine.Project.SetProperty">
          <element api="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.PropertyPosition)" />
          <element api="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.PropertyPosition,System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.Project">
      <topicdata name="Project" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.Project" />
      <apidata name="Project" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.BuildEngine.Project.#ctor" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.Project.BuildEnabled" />
        <element api="P:Microsoft.Build.BuildEngine.Project.DefaultTargets" />
        <element api="P:Microsoft.Build.BuildEngine.Project.DefaultToolsVersion" />
        <element api="P:Microsoft.Build.BuildEngine.Project.Encoding" />
        <element api="P:Microsoft.Build.BuildEngine.Project.EvaluatedItems" />
        <element api="P:Microsoft.Build.BuildEngine.Project.EvaluatedItemsIgnoringCondition" />
        <element api="P:Microsoft.Build.BuildEngine.Project.EvaluatedProperties" />
        <element api="P:Microsoft.Build.BuildEngine.Project.FullFileName" />
        <element api="P:Microsoft.Build.BuildEngine.Project.GlobalProperties" />
        <element api="P:Microsoft.Build.BuildEngine.Project.HasToolsVersionAttribute" />
        <element api="P:Microsoft.Build.BuildEngine.Project.Imports" />
        <element api="P:Microsoft.Build.BuildEngine.Project.InitialTargets" />
        <element api="P:Microsoft.Build.BuildEngine.Project.IsDirty" />
        <element api="P:Microsoft.Build.BuildEngine.Project.IsValidated" />
        <element api="P:Microsoft.Build.BuildEngine.Project.ItemGroups" />
        <element api="P:Microsoft.Build.BuildEngine.Project.ParentEngine" />
        <element api="P:Microsoft.Build.BuildEngine.Project.PropertyGroups" />
        <element api="P:Microsoft.Build.BuildEngine.Project.SchemaFile" />
        <element api="P:Microsoft.Build.BuildEngine.Project.Targets" />
        <element api="P:Microsoft.Build.BuildEngine.Project.TimeOfLastDirty" />
        <element api="P:Microsoft.Build.BuildEngine.Project.ToolsVersion" />
        <element api="P:Microsoft.Build.BuildEngine.Project.UsingTasks" />
        <element api="P:Microsoft.Build.BuildEngine.Project.Xml" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.Project.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.Project.#ctor" />
        <element api="M:Microsoft.Build.BuildEngine.Project.#ctor(Microsoft.Build.BuildEngine.Engine)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.#ctor(Microsoft.Build.BuildEngine.Engine,System.String)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.Project.AddNewItem">
      <topicdata name="AddNewItem" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddNewItem" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.Project.AddNewItem(System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.AddNewItem(System.String,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.Project.Build">
      <topicdata name="Build" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Build" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.Project.Build" />
        <element api="M:Microsoft.Build.BuildEngine.Project.Build(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.Build(System.String[])" />
        <element api="M:Microsoft.Build.BuildEngine.Project.Build(System.String[],System.Collections.IDictionary)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.Build(System.String[],System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.Project.Load">
      <topicdata name="Load" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Load" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.Project.Load(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.Load(System.IO.TextReader)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.Load(System.String,Microsoft.Build.BuildEngine.ProjectLoadSettings)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.Load(System.IO.TextReader,Microsoft.Build.BuildEngine.ProjectLoadSettings)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.Project.LoadXml">
      <topicdata name="LoadXml" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="LoadXml" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.Project.LoadXml(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.LoadXml(System.String,Microsoft.Build.BuildEngine.ProjectLoadSettings)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.Project.RemovePropertyGroupsWithMatchingCondition">
      <topicdata name="RemovePropertyGroupsWithMatchingCondition" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemovePropertyGroupsWithMatchingCondition" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.Project.RemovePropertyGroupsWithMatchingCondition(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.RemovePropertyGroupsWithMatchingCondition(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.Project.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.Project.Save(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.Save(System.IO.TextWriter)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.Save(System.String,System.Text.Encoding)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.Project.SetImportedProperty">
      <topicdata name="SetImportedProperty" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetImportedProperty" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.Project.SetImportedProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.Project)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.SetImportedProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.Project,Microsoft.Build.BuildEngine.PropertyPosition)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.SetImportedProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.Project,Microsoft.Build.BuildEngine.PropertyPosition,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.Project.SetProperty">
      <topicdata name="SetProperty" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetProperty" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.PropertyPosition)" />
        <element api="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.PropertyPosition,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.Project.#ctor" />
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.#ctor(Microsoft.Build.BuildEngine.Engine)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.Project.#ctor" />
      <parameters>
        <parameter name="engine">
          <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.#ctor(Microsoft.Build.BuildEngine.Engine,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.Project.#ctor" />
      <parameters>
        <parameter name="engine">
          <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
        </parameter>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.AddNewImport(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AddNewImport" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="projectFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="condition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.AddNewItem(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AddNewItem" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.AddNewItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="itemInclude">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.AddNewItem(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AddNewItem" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.AddNewItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="itemInclude">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="treatItemIncludeAsLiteral">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.AddNewItemGroup">
      <topicdata group="api" />
      <apidata name="AddNewItemGroup" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.AddNewPropertyGroup(System.Boolean)">
      <topicdata group="api" />
      <apidata name="AddNewPropertyGroup" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="insertAtEndOfProject">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.AddNewUsingTaskFromAssemblyFile(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AddNewUsingTaskFromAssemblyFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="taskName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="assemblyFile">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.AddNewUsingTaskFromAssemblyName(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AddNewUsingTaskFromAssemblyName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="taskName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="assemblyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.Build">
      <topicdata group="api" />
      <apidata name="Build" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.Build" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.Build(System.String)">
      <topicdata group="api" />
      <apidata name="Build" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.Build" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.Build(System.String[])">
      <topicdata group="api" />
      <apidata name="Build" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.Build" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.Build(System.String[],System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="Build" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.Build" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="targetOutputs">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.Build(System.String[],System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)">
      <topicdata group="api" />
      <apidata name="Build" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.Build" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="targetOutputs">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
        <parameter name="buildFlags">
          <type api="T:Microsoft.Build.BuildEngine.BuildSettings" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.BuildEnabled">
      <topicdata group="api" />
      <apidata name="BuildEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BuildEnabled" />
      <setter name="set_BuildEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.DefaultTargets">
      <topicdata group="api" />
      <apidata name="DefaultTargets" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultTargets" />
      <setter name="set_DefaultTargets" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.DefaultToolsVersion">
      <topicdata group="api" />
      <apidata name="DefaultToolsVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultToolsVersion" />
      <setter name="set_DefaultToolsVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.Encoding">
      <topicdata group="api" />
      <apidata name="Encoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Encoding" />
      <returns>
        <type api="T:System.Text.Encoding" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.EvaluatedItems">
      <topicdata group="api" />
      <apidata name="EvaluatedItems" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EvaluatedItems" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.EvaluatedItemsIgnoringCondition">
      <topicdata group="api" />
      <apidata name="EvaluatedItemsIgnoringCondition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EvaluatedItemsIgnoringCondition" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.EvaluatedProperties">
      <topicdata group="api" />
      <apidata name="EvaluatedProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EvaluatedProperties" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.FullFileName">
      <topicdata group="api" />
      <apidata name="FullFileName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FullFileName" />
      <setter name="set_FullFileName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.GetConditionedPropertyValues(System.String)">
      <topicdata group="api" />
      <apidata name="GetConditionedPropertyValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.GetEvaluatedItemsByName(System.String)">
      <topicdata group="api" />
      <apidata name="GetEvaluatedItemsByName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.GetEvaluatedItemsByNameIgnoringCondition(System.String)">
      <topicdata group="api" />
      <apidata name="GetEvaluatedItemsByNameIgnoringCondition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.GetEvaluatedProperty(System.String)">
      <topicdata group="api" />
      <apidata name="GetEvaluatedProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.GetProjectExtensions(System.String)">
      <topicdata group="api" />
      <apidata name="GetProjectExtensions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.GlobalProperties">
      <topicdata group="api" />
      <apidata name="GlobalProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GlobalProperties" />
      <setter name="set_GlobalProperties" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.HasToolsVersionAttribute">
      <topicdata group="api" />
      <apidata name="HasToolsVersionAttribute" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasToolsVersionAttribute" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.Imports">
      <topicdata group="api" />
      <apidata name="Imports" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Imports" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.ImportCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.InitialTargets">
      <topicdata group="api" />
      <apidata name="InitialTargets" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InitialTargets" />
      <setter name="set_InitialTargets" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.IsDirty">
      <topicdata group="api" />
      <apidata name="IsDirty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDirty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.IsValidated">
      <topicdata group="api" />
      <apidata name="IsValidated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsValidated" />
      <setter name="set_IsValidated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.ItemGroups">
      <topicdata group="api" />
      <apidata name="ItemGroups" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ItemGroups" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildItemGroupCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.Load(System.IO.TextReader)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textReader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.Load(System.IO.TextReader,Microsoft.Build.BuildEngine.ProjectLoadSettings)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textReader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
        <parameter name="projectLoadSettings">
          <type api="T:Microsoft.Build.BuildEngine.ProjectLoadSettings" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.Load(System.String)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="projectFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.Load(System.String,Microsoft.Build.BuildEngine.ProjectLoadSettings)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="projectFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="projectLoadSettings">
          <type api="T:Microsoft.Build.BuildEngine.ProjectLoadSettings" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.LoadXml(System.String)">
      <topicdata group="api" />
      <apidata name="LoadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.LoadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="projectXml">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.LoadXml(System.String,Microsoft.Build.BuildEngine.ProjectLoadSettings)">
      <topicdata group="api" />
      <apidata name="LoadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.LoadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="projectXml">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="projectLoadSettings">
          <type api="T:Microsoft.Build.BuildEngine.ProjectLoadSettings" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.MarkProjectAsDirty">
      <topicdata group="api" />
      <apidata name="MarkProjectAsDirty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.ParentEngine">
      <topicdata group="api" />
      <apidata name="ParentEngine" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParentEngine" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.Engine" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.PropertyGroups">
      <topicdata group="api" />
      <apidata name="PropertyGroups" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertyGroups" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.RemoveAllItemGroups">
      <topicdata group="api" />
      <apidata name="RemoveAllItemGroups" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.RemoveAllPropertyGroups">
      <topicdata group="api" />
      <apidata name="RemoveAllPropertyGroups" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.RemoveImportedPropertyGroup(Microsoft.Build.BuildEngine.BuildPropertyGroup)">
      <topicdata group="api" />
      <apidata name="RemoveImportedPropertyGroup" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyGroupToRemove">
          <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.RemoveItem(Microsoft.Build.BuildEngine.BuildItem)">
      <topicdata group="api" />
      <apidata name="RemoveItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemToRemove">
          <type api="T:Microsoft.Build.BuildEngine.BuildItem" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.RemoveItemGroup(Microsoft.Build.BuildEngine.BuildItemGroup)">
      <topicdata group="api" />
      <apidata name="RemoveItemGroup" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemGroupToRemove">
          <type api="T:Microsoft.Build.BuildEngine.BuildItemGroup" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.RemoveItemGroupsWithMatchingCondition(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveItemGroupsWithMatchingCondition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="matchCondition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.RemoveItemsByName(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveItemsByName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.RemovePropertyGroup(Microsoft.Build.BuildEngine.BuildPropertyGroup)">
      <topicdata group="api" />
      <apidata name="RemovePropertyGroup" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyGroupToRemove">
          <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.RemovePropertyGroupsWithMatchingCondition(System.String)">
      <topicdata group="api" />
      <apidata name="RemovePropertyGroupsWithMatchingCondition" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.RemovePropertyGroupsWithMatchingCondition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="matchCondition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.RemovePropertyGroupsWithMatchingCondition(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="RemovePropertyGroupsWithMatchingCondition" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.RemovePropertyGroupsWithMatchingCondition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="matchCondition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="includeImportedPropertyGroups">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.ResetBuildStatus">
      <topicdata group="api" />
      <apidata name="ResetBuildStatus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.Save(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textWriter">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.Save(System.String)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="projectFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.Save(System.String,System.Text.Encoding)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="projectFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.SchemaFile">
      <topicdata group="api" />
      <apidata name="SchemaFile" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SchemaFile" />
      <setter name="set_SchemaFile" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.SetImportedProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.Project)">
      <topicdata group="api" />
      <apidata name="SetImportedProperty" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.SetImportedProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyValue">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="condition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="importProject">
          <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.SetImportedProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.Project,Microsoft.Build.BuildEngine.PropertyPosition)">
      <topicdata group="api" />
      <apidata name="SetImportedProperty" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.SetImportedProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyValue">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="condition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="importedProject">
          <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
        </parameter>
        <parameter name="position">
          <type api="T:Microsoft.Build.BuildEngine.PropertyPosition" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.SetImportedProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.Project,Microsoft.Build.BuildEngine.PropertyPosition,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetImportedProperty" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.SetImportedProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyValue">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="condition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="importedProject">
          <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
        </parameter>
        <parameter name="position">
          <type api="T:Microsoft.Build.BuildEngine.PropertyPosition" ref="false" />
        </parameter>
        <parameter name="treatPropertyValueAsLiteral">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.SetProjectExtensions(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SetProjectExtensions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="content">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.SetProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.SetProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyValue">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="condition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.PropertyPosition)">
      <topicdata group="api" />
      <apidata name="SetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.SetProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyValue">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="condition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="position">
          <type api="T:Microsoft.Build.BuildEngine.PropertyPosition" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.PropertyPosition,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.Project.SetProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyValue">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="condition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="position">
          <type api="T:Microsoft.Build.BuildEngine.PropertyPosition" ref="false" />
        </parameter>
        <parameter name="treatPropertyValueAsLiteral">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.Targets">
      <topicdata group="api" />
      <apidata name="Targets" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Targets" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.TargetCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.TimeOfLastDirty">
      <topicdata group="api" />
      <apidata name="TimeOfLastDirty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TimeOfLastDirty" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.ToolsVersion">
      <topicdata group="api" />
      <apidata name="ToolsVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ToolsVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.UsingTasks">
      <topicdata group="api" />
      <apidata name="UsingTasks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UsingTasks" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.UsingTaskCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Project.Xml">
      <topicdata group="api" />
      <apidata name="Xml" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Xml" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Project" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.ProjectLoadSettings">
      <topicdata group="api" />
      <apidata name="ProjectLoadSettings" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.Build.BuildEngine.ProjectLoadSettings.None" />
        <element api="F:Microsoft.Build.BuildEngine.ProjectLoadSettings.IgnoreMissingImports" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:Microsoft.Build.BuildEngine.ProjectLoadSettings.IgnoreMissingImports">
      <topicdata group="api" notopic="" />
      <apidata name="IgnoreMissingImports" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.ProjectLoadSettings" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ProjectLoadSettings" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.Build.BuildEngine.ProjectLoadSettings.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.ProjectLoadSettings" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ProjectLoadSettings" ref="false" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.PropertyPosition">
      <topicdata group="api" />
      <apidata name="PropertyPosition" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.Build.BuildEngine.PropertyPosition.UseExistingOrCreateAfterLastPropertyGroup" />
        <element api="F:Microsoft.Build.BuildEngine.PropertyPosition.UseExistingOrCreateAfterLastImport" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="F:Microsoft.Build.BuildEngine.PropertyPosition.UseExistingOrCreateAfterLastImport">
      <topicdata group="api" notopic="" />
      <apidata name="UseExistingOrCreateAfterLastImport" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.PropertyPosition" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.PropertyPosition" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.Build.BuildEngine.PropertyPosition.UseExistingOrCreateAfterLastPropertyGroup">
      <topicdata group="api" notopic="" />
      <apidata name="UseExistingOrCreateAfterLastPropertyGroup" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.PropertyPosition" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.PropertyPosition" ref="false" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.RemoteErrorException">
      <topicdata group="api" />
      <apidata name="RemoteErrorException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.RemoteErrorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.RemoteErrorException">
      <topicdata name="RemoteErrorException" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.RemoteErrorException" />
      <apidata name="RemoteErrorException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.RemoteErrorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.RemoteErrorException" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.RemoteErrorException">
      <topicdata name="RemoteErrorException" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.RemoteErrorException" />
      <apidata name="RemoteErrorException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.RemoteErrorException" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.RemoteErrorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.RemoteErrorException" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.SolutionWrapperProject">
      <topicdata group="api" />
      <apidata name="SolutionWrapperProject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.SolutionWrapperProject.Generate(System.String,System.String,Microsoft.Build.Framework.BuildEventContext)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.SolutionWrapperProject">
      <topicdata name="SolutionWrapperProject" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.SolutionWrapperProject" />
      <apidata name="SolutionWrapperProject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.SolutionWrapperProject.Generate(System.String,System.String,Microsoft.Build.Framework.BuildEventContext)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.SolutionWrapperProject" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.SolutionWrapperProject.Generate(System.String,System.String,Microsoft.Build.Framework.BuildEventContext)">
      <topicdata group="api" />
      <apidata name="Generate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="solutionPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="toolsVersionOverride">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="projectBuildEventContext">
          <type api="T:Microsoft.Build.Framework.BuildEventContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.SolutionWrapperProject" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.Target">
      <topicdata group="api" />
      <apidata name="Target" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Build.BuildEngine.Target.AddNewTask(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Target.GetEnumerator" />
        <element api="M:Microsoft.Build.BuildEngine.Target.RemoveTask(Microsoft.Build.BuildEngine.BuildTask)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.BuildEngine.Target.Condition" />
        <element api="P:Microsoft.Build.BuildEngine.Target.DependsOnTargets" />
        <element api="P:Microsoft.Build.BuildEngine.Target.Inputs" />
        <element api="P:Microsoft.Build.BuildEngine.Target.IsImported" />
        <element api="P:Microsoft.Build.BuildEngine.Target.Name" />
        <element api="P:Microsoft.Build.BuildEngine.Target.Outputs" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.Target">
      <topicdata name="Target" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.Target" />
      <apidata name="Target" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Build.BuildEngine.Target.AddNewTask(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Target.GetEnumerator" />
        <element api="M:Microsoft.Build.BuildEngine.Target.RemoveTask(Microsoft.Build.BuildEngine.BuildTask)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Target" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.Target">
      <topicdata name="Target" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.Target" />
      <apidata name="Target" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.Target.Condition" />
        <element api="P:Microsoft.Build.BuildEngine.Target.DependsOnTargets" />
        <element api="P:Microsoft.Build.BuildEngine.Target.Inputs" />
        <element api="P:Microsoft.Build.BuildEngine.Target.IsImported" />
        <element api="P:Microsoft.Build.BuildEngine.Target.Name" />
        <element api="P:Microsoft.Build.BuildEngine.Target.Outputs" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Target" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Target.AddNewTask(System.String)">
      <topicdata group="api" />
      <apidata name="AddNewTask" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="taskName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildTask" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Target" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Target.Condition">
      <topicdata group="api" />
      <apidata name="Condition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Condition" />
      <setter name="set_Condition" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Target" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Target.DependsOnTargets">
      <topicdata group="api" />
      <apidata name="DependsOnTargets" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DependsOnTargets" />
      <setter name="set_DependsOnTargets" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Target" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Target.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Target" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Target.Inputs">
      <topicdata group="api" />
      <apidata name="Inputs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Inputs" />
      <setter name="set_Inputs" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Target" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Target.IsImported">
      <topicdata group="api" />
      <apidata name="IsImported" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsImported" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Target" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Target.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Target" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Target.Outputs">
      <topicdata group="api" />
      <apidata name="Outputs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Outputs" />
      <setter name="set_Outputs" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Target" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Target.RemoveTask(Microsoft.Build.BuildEngine.BuildTask)">
      <topicdata group="api" />
      <apidata name="RemoveTask" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="taskElement">
          <type api="T:Microsoft.Build.BuildEngine.BuildTask" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Target" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.TargetCollection">
      <topicdata group="api" />
      <apidata name="TargetCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Build.BuildEngine.TargetCollection.AddNewTarget(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.TargetCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:Microsoft.Build.BuildEngine.TargetCollection.Exists(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.TargetCollection.GetEnumerator" />
        <element api="M:Microsoft.Build.BuildEngine.TargetCollection.RemoveTarget(Microsoft.Build.BuildEngine.Target)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.BuildEngine.TargetCollection.Count" />
        <element api="P:Microsoft.Build.BuildEngine.TargetCollection.IsSynchronized" />
        <element api="P:Microsoft.Build.BuildEngine.TargetCollection.Item(System.String)" />
        <element api="P:Microsoft.Build.BuildEngine.TargetCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.TargetCollection">
      <topicdata name="TargetCollection" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.TargetCollection" />
      <apidata name="TargetCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Build.BuildEngine.TargetCollection.AddNewTarget(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.TargetCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:Microsoft.Build.BuildEngine.TargetCollection.Exists(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.TargetCollection.GetEnumerator" />
        <element api="M:Microsoft.Build.BuildEngine.TargetCollection.RemoveTarget(Microsoft.Build.BuildEngine.Target)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.TargetCollection" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.TargetCollection">
      <topicdata name="TargetCollection" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.TargetCollection" />
      <apidata name="TargetCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.TargetCollection.Count" />
        <element api="P:Microsoft.Build.BuildEngine.TargetCollection.IsSynchronized" />
        <element api="P:Microsoft.Build.BuildEngine.TargetCollection.Item(System.String)" />
        <element api="P:Microsoft.Build.BuildEngine.TargetCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.TargetCollection" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.TargetCollection.AddNewTarget(System.String)">
      <topicdata group="api" />
      <apidata name="AddNewTarget" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.Target" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.TargetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.TargetCollection.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.TargetCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.TargetCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.TargetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.TargetCollection.Exists(System.String)">
      <topicdata group="api" />
      <apidata name="Exists" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.TargetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.TargetCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.TargetCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.TargetCollection.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.TargetCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.TargetCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.Target" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.TargetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.TargetCollection.RemoveTarget(Microsoft.Build.BuildEngine.Target)">
      <topicdata group="api" />
      <apidata name="RemoveTarget" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetToRemove">
          <type api="T:Microsoft.Build.BuildEngine.Target" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.TargetCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.TargetCollection.SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.TargetCollection" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.Toolset">
      <topicdata group="api" />
      <apidata name="Toolset" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Microsoft.Build.BuildEngine.Toolset.#ctor">
          <element api="M:Microsoft.Build.BuildEngine.Toolset.#ctor(System.String,System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.Toolset.#ctor(System.String,System.String,Microsoft.Build.BuildEngine.BuildPropertyGroup)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.Toolset.Clone" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.BuildEngine.Toolset.BuildProperties" />
        <element api="P:Microsoft.Build.BuildEngine.Toolset.ToolsPath" />
        <element api="P:Microsoft.Build.BuildEngine.Toolset.ToolsVersion" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.Toolset">
      <topicdata name="Toolset" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.Toolset" />
      <apidata name="Toolset" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.Toolset.Clone" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Toolset" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.Toolset">
      <topicdata name="Toolset" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.Toolset" />
      <apidata name="Toolset" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.Toolset.BuildProperties" />
        <element api="P:Microsoft.Build.BuildEngine.Toolset.ToolsPath" />
        <element api="P:Microsoft.Build.BuildEngine.Toolset.ToolsVersion" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Toolset" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.Toolset.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.Toolset.#ctor(System.String,System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.Toolset.#ctor(System.String,System.String,Microsoft.Build.BuildEngine.BuildPropertyGroup)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Toolset.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.Toolset.#ctor" />
      <parameters>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="toolsPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Toolset.#ctor(System.String,System.String,Microsoft.Build.BuildEngine.BuildPropertyGroup)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.BuildEngine.Toolset.#ctor" />
      <parameters>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="toolsPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="buildProperties">
          <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Toolset.BuildProperties">
      <topicdata group="api" />
      <apidata name="BuildProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BuildProperties" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Toolset.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Toolset.ToolsPath">
      <topicdata group="api" />
      <apidata name="ToolsPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ToolsPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.Toolset.ToolsVersion">
      <topicdata group="api" />
      <apidata name="ToolsVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ToolsVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.ToolsetCollection">
      <topicdata group="api" />
      <apidata name="ToolsetCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Build.BuildEngine.ToolsetCollection.Add(Microsoft.Build.BuildEngine.Toolset)" />
        <element api="M:Microsoft.Build.BuildEngine.ToolsetCollection.Clear" />
        <element api="Overload:Microsoft.Build.BuildEngine.ToolsetCollection.Contains">
          <element api="M:Microsoft.Build.BuildEngine.ToolsetCollection.Contains(System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.ToolsetCollection.Contains(Microsoft.Build.BuildEngine.Toolset)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.ToolsetCollection.CopyTo(Microsoft.Build.BuildEngine.Toolset[],System.Int32)" />
        <element api="M:Microsoft.Build.BuildEngine.ToolsetCollection.GetEnumerator" />
        <element api="M:Microsoft.Build.BuildEngine.ToolsetCollection.Remove(Microsoft.Build.BuildEngine.Toolset)" />
        <element api="M:Microsoft.Build.BuildEngine.ToolsetCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.BuildEngine.ToolsetCollection.Count" />
        <element api="P:Microsoft.Build.BuildEngine.ToolsetCollection.IsReadOnly" />
        <element api="P:Microsoft.Build.BuildEngine.ToolsetCollection.Item(System.String)" />
        <element api="P:Microsoft.Build.BuildEngine.ToolsetCollection.ToolsVersions" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.ToolsetCollection">
      <topicdata name="ToolsetCollection" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.ToolsetCollection" />
      <apidata name="ToolsetCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Build.BuildEngine.ToolsetCollection.Add(Microsoft.Build.BuildEngine.Toolset)" />
        <element api="M:Microsoft.Build.BuildEngine.ToolsetCollection.Clear" />
        <element api="Overload:Microsoft.Build.BuildEngine.ToolsetCollection.Contains">
          <element api="M:Microsoft.Build.BuildEngine.ToolsetCollection.Contains(System.String)" />
          <element api="M:Microsoft.Build.BuildEngine.ToolsetCollection.Contains(Microsoft.Build.BuildEngine.Toolset)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.ToolsetCollection.CopyTo(Microsoft.Build.BuildEngine.Toolset[],System.Int32)" />
        <element api="M:Microsoft.Build.BuildEngine.ToolsetCollection.GetEnumerator" />
        <element api="M:Microsoft.Build.BuildEngine.ToolsetCollection.Remove(Microsoft.Build.BuildEngine.Toolset)" />
        <element api="M:Microsoft.Build.BuildEngine.ToolsetCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ToolsetCollection" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.ToolsetCollection">
      <topicdata name="ToolsetCollection" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.ToolsetCollection" />
      <apidata name="ToolsetCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.ToolsetCollection.Count" />
        <element api="P:Microsoft.Build.BuildEngine.ToolsetCollection.IsReadOnly" />
        <element api="P:Microsoft.Build.BuildEngine.ToolsetCollection.Item(System.String)" />
        <element api="P:Microsoft.Build.BuildEngine.ToolsetCollection.ToolsVersions" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ToolsetCollection" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.ToolsetCollection.Contains">
      <topicdata name="Contains" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Contains" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.ToolsetCollection.Contains(System.String)" />
        <element api="M:Microsoft.Build.BuildEngine.ToolsetCollection.Contains(Microsoft.Build.BuildEngine.Toolset)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ToolsetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ToolsetCollection.Add(Microsoft.Build.BuildEngine.Toolset)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ToolsetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ToolsetCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ToolsetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ToolsetCollection.Contains(Microsoft.Build.BuildEngine.Toolset)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.ToolsetCollection.Contains" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ToolsetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ToolsetCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.ToolsetCollection.Contains" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ToolsetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ToolsetCollection.CopyTo(Microsoft.Build.BuildEngine.Toolset[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ToolsetCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.ToolsetCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ToolsetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ToolsetCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ToolsetCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.ToolsetCollection.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ToolsetCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.ToolsetCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ToolsetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ToolsetCollection.Remove(Microsoft.Build.BuildEngine.Toolset)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.BuildEngine.Toolset" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ToolsetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.ToolsetCollection.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ToolsetCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.ToolsetCollection.ToolsVersions">
      <topicdata group="api" />
      <apidata name="ToolsVersions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ToolsVersions" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ToolsetCollection" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations">
      <topicdata group="api" />
      <apidata name="ToolsetDefinitionLocations" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations.None" />
        <element api="F:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations.ConfigurationFile" />
        <element api="F:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations.Registry" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations.ConfigurationFile">
      <topicdata group="api" notopic="" />
      <apidata name="ConfigurationFile" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations.Registry">
      <topicdata group="api" notopic="" />
      <apidata name="Registry" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations" ref="false" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.UsingTask">
      <topicdata group="api" />
      <apidata name="UsingTask" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.BuildEngine.UsingTask.AssemblyFile" />
        <element api="P:Microsoft.Build.BuildEngine.UsingTask.AssemblyName" />
        <element api="P:Microsoft.Build.BuildEngine.UsingTask.Condition" />
        <element api="P:Microsoft.Build.BuildEngine.UsingTask.IsImported" />
        <element api="P:Microsoft.Build.BuildEngine.UsingTask.TaskName" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.UsingTask">
      <topicdata name="UsingTask" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.UsingTask" />
      <apidata name="UsingTask" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.UsingTask" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.UsingTask">
      <topicdata name="UsingTask" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.UsingTask" />
      <apidata name="UsingTask" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.UsingTask.AssemblyFile" />
        <element api="P:Microsoft.Build.BuildEngine.UsingTask.AssemblyName" />
        <element api="P:Microsoft.Build.BuildEngine.UsingTask.Condition" />
        <element api="P:Microsoft.Build.BuildEngine.UsingTask.IsImported" />
        <element api="P:Microsoft.Build.BuildEngine.UsingTask.TaskName" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.UsingTask" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.UsingTask.AssemblyFile">
      <topicdata group="api" />
      <apidata name="AssemblyFile" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssemblyFile" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.UsingTask" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.UsingTask.AssemblyName">
      <topicdata group="api" />
      <apidata name="AssemblyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssemblyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.UsingTask" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.UsingTask.Condition">
      <topicdata group="api" />
      <apidata name="Condition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Condition" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.UsingTask" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.UsingTask.IsImported">
      <topicdata group="api" />
      <apidata name="IsImported" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsImported" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.UsingTask" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.UsingTask.TaskName">
      <topicdata group="api" />
      <apidata name="TaskName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TaskName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.UsingTask" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.UsingTaskCollection">
      <topicdata group="api" />
      <apidata name="UsingTaskCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="Overload:Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo">
          <element api="M:Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(System.Array,System.Int32)" />
          <element api="M:Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(Microsoft.Build.BuildEngine.UsingTask[],System.Int32)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.BuildEngine.UsingTaskCollection.Count" />
        <element api="P:Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized" />
        <element api="P:Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.UsingTaskCollection">
      <topicdata name="UsingTaskCollection" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.UsingTaskCollection" />
      <apidata name="UsingTaskCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="Overload:Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo">
          <element api="M:Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(System.Array,System.Int32)" />
          <element api="M:Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(Microsoft.Build.BuildEngine.UsingTask[],System.Int32)" />
        </element>
        <element api="M:Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.UsingTaskCollection" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.BuildEngine.UsingTaskCollection">
      <topicdata name="UsingTaskCollection" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.BuildEngine.UsingTaskCollection" />
      <apidata name="UsingTaskCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.BuildEngine.UsingTaskCollection.Count" />
        <element api="P:Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized" />
        <element api="P:Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.UsingTaskCollection" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(Microsoft.Build.BuildEngine.UsingTask[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.UsingTaskCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(Microsoft.Build.BuildEngine.UsingTask[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:Microsoft.Build.BuildEngine.UsingTask" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.UsingTaskCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.UsingTaskCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.UsingTaskCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.UsingTaskCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.UsingTaskCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.UsingTaskCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.UsingTaskCollection" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.Utilities">
      <topicdata group="api" />
      <apidata name="Utilities" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.Utilities.Escape(System.String)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.BuildEngine.Utilities">
      <topicdata name="Utilities" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.BuildEngine.Utilities" />
      <apidata name="Utilities" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.Build.BuildEngine.Utilities.Escape(System.String)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Utilities" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.BuildEngine.Utilities.Escape(System.String)">
      <topicdata group="api" />
      <apidata name="Escape" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="unescapedExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
        <type api="T:Microsoft.Build.BuildEngine.Utilities" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.BuildEngine.WriteHandler">
      <topicdata group="api" />
      <apidata name="WriteHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build.Engine" module="Microsoft.Build.Engine" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.BuildEngine" />
      </containers>
    </api>
  </apis>
</reflection>