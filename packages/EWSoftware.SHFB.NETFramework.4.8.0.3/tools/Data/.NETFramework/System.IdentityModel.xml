<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.IdentityModel">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.IdentityModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.IdentityModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.IdentityModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.IdentityModel">
      <topicdata group="api" />
      <apidata name="System.IdentityModel" group="namespace" />
      <elements>
        <element api="T:System.IdentityModel.AsynchronousOperationException" />
        <element api="T:System.IdentityModel.AsyncResult" />
        <element api="T:System.IdentityModel.BadRequestException" />
        <element api="T:System.IdentityModel.CookieTransform" />
        <element api="T:System.IdentityModel.DeflateCookieTransform" />
        <element api="T:System.IdentityModel.DelegatingXmlDictionaryReader" />
        <element api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" />
        <element api="T:System.IdentityModel.EnvelopedSignatureReader" />
        <element api="T:System.IdentityModel.EnvelopedSignatureWriter" />
        <element api="T:System.IdentityModel.LimitExceededException" />
        <element api="T:System.IdentityModel.OpenObject" />
        <element api="T:System.IdentityModel.ProtectedDataCookieTransform" />
        <element api="T:System.IdentityModel.RequestException" />
        <element api="T:System.IdentityModel.RequestFailedException" />
        <element api="T:System.IdentityModel.RsaEncryptionCookieTransform" />
        <element api="T:System.IdentityModel.RsaSignatureCookieTransform" />
        <element api="T:System.IdentityModel.Scope" />
        <element api="T:System.IdentityModel.SecurityMessageSerializationException" />
        <element api="T:System.IdentityModel.SecurityTokenService" />
        <element api="T:System.IdentityModel.SecurityTokenService.FederatedAsyncState" />
        <element api="T:System.IdentityModel.SignatureVerificationFailedException" />
        <element api="T:System.IdentityModel.TypedAsyncResult`1" />
        <element api="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException" />
      </elements>
    </api>
    <api id="T:System.IdentityModel.AsynchronousOperationException">
      <topicdata group="api" />
      <apidata name="AsynchronousOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.AsynchronousOperationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.IdentityModel.AsynchronousOperationException.#ctor">
          <element api="M:System.IdentityModel.AsynchronousOperationException.#ctor" />
          <element api="M:System.IdentityModel.AsynchronousOperationException.#ctor(System.Exception)" />
          <element api="M:System.IdentityModel.AsynchronousOperationException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.AsynchronousOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.AsynchronousOperationException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.AsynchronousOperationException">
      <topicdata name="AsynchronousOperationException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.AsynchronousOperationException" />
      <apidata name="AsynchronousOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.AsynchronousOperationException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsynchronousOperationException" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.AsynchronousOperationException">
      <topicdata name="AsynchronousOperationException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.AsynchronousOperationException" />
      <apidata name="AsynchronousOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.AsynchronousOperationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsynchronousOperationException" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.AsynchronousOperationException">
      <topicdata name="AsynchronousOperationException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.AsynchronousOperationException" />
      <apidata name="AsynchronousOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.AsynchronousOperationException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsynchronousOperationException" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.AsynchronousOperationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.AsynchronousOperationException.#ctor" />
        <element api="M:System.IdentityModel.AsynchronousOperationException.#ctor(System.Exception)" />
        <element api="M:System.IdentityModel.AsynchronousOperationException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.AsynchronousOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.AsynchronousOperationException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsynchronousOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.AsynchronousOperationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.AsynchronousOperationException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsynchronousOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.AsynchronousOperationException.#ctor(System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.AsynchronousOperationException.#ctor" />
      <parameters>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsynchronousOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.AsynchronousOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.AsynchronousOperationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsynchronousOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.AsynchronousOperationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.AsynchronousOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsynchronousOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.AsynchronousOperationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.AsynchronousOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsynchronousOperationException" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.AsyncResult">
      <topicdata group="api" />
      <apidata name="AsyncResult" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.TypedAsyncResult`1" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IAsyncResult" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.IdentityModel.AsyncResult.#ctor">
          <element api="M:System.IdentityModel.AsyncResult.#ctor" />
          <element api="M:System.IdentityModel.AsyncResult.#ctor(System.Object)" />
          <element api="M:System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.IdentityModel.AsyncResult.Complete">
          <element api="M:System.IdentityModel.AsyncResult.Complete(System.Boolean)" />
          <element api="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)" />
        </element>
        <element api="Overload:System.IdentityModel.AsyncResult.Dispose">
          <element api="M:System.IdentityModel.AsyncResult.Dispose" />
          <element api="M:System.IdentityModel.AsyncResult.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.AsyncResult.Finalize" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.AsyncResult.AsyncState" />
        <element api="P:System.IdentityModel.AsyncResult.AsyncWaitHandle" />
        <element api="P:System.IdentityModel.AsyncResult.CompletedSynchronously" />
        <element api="P:System.IdentityModel.AsyncResult.IsCompleted" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.AsyncResult">
      <topicdata name="AsyncResult" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.AsyncResult" />
      <apidata name="AsyncResult" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.IdentityModel.AsyncResult.Complete">
          <element api="M:System.IdentityModel.AsyncResult.Complete(System.Boolean)" />
          <element api="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)" />
        </element>
        <element api="Overload:System.IdentityModel.AsyncResult.Dispose">
          <element api="M:System.IdentityModel.AsyncResult.Dispose" />
          <element api="M:System.IdentityModel.AsyncResult.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.AsyncResult.Finalize" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsyncResult" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.AsyncResult">
      <topicdata name="AsyncResult" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.AsyncResult" />
      <apidata name="AsyncResult" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.AsyncResult.AsyncState" />
        <element api="P:System.IdentityModel.AsyncResult.AsyncWaitHandle" />
        <element api="P:System.IdentityModel.AsyncResult.CompletedSynchronously" />
        <element api="P:System.IdentityModel.AsyncResult.IsCompleted" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsyncResult" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.AsyncResult.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.AsyncResult.#ctor" />
        <element api="M:System.IdentityModel.AsyncResult.#ctor(System.Object)" />
        <element api="M:System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.AsyncResult.Complete">
      <topicdata name="Complete" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Complete" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.AsyncResult.Complete(System.Boolean)" />
        <element api="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.AsyncResult.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.AsyncResult.Dispose" />
        <element api="M:System.IdentityModel.AsyncResult.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.AsyncResult.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.AsyncResult.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.AsyncResult.#ctor" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.AsyncResult.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.AsyncResult.#ctor" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.AsyncResult.AsyncState">
      <topicdata group="api" />
      <apidata name="AsyncState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_AsyncState" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.IAsyncResult.AsyncState">
          <type api="T:System.IAsyncResult" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.AsyncResult.AsyncWaitHandle">
      <topicdata group="api" />
      <apidata name="AsyncWaitHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_AsyncWaitHandle" />
      <returns>
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </returns>
      <implements>
        <member api="P:System.IAsyncResult.AsyncWaitHandle">
          <type api="T:System.IAsyncResult" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.AsyncResult.Complete(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Complete" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.IdentityModel.AsyncResult.Complete" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="completedSynchronously">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)">
      <topicdata group="api" />
      <apidata name="Complete" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.IdentityModel.AsyncResult.Complete" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="completedSynchronously">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.AsyncResult.CompletedSynchronously">
      <topicdata group="api" />
      <apidata name="CompletedSynchronously" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CompletedSynchronously" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IAsyncResult.CompletedSynchronously">
          <type api="T:System.IAsyncResult" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.AsyncResult.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.AsyncResult.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.AsyncResult.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.IdentityModel.AsyncResult.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="isExplicitDispose">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="End" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.AsyncResult.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.AsyncResult.IsCompleted">
      <topicdata group="api" />
      <apidata name="IsCompleted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsCompleted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IAsyncResult.IsCompleted">
          <type api="T:System.IAsyncResult" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.BadRequestException">
      <topicdata group="api" />
      <apidata name="BadRequestException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.BadRequestException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.RequestException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.IdentityModel.BadRequestException.#ctor">
          <element api="M:System.IdentityModel.BadRequestException.#ctor" />
          <element api="M:System.IdentityModel.BadRequestException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.BadRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.BadRequestException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.BadRequestException">
      <topicdata name="BadRequestException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.BadRequestException" />
      <apidata name="BadRequestException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.BadRequestException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.BadRequestException" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.BadRequestException">
      <topicdata name="BadRequestException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.BadRequestException" />
      <apidata name="BadRequestException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.BadRequestException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.BadRequestException" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.BadRequestException">
      <topicdata name="BadRequestException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.BadRequestException" />
      <apidata name="BadRequestException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.BadRequestException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.BadRequestException" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.BadRequestException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.BadRequestException.#ctor" />
        <element api="M:System.IdentityModel.BadRequestException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.BadRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.BadRequestException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.BadRequestException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.BadRequestException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.BadRequestException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.BadRequestException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.BadRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.BadRequestException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.BadRequestException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.BadRequestException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.BadRequestException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.BadRequestException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.BadRequestException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.BadRequestException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.BadRequestException" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.CookieTransform">
      <topicdata group="api" />
      <apidata name="CookieTransform" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.DeflateCookieTransform" ref="true" />
          <type api="T:System.IdentityModel.ProtectedDataCookieTransform" ref="true" />
          <type api="T:System.IdentityModel.RsaEncryptionCookieTransform" ref="true" />
          <type api="T:System.IdentityModel.RsaSignatureCookieTransform" ref="true" />
          <type api="T:System.IdentityModel.Services.MachineKeyTransform" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.IdentityModel.CookieTransform.#ctor" />
        <element api="M:System.IdentityModel.CookieTransform.Decode(System.Byte[])" />
        <element api="M:System.IdentityModel.CookieTransform.Encode(System.Byte[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.CookieTransform">
      <topicdata name="CookieTransform" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.CookieTransform" />
      <apidata name="CookieTransform" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.CookieTransform.Decode(System.Byte[])" />
        <element api="M:System.IdentityModel.CookieTransform.Encode(System.Byte[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.CookieTransform" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.CookieTransform.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.CookieTransform" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.CookieTransform.Decode(System.Byte[])">
      <topicdata group="api" />
      <apidata name="Decode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="encoded">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.CookieTransform" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.CookieTransform.Encode(System.Byte[])">
      <topicdata group="api" />
      <apidata name="Encode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.CookieTransform" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.DeflateCookieTransform">
      <topicdata group="api" />
      <apidata name="DeflateCookieTransform" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.IdentityModel.DeflateCookieTransform.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.CookieTransform" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.DeflateCookieTransform.#ctor" />
        <element api="M:System.IdentityModel.DeflateCookieTransform.Decode(System.Byte[])" />
        <element api="M:System.IdentityModel.DeflateCookieTransform.Encode(System.Byte[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.DeflateCookieTransform.MaxDecompressedSize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.DeflateCookieTransform">
      <topicdata name="DeflateCookieTransform" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.DeflateCookieTransform" />
      <apidata name="DeflateCookieTransform" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.IdentityModel.DeflateCookieTransform.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.DeflateCookieTransform.Decode(System.Byte[])" />
        <element api="M:System.IdentityModel.DeflateCookieTransform.Encode(System.Byte[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DeflateCookieTransform" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.DeflateCookieTransform">
      <topicdata name="DeflateCookieTransform" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.DeflateCookieTransform" />
      <apidata name="DeflateCookieTransform" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.IdentityModel.DeflateCookieTransform.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.DeflateCookieTransform.MaxDecompressedSize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DeflateCookieTransform" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DeflateCookieTransform.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DeflateCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DeflateCookieTransform.Decode(System.Byte[])">
      <topicdata group="api" />
      <apidata name="Decode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.CookieTransform.Decode(System.Byte[])">
          <type api="T:System.IdentityModel.CookieTransform" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="encoded">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DeflateCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DeflateCookieTransform.Encode(System.Byte[])">
      <topicdata group="api" />
      <apidata name="Encode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.CookieTransform.Encode(System.Byte[])">
          <type api="T:System.IdentityModel.CookieTransform" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DeflateCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DeflateCookieTransform.MaxDecompressedSize">
      <topicdata group="api" />
      <apidata name="MaxDecompressedSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxDecompressedSize" />
      <setter name="set_MaxDecompressedSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DeflateCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.DelegatingXmlDictionaryReader">
      <topicdata group="api" />
      <apidata name="DelegatingXmlDictionaryReader" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
          <type api="T:System.Xml.XmlReader" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.EnvelopedSignatureReader" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.#ctor" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.Close" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.Int32)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.String)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.InitializeInnerReader(System.Xml.XmlDictionaryReader)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.LookupNamespace(System.String)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.Int32)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.String)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.String,System.String)" />
        </element>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToElement" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToFirstAttribute" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToNextAttribute" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.Read" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadAttributeValue" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBase64">
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsBase64" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBinHex">
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsUniqueId" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ResolveEntity" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.XmlDictionaryReader.EndCanonicalization" />
        <element api="M:System.Xml.XmlDictionaryReader.GetNonAtomizedNames(System.String@,System.String@)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.IndexOfLocalName">
          <element api="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.IsLocalName">
          <element api="M:System.Xml.XmlDictionaryReader.IsLocalName(System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.IsNamespaceUri">
          <element api="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.IsStartElement">
          <element api="M:System.Xml.XmlReader.IsStartElement" />
          <element api="M:System.Xml.XmlReader.IsStartElement(System.String)" />
          <element api="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.IsTextNode(System.Xml.XmlNodeType)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToStartElement">
          <element api="M:System.Xml.XmlDictionaryReader.MoveToStartElement" />
          <element api="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadBooleanArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsDecimal" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsFloat" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsGuid" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsString">
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsString" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadDateTimeArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadDecimalArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadDoubleArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsBase64">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBase64" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsBinHex">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsBoolean">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsDateTime">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDateTime" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsDecimal">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsDouble">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDouble" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsFloat">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsFloat" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsGuid" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsInt">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsInt" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsLong">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsLong" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsString">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsString" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadFullStartElement">
          <element api="M:System.Xml.XmlDictionaryReader.ReadFullStartElement" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadGuidArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadInt16Array">
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadInt32Array">
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadInt64Array">
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadSingleArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadStartElement">
          <element api="M:System.Xml.XmlReader.ReadStartElement" />
          <element api="M:System.Xml.XmlReader.ReadStartElement(System.String)" />
          <element api="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadString">
          <element api="M:System.Xml.XmlDictionaryReader.ReadString" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadString(System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadTimeSpanArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" />
        <element api="M:System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)" />
        <element api="M:System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)" />
        <element api="M:System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)" />
        <element api="M:System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)" />
        <element api="M:System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.Dispose">
          <element api="M:System.Xml.XmlReader.Dispose" />
          <element api="M:System.Xml.XmlReader.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Xml.XmlReader.GetValueAsync" />
        <element api="M:System.Xml.XmlReader.MoveToContent" />
        <element api="M:System.Xml.XmlReader.MoveToContentAsync" />
        <element api="M:System.Xml.XmlReader.ReadAsync" />
        <element api="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)" />
        <element api="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlReader.ReadContentAsBoolean" />
        <element api="M:System.Xml.XmlReader.ReadContentAsDateTime" />
        <element api="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset" />
        <element api="M:System.Xml.XmlReader.ReadContentAsDouble" />
        <element api="M:System.Xml.XmlReader.ReadContentAsInt" />
        <element api="M:System.Xml.XmlReader.ReadContentAsLong" />
        <element api="M:System.Xml.XmlReader.ReadContentAsObject" />
        <element api="M:System.Xml.XmlReader.ReadContentAsObjectAsync" />
        <element api="M:System.Xml.XmlReader.ReadContentAsStringAsync" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAs">
          <element api="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)" />
        <element api="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsObject">
          <element api="M:System.Xml.XmlReader.ReadElementContentAsObject" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync" />
        <element api="M:System.Xml.XmlReader.ReadElementContentAsStringAsync" />
        <element api="M:System.Xml.XmlReader.ReadEndElement" />
        <element api="M:System.Xml.XmlReader.ReadInnerXml" />
        <element api="M:System.Xml.XmlReader.ReadInnerXmlAsync" />
        <element api="M:System.Xml.XmlReader.ReadOuterXml" />
        <element api="M:System.Xml.XmlReader.ReadOuterXmlAsync" />
        <element api="M:System.Xml.XmlReader.ReadSubtree" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadToDescendant">
          <element api="M:System.Xml.XmlReader.ReadToDescendant(System.String)" />
          <element api="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadToFollowing">
          <element api="M:System.Xml.XmlReader.ReadToFollowing(System.String)" />
          <element api="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadToNextSibling">
          <element api="M:System.Xml.XmlReader.ReadToNextSibling(System.String)" />
          <element api="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlReader.Skip" />
        <element api="M:System.Xml.XmlReader.SkipAsync" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.AttributeCount" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.BaseURI" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Depth" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.EOF" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.HasValue" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.InnerReader" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.IsDefault" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.IsEmptyElement" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.Item">
          <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.Int32)" />
          <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.String)" />
          <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.String,System.String)" />
        </element>
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.LocalName" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Name" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.NamespaceURI" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.NameTable" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.NodeType" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Prefix" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.QuoteChar" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.ReadState" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Value" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.ValueType" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.XmlLang" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.XmlSpace" />
        <element api="P:System.Xml.XmlDictionaryReader.CanCanonicalize" />
        <element api="P:System.Xml.XmlDictionaryReader.Quotas" />
        <element api="P:System.Xml.XmlReader.CanReadBinaryContent" />
        <element api="P:System.Xml.XmlReader.CanReadValueChunk" />
        <element api="P:System.Xml.XmlReader.CanResolveEntity" />
        <element api="P:System.Xml.XmlReader.HasAttributes" />
        <element api="P:System.Xml.XmlReader.SchemaInfo" />
        <element api="P:System.Xml.XmlReader.Settings" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.DelegatingXmlDictionaryReader">
      <topicdata name="DelegatingXmlDictionaryReader" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.DelegatingXmlDictionaryReader" />
      <apidata name="DelegatingXmlDictionaryReader" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.Close" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.Int32)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.String)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.InitializeInnerReader(System.Xml.XmlDictionaryReader)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.LookupNamespace(System.String)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.Int32)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.String)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.String,System.String)" />
        </element>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToElement" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToFirstAttribute" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToNextAttribute" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.Read" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadAttributeValue" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBase64">
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsBase64" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBinHex">
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsUniqueId" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ResolveEntity" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.XmlDictionaryReader.EndCanonicalization" />
        <element api="M:System.Xml.XmlDictionaryReader.GetNonAtomizedNames(System.String@,System.String@)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.IndexOfLocalName">
          <element api="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.IsLocalName">
          <element api="M:System.Xml.XmlDictionaryReader.IsLocalName(System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.IsNamespaceUri">
          <element api="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.IsStartElement">
          <element api="M:System.Xml.XmlReader.IsStartElement" />
          <element api="M:System.Xml.XmlReader.IsStartElement(System.String)" />
          <element api="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.IsTextNode(System.Xml.XmlNodeType)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToStartElement">
          <element api="M:System.Xml.XmlDictionaryReader.MoveToStartElement" />
          <element api="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadBooleanArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsDecimal" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsFloat" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsGuid" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsString">
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsString" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadDateTimeArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadDecimalArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadDoubleArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsBase64">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBase64" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsBinHex">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsBoolean">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsDateTime">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDateTime" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsDecimal">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsDouble">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDouble" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsFloat">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsFloat" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsGuid" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsInt">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsInt" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsLong">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsLong" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsString">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsString" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadFullStartElement">
          <element api="M:System.Xml.XmlDictionaryReader.ReadFullStartElement" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadGuidArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadInt16Array">
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadInt32Array">
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadInt64Array">
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadSingleArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadStartElement">
          <element api="M:System.Xml.XmlReader.ReadStartElement" />
          <element api="M:System.Xml.XmlReader.ReadStartElement(System.String)" />
          <element api="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadString">
          <element api="M:System.Xml.XmlDictionaryReader.ReadString" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadString(System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadTimeSpanArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" />
        <element api="M:System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)" />
        <element api="M:System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)" />
        <element api="M:System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)" />
        <element api="M:System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)" />
        <element api="M:System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.Dispose">
          <element api="M:System.Xml.XmlReader.Dispose" />
          <element api="M:System.Xml.XmlReader.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Xml.XmlReader.GetValueAsync" />
        <element api="M:System.Xml.XmlReader.MoveToContent" />
        <element api="M:System.Xml.XmlReader.MoveToContentAsync" />
        <element api="M:System.Xml.XmlReader.ReadAsync" />
        <element api="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)" />
        <element api="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlReader.ReadContentAsBoolean" />
        <element api="M:System.Xml.XmlReader.ReadContentAsDateTime" />
        <element api="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset" />
        <element api="M:System.Xml.XmlReader.ReadContentAsDouble" />
        <element api="M:System.Xml.XmlReader.ReadContentAsInt" />
        <element api="M:System.Xml.XmlReader.ReadContentAsLong" />
        <element api="M:System.Xml.XmlReader.ReadContentAsObject" />
        <element api="M:System.Xml.XmlReader.ReadContentAsObjectAsync" />
        <element api="M:System.Xml.XmlReader.ReadContentAsStringAsync" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAs">
          <element api="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)" />
        <element api="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadElementContentAsObject">
          <element api="M:System.Xml.XmlReader.ReadElementContentAsObject" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync" />
        <element api="M:System.Xml.XmlReader.ReadElementContentAsStringAsync" />
        <element api="M:System.Xml.XmlReader.ReadEndElement" />
        <element api="M:System.Xml.XmlReader.ReadInnerXml" />
        <element api="M:System.Xml.XmlReader.ReadInnerXmlAsync" />
        <element api="M:System.Xml.XmlReader.ReadOuterXml" />
        <element api="M:System.Xml.XmlReader.ReadOuterXmlAsync" />
        <element api="M:System.Xml.XmlReader.ReadSubtree" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadToDescendant">
          <element api="M:System.Xml.XmlReader.ReadToDescendant(System.String)" />
          <element api="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadToFollowing">
          <element api="M:System.Xml.XmlReader.ReadToFollowing(System.String)" />
          <element api="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadToNextSibling">
          <element api="M:System.Xml.XmlReader.ReadToNextSibling(System.String)" />
          <element api="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlReader.Skip" />
        <element api="M:System.Xml.XmlReader.SkipAsync" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.DelegatingXmlDictionaryReader">
      <topicdata name="DelegatingXmlDictionaryReader" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.DelegatingXmlDictionaryReader" />
      <apidata name="DelegatingXmlDictionaryReader" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.AttributeCount" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.BaseURI" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Depth" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.EOF" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.HasValue" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.InnerReader" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.IsDefault" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.IsEmptyElement" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.Item">
          <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.Int32)" />
          <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.String)" />
          <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.String,System.String)" />
        </element>
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.LocalName" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Name" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.NamespaceURI" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.NameTable" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.NodeType" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Prefix" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.QuoteChar" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.ReadState" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Value" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.ValueType" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.XmlLang" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.XmlSpace" />
        <element api="P:System.Xml.XmlDictionaryReader.CanCanonicalize" />
        <element api="P:System.Xml.XmlDictionaryReader.Quotas" />
        <element api="P:System.Xml.XmlReader.CanReadBinaryContent" />
        <element api="P:System.Xml.XmlReader.CanReadValueChunk" />
        <element api="P:System.Xml.XmlReader.CanResolveEntity" />
        <element api="P:System.Xml.XmlReader.HasAttributes" />
        <element api="P:System.Xml.XmlReader.SchemaInfo" />
        <element api="P:System.Xml.XmlReader.Settings" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute">
      <topicdata name="GetAttribute" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetAttribute" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.Int32)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.String,System.String)" />
        <element api="M:System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.Int32)" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.String)" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute">
      <topicdata name="MoveToAttribute" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="MoveToAttribute" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.Int32)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBase64">
      <topicdata name="ReadContentAsBase64" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReadContentAsBase64" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsBase64" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBinHex">
      <topicdata name="ReadContentAsBinHex" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReadContentAsBinHex" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryReader.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.AttributeCount">
      <topicdata group="api" />
      <apidata name="AttributeCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.AttributeCount">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_AttributeCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.BaseURI">
      <topicdata group="api" />
      <apidata name="BaseURI" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.BaseURI">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_BaseURI" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryReader.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlReader.Close">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.Depth">
      <topicdata group="api" />
      <apidata name="Depth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.Depth">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Depth" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.EOF">
      <topicdata group="api" />
      <apidata name="EOF" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.EOF">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_EOF" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.String)">
      <topicdata group="api" />
      <apidata name="GetAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlReader.GetAttribute(System.String)">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="GetAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="namespaceURI">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.HasValue">
      <topicdata group="api" />
      <apidata name="HasValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.HasValue">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HasValue" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryReader.InitializeInnerReader(System.Xml.XmlDictionaryReader)">
      <topicdata group="api" />
      <apidata name="InitializeInnerReader" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="innerReader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.InnerReader">
      <topicdata group="api" />
      <apidata name="InnerReader" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InnerReader" />
      <returns>
        <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.IsDefault">
      <topicdata group="api" />
      <apidata name="IsDefault" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.IsDefault">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsDefault" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.IsEmptyElement">
      <topicdata group="api" />
      <apidata name="IsEmptyElement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.IsEmptyElement">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsEmptyElement" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.Item" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.Item(System.Int32)">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.Item" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.Item(System.String)">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.Item" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.Item(System.String,System.String)">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="namespaceURI">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.LocalName">
      <topicdata group="api" />
      <apidata name="LocalName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.LocalName">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_LocalName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryReader.LookupNamespace(System.String)">
      <topicdata group="api" />
      <apidata name="LookupNamespace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlReader.LookupNamespace(System.String)">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.Int32)">
      <topicdata group="api" />
      <apidata name="MoveToAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.String)">
      <topicdata group="api" />
      <apidata name="MoveToAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="MoveToAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToElement">
      <topicdata group="api" />
      <apidata name="MoveToElement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlReader.MoveToElement">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToFirstAttribute">
      <topicdata group="api" />
      <apidata name="MoveToFirstAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlReader.MoveToFirstAttribute">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToNextAttribute">
      <topicdata group="api" />
      <apidata name="MoveToNextAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlReader.MoveToNextAttribute">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.Name">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.NamespaceURI">
      <topicdata group="api" />
      <apidata name="NamespaceURI" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.NamespaceURI">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NamespaceURI" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.NameTable">
      <topicdata group="api" />
      <apidata name="NameTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.NameTable">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NameTable" />
      <returns>
        <type api="T:System.Xml.XmlNameTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.NodeType">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Xml.XmlNodeType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.Prefix">
      <topicdata group="api" />
      <apidata name="Prefix" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.Prefix">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Prefix" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.QuoteChar">
      <topicdata group="api" />
      <apidata name="QuoteChar" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.QuoteChar">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_QuoteChar" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryReader.Read">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlReader.Read">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadAttributeValue">
      <topicdata group="api" />
      <apidata name="ReadAttributeValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlReader.ReadAttributeValue">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="ReadContentAsBase64" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBase64" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="ReadContentAsBinHex" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBinHex" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsUniqueId">
      <topicdata group="api" />
      <apidata name="ReadContentAsUniqueId" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlDictionaryReader.ReadContentAsUniqueId">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Xml.UniqueId" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.ReadState">
      <topicdata group="api" />
      <apidata name="ReadState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.ReadState">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ReadState" />
      <returns>
        <type api="T:System.Xml.ReadState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="ReadValueChunk" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryReader.ResolveEntity">
      <topicdata group="api" />
      <apidata name="ResolveEntity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlReader.ResolveEntity">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.Value">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.ValueType">
      <topicdata group="api" />
      <apidata name="ValueType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.ValueType">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValueType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.XmlLang">
      <topicdata group="api" />
      <apidata name="XmlLang" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.XmlLang">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_XmlLang" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryReader.XmlSpace">
      <topicdata group="api" />
      <apidata name="XmlSpace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlReader.XmlSpace">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_XmlSpace" />
      <returns>
        <type api="T:System.Xml.XmlSpace" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.DelegatingXmlDictionaryWriter">
      <topicdata group="api" />
      <apidata name="DelegatingXmlDictionaryWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
          <type api="T:System.Xml.XmlWriter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.EnvelopedSignatureWriter" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.#ctor" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.Close" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.EndCanonicalization" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.Flush" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter(System.Xml.XmlDictionaryWriter)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter(System.Xml.XmlWriter)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.LookupPrefix(System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteCData(System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteCharEntity(System.Char)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteComment(System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndAttribute" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndDocument" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndElement" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEntityRef(System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteFullEndElement" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteProcessingInstruction(System.String,System.String)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.String)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartAttribute">
          <element api="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartAttribute(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument(System.Boolean)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartElement">
          <element api="M:System.Xml.XmlWriter.WriteStartElement(System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartElement(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteString">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteString(System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteString(System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteWhitespace(System.String)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlAttribute">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlnsAttribute">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteArray">
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Boolean[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.DateTime[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Decimal[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Double[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Guid[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int16[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int32[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int64[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Single[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteAttributeString">
          <element api="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteElementString">
          <element api="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteNode">
          <element api="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlDictionaryReader,System.Boolean)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlReader,System.Boolean)" />
          <element api="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteQualifiedName">
          <element api="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteQualifiedName(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryWriter.WriteTextNode(System.Xml.XmlDictionaryReader,System.Boolean)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteValue">
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Boolean)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.DateTime)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Decimal)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Double)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Guid)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Int32)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Int64)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.IStreamProvider)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Object)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Single)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteValue(System.TimeSpan)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.UniqueId)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryWriter.WriteValueAsync(System.Xml.IStreamProvider)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.Dispose">
          <element api="M:System.Xml.XmlWriter.Dispose" />
          <element api="M:System.Xml.XmlWriter.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Xml.XmlWriter.FlushAsync" />
        <element api="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)" />
        <element api="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteEndAttributeAsync" />
        <element api="M:System.Xml.XmlWriter.WriteEndDocumentAsync" />
        <element api="M:System.Xml.XmlWriter.WriteEndElementAsync" />
        <element api="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteFullEndElementAsync" />
        <element api="M:System.Xml.XmlWriter.WriteName(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteNameAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteNmToken(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteNodeAsync">
          <element api="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)" />
          <element api="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)" />
        </element>
        <element api="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRawAsync">
          <element api="M:System.Xml.XmlWriter.WriteRawAsync(System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocumentAsync">
          <element api="M:System.Xml.XmlWriter.WriteStartDocumentAsync" />
          <element api="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)" />
        </element>
        <element api="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteStringAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)" />
        <element api="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryWriter.CanCanonicalize" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteState" />
        <element api="P:System.Xml.XmlWriter.Settings" />
        <element api="P:System.Xml.XmlWriter.XmlLang" />
        <element api="P:System.Xml.XmlWriter.XmlSpace" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.DelegatingXmlDictionaryWriter">
      <topicdata name="DelegatingXmlDictionaryWriter" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.DelegatingXmlDictionaryWriter" />
      <apidata name="DelegatingXmlDictionaryWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.Close" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.EndCanonicalization" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.Flush" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter(System.Xml.XmlDictionaryWriter)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter(System.Xml.XmlWriter)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.LookupPrefix(System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteCData(System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteCharEntity(System.Char)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteComment(System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndAttribute" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndDocument" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndElement" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEntityRef(System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteFullEndElement" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteProcessingInstruction(System.String,System.String)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.String)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartAttribute">
          <element api="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartAttribute(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument(System.Boolean)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartElement">
          <element api="M:System.Xml.XmlWriter.WriteStartElement(System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartElement(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteString">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteString(System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteString(System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteWhitespace(System.String)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlAttribute">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlnsAttribute">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteArray">
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Boolean[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.DateTime[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Decimal[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Double[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Guid[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int16[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int32[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int64[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Single[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteAttributeString">
          <element api="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteElementString">
          <element api="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteNode">
          <element api="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlDictionaryReader,System.Boolean)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlReader,System.Boolean)" />
          <element api="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)" />
        </element>
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteQualifiedName">
          <element api="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteQualifiedName(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryWriter.WriteTextNode(System.Xml.XmlDictionaryReader,System.Boolean)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteValue">
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Boolean)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.DateTime)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Decimal)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Double)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Guid)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Int32)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Int64)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.IStreamProvider)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Object)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Single)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteValue(System.TimeSpan)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.UniqueId)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryWriter.WriteValueAsync(System.Xml.IStreamProvider)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.Dispose">
          <element api="M:System.Xml.XmlWriter.Dispose" />
          <element api="M:System.Xml.XmlWriter.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Xml.XmlWriter.FlushAsync" />
        <element api="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)" />
        <element api="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteEndAttributeAsync" />
        <element api="M:System.Xml.XmlWriter.WriteEndDocumentAsync" />
        <element api="M:System.Xml.XmlWriter.WriteEndElementAsync" />
        <element api="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteFullEndElementAsync" />
        <element api="M:System.Xml.XmlWriter.WriteName(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteNameAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteNmToken(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteNodeAsync">
          <element api="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)" />
          <element api="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)" />
        </element>
        <element api="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRawAsync">
          <element api="M:System.Xml.XmlWriter.WriteRawAsync(System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)" />
        <element api="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocumentAsync">
          <element api="M:System.Xml.XmlWriter.WriteStartDocumentAsync" />
          <element api="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)" />
        </element>
        <element api="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteStringAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)" />
        <element api="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.DelegatingXmlDictionaryWriter">
      <topicdata name="DelegatingXmlDictionaryWriter" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.DelegatingXmlDictionaryWriter" />
      <apidata name="DelegatingXmlDictionaryWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryWriter.CanCanonicalize" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteState" />
        <element api="P:System.Xml.XmlWriter.Settings" />
        <element api="P:System.Xml.XmlWriter.XmlLang" />
        <element api="P:System.Xml.XmlWriter.XmlSpace" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw">
      <topicdata name="WriteRaw" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteRaw" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartAttribute">
      <topicdata name="WriteStartAttribute" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteStartAttribute" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />
        <element api="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartAttribute(System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument">
      <topicdata name="WriteStartDocument" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteStartDocument" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartElement">
      <topicdata name="WriteStartElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteStartElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.XmlWriter.WriteStartElement(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)" />
        <element api="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartElement(System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteString">
      <topicdata name="WriteString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteString(System.String)" />
        <element api="M:System.Xml.XmlDictionaryWriter.WriteString(System.Xml.XmlDictionaryString)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlAttribute">
      <topicdata name="WriteXmlAttribute" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteXmlAttribute" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)" />
        <element api="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlnsAttribute">
      <topicdata name="WriteXmlnsAttribute" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteXmlnsAttribute" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)" />
        <element api="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.Xml.XmlDictionaryString)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryWriter.CanCanonicalize">
      <topicdata group="api" />
      <apidata name="CanCanonicalize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlDictionaryWriter.CanCanonicalize">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanCanonicalize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.Close">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.EndCanonicalization">
      <topicdata group="api" />
      <apidata name="EndCanonicalization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlDictionaryWriter.EndCanonicalization">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.Flush">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.Flush">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter(System.Xml.XmlDictionaryWriter)">
      <topicdata group="api" />
      <apidata name="InitializeInnerWriter" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="innerWriter">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="InitializeTracingWriter" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tracingWriter">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter">
      <topicdata group="api" />
      <apidata name="InnerWriter" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InnerWriter" />
      <returns>
        <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.LookupPrefix(System.String)">
      <topicdata group="api" />
      <apidata name="LookupPrefix" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <topicdata group="api" />
      <apidata name="StartCanonicalization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="includeComments">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="inclusivePrefixes">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="WriteBase64" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteCData(System.String)">
      <topicdata group="api" />
      <apidata name="WriteCData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteCharEntity(System.Char)">
      <topicdata group="api" />
      <apidata name="WriteCharEntity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ch">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="WriteChars" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteComment(System.String)">
      <topicdata group="api" />
      <apidata name="WriteComment" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteDocType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pubid">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sysid">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="subset">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndAttribute">
      <topicdata group="api" />
      <apidata name="WriteEndAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteEndAttribute">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndDocument">
      <topicdata group="api" />
      <apidata name="WriteEndDocument" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteEndDocument">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndElement">
      <topicdata group="api" />
      <apidata name="WriteEndElement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteEndElement">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEntityRef(System.String)">
      <topicdata group="api" />
      <apidata name="WriteEntityRef" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteFullEndElement">
      <topicdata group="api" />
      <apidata name="WriteFullEndElement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteFullEndElement">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteProcessingInstruction(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteProcessingInstruction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="WriteRaw" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.String)">
      <topicdata group="api" />
      <apidata name="WriteRaw" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteStartAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartAttribute" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument">
      <topicdata group="api" />
      <apidata name="WriteStartDocument" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteStartDocument">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument(System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteStartDocument" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="standalone">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartElement(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteStartElement" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartElement" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteState">
      <topicdata group="api" />
      <apidata name="WriteState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlWriter.WriteState">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_WriteState" />
      <returns>
        <type api="T:System.Xml.WriteState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteString(System.String)">
      <topicdata group="api" />
      <apidata name="WriteString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteString" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteString(System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <topicdata group="api" />
      <apidata name="WriteSurrogateCharEntity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="lowChar">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="highChar">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteWhitespace(System.String)">
      <topicdata group="api" />
      <apidata name="WriteWhitespace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ws">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteXmlAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlAttribute" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteXmlnsAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlnsAttribute" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="namespaceUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.EnvelopedSignatureReader">
      <topicdata group="api" />
      <apidata name="EnvelopedSignatureReader" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
          <type api="T:System.Xml.XmlReader" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.Close" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.GetAttribute">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.Int32)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.String)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.LookupNamespace(System.String)" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.MoveToAttribute">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.Int32)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.String)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.String,System.String)" />
        </element>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToElement" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToFirstAttribute" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToNextAttribute" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadAttributeValue" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadContentAsBase64">
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsBase64" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadContentAsBinHex">
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsUniqueId" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ResolveEntity" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.#ctor">
          <element api="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
          <element api="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
          <element api="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.IdentityModel.EnvelopedSignatureReader.Read" />
        <element api="M:System.IdentityModel.EnvelopedSignatureReader.TryReadSignature" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.XmlDictionaryReader.EndCanonicalization" />
        <element api="M:System.Xml.XmlDictionaryReader.GetNonAtomizedNames(System.String@,System.String@)" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.IndexOfLocalName">
          <element api="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.IsLocalName">
          <element api="M:System.Xml.XmlDictionaryReader.IsLocalName(System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.IsNamespaceUri">
          <element api="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.IsStartElement">
          <element api="M:System.Xml.XmlReader.IsStartElement" />
          <element api="M:System.Xml.XmlReader.IsStartElement(System.String)" />
          <element api="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.MoveToStartElement">
          <element api="M:System.Xml.XmlDictionaryReader.MoveToStartElement" />
          <element api="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadBooleanArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsDecimal" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsFloat" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsGuid" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadContentAsString">
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsString" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadDateTimeArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadDecimalArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadDoubleArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsBase64">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBase64" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsBinHex">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsBoolean">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsDateTime">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDateTime" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsDecimal">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsDouble">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDouble" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsFloat">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsFloat" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsGuid" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsInt">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsInt" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsLong">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsLong" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsString">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsString" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadFullStartElement">
          <element api="M:System.Xml.XmlDictionaryReader.ReadFullStartElement" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadGuidArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadInt16Array">
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadInt32Array">
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadInt64Array">
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadSingleArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadStartElement">
          <element api="M:System.Xml.XmlReader.ReadStartElement" />
          <element api="M:System.Xml.XmlReader.ReadStartElement(System.String)" />
          <element api="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadString" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadTimeSpanArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" />
        <element api="M:System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)" />
        <element api="M:System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)" />
        <element api="M:System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)" />
        <element api="M:System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)" />
        <element api="M:System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)" />
        <element api="M:System.Xml.XmlReader.Dispose" />
        <element api="M:System.Xml.XmlReader.GetValueAsync" />
        <element api="M:System.Xml.XmlReader.MoveToContent" />
        <element api="M:System.Xml.XmlReader.MoveToContentAsync" />
        <element api="M:System.Xml.XmlReader.ReadAsync" />
        <element api="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)" />
        <element api="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlReader.ReadContentAsBoolean" />
        <element api="M:System.Xml.XmlReader.ReadContentAsDateTime" />
        <element api="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset" />
        <element api="M:System.Xml.XmlReader.ReadContentAsDouble" />
        <element api="M:System.Xml.XmlReader.ReadContentAsInt" />
        <element api="M:System.Xml.XmlReader.ReadContentAsLong" />
        <element api="M:System.Xml.XmlReader.ReadContentAsObject" />
        <element api="M:System.Xml.XmlReader.ReadContentAsObjectAsync" />
        <element api="M:System.Xml.XmlReader.ReadContentAsStringAsync" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAs">
          <element api="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)" />
        <element api="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsObject">
          <element api="M:System.Xml.XmlReader.ReadElementContentAsObject" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync" />
        <element api="M:System.Xml.XmlReader.ReadElementContentAsStringAsync" />
        <element api="M:System.Xml.XmlReader.ReadEndElement" />
        <element api="M:System.Xml.XmlReader.ReadInnerXml" />
        <element api="M:System.Xml.XmlReader.ReadInnerXmlAsync" />
        <element api="M:System.Xml.XmlReader.ReadOuterXml" />
        <element api="M:System.Xml.XmlReader.ReadOuterXmlAsync" />
        <element api="M:System.Xml.XmlReader.ReadSubtree" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadToDescendant">
          <element api="M:System.Xml.XmlReader.ReadToDescendant(System.String)" />
          <element api="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadToFollowing">
          <element api="M:System.Xml.XmlReader.ReadToFollowing(System.String)" />
          <element api="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadToNextSibling">
          <element api="M:System.Xml.XmlReader.ReadToNextSibling(System.String)" />
          <element api="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlReader.Skip" />
        <element api="M:System.Xml.XmlReader.SkipAsync" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.AttributeCount" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.BaseURI" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Depth" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.EOF" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.HasValue" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.IsDefault" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.IsEmptyElement" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.Item">
          <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.Int32)" />
          <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.String)" />
          <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.String,System.String)" />
        </element>
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.LocalName" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Name" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.NamespaceURI" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.NameTable" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.NodeType" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Prefix" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.QuoteChar" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.ReadState" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Value" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.ValueType" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.XmlLang" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.XmlSpace" />
        <element api="P:System.IdentityModel.EnvelopedSignatureReader.SigningCredentials" />
        <element api="P:System.Xml.XmlDictionaryReader.CanCanonicalize" />
        <element api="P:System.Xml.XmlDictionaryReader.Quotas" />
        <element api="P:System.Xml.XmlReader.CanReadBinaryContent" />
        <element api="P:System.Xml.XmlReader.CanReadValueChunk" />
        <element api="P:System.Xml.XmlReader.CanResolveEntity" />
        <element api="P:System.Xml.XmlReader.HasAttributes" />
        <element api="P:System.Xml.XmlReader.SchemaInfo" />
        <element api="P:System.Xml.XmlReader.Settings" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.EnvelopedSignatureReader">
      <topicdata name="EnvelopedSignatureReader" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.EnvelopedSignatureReader" />
      <apidata name="EnvelopedSignatureReader" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.Close" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.GetAttribute">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.Int32)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.String)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.LookupNamespace(System.String)" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.MoveToAttribute">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.Int32)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.String)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.String,System.String)" />
        </element>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToElement" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToFirstAttribute" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.MoveToNextAttribute" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadAttributeValue" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadContentAsBase64">
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsBase64" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadContentAsBinHex">
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsUniqueId" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryReader.ResolveEntity" />
        <element api="M:System.IdentityModel.EnvelopedSignatureReader.Read" />
        <element api="M:System.IdentityModel.EnvelopedSignatureReader.TryReadSignature" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.XmlDictionaryReader.EndCanonicalization" />
        <element api="M:System.Xml.XmlDictionaryReader.GetNonAtomizedNames(System.String@,System.String@)" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.IndexOfLocalName">
          <element api="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.IsLocalName">
          <element api="M:System.Xml.XmlDictionaryReader.IsLocalName(System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.IsNamespaceUri">
          <element api="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.IsStartElement">
          <element api="M:System.Xml.XmlReader.IsStartElement" />
          <element api="M:System.Xml.XmlReader.IsStartElement(System.String)" />
          <element api="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.MoveToStartElement">
          <element api="M:System.Xml.XmlDictionaryReader.MoveToStartElement" />
          <element api="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadBooleanArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsDecimal" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsFloat" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsGuid" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadContentAsString">
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsString" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadDateTimeArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadDecimalArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadDoubleArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsBase64">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBase64" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsBinHex">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsBoolean">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsDateTime">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDateTime" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsDecimal">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsDouble">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDouble" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsFloat">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsFloat" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsGuid" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsInt">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsInt" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsLong">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsLong" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsString">
          <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsString" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan" />
        <element api="M:System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadFullStartElement">
          <element api="M:System.Xml.XmlDictionaryReader.ReadFullStartElement" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadGuidArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadInt16Array">
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadInt32Array">
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadInt64Array">
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadSingleArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadStartElement">
          <element api="M:System.Xml.XmlReader.ReadStartElement" />
          <element api="M:System.Xml.XmlReader.ReadStartElement(System.String)" />
          <element api="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadString" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadTimeSpanArray">
          <element api="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" />
        <element api="M:System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)" />
        <element api="M:System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)" />
        <element api="M:System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)" />
        <element api="M:System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)" />
        <element api="M:System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)" />
        <element api="M:System.Xml.XmlReader.Dispose" />
        <element api="M:System.Xml.XmlReader.GetValueAsync" />
        <element api="M:System.Xml.XmlReader.MoveToContent" />
        <element api="M:System.Xml.XmlReader.MoveToContentAsync" />
        <element api="M:System.Xml.XmlReader.ReadAsync" />
        <element api="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)" />
        <element api="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlReader.ReadContentAsBoolean" />
        <element api="M:System.Xml.XmlReader.ReadContentAsDateTime" />
        <element api="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset" />
        <element api="M:System.Xml.XmlReader.ReadContentAsDouble" />
        <element api="M:System.Xml.XmlReader.ReadContentAsInt" />
        <element api="M:System.Xml.XmlReader.ReadContentAsLong" />
        <element api="M:System.Xml.XmlReader.ReadContentAsObject" />
        <element api="M:System.Xml.XmlReader.ReadContentAsObjectAsync" />
        <element api="M:System.Xml.XmlReader.ReadContentAsStringAsync" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAs">
          <element api="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)" />
        <element api="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadElementContentAsObject">
          <element api="M:System.Xml.XmlReader.ReadElementContentAsObject" />
          <element api="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync" />
        <element api="M:System.Xml.XmlReader.ReadElementContentAsStringAsync" />
        <element api="M:System.Xml.XmlReader.ReadEndElement" />
        <element api="M:System.Xml.XmlReader.ReadInnerXml" />
        <element api="M:System.Xml.XmlReader.ReadInnerXmlAsync" />
        <element api="M:System.Xml.XmlReader.ReadOuterXml" />
        <element api="M:System.Xml.XmlReader.ReadOuterXmlAsync" />
        <element api="M:System.Xml.XmlReader.ReadSubtree" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadToDescendant">
          <element api="M:System.Xml.XmlReader.ReadToDescendant(System.String)" />
          <element api="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadToFollowing">
          <element api="M:System.Xml.XmlReader.ReadToFollowing(System.String)" />
          <element api="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.ReadToNextSibling">
          <element api="M:System.Xml.XmlReader.ReadToNextSibling(System.String)" />
          <element api="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlReader.Skip" />
        <element api="M:System.Xml.XmlReader.SkipAsync" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.EnvelopedSignatureReader" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.EnvelopedSignatureReader">
      <topicdata name="EnvelopedSignatureReader" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.EnvelopedSignatureReader" />
      <apidata name="EnvelopedSignatureReader" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.AttributeCount" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.BaseURI" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Depth" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.EOF" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.HasValue" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.IsDefault" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.IsEmptyElement" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureReader.Item">
          <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.Int32)" />
          <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.String)" />
          <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.String,System.String)" />
        </element>
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.LocalName" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Name" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.NamespaceURI" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.NameTable" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.NodeType" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Prefix" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.QuoteChar" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.ReadState" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.Value" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.ValueType" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.XmlLang" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryReader.XmlSpace" />
        <element api="P:System.IdentityModel.EnvelopedSignatureReader.SigningCredentials" />
        <element api="P:System.Xml.XmlDictionaryReader.CanCanonicalize" />
        <element api="P:System.Xml.XmlDictionaryReader.Quotas" />
        <element api="P:System.Xml.XmlReader.CanReadBinaryContent" />
        <element api="P:System.Xml.XmlReader.CanReadValueChunk" />
        <element api="P:System.Xml.XmlReader.CanResolveEntity" />
        <element api="P:System.Xml.XmlReader.HasAttributes" />
        <element api="P:System.Xml.XmlReader.SchemaInfo" />
        <element api="P:System.Xml.XmlReader.Settings" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.EnvelopedSignatureReader" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.EnvelopedSignatureReader.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.EnvelopedSignatureReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.EnvelopedSignatureReader.#ctor" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="securityTokenSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.EnvelopedSignatureReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.EnvelopedSignatureReader.#ctor" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="securityTokenSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="signingTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.EnvelopedSignatureReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.EnvelopedSignatureReader.#ctor" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="securityTokenSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="signingTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
        <parameter name="requireSignature">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="automaticallyReadSignature">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="resolveIntrinsicSigningKeys">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.EnvelopedSignatureReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.EnvelopedSignatureReader.Read">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.DelegatingXmlDictionaryReader.Read">
          <type api="T:System.IdentityModel.DelegatingXmlDictionaryReader" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.EnvelopedSignatureReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.EnvelopedSignatureReader.SigningCredentials">
      <topicdata group="api" />
      <apidata name="SigningCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SigningCredentials" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.EnvelopedSignatureReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.EnvelopedSignatureReader.TryReadSignature">
      <topicdata group="api" />
      <apidata name="TryReadSignature" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.EnvelopedSignatureReader" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.EnvelopedSignatureWriter">
      <topicdata group="api" />
      <apidata name="EnvelopedSignatureWriter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
          <type api="T:System.Xml.XmlWriter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.Close" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.EndCanonicalization" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.Flush" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.LookupPrefix(System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteCData(System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteCharEntity(System.Char)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteComment(System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndAttribute" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndDocument" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEntityRef(System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteProcessingInstruction(System.String,System.String)" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteRaw">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.String)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteStartAttribute">
          <element api="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartAttribute(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteStartDocument">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument(System.Boolean)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteString">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteString(System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteString(System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteWhitespace(System.String)" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteXmlAttribute">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteXmlnsAttribute">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.IdentityModel.EnvelopedSignatureWriter.#ctor(System.Xml.XmlWriter,System.IdentityModel.Tokens.SigningCredentials,System.String,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.IdentityModel.EnvelopedSignatureWriter.WriteEndElement" />
        <element api="M:System.IdentityModel.EnvelopedSignatureWriter.WriteFullEndElement" />
        <element api="M:System.IdentityModel.EnvelopedSignatureWriter.WriteSignature" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteStartElement">
          <element api="M:System.Xml.XmlWriter.WriteStartElement(System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
          <element api="M:System.IdentityModel.EnvelopedSignatureWriter.WriteStartElement(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteArray">
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Boolean[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.DateTime[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Decimal[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Double[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Guid[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int16[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int32[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int64[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Single[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteAttributeString">
          <element api="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteElementString">
          <element api="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteNode">
          <element api="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlDictionaryReader,System.Boolean)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlReader,System.Boolean)" />
          <element api="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteQualifiedName">
          <element api="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteQualifiedName(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteValue">
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Boolean)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.DateTime)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Decimal)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Double)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Guid)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Int32)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Int64)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.IStreamProvider)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Object)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Single)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteValue(System.TimeSpan)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.UniqueId)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryWriter.WriteValueAsync(System.Xml.IStreamProvider)" />
        <element api="M:System.Xml.XmlWriter.Dispose" />
        <element api="M:System.Xml.XmlWriter.FlushAsync" />
        <element api="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)" />
        <element api="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteEndDocumentAsync" />
        <element api="M:System.Xml.XmlWriter.WriteEndElementAsync" />
        <element api="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteFullEndElementAsync" />
        <element api="M:System.Xml.XmlWriter.WriteName(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteNameAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteNmToken(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteNodeAsync">
          <element api="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)" />
          <element api="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)" />
        </element>
        <element api="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteRawAsync">
          <element api="M:System.Xml.XmlWriter.WriteRawAsync(System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteStartDocumentAsync">
          <element api="M:System.Xml.XmlWriter.WriteStartDocumentAsync" />
          <element api="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)" />
        </element>
        <element api="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteStringAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)" />
        <element api="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryWriter.CanCanonicalize" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteState" />
        <element api="P:System.Xml.XmlWriter.Settings" />
        <element api="P:System.Xml.XmlWriter.XmlLang" />
        <element api="P:System.Xml.XmlWriter.XmlSpace" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.EnvelopedSignatureWriter">
      <topicdata name="EnvelopedSignatureWriter" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.EnvelopedSignatureWriter" />
      <apidata name="EnvelopedSignatureWriter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.Close" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.EndCanonicalization" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.Flush" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.LookupPrefix(System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteCData(System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteCharEntity(System.Char)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteComment(System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndAttribute" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndDocument" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEntityRef(System.String)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteProcessingInstruction(System.String,System.String)" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteRaw">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.String)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteStartAttribute">
          <element api="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartAttribute(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteStartDocument">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument" />
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument(System.Boolean)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteString">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteString(System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteString(System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
        <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteWhitespace(System.String)" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteXmlAttribute">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteXmlnsAttribute">
          <element api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.IdentityModel.EnvelopedSignatureWriter.WriteEndElement" />
        <element api="M:System.IdentityModel.EnvelopedSignatureWriter.WriteFullEndElement" />
        <element api="M:System.IdentityModel.EnvelopedSignatureWriter.WriteSignature" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteStartElement">
          <element api="M:System.Xml.XmlWriter.WriteStartElement(System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
          <element api="M:System.IdentityModel.EnvelopedSignatureWriter.WriteStartElement(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteArray">
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Boolean[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.DateTime[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Decimal[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Double[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Guid[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int16[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int32[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int64[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Single[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteAttributeString">
          <element api="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteElementString">
          <element api="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteNode">
          <element api="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlDictionaryReader,System.Boolean)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlReader,System.Boolean)" />
          <element api="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteQualifiedName">
          <element api="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteQualifiedName(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteValue">
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Boolean)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.DateTime)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Decimal)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Double)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Guid)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Int32)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Int64)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.IStreamProvider)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Object)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Single)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.String)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteValue(System.TimeSpan)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.UniqueId)" />
          <element api="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.XmlDictionaryString)" />
        </element>
        <element api="M:System.Xml.XmlDictionaryWriter.WriteValueAsync(System.Xml.IStreamProvider)" />
        <element api="M:System.Xml.XmlWriter.Dispose" />
        <element api="M:System.Xml.XmlWriter.FlushAsync" />
        <element api="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)" />
        <element api="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteEndDocumentAsync" />
        <element api="M:System.Xml.XmlWriter.WriteEndElementAsync" />
        <element api="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteFullEndElementAsync" />
        <element api="M:System.Xml.XmlWriter.WriteName(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteNameAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteNmToken(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteNodeAsync">
          <element api="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)" />
          <element api="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)" />
        </element>
        <element api="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)" />
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteRawAsync">
          <element api="M:System.Xml.XmlWriter.WriteRawAsync(System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteStartDocumentAsync">
          <element api="M:System.Xml.XmlWriter.WriteStartDocumentAsync" />
          <element api="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)" />
        </element>
        <element api="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteStringAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)" />
        <element api="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.EnvelopedSignatureWriter" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.EnvelopedSignatureWriter">
      <topicdata name="EnvelopedSignatureWriter" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.EnvelopedSignatureWriter" />
      <apidata name="EnvelopedSignatureWriter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryWriter.CanCanonicalize" />
        <element api="P:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteState" />
        <element api="P:System.Xml.XmlWriter.Settings" />
        <element api="P:System.Xml.XmlWriter.XmlLang" />
        <element api="P:System.Xml.XmlWriter.XmlSpace" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.EnvelopedSignatureWriter" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteStartElement">
      <topicdata name="WriteStartElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteStartElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.XmlWriter.WriteStartElement(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)" />
        <element api="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
        <element api="M:System.IdentityModel.EnvelopedSignatureWriter.WriteStartElement(System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.EnvelopedSignatureWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.EnvelopedSignatureWriter.#ctor(System.Xml.XmlWriter,System.IdentityModel.Tokens.SigningCredentials,System.String,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="innerWriter">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="signingCredentials">
          <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
        </parameter>
        <parameter name="referenceId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="securityTokenSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.EnvelopedSignatureWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.EnvelopedSignatureWriter.WriteEndElement">
      <topicdata group="api" />
      <apidata name="WriteEndElement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndElement">
          <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.EnvelopedSignatureWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.EnvelopedSignatureWriter.WriteFullEndElement">
      <topicdata group="api" />
      <apidata name="WriteFullEndElement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteFullEndElement">
          <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.EnvelopedSignatureWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.EnvelopedSignatureWriter.WriteSignature">
      <topicdata group="api" />
      <apidata name="WriteSignature" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.EnvelopedSignatureWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.EnvelopedSignatureWriter.WriteStartElement(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteStartElement" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.EnvelopedSignatureWriter.WriteStartElement" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartElement(System.String,System.String,System.String)">
          <type api="T:System.IdentityModel.DelegatingXmlDictionaryWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.EnvelopedSignatureWriter" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.LimitExceededException">
      <topicdata group="api" />
      <apidata name="LimitExceededException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.LimitExceededException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.IdentityModel.LimitExceededException.#ctor">
          <element api="M:System.IdentityModel.LimitExceededException.#ctor" />
          <element api="M:System.IdentityModel.LimitExceededException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.LimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.LimitExceededException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.LimitExceededException">
      <topicdata name="LimitExceededException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.LimitExceededException" />
      <apidata name="LimitExceededException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.LimitExceededException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.LimitExceededException" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.LimitExceededException">
      <topicdata name="LimitExceededException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.LimitExceededException" />
      <apidata name="LimitExceededException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.LimitExceededException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.LimitExceededException" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.LimitExceededException">
      <topicdata name="LimitExceededException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.LimitExceededException" />
      <apidata name="LimitExceededException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.LimitExceededException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.LimitExceededException" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.LimitExceededException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.LimitExceededException.#ctor" />
        <element api="M:System.IdentityModel.LimitExceededException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.LimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.LimitExceededException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.LimitExceededException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.LimitExceededException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.LimitExceededException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.LimitExceededException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.LimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.LimitExceededException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.LimitExceededException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.LimitExceededException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.LimitExceededException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.LimitExceededException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.LimitExceededException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.LimitExceededException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.LimitExceededException" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.OpenObject">
      <topicdata group="api" />
      <apidata name="OpenObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustMessage" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.IdentityModel.OpenObject.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.OpenObject.Properties" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.OpenObject">
      <topicdata name="OpenObject" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.OpenObject" />
      <apidata name="OpenObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.OpenObject" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.OpenObject">
      <topicdata name="OpenObject" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.OpenObject" />
      <apidata name="OpenObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.OpenObject.Properties" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.OpenObject" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.OpenObject.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.OpenObject" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.OpenObject.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.OpenObject" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.ProtectedDataCookieTransform">
      <topicdata group="api" />
      <apidata name="ProtectedDataCookieTransform" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.IdentityModel.ProtectedDataCookieTransform.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.CookieTransform" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.ProtectedDataCookieTransform.#ctor" />
        <element api="M:System.IdentityModel.ProtectedDataCookieTransform.Decode(System.Byte[])" />
        <element api="M:System.IdentityModel.ProtectedDataCookieTransform.Encode(System.Byte[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.ProtectedDataCookieTransform">
      <topicdata name="ProtectedDataCookieTransform" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.ProtectedDataCookieTransform" />
      <apidata name="ProtectedDataCookieTransform" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.IdentityModel.ProtectedDataCookieTransform.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.ProtectedDataCookieTransform.Decode(System.Byte[])" />
        <element api="M:System.IdentityModel.ProtectedDataCookieTransform.Encode(System.Byte[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.ProtectedDataCookieTransform" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.ProtectedDataCookieTransform.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.ProtectedDataCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.ProtectedDataCookieTransform.Decode(System.Byte[])">
      <topicdata group="api" />
      <apidata name="Decode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.CookieTransform.Decode(System.Byte[])">
          <type api="T:System.IdentityModel.CookieTransform" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="encoded">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.ProtectedDataCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.ProtectedDataCookieTransform.Encode(System.Byte[])">
      <topicdata group="api" />
      <apidata name="Encode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.CookieTransform.Encode(System.Byte[])">
          <type api="T:System.IdentityModel.CookieTransform" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.ProtectedDataCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.RequestException">
      <topicdata group="api" />
      <apidata name="RequestException" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.BadRequestException" ref="true" />
          <type api="T:System.IdentityModel.RequestFailedException" ref="true" />
          <type api="T:System.IdentityModel.Protocols.WSTrust.InvalidRequestException" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.IdentityModel.RequestException.#ctor">
          <element api="M:System.IdentityModel.RequestException.#ctor" />
          <element api="M:System.IdentityModel.RequestException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.RequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.RequestException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.RequestException">
      <topicdata name="RequestException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.RequestException" />
      <apidata name="RequestException" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RequestException" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.RequestException">
      <topicdata name="RequestException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.RequestException" />
      <apidata name="RequestException" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RequestException" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.RequestException">
      <topicdata name="RequestException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.RequestException" />
      <apidata name="RequestException" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RequestException" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.RequestException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.RequestException.#ctor" />
        <element api="M:System.IdentityModel.RequestException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.RequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.RequestException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RequestException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.RequestException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.RequestException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RequestException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.RequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.RequestException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RequestException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.RequestException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.RequestException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RequestException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.RequestException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.RequestException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RequestException" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.RequestFailedException">
      <topicdata group="api" />
      <apidata name="RequestFailedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.RequestFailedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.RequestException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.IdentityModel.RequestFailedException.#ctor">
          <element api="M:System.IdentityModel.RequestFailedException.#ctor" />
          <element api="M:System.IdentityModel.RequestFailedException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.RequestFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.RequestFailedException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.RequestFailedException">
      <topicdata name="RequestFailedException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.RequestFailedException" />
      <apidata name="RequestFailedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.RequestFailedException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RequestFailedException" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.RequestFailedException">
      <topicdata name="RequestFailedException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.RequestFailedException" />
      <apidata name="RequestFailedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.RequestFailedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RequestFailedException" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.RequestFailedException">
      <topicdata name="RequestFailedException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.RequestFailedException" />
      <apidata name="RequestFailedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.RequestFailedException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RequestFailedException" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.RequestFailedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.RequestFailedException.#ctor" />
        <element api="M:System.IdentityModel.RequestFailedException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.RequestFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.RequestFailedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RequestFailedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.RequestFailedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.RequestFailedException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RequestFailedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.RequestFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.RequestFailedException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RequestFailedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.RequestFailedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.RequestFailedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RequestFailedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.RequestFailedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.RequestFailedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RequestFailedException" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.RsaEncryptionCookieTransform">
      <topicdata group="api" />
      <apidata name="RsaEncryptionCookieTransform" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.CookieTransform" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.RsaEncryptionCookieTransform.#ctor">
          <element api="M:System.IdentityModel.RsaEncryptionCookieTransform.#ctor(System.Security.Cryptography.RSA)" />
          <element api="M:System.IdentityModel.RsaEncryptionCookieTransform.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        </element>
        <element api="M:System.IdentityModel.RsaEncryptionCookieTransform.Decode(System.Byte[])" />
        <element api="M:System.IdentityModel.RsaEncryptionCookieTransform.Encode(System.Byte[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.RsaEncryptionCookieTransform.DecryptionKeys" />
        <element api="P:System.IdentityModel.RsaEncryptionCookieTransform.EncryptionKey" />
        <element api="P:System.IdentityModel.RsaEncryptionCookieTransform.HashName" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.RsaEncryptionCookieTransform">
      <topicdata name="RsaEncryptionCookieTransform" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.RsaEncryptionCookieTransform" />
      <apidata name="RsaEncryptionCookieTransform" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.RsaEncryptionCookieTransform.Decode(System.Byte[])" />
        <element api="M:System.IdentityModel.RsaEncryptionCookieTransform.Encode(System.Byte[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RsaEncryptionCookieTransform" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.RsaEncryptionCookieTransform">
      <topicdata name="RsaEncryptionCookieTransform" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.RsaEncryptionCookieTransform" />
      <apidata name="RsaEncryptionCookieTransform" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.RsaEncryptionCookieTransform.DecryptionKeys" />
        <element api="P:System.IdentityModel.RsaEncryptionCookieTransform.EncryptionKey" />
        <element api="P:System.IdentityModel.RsaEncryptionCookieTransform.HashName" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RsaEncryptionCookieTransform" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.RsaEncryptionCookieTransform.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.RsaEncryptionCookieTransform.#ctor(System.Security.Cryptography.RSA)" />
        <element api="M:System.IdentityModel.RsaEncryptionCookieTransform.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RsaEncryptionCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.RsaEncryptionCookieTransform.#ctor(System.Security.Cryptography.RSA)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.RsaEncryptionCookieTransform.#ctor" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Security.Cryptography.RSA" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RsaEncryptionCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.RsaEncryptionCookieTransform.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.RsaEncryptionCookieTransform.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RsaEncryptionCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.RsaEncryptionCookieTransform.Decode(System.Byte[])">
      <topicdata group="api" />
      <apidata name="Decode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.CookieTransform.Decode(System.Byte[])">
          <type api="T:System.IdentityModel.CookieTransform" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="encoded">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RsaEncryptionCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.RsaEncryptionCookieTransform.DecryptionKeys">
      <topicdata group="api" />
      <apidata name="DecryptionKeys" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_DecryptionKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Security.Cryptography.RSA" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RsaEncryptionCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.RsaEncryptionCookieTransform.Encode(System.Byte[])">
      <topicdata group="api" />
      <apidata name="Encode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.CookieTransform.Encode(System.Byte[])">
          <type api="T:System.IdentityModel.CookieTransform" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RsaEncryptionCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.RsaEncryptionCookieTransform.EncryptionKey">
      <topicdata group="api" />
      <apidata name="EncryptionKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_EncryptionKey" />
      <setter name="set_EncryptionKey" />
      <returns>
        <type api="T:System.Security.Cryptography.RSA" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RsaEncryptionCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.RsaEncryptionCookieTransform.HashName">
      <topicdata group="api" />
      <apidata name="HashName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HashName" />
      <setter name="set_HashName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RsaEncryptionCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.RsaSignatureCookieTransform">
      <topicdata group="api" />
      <apidata name="RsaSignatureCookieTransform" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.CookieTransform" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.RsaSignatureCookieTransform.#ctor">
          <element api="M:System.IdentityModel.RsaSignatureCookieTransform.#ctor(System.Security.Cryptography.RSA)" />
          <element api="M:System.IdentityModel.RsaSignatureCookieTransform.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        </element>
        <element api="M:System.IdentityModel.RsaSignatureCookieTransform.Decode(System.Byte[])" />
        <element api="M:System.IdentityModel.RsaSignatureCookieTransform.Encode(System.Byte[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.RsaSignatureCookieTransform.HashName" />
        <element api="P:System.IdentityModel.RsaSignatureCookieTransform.SigningKey" />
        <element api="P:System.IdentityModel.RsaSignatureCookieTransform.VerificationKeys" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.RsaSignatureCookieTransform">
      <topicdata name="RsaSignatureCookieTransform" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.RsaSignatureCookieTransform" />
      <apidata name="RsaSignatureCookieTransform" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.RsaSignatureCookieTransform.Decode(System.Byte[])" />
        <element api="M:System.IdentityModel.RsaSignatureCookieTransform.Encode(System.Byte[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RsaSignatureCookieTransform" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.RsaSignatureCookieTransform">
      <topicdata name="RsaSignatureCookieTransform" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.RsaSignatureCookieTransform" />
      <apidata name="RsaSignatureCookieTransform" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.RsaSignatureCookieTransform.HashName" />
        <element api="P:System.IdentityModel.RsaSignatureCookieTransform.SigningKey" />
        <element api="P:System.IdentityModel.RsaSignatureCookieTransform.VerificationKeys" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RsaSignatureCookieTransform" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.RsaSignatureCookieTransform.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.RsaSignatureCookieTransform.#ctor(System.Security.Cryptography.RSA)" />
        <element api="M:System.IdentityModel.RsaSignatureCookieTransform.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RsaSignatureCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.RsaSignatureCookieTransform.#ctor(System.Security.Cryptography.RSA)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.RsaSignatureCookieTransform.#ctor" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Security.Cryptography.RSA" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RsaSignatureCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.RsaSignatureCookieTransform.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.RsaSignatureCookieTransform.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RsaSignatureCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.RsaSignatureCookieTransform.Decode(System.Byte[])">
      <topicdata group="api" />
      <apidata name="Decode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.CookieTransform.Decode(System.Byte[])">
          <type api="T:System.IdentityModel.CookieTransform" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="encoded">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RsaSignatureCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.RsaSignatureCookieTransform.Encode(System.Byte[])">
      <topicdata group="api" />
      <apidata name="Encode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.CookieTransform.Encode(System.Byte[])">
          <type api="T:System.IdentityModel.CookieTransform" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RsaSignatureCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.RsaSignatureCookieTransform.HashName">
      <topicdata group="api" />
      <apidata name="HashName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HashName" />
      <setter name="set_HashName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RsaSignatureCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.RsaSignatureCookieTransform.SigningKey">
      <topicdata group="api" />
      <apidata name="SigningKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SigningKey" />
      <setter name="set_SigningKey" />
      <returns>
        <type api="T:System.Security.Cryptography.RSA" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RsaSignatureCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.RsaSignatureCookieTransform.VerificationKeys">
      <topicdata group="api" />
      <apidata name="VerificationKeys" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_VerificationKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Security.Cryptography.RSA" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.RsaSignatureCookieTransform" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Scope">
      <topicdata group="api" />
      <apidata name="Scope" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Scope.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Scope.#ctor">
          <element api="M:System.IdentityModel.Scope.#ctor" />
          <element api="M:System.IdentityModel.Scope.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)" />
          <element api="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)" />
          <element api="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Scope.AppliesToAddress" />
        <element api="P:System.IdentityModel.Scope.EncryptingCredentials" />
        <element api="P:System.IdentityModel.Scope.Properties" />
        <element api="P:System.IdentityModel.Scope.ReplyToAddress" />
        <element api="P:System.IdentityModel.Scope.SigningCredentials" />
        <element api="P:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired" />
        <element api="P:System.IdentityModel.Scope.TokenEncryptionRequired" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Scope">
      <topicdata name="Scope" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Scope" />
      <apidata name="Scope" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Scope.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.Scope" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Scope">
      <topicdata name="Scope" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Scope" />
      <apidata name="Scope" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Scope.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Scope.AppliesToAddress" />
        <element api="P:System.IdentityModel.Scope.EncryptingCredentials" />
        <element api="P:System.IdentityModel.Scope.Properties" />
        <element api="P:System.IdentityModel.Scope.ReplyToAddress" />
        <element api="P:System.IdentityModel.Scope.SigningCredentials" />
        <element api="P:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired" />
        <element api="P:System.IdentityModel.Scope.TokenEncryptionRequired" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.Scope" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Scope.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Scope.#ctor" />
        <element api="M:System.IdentityModel.Scope.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)" />
        <element api="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)" />
        <element api="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.Scope" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Scope.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Scope.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.Scope" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Scope.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Scope.#ctor" />
      <parameters>
        <parameter name="appliesToAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.Scope" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Scope.#ctor" />
      <parameters>
        <parameter name="appliesToAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encryptingCredentials">
          <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.Scope" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Scope.#ctor" />
      <parameters>
        <parameter name="appliesToAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="signingCredentials">
          <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.Scope" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Scope.#ctor" />
      <parameters>
        <parameter name="appliesToAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="signingCredentials">
          <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
        </parameter>
        <parameter name="encryptingCredentials">
          <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.Scope" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Scope.AppliesToAddress">
      <topicdata group="api" />
      <apidata name="AppliesToAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AppliesToAddress" />
      <setter name="set_AppliesToAddress" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.Scope" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Scope.EncryptingCredentials">
      <topicdata group="api" />
      <apidata name="EncryptingCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_EncryptingCredentials" />
      <setter name="set_EncryptingCredentials" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.Scope" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Scope.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.Scope" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Scope.ReplyToAddress">
      <topicdata group="api" />
      <apidata name="ReplyToAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ReplyToAddress" />
      <setter name="set_ReplyToAddress" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.Scope" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Scope.SigningCredentials">
      <topicdata group="api" />
      <apidata name="SigningCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SigningCredentials" />
      <setter name="set_SigningCredentials" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.Scope" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired">
      <topicdata group="api" />
      <apidata name="SymmetricKeyEncryptionRequired" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SymmetricKeyEncryptionRequired" />
      <setter name="set_SymmetricKeyEncryptionRequired" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.Scope" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Scope.TokenEncryptionRequired">
      <topicdata group="api" />
      <apidata name="TokenEncryptionRequired" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_TokenEncryptionRequired" />
      <setter name="set_TokenEncryptionRequired" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.Scope" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.SecurityMessageSerializationException">
      <topicdata group="api" />
      <apidata name="SecurityMessageSerializationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.SecurityMessageSerializationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.IdentityModel.SecurityMessageSerializationException.#ctor">
          <element api="M:System.IdentityModel.SecurityMessageSerializationException.#ctor" />
          <element api="M:System.IdentityModel.SecurityMessageSerializationException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.SecurityMessageSerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.SecurityMessageSerializationException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.SecurityMessageSerializationException">
      <topicdata name="SecurityMessageSerializationException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.SecurityMessageSerializationException" />
      <apidata name="SecurityMessageSerializationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.SecurityMessageSerializationException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityMessageSerializationException" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.SecurityMessageSerializationException">
      <topicdata name="SecurityMessageSerializationException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.SecurityMessageSerializationException" />
      <apidata name="SecurityMessageSerializationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.SecurityMessageSerializationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityMessageSerializationException" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.SecurityMessageSerializationException">
      <topicdata name="SecurityMessageSerializationException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.SecurityMessageSerializationException" />
      <apidata name="SecurityMessageSerializationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.SecurityMessageSerializationException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityMessageSerializationException" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.SecurityMessageSerializationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.SecurityMessageSerializationException.#ctor" />
        <element api="M:System.IdentityModel.SecurityMessageSerializationException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.SecurityMessageSerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.SecurityMessageSerializationException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityMessageSerializationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityMessageSerializationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.SecurityMessageSerializationException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityMessageSerializationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityMessageSerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.SecurityMessageSerializationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityMessageSerializationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityMessageSerializationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.SecurityMessageSerializationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityMessageSerializationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityMessageSerializationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.SecurityMessageSerializationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityMessageSerializationException" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.SecurityTokenService">
      <topicdata group="api" />
      <apidata name="SecurityTokenService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.SecurityTokenService.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)" />
        <element api="M:System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.SecurityTokenService.Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        <element api="M:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
        <element api="M:System.IdentityModel.SecurityTokenService.EndCancel(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.SecurityTokenService.EndGetScope(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.SecurityTokenService.EndIssue(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.SecurityTokenService.EndRenew(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.SecurityTokenService.EndValidate(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.SecurityTokenService.GetIssuerName" />
        <element api="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
        <element api="M:System.IdentityModel.SecurityTokenService.GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
        <element api="M:System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        <element api="M:System.IdentityModel.SecurityTokenService.GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        <element api="M:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(System.String)" />
        <element api="M:System.IdentityModel.SecurityTokenService.GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)" />
        <element api="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        <element api="M:System.IdentityModel.SecurityTokenService.Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        <element api="M:System.IdentityModel.SecurityTokenService.Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        <element api="M:System.IdentityModel.SecurityTokenService.ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.SecurityTokenService.Principal" />
        <element api="P:System.IdentityModel.SecurityTokenService.Request" />
        <element api="P:System.IdentityModel.SecurityTokenService.Scope" />
        <element api="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />
        <element api="P:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.SecurityTokenService">
      <topicdata name="SecurityTokenService" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.SecurityTokenService" />
      <apidata name="SecurityTokenService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.SecurityTokenService.Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        <element api="M:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
        <element api="M:System.IdentityModel.SecurityTokenService.EndCancel(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.SecurityTokenService.EndGetScope(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.SecurityTokenService.EndIssue(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.SecurityTokenService.EndRenew(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.SecurityTokenService.EndValidate(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.SecurityTokenService.GetIssuerName" />
        <element api="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
        <element api="M:System.IdentityModel.SecurityTokenService.GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
        <element api="M:System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        <element api="M:System.IdentityModel.SecurityTokenService.GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        <element api="M:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(System.String)" />
        <element api="M:System.IdentityModel.SecurityTokenService.GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)" />
        <element api="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        <element api="M:System.IdentityModel.SecurityTokenService.Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        <element api="M:System.IdentityModel.SecurityTokenService.Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        <element api="M:System.IdentityModel.SecurityTokenService.ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.SecurityTokenService">
      <topicdata name="SecurityTokenService" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.SecurityTokenService" />
      <apidata name="SecurityTokenService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.SecurityTokenService.Principal" />
        <element api="P:System.IdentityModel.SecurityTokenService.Request" />
        <element api="P:System.IdentityModel.SecurityTokenService.Scope" />
        <element api="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />
        <element api="P:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="securityTokenServiceConfiguration">
          <type api="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="principal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginGetOutputClaimsIdentity" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="principal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="scope">
          <type api="T:System.IdentityModel.Scope" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginGetScope" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="principal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginIssue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="principal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginRenew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="principal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginValidate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="principal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="principal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)">
      <topicdata group="api" />
      <apidata name="CreateSecurityTokenDescriptor" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="scope">
          <type api="T:System.IdentityModel.Scope" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.EndCancel(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndGetOutputClaimsIdentity" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.EndGetScope(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndGetScope" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Scope" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.EndIssue(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndIssue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.EndRenew(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndRenew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.EndValidate(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndValidate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.GetIssuerName">
      <topicdata group="api" />
      <apidata name="GetIssuerName" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)">
      <topicdata group="api" />
      <apidata name="GetOutputClaimsIdentity" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="principal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="scope">
          <type api="T:System.IdentityModel.Scope" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)">
      <topicdata group="api" />
      <apidata name="GetProofToken" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="scope">
          <type api="T:System.IdentityModel.Scope" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.ProofDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)">
      <topicdata group="api" />
      <apidata name="GetRequestorProofEncryptingCredentials" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="GetResponse" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)">
      <topicdata group="api" />
      <apidata name="GetScope" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="principal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Scope" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(System.String)">
      <topicdata group="api" />
      <apidata name="GetSecurityTokenHandler" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="requestedTokenType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)">
      <topicdata group="api" />
      <apidata name="GetTokenLifetime" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="requestLifetime">
          <type api="T:System.IdentityModel.Protocols.WSTrust.Lifetime" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.Lifetime" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)">
      <topicdata group="api" />
      <apidata name="Issue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="principal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.SecurityTokenService.Principal">
      <topicdata group="api" />
      <apidata name="Principal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Principal" />
      <setter name="set_Principal" />
      <returns>
        <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)">
      <topicdata group="api" />
      <apidata name="Renew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="principal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.SecurityTokenService.Request">
      <topicdata group="api" />
      <apidata name="Request" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Request" />
      <setter name="set_Request" />
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.SecurityTokenService.Scope">
      <topicdata group="api" />
      <apidata name="Scope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Scope" />
      <setter name="set_Scope" />
      <returns>
        <type api="T:System.IdentityModel.Scope" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor">
      <topicdata group="api" />
      <apidata name="SecurityTokenDescriptor" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SecurityTokenDescriptor" />
      <setter name="set_SecurityTokenDescriptor" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration">
      <topicdata group="api" />
      <apidata name="SecurityTokenServiceConfiguration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SecurityTokenServiceConfiguration" />
      <returns>
        <type api="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="principal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)">
      <topicdata group="api" />
      <apidata name="ValidateRequest" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.SecurityTokenService.FederatedAsyncState">
      <topicdata group="api" />
      <apidata name="FederatedAsyncState" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.SecurityTokenService.FederatedAsyncState.#ctor">
          <element api="M:System.IdentityModel.SecurityTokenService.FederatedAsyncState.#ctor(System.IdentityModel.SecurityTokenService.FederatedAsyncState)" />
          <element api="M:System.IdentityModel.SecurityTokenService.FederatedAsyncState.#ctor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.Security.Claims.ClaimsPrincipal,System.IAsyncResult)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.SecurityTokenService.FederatedAsyncState.ClaimsPrincipal" />
        <element api="P:System.IdentityModel.SecurityTokenService.FederatedAsyncState.Request" />
        <element api="P:System.IdentityModel.SecurityTokenService.FederatedAsyncState.Result" />
        <element api="P:System.IdentityModel.SecurityTokenService.FederatedAsyncState.SecurityTokenHandler" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.SecurityTokenService.FederatedAsyncState">
      <topicdata name="FederatedAsyncState" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.SecurityTokenService.FederatedAsyncState" />
      <apidata name="FederatedAsyncState" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService.FederatedAsyncState" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.SecurityTokenService.FederatedAsyncState">
      <topicdata name="FederatedAsyncState" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.SecurityTokenService.FederatedAsyncState" />
      <apidata name="FederatedAsyncState" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.SecurityTokenService.FederatedAsyncState.ClaimsPrincipal" />
        <element api="P:System.IdentityModel.SecurityTokenService.FederatedAsyncState.Request" />
        <element api="P:System.IdentityModel.SecurityTokenService.FederatedAsyncState.Result" />
        <element api="P:System.IdentityModel.SecurityTokenService.FederatedAsyncState.SecurityTokenHandler" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService.FederatedAsyncState" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.SecurityTokenService.FederatedAsyncState.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.SecurityTokenService.FederatedAsyncState.#ctor(System.IdentityModel.SecurityTokenService.FederatedAsyncState)" />
        <element api="M:System.IdentityModel.SecurityTokenService.FederatedAsyncState.#ctor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.Security.Claims.ClaimsPrincipal,System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService.FederatedAsyncState" ref="true">
          <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.FederatedAsyncState.#ctor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.Security.Claims.ClaimsPrincipal,System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.SecurityTokenService.FederatedAsyncState.#ctor" />
      <parameters>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="principal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService.FederatedAsyncState" ref="true">
          <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.IdentityModel.SecurityTokenService.FederatedAsyncState.#ctor(System.IdentityModel.SecurityTokenService.FederatedAsyncState)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.SecurityTokenService.FederatedAsyncState.#ctor" />
      <parameters>
        <parameter name="federatedAsyncState">
          <type api="T:System.IdentityModel.SecurityTokenService.FederatedAsyncState" ref="true">
            <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService.FederatedAsyncState" ref="true">
          <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.IdentityModel.SecurityTokenService.FederatedAsyncState.ClaimsPrincipal">
      <topicdata group="api" />
      <apidata name="ClaimsPrincipal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClaimsPrincipal" />
      <returns>
        <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService.FederatedAsyncState" ref="true">
          <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.IdentityModel.SecurityTokenService.FederatedAsyncState.Request">
      <topicdata group="api" />
      <apidata name="Request" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Request" />
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService.FederatedAsyncState" ref="true">
          <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.IdentityModel.SecurityTokenService.FederatedAsyncState.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService.FederatedAsyncState" ref="true">
          <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.IdentityModel.SecurityTokenService.FederatedAsyncState.SecurityTokenHandler">
      <topicdata group="api" />
      <apidata name="SecurityTokenHandler" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SecurityTokenHandler" />
      <setter name="set_SecurityTokenHandler" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SecurityTokenService.FederatedAsyncState" ref="true">
          <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:System.IdentityModel.SignatureVerificationFailedException">
      <topicdata group="api" />
      <apidata name="SignatureVerificationFailedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.SignatureVerificationFailedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityTokenException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.IdentityModel.SignatureVerificationFailedException.#ctor">
          <element api="M:System.IdentityModel.SignatureVerificationFailedException.#ctor" />
          <element api="M:System.IdentityModel.SignatureVerificationFailedException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.SignatureVerificationFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.SignatureVerificationFailedException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.SignatureVerificationFailedException">
      <topicdata name="SignatureVerificationFailedException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.SignatureVerificationFailedException" />
      <apidata name="SignatureVerificationFailedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.SignatureVerificationFailedException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SignatureVerificationFailedException" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.SignatureVerificationFailedException">
      <topicdata name="SignatureVerificationFailedException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.SignatureVerificationFailedException" />
      <apidata name="SignatureVerificationFailedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.SignatureVerificationFailedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SignatureVerificationFailedException" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.SignatureVerificationFailedException">
      <topicdata name="SignatureVerificationFailedException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.SignatureVerificationFailedException" />
      <apidata name="SignatureVerificationFailedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.SignatureVerificationFailedException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SignatureVerificationFailedException" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.SignatureVerificationFailedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.SignatureVerificationFailedException.#ctor" />
        <element api="M:System.IdentityModel.SignatureVerificationFailedException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.SignatureVerificationFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.SignatureVerificationFailedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SignatureVerificationFailedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SignatureVerificationFailedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.SignatureVerificationFailedException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SignatureVerificationFailedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SignatureVerificationFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.SignatureVerificationFailedException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SignatureVerificationFailedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SignatureVerificationFailedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.SignatureVerificationFailedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SignatureVerificationFailedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.SignatureVerificationFailedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.SignatureVerificationFailedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.SignatureVerificationFailedException" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.TypedAsyncResult`1">
      <topicdata group="api" />
      <apidata name="TypedAsyncResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.AsyncResult" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:System.IdentityModel.TypedAsyncResult`1.Dispose">
          <element api="M:System.IdentityModel.AsyncResult.Dispose" />
          <element api="M:System.IdentityModel.AsyncResult.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.IdentityModel.AsyncResult.Finalize" />
        <element api="Overload:System.IdentityModel.TypedAsyncResult`1.#ctor">
          <element api="M:System.IdentityModel.TypedAsyncResult`1.#ctor(System.Object)" />
          <element api="M:System.IdentityModel.TypedAsyncResult`1.#ctor(System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.IdentityModel.TypedAsyncResult`1.Complete">
          <element api="M:System.IdentityModel.AsyncResult.Complete(System.Boolean)" />
          <element api="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)" />
          <element api="M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean)" />
          <element api="M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean,System.Exception)" />
        </element>
        <element api="M:System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.AsyncResult.AsyncState" />
        <element api="P:System.IdentityModel.AsyncResult.AsyncWaitHandle" />
        <element api="P:System.IdentityModel.AsyncResult.CompletedSynchronously" />
        <element api="P:System.IdentityModel.AsyncResult.IsCompleted" />
        <element api="P:System.IdentityModel.TypedAsyncResult`1.Result" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.TypedAsyncResult`1">
      <topicdata name="TypedAsyncResult" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.TypedAsyncResult`1" />
      <apidata name="TypedAsyncResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:System.IdentityModel.TypedAsyncResult`1.Dispose">
          <element api="M:System.IdentityModel.AsyncResult.Dispose" />
          <element api="M:System.IdentityModel.AsyncResult.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.IdentityModel.AsyncResult.Finalize" />
        <element api="Overload:System.IdentityModel.TypedAsyncResult`1.Complete">
          <element api="M:System.IdentityModel.AsyncResult.Complete(System.Boolean)" />
          <element api="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)" />
          <element api="M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean)" />
          <element api="M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean,System.Exception)" />
        </element>
        <element api="M:System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.TypedAsyncResult`1" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.TypedAsyncResult`1">
      <topicdata name="TypedAsyncResult" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.TypedAsyncResult`1" />
      <apidata name="TypedAsyncResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.IdentityModel.AsyncResult.AsyncState" />
        <element api="P:System.IdentityModel.AsyncResult.AsyncWaitHandle" />
        <element api="P:System.IdentityModel.AsyncResult.CompletedSynchronously" />
        <element api="P:System.IdentityModel.AsyncResult.IsCompleted" />
        <element api="P:System.IdentityModel.TypedAsyncResult`1.Result" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.TypedAsyncResult`1" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.TypedAsyncResult`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.TypedAsyncResult`1.#ctor(System.Object)" />
        <element api="M:System.IdentityModel.TypedAsyncResult`1.#ctor(System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.TypedAsyncResult`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.TypedAsyncResult`1.Complete">
      <topicdata name="Complete" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Complete" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.AsyncResult.Complete(System.Boolean)" />
        <element api="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)" />
        <element api="M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean)" />
        <element api="M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.TypedAsyncResult`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.TypedAsyncResult`1.#ctor(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.TypedAsyncResult`1.#ctor" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.TypedAsyncResult`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.TypedAsyncResult`1.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.TypedAsyncResult`1.#ctor" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.TypedAsyncResult`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Complete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.TypedAsyncResult`1.Complete" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <template name="T" index="0" api="T:System.IdentityModel.TypedAsyncResult`1" />
        </parameter>
        <parameter name="completedSynchronously">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.TypedAsyncResult`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean,System.Exception)">
      <topicdata group="api" />
      <apidata name="Complete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.TypedAsyncResult`1.Complete" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <template name="T" index="0" api="T:System.IdentityModel.TypedAsyncResult`1" />
        </parameter>
        <parameter name="completedSynchronously">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.TypedAsyncResult`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="End" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:System.IdentityModel.TypedAsyncResult`1" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.TypedAsyncResult`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.TypedAsyncResult`1.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <template name="T" index="0" api="T:System.IdentityModel.TypedAsyncResult`1" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.TypedAsyncResult`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException">
      <topicdata group="api" />
      <apidata name="UnsupportedTokenTypeBadRequestException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.BadRequestException" ref="true" />
          <type api="T:System.IdentityModel.RequestException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor">
          <element api="M:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor" />
          <element api="M:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.IdentityModel.UnsupportedTokenTypeBadRequestException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.IdentityModel.UnsupportedTokenTypeBadRequestException.TokenType" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.UnsupportedTokenTypeBadRequestException">
      <topicdata name="UnsupportedTokenTypeBadRequestException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException" />
      <apidata name="UnsupportedTokenTypeBadRequestException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.IdentityModel.UnsupportedTokenTypeBadRequestException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.UnsupportedTokenTypeBadRequestException">
      <topicdata name="UnsupportedTokenTypeBadRequestException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException" />
      <apidata name="UnsupportedTokenTypeBadRequestException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.IdentityModel.UnsupportedTokenTypeBadRequestException.TokenType" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.UnsupportedTokenTypeBadRequestException">
      <topicdata name="UnsupportedTokenTypeBadRequestException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException" />
      <apidata name="UnsupportedTokenTypeBadRequestException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor" />
        <element api="M:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor" />
      <parameters>
        <parameter name="tokenType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.UnsupportedTokenTypeBadRequestException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.UnsupportedTokenTypeBadRequestException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.UnsupportedTokenTypeBadRequestException.TokenType">
      <topicdata group="api" />
      <apidata name="TokenType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TokenType" />
      <setter name="set_TokenType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel" />
        <type api="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>