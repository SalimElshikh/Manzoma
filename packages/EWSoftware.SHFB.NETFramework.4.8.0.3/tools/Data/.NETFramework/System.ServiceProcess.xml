<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.ServiceProcess">
      <assemblydata version="4.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceProcess.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceProcess.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceProcess.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ServiceProcess">
      <topicdata group="api" />
      <apidata name="System.ServiceProcess" group="namespace" />
      <elements>
        <element api="T:System.ServiceProcess.PowerBroadcastStatus" />
        <element api="T:System.ServiceProcess.ServiceAccount" />
        <element api="T:System.ServiceProcess.ServiceBase" />
        <element api="T:System.ServiceProcess.ServiceController" />
        <element api="T:System.ServiceProcess.ServiceControllerPermission" />
        <element api="T:System.ServiceProcess.ServiceControllerPermissionAccess" />
        <element api="T:System.ServiceProcess.ServiceControllerPermissionAttribute" />
        <element api="T:System.ServiceProcess.ServiceControllerPermissionEntry" />
        <element api="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" />
        <element api="T:System.ServiceProcess.ServiceControllerStatus" />
        <element api="T:System.ServiceProcess.ServiceInstaller" />
        <element api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" />
        <element api="T:System.ServiceProcess.ServiceProcessInstaller" />
        <element api="T:System.ServiceProcess.ServiceStartMode" />
        <element api="T:System.ServiceProcess.ServiceType" />
        <element api="T:System.ServiceProcess.SessionChangeReason" />
        <element api="T:System.ServiceProcess.SessionChangeDescription" />
        <element api="T:System.ServiceProcess.TimeoutException" />
      </elements>
    </api>
    <api id="T:System.ServiceProcess.PowerBroadcastStatus">
      <topicdata group="api" />
      <apidata name="PowerBroadcastStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceProcess.PowerBroadcastStatus.BatteryLow" />
        <element api="F:System.ServiceProcess.PowerBroadcastStatus.OemEvent" />
        <element api="F:System.ServiceProcess.PowerBroadcastStatus.PowerStatusChange" />
        <element api="F:System.ServiceProcess.PowerBroadcastStatus.QuerySuspend" />
        <element api="F:System.ServiceProcess.PowerBroadcastStatus.QuerySuspendFailed" />
        <element api="F:System.ServiceProcess.PowerBroadcastStatus.ResumeAutomatic" />
        <element api="F:System.ServiceProcess.PowerBroadcastStatus.ResumeCritical" />
        <element api="F:System.ServiceProcess.PowerBroadcastStatus.ResumeSuspend" />
        <element api="F:System.ServiceProcess.PowerBroadcastStatus.Suspend" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.PowerBroadcastStatus.BatteryLow">
      <topicdata group="api" notopic="" />
      <apidata name="BatteryLow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.PowerBroadcastStatus" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.PowerBroadcastStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.PowerBroadcastStatus.OemEvent">
      <topicdata group="api" notopic="" />
      <apidata name="OemEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.PowerBroadcastStatus" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.PowerBroadcastStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.PowerBroadcastStatus.PowerStatusChange">
      <topicdata group="api" notopic="" />
      <apidata name="PowerStatusChange" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.PowerBroadcastStatus" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.PowerBroadcastStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.PowerBroadcastStatus.QuerySuspend">
      <topicdata group="api" notopic="" />
      <apidata name="QuerySuspend" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.PowerBroadcastStatus" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.PowerBroadcastStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.PowerBroadcastStatus.QuerySuspendFailed">
      <topicdata group="api" notopic="" />
      <apidata name="QuerySuspendFailed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.PowerBroadcastStatus" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.PowerBroadcastStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.PowerBroadcastStatus.ResumeAutomatic">
      <topicdata group="api" notopic="" />
      <apidata name="ResumeAutomatic" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.PowerBroadcastStatus" ref="false" />
      </returns>
      <value>18</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.PowerBroadcastStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.PowerBroadcastStatus.ResumeCritical">
      <topicdata group="api" notopic="" />
      <apidata name="ResumeCritical" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.PowerBroadcastStatus" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.PowerBroadcastStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.PowerBroadcastStatus.ResumeSuspend">
      <topicdata group="api" notopic="" />
      <apidata name="ResumeSuspend" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.PowerBroadcastStatus" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.PowerBroadcastStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.PowerBroadcastStatus.Suspend">
      <topicdata group="api" notopic="" />
      <apidata name="Suspend" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.PowerBroadcastStatus" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.PowerBroadcastStatus" ref="false" />
      </containers>
    </api>
    <api id="T:System.ServiceProcess.ServiceAccount">
      <topicdata group="api" />
      <apidata name="ServiceAccount" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceProcess.ServiceAccount.LocalService" />
        <element api="F:System.ServiceProcess.ServiceAccount.NetworkService" />
        <element api="F:System.ServiceProcess.ServiceAccount.LocalSystem" />
        <element api="F:System.ServiceProcess.ServiceAccount.User" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceAccount.LocalService">
      <topicdata group="api" notopic="" />
      <apidata name="LocalService" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceAccount" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceAccount" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceAccount.LocalSystem">
      <topicdata group="api" notopic="" />
      <apidata name="LocalSystem" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceAccount" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceAccount" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceAccount.NetworkService">
      <topicdata group="api" notopic="" />
      <apidata name="NetworkService" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceAccount" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceAccount" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceAccount.User">
      <topicdata group="api" notopic="" />
      <apidata name="User" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceAccount" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceAccount" ref="false" />
      </containers>
    </api>
    <api id="T:System.ServiceProcess.ServiceBase">
      <topicdata group="api" />
      <apidata name="ServiceBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceProcess.ServiceBase.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="F:System.ServiceProcess.ServiceBase.MaxNameLength" />
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.ServiceProcess.ServiceBase.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ServiceProcess.ServiceBase.#ctor" />
        <element api="Overload:System.ServiceProcess.ServiceBase.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <element api="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
        <element api="M:System.ServiceProcess.ServiceBase.OnPause" />
        <element api="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <element api="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)" />
        <element api="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <element api="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <element api="M:System.ServiceProcess.ServiceBase.OnStop" />
        <element api="M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)" />
        <element api="Overload:System.ServiceProcess.ServiceBase.Run">
          <element api="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)" />
          <element api="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])" />
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.Stop" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.ServiceProcess.ServiceBase.AutoLog" />
        <element api="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
        <element api="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent" />
        <element api="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <element api="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <element api="P:System.ServiceProcess.ServiceBase.CanStop" />
        <element api="P:System.ServiceProcess.ServiceBase.EventLog" />
        <element api="P:System.ServiceProcess.ServiceBase.ExitCode" />
        <element api="P:System.ServiceProcess.ServiceBase.ServiceHandle" />
        <element api="P:System.ServiceProcess.ServiceBase.ServiceName" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceProcess.ServiceBase">
      <topicdata name="ServiceBase" group="list" subgroup="Methods" typeTopicId="T:System.ServiceProcess.ServiceBase" />
      <apidata name="ServiceBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceProcess.ServiceBase.#ctor" />
      <elements>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.ServiceProcess.ServiceBase.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.ServiceProcess.ServiceBase.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <element api="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
        <element api="M:System.ServiceProcess.ServiceBase.OnPause" />
        <element api="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <element api="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)" />
        <element api="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <element api="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <element api="M:System.ServiceProcess.ServiceBase.OnStop" />
        <element api="M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)" />
        <element api="Overload:System.ServiceProcess.ServiceBase.Run">
          <element api="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)" />
          <element api="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])" />
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.Stop" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceProcess.ServiceBase">
      <topicdata name="ServiceBase" group="list" subgroup="Properties" typeTopicId="T:System.ServiceProcess.ServiceBase" />
      <apidata name="ServiceBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceProcess.ServiceBase.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.ServiceProcess.ServiceBase.AutoLog" />
        <element api="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
        <element api="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent" />
        <element api="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <element api="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <element api="P:System.ServiceProcess.ServiceBase.CanStop" />
        <element api="P:System.ServiceProcess.ServiceBase.EventLog" />
        <element api="P:System.ServiceProcess.ServiceBase.ExitCode" />
        <element api="P:System.ServiceProcess.ServiceBase.ServiceHandle" />
        <element api="P:System.ServiceProcess.ServiceBase.ServiceName" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" />
      </containers>
    </api>
    <api id="Events.T:System.ServiceProcess.ServiceBase">
      <topicdata name="ServiceBase" group="list" subgroup="Events" typeTopicId="T:System.ServiceProcess.ServiceBase" />
      <apidata name="ServiceBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceProcess.ServiceBase.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" />
      </containers>
    </api>
    <api id="Fields.T:System.ServiceProcess.ServiceBase">
      <topicdata name="ServiceBase" group="list" subgroup="Fields" typeTopicId="T:System.ServiceProcess.ServiceBase" />
      <apidata name="ServiceBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceProcess.ServiceBase.#ctor" />
      <elements>
        <element api="F:System.ServiceProcess.ServiceBase.MaxNameLength" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" />
      </containers>
    </api>
    <api id="Overload:System.ServiceProcess.ServiceBase.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Component.Dispose" />
        <element api="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceProcess.ServiceBase.Run">
      <topicdata name="Run" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Run" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)" />
        <element api="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceBase.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceBase.AutoLog">
      <topicdata group="api" />
      <apidata name="AutoLog" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AutoLog" />
      <setter name="set_AutoLog" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SBAutoLog</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent">
      <topicdata group="api" />
      <apidata name="CanHandlePowerEvent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CanHandlePowerEvent" />
      <setter name="set_CanHandlePowerEvent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent">
      <topicdata group="api" />
      <apidata name="CanHandleSessionChangeEvent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CanHandleSessionChangeEvent" />
      <setter name="set_CanHandleSessionChangeEvent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
      <topicdata group="api" />
      <apidata name="CanPauseAndContinue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CanPauseAndContinue" />
      <setter name="set_CanPauseAndContinue" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceProcess.ServiceBase.CanShutdown">
      <topicdata group="api" />
      <apidata name="CanShutdown" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CanShutdown" />
      <setter name="set_CanShutdown" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceProcess.ServiceBase.CanStop">
      <topicdata group="api" />
      <apidata name="CanStop" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CanStop" />
      <setter name="set_CanStop" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceProcess.ServiceBase.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Component" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceBase.EventLog">
      <topicdata group="api" />
      <apidata name="EventLog" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_EventLog" />
      <returns>
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceProcess.ServiceBase.ExitCode">
      <topicdata group="api" />
      <apidata name="ExitCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ExitCode" />
      <setter name="set_ExitCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.ServiceProcess.ServiceBase.MaxNameLength">
      <topicdata group="api" />
      <apidata name="MaxNameLength" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>80</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceBase.OnContinue">
      <topicdata group="api" />
      <apidata name="OnContinue" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
      <topicdata group="api" />
      <apidata name="OnCustomCommand" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="command">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceBase.OnPause">
      <topicdata group="api" />
      <apidata name="OnPause" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)">
      <topicdata group="api" />
      <apidata name="OnPowerEvent" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="powerStatus">
          <type api="T:System.ServiceProcess.PowerBroadcastStatus" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)">
      <topicdata group="api" />
      <apidata name="OnSessionChange" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="changeDescription">
          <type api="T:System.ServiceProcess.SessionChangeDescription" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceBase.OnShutdown">
      <topicdata group="api" />
      <apidata name="OnShutdown" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
      <topicdata group="api" />
      <apidata name="OnStart" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceBase.OnStop">
      <topicdata group="api" />
      <apidata name="OnStop" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)">
      <topicdata group="api" />
      <apidata name="RequestAdditionalTime" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="milliseconds">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceProcess.ServiceBase.Run" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="service">
          <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceProcess.ServiceBase.Run" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="services">
          <arrayOf rank="1">
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceBase.ServiceHandle">
      <topicdata group="api" />
      <apidata name="ServiceHandle" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ServiceHandle" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceProcess.ServiceBase.ServiceName">
      <topicdata group="api" />
      <apidata name="ServiceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServiceName" />
      <setter name="set_ServiceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SBServiceName</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceProcess.ServiceBase.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceProcess.ServiceController">
      <topicdata group="api" />
      <apidata name="ServiceController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceProcess.ServiceController.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.ServiceProcess.ServiceController.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.ServiceProcess.ServiceController.#ctor">
          <element api="M:System.ServiceProcess.ServiceController.#ctor" />
          <element api="M:System.ServiceProcess.ServiceController.#ctor(System.String)" />
          <element api="M:System.ServiceProcess.ServiceController.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.ServiceProcess.ServiceController.Close" />
        <element api="M:System.ServiceProcess.ServiceController.Continue" />
        <element api="Overload:System.ServiceProcess.ServiceController.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)" />
        <element api="Overload:System.ServiceProcess.ServiceController.GetDevices">
          <element api="M:System.ServiceProcess.ServiceController.GetDevices" />
          <element api="M:System.ServiceProcess.ServiceController.GetDevices(System.String)" />
        </element>
        <element api="Overload:System.ServiceProcess.ServiceController.GetServices">
          <element api="M:System.ServiceProcess.ServiceController.GetServices" />
          <element api="M:System.ServiceProcess.ServiceController.GetServices(System.String)" />
        </element>
        <element api="M:System.ServiceProcess.ServiceController.Pause" />
        <element api="M:System.ServiceProcess.ServiceController.Refresh" />
        <element api="Overload:System.ServiceProcess.ServiceController.Start">
          <element api="M:System.ServiceProcess.ServiceController.Start" />
          <element api="M:System.ServiceProcess.ServiceController.Start(System.String[])" />
        </element>
        <element api="M:System.ServiceProcess.ServiceController.Stop" />
        <element api="Overload:System.ServiceProcess.ServiceController.WaitForStatus">
          <element api="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)" />
          <element api="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)" />
        </element>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.ServiceProcess.ServiceController.CanPauseAndContinue" />
        <element api="P:System.ServiceProcess.ServiceController.CanShutdown" />
        <element api="P:System.ServiceProcess.ServiceController.CanStop" />
        <element api="P:System.ServiceProcess.ServiceController.DependentServices" />
        <element api="P:System.ServiceProcess.ServiceController.DisplayName" />
        <element api="P:System.ServiceProcess.ServiceController.MachineName" />
        <element api="P:System.ServiceProcess.ServiceController.ServiceHandle" />
        <element api="P:System.ServiceProcess.ServiceController.ServiceName" />
        <element api="P:System.ServiceProcess.ServiceController.ServicesDependedOn" />
        <element api="P:System.ServiceProcess.ServiceController.ServiceType" />
        <element api="P:System.ServiceProcess.ServiceController.StartType" />
        <element api="P:System.ServiceProcess.ServiceController.Status" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ServiceControllerDesc</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceProcess.ServiceController">
      <topicdata name="ServiceController" group="list" subgroup="Methods" typeTopicId="T:System.ServiceProcess.ServiceController" />
      <apidata name="ServiceController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceProcess.ServiceController.#ctor" />
      <elements>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.ServiceProcess.ServiceController.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ServiceProcess.ServiceController.Close" />
        <element api="M:System.ServiceProcess.ServiceController.Continue" />
        <element api="Overload:System.ServiceProcess.ServiceController.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)" />
        <element api="Overload:System.ServiceProcess.ServiceController.GetDevices">
          <element api="M:System.ServiceProcess.ServiceController.GetDevices" />
          <element api="M:System.ServiceProcess.ServiceController.GetDevices(System.String)" />
        </element>
        <element api="Overload:System.ServiceProcess.ServiceController.GetServices">
          <element api="M:System.ServiceProcess.ServiceController.GetServices" />
          <element api="M:System.ServiceProcess.ServiceController.GetServices(System.String)" />
        </element>
        <element api="M:System.ServiceProcess.ServiceController.Pause" />
        <element api="M:System.ServiceProcess.ServiceController.Refresh" />
        <element api="Overload:System.ServiceProcess.ServiceController.Start">
          <element api="M:System.ServiceProcess.ServiceController.Start" />
          <element api="M:System.ServiceProcess.ServiceController.Start(System.String[])" />
        </element>
        <element api="M:System.ServiceProcess.ServiceController.Stop" />
        <element api="Overload:System.ServiceProcess.ServiceController.WaitForStatus">
          <element api="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)" />
          <element api="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceProcess.ServiceController">
      <topicdata name="ServiceController" group="list" subgroup="Properties" typeTopicId="T:System.ServiceProcess.ServiceController" />
      <apidata name="ServiceController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceProcess.ServiceController.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.ServiceProcess.ServiceController.CanPauseAndContinue" />
        <element api="P:System.ServiceProcess.ServiceController.CanShutdown" />
        <element api="P:System.ServiceProcess.ServiceController.CanStop" />
        <element api="P:System.ServiceProcess.ServiceController.DependentServices" />
        <element api="P:System.ServiceProcess.ServiceController.DisplayName" />
        <element api="P:System.ServiceProcess.ServiceController.MachineName" />
        <element api="P:System.ServiceProcess.ServiceController.ServiceHandle" />
        <element api="P:System.ServiceProcess.ServiceController.ServiceName" />
        <element api="P:System.ServiceProcess.ServiceController.ServicesDependedOn" />
        <element api="P:System.ServiceProcess.ServiceController.ServiceType" />
        <element api="P:System.ServiceProcess.ServiceController.StartType" />
        <element api="P:System.ServiceProcess.ServiceController.Status" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" />
      </containers>
    </api>
    <api id="Events.T:System.ServiceProcess.ServiceController">
      <topicdata name="ServiceController" group="list" subgroup="Events" typeTopicId="T:System.ServiceProcess.ServiceController" />
      <apidata name="ServiceController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceProcess.ServiceController.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" />
      </containers>
    </api>
    <api id="Overload:System.ServiceProcess.ServiceController.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceProcess.ServiceController.#ctor" />
        <element api="M:System.ServiceProcess.ServiceController.#ctor(System.String)" />
        <element api="M:System.ServiceProcess.ServiceController.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceProcess.ServiceController.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Component.Dispose" />
        <element api="M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceProcess.ServiceController.GetDevices">
      <topicdata name="GetDevices" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetDevices" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceProcess.ServiceController.GetDevices" />
        <element api="M:System.ServiceProcess.ServiceController.GetDevices(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceProcess.ServiceController.GetServices">
      <topicdata name="GetServices" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetServices" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceProcess.ServiceController.GetServices" />
        <element api="M:System.ServiceProcess.ServiceController.GetServices(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceProcess.ServiceController.Start">
      <topicdata name="Start" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Start" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceProcess.ServiceController.Start" />
        <element api="M:System.ServiceProcess.ServiceController.Start(System.String[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceProcess.ServiceController.WaitForStatus">
      <topicdata name="WaitForStatus" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WaitForStatus" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)" />
        <element api="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceController.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceProcess.ServiceController.#ctor" />
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceController.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceProcess.ServiceController.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceController.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceProcess.ServiceController.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceController.CanPauseAndContinue">
      <topicdata group="api" />
      <apidata name="CanPauseAndContinue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CanPauseAndContinue" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SPCanPauseAndContinue</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceProcess.ServiceController.CanShutdown">
      <topicdata group="api" />
      <apidata name="CanShutdown" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CanShutdown" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SPCanShutdown</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceProcess.ServiceController.CanStop">
      <topicdata group="api" />
      <apidata name="CanStop" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CanStop" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SPCanStop</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceProcess.ServiceController.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceController.Continue">
      <topicdata group="api" />
      <apidata name="Continue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceController.DependentServices">
      <topicdata group="api" />
      <apidata name="DependentServices" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DependentServices" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.ServiceProcess.ServiceController" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SPDependentServices</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceProcess.ServiceController.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DisplayName" />
      <setter name="set_DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SPDisplayName</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceProcess.ServiceController.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Component" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)">
      <topicdata group="api" />
      <apidata name="ExecuteCommand" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceController.GetDevices">
      <topicdata group="api" />
      <apidata name="GetDevices" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceProcess.ServiceController.GetDevices" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.ServiceProcess.ServiceController" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceController.GetDevices(System.String)">
      <topicdata group="api" />
      <apidata name="GetDevices" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceProcess.ServiceController.GetDevices" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.ServiceProcess.ServiceController" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceController.GetServices">
      <topicdata group="api" />
      <apidata name="GetServices" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceProcess.ServiceController.GetServices" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.ServiceProcess.ServiceController" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceController.GetServices(System.String)">
      <topicdata group="api" />
      <apidata name="GetServices" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceProcess.ServiceController.GetServices" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.ServiceProcess.ServiceController" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceController.MachineName">
      <topicdata group="api" />
      <apidata name="MachineName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MachineName" />
      <setter name="set_MachineName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SPMachineName</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceProcess.ServiceController.Pause">
      <topicdata group="api" />
      <apidata name="Pause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceController.Refresh">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceController.ServiceHandle">
      <topicdata group="api" />
      <apidata name="ServiceHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ServiceHandle" />
      <returns>
        <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceProcess.ServiceController.ServiceName">
      <topicdata group="api" />
      <apidata name="ServiceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServiceName" />
      <setter name="set_ServiceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SPServiceName</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceProcess.ServiceController.ServicesDependedOn">
      <topicdata group="api" />
      <apidata name="ServicesDependedOn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ServicesDependedOn" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.ServiceProcess.ServiceController" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SPServicesDependedOn</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceProcess.ServiceController.ServiceType">
      <topicdata group="api" />
      <apidata name="ServiceType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ServiceType" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SPServiceType</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceProcess.ServiceController.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceProcess.ServiceController.Start" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceController.Start(System.String[])">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceProcess.ServiceController.Start" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceController.StartType">
      <topicdata group="api" />
      <apidata name="StartType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StartType" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceStartMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SPStartType</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceProcess.ServiceController.Status">
      <topicdata group="api" />
      <apidata name="Status" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Status" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceControllerStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SPStatus</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceProcess.ServiceController.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)">
      <topicdata group="api" />
      <apidata name="WaitForStatus" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceProcess.ServiceController.WaitForStatus" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="desiredStatus">
          <type api="T:System.ServiceProcess.ServiceControllerStatus" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="WaitForStatus" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceProcess.ServiceController.WaitForStatus" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="desiredStatus">
          <type api="T:System.ServiceProcess.ServiceControllerStatus" ref="false" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceProcess.ServiceControllerPermission">
      <topicdata group="api" />
      <apidata name="ServiceControllerPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.ServiceProcess.ServiceControllerPermission.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.ResourcePermissionBase" ref="true" />
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Copy" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.ToXml" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)" />
        <element api="Overload:System.ServiceProcess.ServiceControllerPermission.#ctor">
          <element api="M:System.ServiceProcess.ServiceControllerPermission.#ctor" />
          <element api="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.Security.Permissions.PermissionState)" />
          <element api="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionEntry[])" />
          <element api="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)" />
        </element>
        <element api="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceProcess.ServiceControllerPermission">
      <topicdata name="ServiceControllerPermission" group="list" subgroup="Methods" typeTopicId="T:System.ServiceProcess.ServiceControllerPermission" />
      <apidata name="ServiceControllerPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.ServiceProcess.ServiceControllerPermission.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Copy" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.ToXml" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermission" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceProcess.ServiceControllerPermission">
      <topicdata name="ServiceControllerPermission" group="list" subgroup="Properties" typeTopicId="T:System.ServiceProcess.ServiceControllerPermission" />
      <apidata name="ServiceControllerPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.ServiceProcess.ServiceControllerPermission.#ctor" />
      <elements>
        <element api="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermission" />
      </containers>
    </api>
    <api id="Overload:System.ServiceProcess.ServiceControllerPermission.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceProcess.ServiceControllerPermission.#ctor" />
        <element api="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.Security.Permissions.PermissionState)" />
        <element api="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionEntry[])" />
        <element api="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceControllerPermission.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceProcess.ServiceControllerPermission.#ctor" />
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.Security.Permissions.PermissionState)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceProcess.ServiceControllerPermission.#ctor" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Security.Permissions.PermissionState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceProcess.ServiceControllerPermission.#ctor" />
      <parameters>
        <parameter name="permissionAccess">
          <type api="T:System.ServiceProcess.ServiceControllerPermissionAccess" ref="false" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="serviceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionEntry[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceProcess.ServiceControllerPermission.#ctor" />
      <parameters>
        <parameter name="permissionAccessEntries">
          <arrayOf rank="1">
            <type api="T:System.ServiceProcess.ServiceControllerPermissionEntry" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermission" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries">
      <topicdata group="api" />
      <apidata name="PermissionEntries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PermissionEntries" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermission" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceProcess.ServiceControllerPermissionAccess">
      <topicdata group="api" />
      <apidata name="ServiceControllerPermissionAccess" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceProcess.ServiceControllerPermissionAccess.None" />
        <element api="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse" />
        <element api="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse">
      <topicdata group="api" notopic="" />
      <apidata name="Browse" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceControllerPermissionAccess" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionAccess" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control">
      <topicdata group="api" notopic="" />
      <apidata name="Control" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceControllerPermissionAccess" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionAccess" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceControllerPermissionAccess.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceControllerPermissionAccess" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionAccess" ref="false" />
      </containers>
    </api>
    <api id="T:System.ServiceProcess.ServiceControllerPermissionAttribute">
      <topicdata group="api" />
      <apidata name="ServiceControllerPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.CodeAccessSecurityAttribute" ref="true" />
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionAttribute.CreatePermission" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
        <element api="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName" />
        <element api="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess" />
        <element api="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
              <field name="Class" />
              <field name="Struct" />
              <field name="Constructor" />
              <field name="Method" />
              <field name="Event" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceProcess.ServiceControllerPermissionAttribute">
      <topicdata name="ServiceControllerPermissionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceProcess.ServiceControllerPermissionAttribute" />
      <apidata name="ServiceControllerPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionAttribute.CreatePermission" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceProcess.ServiceControllerPermissionAttribute">
      <topicdata name="ServiceControllerPermissionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceProcess.ServiceControllerPermissionAttribute" />
      <apidata name="ServiceControllerPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
        <element api="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName" />
        <element api="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess" />
        <element api="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionAttribute" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceControllerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceControllerPermissionAttribute.CreatePermission">
      <topicdata group="api" />
      <apidata name="CreatePermission" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Permissions.SecurityAttribute.CreatePermission">
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName">
      <topicdata group="api" />
      <apidata name="MachineName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MachineName" />
      <setter name="set_MachineName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess">
      <topicdata group="api" />
      <apidata name="PermissionAccess" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PermissionAccess" />
      <setter name="set_PermissionAccess" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceControllerPermissionAccess" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName">
      <topicdata group="api" />
      <apidata name="ServiceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServiceName" />
      <setter name="set_ServiceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceProcess.ServiceControllerPermissionEntry">
      <topicdata group="api" />
      <apidata name="ServiceControllerPermissionEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor">
          <element api="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor" />
          <element api="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)" />
        </element>
        <element api="P:System.ServiceProcess.ServiceControllerPermissionEntry.MachineName" />
        <element api="P:System.ServiceProcess.ServiceControllerPermissionEntry.PermissionAccess" />
        <element api="P:System.ServiceProcess.ServiceControllerPermissionEntry.ServiceName" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceProcess.ServiceControllerPermissionEntry">
      <topicdata name="ServiceControllerPermissionEntry" group="list" subgroup="Methods" typeTopicId="T:System.ServiceProcess.ServiceControllerPermissionEntry" />
      <apidata name="ServiceControllerPermissionEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntry" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceProcess.ServiceControllerPermissionEntry">
      <topicdata name="ServiceControllerPermissionEntry" group="list" subgroup="Properties" typeTopicId="T:System.ServiceProcess.ServiceControllerPermissionEntry" />
      <apidata name="ServiceControllerPermissionEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor" />
      <elements>
        <element api="P:System.ServiceProcess.ServiceControllerPermissionEntry.MachineName" />
        <element api="P:System.ServiceProcess.ServiceControllerPermissionEntry.PermissionAccess" />
        <element api="P:System.ServiceProcess.ServiceControllerPermissionEntry.ServiceName" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntry" />
      </containers>
    </api>
    <api id="Overload:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor" />
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor" />
      <parameters>
        <parameter name="permissionAccess">
          <type api="T:System.ServiceProcess.ServiceControllerPermissionAccess" ref="false" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="serviceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceControllerPermissionEntry.MachineName">
      <topicdata group="api" />
      <apidata name="MachineName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MachineName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceControllerPermissionEntry.PermissionAccess">
      <topicdata group="api" />
      <apidata name="PermissionAccess" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PermissionAccess" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceControllerPermissionAccess" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceControllerPermissionEntry.ServiceName">
      <topicdata group="api" />
      <apidata name="ServiceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ServiceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntry" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection">
      <topicdata group="api" />
      <apidata name="ServiceControllerPermissionEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Add(System.ServiceProcess.ServiceControllerPermissionEntry)" />
        <element api="Overload:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange">
          <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntry[])" />
          <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntryCollection)" />
        </element>
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Contains(System.ServiceProcess.ServiceControllerPermissionEntry)" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.CopyTo(System.ServiceProcess.ServiceControllerPermissionEntry[],System.Int32)" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.IndexOf(System.ServiceProcess.ServiceControllerPermissionEntry)" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Insert(System.Int32,System.ServiceProcess.ServiceControllerPermissionEntry)" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnClear" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Remove(System.ServiceProcess.ServiceControllerPermissionEntry)" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceProcess.ServiceControllerPermissionEntryCollection">
      <topicdata name="ServiceControllerPermissionEntryCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" />
      <apidata name="ServiceControllerPermissionEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Add(System.ServiceProcess.ServiceControllerPermissionEntry)" />
        <element api="Overload:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange">
          <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntry[])" />
          <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntryCollection)" />
        </element>
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Contains(System.ServiceProcess.ServiceControllerPermissionEntry)" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.CopyTo(System.ServiceProcess.ServiceControllerPermissionEntry[],System.Int32)" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.IndexOf(System.ServiceProcess.ServiceControllerPermissionEntry)" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Insert(System.Int32,System.ServiceProcess.ServiceControllerPermissionEntry)" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnClear" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Remove(System.ServiceProcess.ServiceControllerPermissionEntry)" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceProcess.ServiceControllerPermissionEntryCollection">
      <topicdata name="ServiceControllerPermissionEntryCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" />
      <apidata name="ServiceControllerPermissionEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" />
      </containers>
    </api>
    <api id="Overload:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntry[])" />
        <element api="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntryCollection)" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Add(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ServiceProcess.ServiceControllerPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntry[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.ServiceProcess.ServiceControllerPermissionEntry" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntryCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Contains(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ServiceProcess.ServiceControllerPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.CopyTo(System.ServiceProcess.ServiceControllerPermissionEntry[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.ServiceProcess.ServiceControllerPermissionEntry" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.IndexOf(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ServiceProcess.ServiceControllerPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Insert(System.Int32,System.ServiceProcess.ServiceControllerPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.ServiceProcess.ServiceControllerPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnClear">
      <topicdata group="api" />
      <apidata name="OnClear" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClear">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsert" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemove" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSet" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Remove(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ServiceProcess.ServiceControllerPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceProcess.ServiceControllerStatus">
      <topicdata group="api" />
      <apidata name="ServiceControllerStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceProcess.ServiceControllerStatus.ContinuePending" />
        <element api="F:System.ServiceProcess.ServiceControllerStatus.Paused" />
        <element api="F:System.ServiceProcess.ServiceControllerStatus.PausePending" />
        <element api="F:System.ServiceProcess.ServiceControllerStatus.Running" />
        <element api="F:System.ServiceProcess.ServiceControllerStatus.StartPending" />
        <element api="F:System.ServiceProcess.ServiceControllerStatus.Stopped" />
        <element api="F:System.ServiceProcess.ServiceControllerStatus.StopPending" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceControllerStatus.ContinuePending">
      <topicdata group="api" notopic="" />
      <apidata name="ContinuePending" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceControllerStatus" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceControllerStatus.Paused">
      <topicdata group="api" notopic="" />
      <apidata name="Paused" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceControllerStatus" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceControllerStatus.PausePending">
      <topicdata group="api" notopic="" />
      <apidata name="PausePending" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceControllerStatus" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceControllerStatus.Running">
      <topicdata group="api" notopic="" />
      <apidata name="Running" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceControllerStatus" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceControllerStatus.StartPending">
      <topicdata group="api" notopic="" />
      <apidata name="StartPending" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceControllerStatus" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceControllerStatus.Stopped">
      <topicdata group="api" notopic="" />
      <apidata name="Stopped" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceControllerStatus" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceControllerStatus.StopPending">
      <topicdata group="api" notopic="" />
      <apidata name="StopPending" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceControllerStatus" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceControllerStatus" ref="false" />
      </containers>
    </api>
    <api id="T:System.ServiceProcess.ServiceInstaller">
      <topicdata group="api" />
      <apidata name="ServiceInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceProcess.ServiceInstaller.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.Install.ComponentInstaller" ref="true" />
          <type api="T:System.Configuration.Install.Installer" ref="true" />
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Configuration.Install.Installer.AfterInstall" />
        <element api="E:System.Configuration.Install.Installer.AfterRollback" />
        <element api="E:System.Configuration.Install.Installer.AfterUninstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeInstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeRollback" />
        <element api="E:System.Configuration.Install.Installer.BeforeUninstall" />
        <element api="E:System.Configuration.Install.Installer.Committed" />
        <element api="E:System.Configuration.Install.Installer.Committing" />
        <element api="Overload:System.ServiceProcess.ServiceInstaller.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.ServiceProcess.ServiceInstaller.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ServiceProcess.ServiceInstaller.#ctor" />
        <element api="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
        <element api="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" />
        <element api="M:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
        <element api="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)" />
        <element api="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Configuration.Install.Installer.Context" />
        <element api="P:System.Configuration.Install.Installer.HelpText" />
        <element api="P:System.Configuration.Install.Installer.Installers" />
        <element api="P:System.Configuration.Install.Installer.Parent" />
        <element api="P:System.ServiceProcess.ServiceInstaller.DelayedAutoStart" />
        <element api="P:System.ServiceProcess.ServiceInstaller.Description" />
        <element api="P:System.ServiceProcess.ServiceInstaller.DisplayName" />
        <element api="P:System.ServiceProcess.ServiceInstaller.ServiceName" />
        <element api="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn" />
        <element api="P:System.ServiceProcess.ServiceInstaller.StartType" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceProcess.ServiceInstaller">
      <topicdata name="ServiceInstaller" group="list" subgroup="Methods" typeTopicId="T:System.ServiceProcess.ServiceInstaller" />
      <apidata name="ServiceInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceProcess.ServiceInstaller.#ctor" />
      <elements>
        <element api="Overload:System.ServiceProcess.ServiceInstaller.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.ServiceProcess.ServiceInstaller.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
        <element api="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" />
        <element api="M:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
        <element api="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)" />
        <element api="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceInstaller" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceProcess.ServiceInstaller">
      <topicdata name="ServiceInstaller" group="list" subgroup="Properties" typeTopicId="T:System.ServiceProcess.ServiceInstaller" />
      <apidata name="ServiceInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceProcess.ServiceInstaller.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Configuration.Install.Installer.Context" />
        <element api="P:System.Configuration.Install.Installer.HelpText" />
        <element api="P:System.Configuration.Install.Installer.Installers" />
        <element api="P:System.Configuration.Install.Installer.Parent" />
        <element api="P:System.ServiceProcess.ServiceInstaller.DelayedAutoStart" />
        <element api="P:System.ServiceProcess.ServiceInstaller.Description" />
        <element api="P:System.ServiceProcess.ServiceInstaller.DisplayName" />
        <element api="P:System.ServiceProcess.ServiceInstaller.ServiceName" />
        <element api="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn" />
        <element api="P:System.ServiceProcess.ServiceInstaller.StartType" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceInstaller" />
      </containers>
    </api>
    <api id="Events.T:System.ServiceProcess.ServiceInstaller">
      <topicdata name="ServiceInstaller" group="list" subgroup="Events" typeTopicId="T:System.ServiceProcess.ServiceInstaller" />
      <apidata name="ServiceInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceProcess.ServiceInstaller.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Configuration.Install.Installer.AfterInstall" />
        <element api="E:System.Configuration.Install.Installer.AfterRollback" />
        <element api="E:System.Configuration.Install.Installer.AfterUninstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeInstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeRollback" />
        <element api="E:System.Configuration.Install.Installer.BeforeUninstall" />
        <element api="E:System.Configuration.Install.Installer.Committed" />
        <element api="E:System.Configuration.Install.Installer.Committing" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceInstaller" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceInstaller.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceInstaller" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="CopyFromComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
          <type api="T:System.Configuration.Install.ComponentInstaller" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceInstaller" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceInstaller.DelayedAutoStart">
      <topicdata group="api" />
      <apidata name="DelayedAutoStart" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DelayedAutoStart" />
      <setter name="set_DelayedAutoStart" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceInstaller" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ServiceInstallerDelayedAutoStart</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceProcess.ServiceInstaller.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Description" />
      <setter name="set_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceInstaller" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ServiceInstallerDescription</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceProcess.ServiceInstaller.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DisplayName" />
      <setter name="set_DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceInstaller" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ServiceInstallerDisplayName</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="Install" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Install.Installer.Install(System.Collections.IDictionary)">
          <type api="T:System.Configuration.Install.Installer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="stateSaver">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceInstaller" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)">
      <topicdata group="api" />
      <apidata name="IsEquivalentInstaller" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)">
          <type api="T:System.Configuration.Install.ComponentInstaller" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="otherInstaller">
          <type api="T:System.Configuration.Install.ComponentInstaller" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceInstaller" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="Rollback" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)">
          <type api="T:System.Configuration.Install.Installer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="savedState">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceInstaller" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceInstaller.ServiceName">
      <topicdata group="api" />
      <apidata name="ServiceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServiceName" />
      <setter name="set_ServiceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceInstaller" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ServiceInstallerServiceName</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn">
      <topicdata group="api" />
      <apidata name="ServicesDependedOn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServicesDependedOn" />
      <setter name="set_ServicesDependedOn" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceInstaller" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ServiceInstallerServicesDependedOn</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceProcess.ServiceInstaller.StartType">
      <topicdata group="api" />
      <apidata name="StartType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_StartType" />
      <setter name="set_StartType" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceStartMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceInstaller" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceProcess.ServiceStartMode" ref="false" />
            <enumValue>
              <field name="Manual" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ServiceInstallerStartType</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="Uninstall" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)">
          <type api="T:System.Configuration.Install.Installer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="savedState">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceInstaller" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceProcess.ServiceProcessDescriptionAttribute">
      <topicdata group="api" />
      <apidata name="ServiceProcessDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceProcess.ServiceProcessDescriptionAttribute.#ctor(System.String)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DescriptionAttribute.DescriptionValue" />
        <element api="P:System.ServiceProcess.ServiceProcessDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceProcess.ServiceProcessDescriptionAttribute">
      <topicdata name="ServiceProcessDescriptionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" />
      <apidata name="ServiceProcessDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceProcess.ServiceProcessDescriptionAttribute">
      <topicdata name="ServiceProcessDescriptionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" />
      <apidata name="ServiceProcessDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DescriptionAttribute.DescriptionValue" />
        <element api="P:System.ServiceProcess.ServiceProcessDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceProcessDescriptionAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceProcessDescriptionAttribute.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.DescriptionAttribute.Description">
          <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceProcess.ServiceProcessInstaller">
      <topicdata group="api" />
      <apidata name="ServiceProcessInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceProcess.ServiceProcessInstaller.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.Install.ComponentInstaller" ref="true" />
          <type api="T:System.Configuration.Install.Installer" ref="true" />
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Configuration.Install.Installer.AfterInstall" />
        <element api="E:System.Configuration.Install.Installer.AfterRollback" />
        <element api="E:System.Configuration.Install.Installer.AfterUninstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeInstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeRollback" />
        <element api="E:System.Configuration.Install.Installer.BeforeUninstall" />
        <element api="E:System.Configuration.Install.Installer.Committed" />
        <element api="E:System.Configuration.Install.Installer.Committing" />
        <element api="Overload:System.ServiceProcess.ServiceProcessInstaller.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
        <element api="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.ServiceProcess.ServiceProcessInstaller.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ServiceProcess.ServiceProcessInstaller.#ctor" />
        <element api="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
        <element api="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <element api="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Configuration.Install.Installer.Context" />
        <element api="P:System.Configuration.Install.Installer.Installers" />
        <element api="P:System.Configuration.Install.Installer.Parent" />
        <element api="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <element api="P:System.ServiceProcess.ServiceProcessInstaller.HelpText" />
        <element api="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <element api="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceProcess.ServiceProcessInstaller">
      <topicdata name="ServiceProcessInstaller" group="list" subgroup="Methods" typeTopicId="T:System.ServiceProcess.ServiceProcessInstaller" />
      <apidata name="ServiceProcessInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceProcess.ServiceProcessInstaller.#ctor" />
      <elements>
        <element api="Overload:System.ServiceProcess.ServiceProcessInstaller.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
        <element api="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.ServiceProcess.ServiceProcessInstaller.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
        <element api="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <element api="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceProcessInstaller" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceProcess.ServiceProcessInstaller">
      <topicdata name="ServiceProcessInstaller" group="list" subgroup="Properties" typeTopicId="T:System.ServiceProcess.ServiceProcessInstaller" />
      <apidata name="ServiceProcessInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceProcess.ServiceProcessInstaller.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Configuration.Install.Installer.Context" />
        <element api="P:System.Configuration.Install.Installer.Installers" />
        <element api="P:System.Configuration.Install.Installer.Parent" />
        <element api="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <element api="P:System.ServiceProcess.ServiceProcessInstaller.HelpText" />
        <element api="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <element api="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceProcessInstaller" />
      </containers>
    </api>
    <api id="Events.T:System.ServiceProcess.ServiceProcessInstaller">
      <topicdata name="ServiceProcessInstaller" group="list" subgroup="Events" typeTopicId="T:System.ServiceProcess.ServiceProcessInstaller" />
      <apidata name="ServiceProcessInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceProcess.ServiceProcessInstaller.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Configuration.Install.Installer.AfterInstall" />
        <element api="E:System.Configuration.Install.Installer.AfterRollback" />
        <element api="E:System.Configuration.Install.Installer.AfterUninstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeInstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeRollback" />
        <element api="E:System.Configuration.Install.Installer.BeforeUninstall" />
        <element api="E:System.Configuration.Install.Installer.Committed" />
        <element api="E:System.Configuration.Install.Installer.Committing" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceProcessInstaller" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceProcessInstaller.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceProcessInstaller" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceProcessInstaller.Account">
      <topicdata group="api" />
      <apidata name="Account" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Account" />
      <setter name="set_Account" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceAccount" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceProcessInstaller" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceProcess.ServiceAccount" ref="false" />
            <enumValue>
              <field name="User" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ServiceProcessInstallerAccount</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="CopyFromComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
          <type api="T:System.Configuration.Install.ComponentInstaller" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="comp">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceProcessInstaller" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceProcessInstaller.HelpText">
      <topicdata group="api" />
      <apidata name="HelpText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.Install.Installer.HelpText">
          <type api="T:System.Configuration.Install.Installer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HelpText" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceProcessInstaller" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="Install" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Install.Installer.Install(System.Collections.IDictionary)">
          <type api="T:System.Configuration.Install.Installer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="stateSaver">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceProcessInstaller" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceProcessInstaller.Password">
      <topicdata group="api" />
      <apidata name="Password" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Password" />
      <setter name="set_Password" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceProcessInstaller" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="Rollback" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)">
          <type api="T:System.Configuration.Install.Installer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="savedState">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceProcessInstaller" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.ServiceProcessInstaller.Username">
      <topicdata group="api" />
      <apidata name="Username" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Username" />
      <setter name="set_Username" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceProcessInstaller" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceProcess.ServiceStartMode">
      <topicdata group="api" />
      <apidata name="ServiceStartMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceProcess.ServiceStartMode.Manual" />
        <element api="F:System.ServiceProcess.ServiceStartMode.Automatic" />
        <element api="F:System.ServiceProcess.ServiceStartMode.Disabled" />
        <element api="F:System.ServiceProcess.ServiceStartMode.Boot" />
        <element api="F:System.ServiceProcess.ServiceStartMode.System" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceStartMode.Automatic">
      <topicdata group="api" notopic="" />
      <apidata name="Automatic" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceStartMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceStartMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceStartMode.Boot">
      <topicdata group="api" notopic="" />
      <apidata name="Boot" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceStartMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceStartMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceStartMode.Disabled">
      <topicdata group="api" notopic="" />
      <apidata name="Disabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceStartMode" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceStartMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceStartMode.Manual">
      <topicdata group="api" notopic="" />
      <apidata name="Manual" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceStartMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceStartMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceStartMode.System">
      <topicdata group="api" notopic="" />
      <apidata name="System" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceStartMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceStartMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.ServiceProcess.ServiceType">
      <topicdata group="api" />
      <apidata name="ServiceType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceProcess.ServiceType.Adapter" />
        <element api="F:System.ServiceProcess.ServiceType.FileSystemDriver" />
        <element api="F:System.ServiceProcess.ServiceType.InteractiveProcess" />
        <element api="F:System.ServiceProcess.ServiceType.KernelDriver" />
        <element api="F:System.ServiceProcess.ServiceType.RecognizerDriver" />
        <element api="F:System.ServiceProcess.ServiceType.Win32OwnProcess" />
        <element api="F:System.ServiceProcess.ServiceType.Win32ShareProcess" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.ServiceProcess.ServiceType.Adapter">
      <topicdata group="api" notopic="" />
      <apidata name="Adapter" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceType.FileSystemDriver">
      <topicdata group="api" notopic="" />
      <apidata name="FileSystemDriver" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceType.InteractiveProcess">
      <topicdata group="api" notopic="" />
      <apidata name="InteractiveProcess" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceType" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceType.KernelDriver">
      <topicdata group="api" notopic="" />
      <apidata name="KernelDriver" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceType.RecognizerDriver">
      <topicdata group="api" notopic="" />
      <apidata name="RecognizerDriver" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceType" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceType.Win32OwnProcess">
      <topicdata group="api" notopic="" />
      <apidata name="Win32OwnProcess" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceType" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.ServiceType.Win32ShareProcess">
      <topicdata group="api" notopic="" />
      <apidata name="Win32ShareProcess" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceType" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.ServiceType" ref="false" />
      </containers>
    </api>
    <api id="T:System.ServiceProcess.SessionChangeDescription">
      <topicdata group="api" />
      <apidata name="SessionChangeDescription" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.ServiceProcess.SessionChangeDescription.Equals">
          <element api="M:System.ServiceProcess.SessionChangeDescription.Equals(System.Object)" />
          <element api="M:System.ServiceProcess.SessionChangeDescription.Equals(System.ServiceProcess.SessionChangeDescription)" />
        </element>
        <element api="M:System.ServiceProcess.SessionChangeDescription.GetHashCode" />
        <element api="M:System.ServiceProcess.SessionChangeDescription.op_Equality(System.ServiceProcess.SessionChangeDescription,System.ServiceProcess.SessionChangeDescription)" />
        <element api="M:System.ServiceProcess.SessionChangeDescription.op_Inequality(System.ServiceProcess.SessionChangeDescription,System.ServiceProcess.SessionChangeDescription)" />
        <element api="M:System.ValueType.ToString" />
        <element api="P:System.ServiceProcess.SessionChangeDescription.Reason" />
        <element api="P:System.ServiceProcess.SessionChangeDescription.SessionId" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceProcess.SessionChangeDescription">
      <topicdata name="SessionChangeDescription" group="list" subgroup="Methods" typeTopicId="T:System.ServiceProcess.SessionChangeDescription" />
      <apidata name="SessionChangeDescription" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.ServiceProcess.SessionChangeDescription.Equals">
          <element api="M:System.ServiceProcess.SessionChangeDescription.Equals(System.Object)" />
          <element api="M:System.ServiceProcess.SessionChangeDescription.Equals(System.ServiceProcess.SessionChangeDescription)" />
        </element>
        <element api="M:System.ServiceProcess.SessionChangeDescription.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.SessionChangeDescription" />
      </containers>
    </api>
    <api id="Operators.T:System.ServiceProcess.SessionChangeDescription">
      <topicdata name="SessionChangeDescription" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.ServiceProcess.SessionChangeDescription" />
      <apidata name="SessionChangeDescription" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.ServiceProcess.SessionChangeDescription.op_Equality(System.ServiceProcess.SessionChangeDescription,System.ServiceProcess.SessionChangeDescription)" />
        <element api="M:System.ServiceProcess.SessionChangeDescription.op_Inequality(System.ServiceProcess.SessionChangeDescription,System.ServiceProcess.SessionChangeDescription)" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.SessionChangeDescription" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceProcess.SessionChangeDescription">
      <topicdata name="SessionChangeDescription" group="list" subgroup="Properties" typeTopicId="T:System.ServiceProcess.SessionChangeDescription" />
      <apidata name="SessionChangeDescription" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.ServiceProcess.SessionChangeDescription.Reason" />
        <element api="P:System.ServiceProcess.SessionChangeDescription.SessionId" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.SessionChangeDescription" />
      </containers>
    </api>
    <api id="Overload:System.ServiceProcess.SessionChangeDescription.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceProcess.SessionChangeDescription.Equals(System.Object)" />
        <element api="M:System.ServiceProcess.SessionChangeDescription.Equals(System.ServiceProcess.SessionChangeDescription)" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.SessionChangeDescription" ref="false" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.SessionChangeDescription.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceProcess.SessionChangeDescription.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.SessionChangeDescription" ref="false" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.SessionChangeDescription.Equals(System.ServiceProcess.SessionChangeDescription)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceProcess.SessionChangeDescription.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="changeDescription">
          <type api="T:System.ServiceProcess.SessionChangeDescription" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.SessionChangeDescription" ref="false" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.SessionChangeDescription.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.SessionChangeDescription" ref="false" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.SessionChangeDescription.op_Equality(System.ServiceProcess.SessionChangeDescription,System.ServiceProcess.SessionChangeDescription)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="a">
          <type api="T:System.ServiceProcess.SessionChangeDescription" ref="false" />
        </parameter>
        <parameter name="b">
          <type api="T:System.ServiceProcess.SessionChangeDescription" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.SessionChangeDescription" ref="false" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.SessionChangeDescription.op_Inequality(System.ServiceProcess.SessionChangeDescription,System.ServiceProcess.SessionChangeDescription)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="a">
          <type api="T:System.ServiceProcess.SessionChangeDescription" ref="false" />
        </parameter>
        <parameter name="b">
          <type api="T:System.ServiceProcess.SessionChangeDescription" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.SessionChangeDescription" ref="false" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.SessionChangeDescription.Reason">
      <topicdata group="api" />
      <apidata name="Reason" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Reason" />
      <returns>
        <type api="T:System.ServiceProcess.SessionChangeReason" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.SessionChangeDescription" ref="false" />
      </containers>
    </api>
    <api id="P:System.ServiceProcess.SessionChangeDescription.SessionId">
      <topicdata group="api" />
      <apidata name="SessionId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SessionId" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.SessionChangeDescription" ref="false" />
      </containers>
    </api>
    <api id="T:System.ServiceProcess.SessionChangeReason">
      <topicdata group="api" />
      <apidata name="SessionChangeReason" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceProcess.SessionChangeReason.ConsoleConnect" />
        <element api="F:System.ServiceProcess.SessionChangeReason.ConsoleDisconnect" />
        <element api="F:System.ServiceProcess.SessionChangeReason.RemoteConnect" />
        <element api="F:System.ServiceProcess.SessionChangeReason.RemoteDisconnect" />
        <element api="F:System.ServiceProcess.SessionChangeReason.SessionLogon" />
        <element api="F:System.ServiceProcess.SessionChangeReason.SessionLogoff" />
        <element api="F:System.ServiceProcess.SessionChangeReason.SessionLock" />
        <element api="F:System.ServiceProcess.SessionChangeReason.SessionUnlock" />
        <element api="F:System.ServiceProcess.SessionChangeReason.SessionRemoteControl" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.SessionChangeReason.ConsoleConnect">
      <topicdata group="api" notopic="" />
      <apidata name="ConsoleConnect" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.SessionChangeReason" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.SessionChangeReason" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.SessionChangeReason.ConsoleDisconnect">
      <topicdata group="api" notopic="" />
      <apidata name="ConsoleDisconnect" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.SessionChangeReason" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.SessionChangeReason" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.SessionChangeReason.RemoteConnect">
      <topicdata group="api" notopic="" />
      <apidata name="RemoteConnect" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.SessionChangeReason" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.SessionChangeReason" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.SessionChangeReason.RemoteDisconnect">
      <topicdata group="api" notopic="" />
      <apidata name="RemoteDisconnect" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.SessionChangeReason" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.SessionChangeReason" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.SessionChangeReason.SessionLock">
      <topicdata group="api" notopic="" />
      <apidata name="SessionLock" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.SessionChangeReason" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.SessionChangeReason" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.SessionChangeReason.SessionLogoff">
      <topicdata group="api" notopic="" />
      <apidata name="SessionLogoff" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.SessionChangeReason" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.SessionChangeReason" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.SessionChangeReason.SessionLogon">
      <topicdata group="api" notopic="" />
      <apidata name="SessionLogon" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.SessionChangeReason" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.SessionChangeReason" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.SessionChangeReason.SessionRemoteControl">
      <topicdata group="api" notopic="" />
      <apidata name="SessionRemoteControl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.SessionChangeReason" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.SessionChangeReason" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceProcess.SessionChangeReason.SessionUnlock">
      <topicdata group="api" notopic="" />
      <apidata name="SessionUnlock" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.SessionChangeReason" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.SessionChangeReason" ref="false" />
      </containers>
    </api>
    <api id="T:System.ServiceProcess.TimeoutException">
      <topicdata group="api" />
      <apidata name="TimeoutException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceProcess.TimeoutException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceProcess.TimeoutException.#ctor">
          <element api="M:System.ServiceProcess.TimeoutException.#ctor" />
          <element api="M:System.ServiceProcess.TimeoutException.#ctor(System.String)" />
          <element api="M:System.ServiceProcess.TimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceProcess.TimeoutException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceProcess.TimeoutException">
      <topicdata name="TimeoutException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceProcess.TimeoutException" />
      <apidata name="TimeoutException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceProcess.TimeoutException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.TimeoutException" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceProcess.TimeoutException">
      <topicdata name="TimeoutException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceProcess.TimeoutException" />
      <apidata name="TimeoutException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceProcess.TimeoutException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.TimeoutException" />
      </containers>
    </api>
    <api id="Events.T:System.ServiceProcess.TimeoutException">
      <topicdata name="TimeoutException" group="list" subgroup="Events" typeTopicId="T:System.ServiceProcess.TimeoutException" />
      <apidata name="TimeoutException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceProcess.TimeoutException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.TimeoutException" />
      </containers>
    </api>
    <api id="Overload:System.ServiceProcess.TimeoutException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceProcess.TimeoutException.#ctor" />
        <element api="M:System.ServiceProcess.TimeoutException.#ctor(System.String)" />
        <element api="M:System.ServiceProcess.TimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceProcess.TimeoutException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.TimeoutException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.TimeoutException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceProcess.TimeoutException.#ctor" />
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.TimeoutException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.TimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceProcess.TimeoutException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.TimeoutException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.TimeoutException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceProcess.TimeoutException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.TimeoutException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceProcess.TimeoutException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceProcess.TimeoutException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceProcess" />
        <type api="T:System.ServiceProcess.TimeoutException" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>