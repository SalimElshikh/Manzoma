<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Data.Linq">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Linq.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Linq.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Linq.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Data.Linq.Mapping">
      <topicdata group="api" />
      <apidata name="System.Data.Linq.Mapping" group="namespace" />
      <elements>
        <element api="T:System.Data.Linq.Mapping.FunctionAttribute" />
        <element api="T:System.Data.Linq.Mapping.ResultTypeAttribute" />
        <element api="T:System.Data.Linq.Mapping.ParameterAttribute" />
        <element api="T:System.Data.Linq.Mapping.DatabaseAttribute" />
        <element api="T:System.Data.Linq.Mapping.TableAttribute" />
        <element api="T:System.Data.Linq.Mapping.InheritanceMappingAttribute" />
        <element api="T:System.Data.Linq.Mapping.DataAttribute" />
        <element api="T:System.Data.Linq.Mapping.UpdateCheck" />
        <element api="T:System.Data.Linq.Mapping.AutoSync" />
        <element api="T:System.Data.Linq.Mapping.ColumnAttribute" />
        <element api="T:System.Data.Linq.Mapping.AssociationAttribute" />
        <element api="T:System.Data.Linq.Mapping.ProviderAttribute" />
        <element api="T:System.Data.Linq.Mapping.MappingSource" />
        <element api="T:System.Data.Linq.Mapping.AttributeMappingSource" />
        <element api="T:System.Data.Linq.Mapping.XmlMappingSource" />
        <element api="T:System.Data.Linq.Mapping.MetaModel" />
        <element api="T:System.Data.Linq.Mapping.MetaTable" />
        <element api="T:System.Data.Linq.Mapping.MetaType" />
        <element api="T:System.Data.Linq.Mapping.MetaDataMember" />
        <element api="T:System.Data.Linq.Mapping.MetaFunction" />
        <element api="T:System.Data.Linq.Mapping.MetaParameter" />
        <element api="T:System.Data.Linq.Mapping.MetaAssociation" />
        <element api="T:System.Data.Linq.Mapping.MetaAccessor" />
        <element api="T:System.Data.Linq.Mapping.MetaAccessor`2" />
      </elements>
    </api>
    <api id="T:System.Data.Linq.Mapping.AssociationAttribute">
      <topicdata group="api" />
      <apidata name="AssociationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.AssociationAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.Linq.Mapping.DataAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Data.Linq.Mapping.AssociationAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Linq.Mapping.AssociationAttribute.DeleteOnNull" />
        <element api="P:System.Data.Linq.Mapping.AssociationAttribute.DeleteRule" />
        <element api="P:System.Data.Linq.Mapping.AssociationAttribute.IsForeignKey" />
        <element api="P:System.Data.Linq.Mapping.AssociationAttribute.IsUnique" />
        <element api="P:System.Data.Linq.Mapping.AssociationAttribute.OtherKey" />
        <element api="P:System.Data.Linq.Mapping.AssociationAttribute.ThisKey" />
        <element api="P:System.Data.Linq.Mapping.DataAttribute.Name" />
        <element api="P:System.Data.Linq.Mapping.DataAttribute.Storage" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.AssociationAttribute">
      <topicdata name="AssociationAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.AssociationAttribute" />
      <apidata name="AssociationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.AssociationAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.AssociationAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Linq.Mapping.AssociationAttribute">
      <topicdata name="AssociationAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Linq.Mapping.AssociationAttribute" />
      <apidata name="AssociationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.AssociationAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Linq.Mapping.AssociationAttribute.DeleteOnNull" />
        <element api="P:System.Data.Linq.Mapping.AssociationAttribute.DeleteRule" />
        <element api="P:System.Data.Linq.Mapping.AssociationAttribute.IsForeignKey" />
        <element api="P:System.Data.Linq.Mapping.AssociationAttribute.IsUnique" />
        <element api="P:System.Data.Linq.Mapping.AssociationAttribute.OtherKey" />
        <element api="P:System.Data.Linq.Mapping.AssociationAttribute.ThisKey" />
        <element api="P:System.Data.Linq.Mapping.DataAttribute.Name" />
        <element api="P:System.Data.Linq.Mapping.DataAttribute.Storage" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.AssociationAttribute" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.AssociationAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.AssociationAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.AssociationAttribute.DeleteOnNull">
      <topicdata group="api" />
      <apidata name="DeleteOnNull" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DeleteOnNull" />
      <setter name="set_DeleteOnNull" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.AssociationAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.AssociationAttribute.DeleteRule">
      <topicdata group="api" />
      <apidata name="DeleteRule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DeleteRule" />
      <setter name="set_DeleteRule" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.AssociationAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.AssociationAttribute.IsForeignKey">
      <topicdata group="api" />
      <apidata name="IsForeignKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsForeignKey" />
      <setter name="set_IsForeignKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.AssociationAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.AssociationAttribute.IsUnique">
      <topicdata group="api" />
      <apidata name="IsUnique" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsUnique" />
      <setter name="set_IsUnique" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.AssociationAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.AssociationAttribute.OtherKey">
      <topicdata group="api" />
      <apidata name="OtherKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OtherKey" />
      <setter name="set_OtherKey" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.AssociationAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.AssociationAttribute.ThisKey">
      <topicdata group="api" />
      <apidata name="ThisKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ThisKey" />
      <setter name="set_ThisKey" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.AssociationAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.AttributeMappingSource">
      <topicdata group="api" />
      <apidata name="AttributeMappingSource" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.AttributeMappingSource.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.Linq.Mapping.MappingSource" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.Linq.Mapping.AttributeMappingSource.#ctor" />
        <element api="M:System.Data.Linq.Mapping.MappingSource.GetModel(System.Type)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.AttributeMappingSource">
      <topicdata name="AttributeMappingSource" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.AttributeMappingSource" />
      <apidata name="AttributeMappingSource" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.AttributeMappingSource.#ctor" />
      <elements>
        <element api="M:System.Data.Linq.Mapping.MappingSource.GetModel(System.Type)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.AttributeMappingSource" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.AttributeMappingSource.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.AttributeMappingSource" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.AutoSync">
      <topicdata group="api" />
      <apidata name="AutoSync" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.Linq.Mapping.AutoSync.Default" />
        <element api="F:System.Data.Linq.Mapping.AutoSync.Always" />
        <element api="F:System.Data.Linq.Mapping.AutoSync.Never" />
        <element api="F:System.Data.Linq.Mapping.AutoSync.OnInsert" />
        <element api="F:System.Data.Linq.Mapping.AutoSync.OnUpdate" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
    </api>
    <api id="F:System.Data.Linq.Mapping.AutoSync.Always">
      <topicdata group="api" notopic="" />
      <apidata name="Always" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.AutoSync" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.AutoSync" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Linq.Mapping.AutoSync.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.AutoSync" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.AutoSync" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Linq.Mapping.AutoSync.Never">
      <topicdata group="api" notopic="" />
      <apidata name="Never" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.AutoSync" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.AutoSync" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Linq.Mapping.AutoSync.OnInsert">
      <topicdata group="api" notopic="" />
      <apidata name="OnInsert" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.AutoSync" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.AutoSync" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Linq.Mapping.AutoSync.OnUpdate">
      <topicdata group="api" notopic="" />
      <apidata name="OnUpdate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.AutoSync" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.AutoSync" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.ColumnAttribute">
      <topicdata group="api" />
      <apidata name="ColumnAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.ColumnAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.Linq.Mapping.DataAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Data.Linq.Mapping.ColumnAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Linq.Mapping.ColumnAttribute.AutoSync" />
        <element api="P:System.Data.Linq.Mapping.ColumnAttribute.CanBeNull" />
        <element api="P:System.Data.Linq.Mapping.ColumnAttribute.DbType" />
        <element api="P:System.Data.Linq.Mapping.ColumnAttribute.Expression" />
        <element api="P:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated" />
        <element api="P:System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator" />
        <element api="P:System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey" />
        <element api="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" />
        <element api="P:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck" />
        <element api="P:System.Data.Linq.Mapping.DataAttribute.Name" />
        <element api="P:System.Data.Linq.Mapping.DataAttribute.Storage" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.ColumnAttribute">
      <topicdata name="ColumnAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.ColumnAttribute" />
      <apidata name="ColumnAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.ColumnAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ColumnAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Linq.Mapping.ColumnAttribute">
      <topicdata name="ColumnAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Linq.Mapping.ColumnAttribute" />
      <apidata name="ColumnAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.ColumnAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Linq.Mapping.ColumnAttribute.AutoSync" />
        <element api="P:System.Data.Linq.Mapping.ColumnAttribute.CanBeNull" />
        <element api="P:System.Data.Linq.Mapping.ColumnAttribute.DbType" />
        <element api="P:System.Data.Linq.Mapping.ColumnAttribute.Expression" />
        <element api="P:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated" />
        <element api="P:System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator" />
        <element api="P:System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey" />
        <element api="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" />
        <element api="P:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck" />
        <element api="P:System.Data.Linq.Mapping.DataAttribute.Name" />
        <element api="P:System.Data.Linq.Mapping.DataAttribute.Storage" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ColumnAttribute" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.ColumnAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ColumnAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.ColumnAttribute.AutoSync">
      <topicdata group="api" />
      <apidata name="AutoSync" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AutoSync" />
      <setter name="set_AutoSync" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.AutoSync" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ColumnAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.ColumnAttribute.CanBeNull">
      <topicdata group="api" />
      <apidata name="CanBeNull" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CanBeNull" />
      <setter name="set_CanBeNull" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ColumnAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.ColumnAttribute.DbType">
      <topicdata group="api" />
      <apidata name="DbType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DbType" />
      <setter name="set_DbType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ColumnAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.ColumnAttribute.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Expression" />
      <setter name="set_Expression" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ColumnAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated">
      <topicdata group="api" />
      <apidata name="IsDbGenerated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsDbGenerated" />
      <setter name="set_IsDbGenerated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ColumnAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator">
      <topicdata group="api" />
      <apidata name="IsDiscriminator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsDiscriminator" />
      <setter name="set_IsDiscriminator" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ColumnAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey">
      <topicdata group="api" />
      <apidata name="IsPrimaryKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsPrimaryKey" />
      <setter name="set_IsPrimaryKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ColumnAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion">
      <topicdata group="api" />
      <apidata name="IsVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsVersion" />
      <setter name="set_IsVersion" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ColumnAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck">
      <topicdata group="api" />
      <apidata name="UpdateCheck" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UpdateCheck" />
      <setter name="set_UpdateCheck" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.UpdateCheck" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ColumnAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.DataAttribute">
      <topicdata group="api" />
      <apidata name="DataAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.Linq.Mapping.ColumnAttribute" ref="true" />
          <type api="T:System.Data.Linq.Mapping.AssociationAttribute" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Data.Linq.Mapping.DataAttribute.#ctor" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Linq.Mapping.DataAttribute.Name" />
        <element api="P:System.Data.Linq.Mapping.DataAttribute.Storage" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.DataAttribute">
      <topicdata name="DataAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.DataAttribute" />
      <apidata name="DataAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.DataAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Linq.Mapping.DataAttribute">
      <topicdata name="DataAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Linq.Mapping.DataAttribute" />
      <apidata name="DataAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Linq.Mapping.DataAttribute.Name" />
        <element api="P:System.Data.Linq.Mapping.DataAttribute.Storage" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.DataAttribute" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.DataAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.DataAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.DataAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.DataAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.DataAttribute.Storage">
      <topicdata group="api" />
      <apidata name="Storage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Storage" />
      <setter name="set_Storage" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.DataAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.DatabaseAttribute">
      <topicdata group="api" />
      <apidata name="DatabaseAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.DatabaseAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Data.Linq.Mapping.DatabaseAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Linq.Mapping.DatabaseAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.DatabaseAttribute">
      <topicdata name="DatabaseAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.DatabaseAttribute" />
      <apidata name="DatabaseAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.DatabaseAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.DatabaseAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Linq.Mapping.DatabaseAttribute">
      <topicdata name="DatabaseAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Linq.Mapping.DatabaseAttribute" />
      <apidata name="DatabaseAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.DatabaseAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Linq.Mapping.DatabaseAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.DatabaseAttribute" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.DatabaseAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.DatabaseAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.DatabaseAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.DatabaseAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.FunctionAttribute">
      <topicdata group="api" />
      <apidata name="FunctionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.FunctionAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Data.Linq.Mapping.FunctionAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Linq.Mapping.FunctionAttribute.IsComposable" />
        <element api="P:System.Data.Linq.Mapping.FunctionAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.FunctionAttribute">
      <topicdata name="FunctionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.FunctionAttribute" />
      <apidata name="FunctionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.FunctionAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.FunctionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Linq.Mapping.FunctionAttribute">
      <topicdata name="FunctionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Linq.Mapping.FunctionAttribute" />
      <apidata name="FunctionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.FunctionAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Linq.Mapping.FunctionAttribute.IsComposable" />
        <element api="P:System.Data.Linq.Mapping.FunctionAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.FunctionAttribute" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.FunctionAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.FunctionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.FunctionAttribute.IsComposable">
      <topicdata group="api" />
      <apidata name="IsComposable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsComposable" />
      <setter name="set_IsComposable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.FunctionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.FunctionAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.FunctionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.InheritanceMappingAttribute">
      <topicdata group="api" />
      <apidata name="InheritanceMappingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.Code" />
        <element api="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault" />
        <element api="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.InheritanceMappingAttribute">
      <topicdata name="InheritanceMappingAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.InheritanceMappingAttribute" />
      <apidata name="InheritanceMappingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.InheritanceMappingAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Linq.Mapping.InheritanceMappingAttribute">
      <topicdata name="InheritanceMappingAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Linq.Mapping.InheritanceMappingAttribute" />
      <apidata name="InheritanceMappingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.Code" />
        <element api="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault" />
        <element api="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.InheritanceMappingAttribute" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.InheritanceMappingAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.Code">
      <topicdata group="api" />
      <apidata name="Code" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Code" />
      <setter name="set_Code" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.InheritanceMappingAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault">
      <topicdata group="api" />
      <apidata name="IsDefault" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsDefault" />
      <setter name="set_IsDefault" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.InheritanceMappingAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.InheritanceMappingAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.MappingSource">
      <topicdata group="api" />
      <apidata name="MappingSource" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.Linq.Mapping.AttributeMappingSource" ref="true" />
          <type api="T:System.Data.Linq.Mapping.XmlMappingSource" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Data.Linq.Mapping.MappingSource.#ctor" />
        <element api="M:System.Data.Linq.Mapping.MappingSource.CreateModel(System.Type)" />
        <element api="M:System.Data.Linq.Mapping.MappingSource.GetModel(System.Type)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.MappingSource">
      <topicdata name="MappingSource" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.MappingSource" />
      <apidata name="MappingSource" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Linq.Mapping.MappingSource.CreateModel(System.Type)" />
        <element api="M:System.Data.Linq.Mapping.MappingSource.GetModel(System.Type)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MappingSource" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MappingSource.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MappingSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MappingSource.CreateModel(System.Type)">
      <topicdata group="api" />
      <apidata name="CreateModel" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="dataContextType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaModel" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MappingSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MappingSource.GetModel(System.Type)">
      <topicdata group="api" />
      <apidata name="GetModel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dataContextType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaModel" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MappingSource" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.MetaAccessor">
      <topicdata group="api" />
      <apidata name="MetaAccessor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.Linq.Mapping.MetaAccessor`2" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Data.Linq.Mapping.MetaAccessor.#ctor" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor.GetBoxedValue(System.Object)" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor.HasAssignedValue(System.Object)" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor.HasLoadedValue(System.Object)" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor.HasValue(System.Object)" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor.SetBoxedValue(System.Object@,System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Linq.Mapping.MetaAccessor.Type" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.MetaAccessor">
      <topicdata name="MetaAccessor" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.MetaAccessor" />
      <apidata name="MetaAccessor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Linq.Mapping.MetaAccessor.GetBoxedValue(System.Object)" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor.HasAssignedValue(System.Object)" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor.HasLoadedValue(System.Object)" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor.HasValue(System.Object)" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor.SetBoxedValue(System.Object@,System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAccessor" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Linq.Mapping.MetaAccessor">
      <topicdata name="MetaAccessor" group="list" subgroup="Properties" typeTopicId="T:System.Data.Linq.Mapping.MetaAccessor" />
      <apidata name="MetaAccessor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Linq.Mapping.MetaAccessor.Type" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAccessor" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaAccessor.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAccessor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaAccessor.GetBoxedValue(System.Object)">
      <topicdata group="api" />
      <apidata name="GetBoxedValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAccessor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaAccessor.HasAssignedValue(System.Object)">
      <topicdata group="api" />
      <apidata name="HasAssignedValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAccessor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaAccessor.HasLoadedValue(System.Object)">
      <topicdata group="api" />
      <apidata name="HasLoadedValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAccessor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaAccessor.HasValue(System.Object)">
      <topicdata group="api" />
      <apidata name="HasValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAccessor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaAccessor.SetBoxedValue(System.Object@,System.Object)">
      <topicdata group="api" />
      <apidata name="SetBoxedValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instance">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAccessor" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaAccessor.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAccessor" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.MetaAccessor`2">
      <topicdata group="api" />
      <apidata name="MetaAccessor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.Linq.Mapping.MetaAccessor" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TEntity" />
        <template name="TMember" />
      </templates>
      <elements>
        <element api="M:System.Data.Linq.Mapping.MetaAccessor.HasAssignedValue(System.Object)" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor.HasLoadedValue(System.Object)" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor.HasValue(System.Object)" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor`2.#ctor" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor`2.GetBoxedValue(System.Object)" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor`2.GetValue(`0)" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor`2.SetBoxedValue(System.Object@,System.Object)" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor`2.SetValue(`0@,`1)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Linq.Mapping.MetaAccessor`2.Type" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.MetaAccessor`2">
      <topicdata name="MetaAccessor" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.MetaAccessor`2" />
      <apidata name="MetaAccessor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TEntity" />
        <template name="TMember" />
      </templates>
      <elements>
        <element api="M:System.Data.Linq.Mapping.MetaAccessor.HasAssignedValue(System.Object)" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor.HasLoadedValue(System.Object)" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor.HasValue(System.Object)" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor`2.GetBoxedValue(System.Object)" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor`2.GetValue(`0)" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor`2.SetBoxedValue(System.Object@,System.Object)" />
        <element api="M:System.Data.Linq.Mapping.MetaAccessor`2.SetValue(`0@,`1)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAccessor`2" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Linq.Mapping.MetaAccessor`2">
      <topicdata name="MetaAccessor" group="list" subgroup="Properties" typeTopicId="T:System.Data.Linq.Mapping.MetaAccessor`2" />
      <apidata name="MetaAccessor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TEntity" />
        <template name="TMember" />
      </templates>
      <elements>
        <element api="P:System.Data.Linq.Mapping.MetaAccessor`2.Type" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAccessor`2" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaAccessor`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAccessor`2" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaAccessor`2.GetBoxedValue(System.Object)">
      <topicdata group="api" />
      <apidata name="GetBoxedValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Linq.Mapping.MetaAccessor.GetBoxedValue(System.Object)">
          <type api="T:System.Data.Linq.Mapping.MetaAccessor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAccessor`2" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaAccessor`2.GetValue(`0)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instance">
          <template name="TEntity" index="0" api="T:System.Data.Linq.Mapping.MetaAccessor`2" />
        </parameter>
      </parameters>
      <returns>
        <template name="TMember" index="1" api="T:System.Data.Linq.Mapping.MetaAccessor`2" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAccessor`2" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaAccessor`2.SetBoxedValue(System.Object@,System.Object)">
      <topicdata group="api" />
      <apidata name="SetBoxedValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Linq.Mapping.MetaAccessor.SetBoxedValue(System.Object@,System.Object)">
          <type api="T:System.Data.Linq.Mapping.MetaAccessor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="instance">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAccessor`2" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaAccessor`2.SetValue(`0@,`1)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instance">
          <referenceTo>
            <template name="TEntity" index="0" api="T:System.Data.Linq.Mapping.MetaAccessor`2" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <template name="TMember" index="1" api="T:System.Data.Linq.Mapping.MetaAccessor`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAccessor`2" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaAccessor`2.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Data.Linq.Mapping.MetaAccessor.Type">
          <type api="T:System.Data.Linq.Mapping.MetaAccessor" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAccessor`2" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.MetaAssociation">
      <topicdata group="api" />
      <apidata name="MetaAssociation" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.Linq.Mapping.MetaAssociation.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.DeleteRule" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.IsForeignKey" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.IsMany" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.IsNullable" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.IsUnique" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.OtherKey" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.OtherMember" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.OtherType" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.ThisKey" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.ThisMember" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.MetaAssociation">
      <topicdata name="MetaAssociation" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.MetaAssociation" />
      <apidata name="MetaAssociation" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAssociation" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Linq.Mapping.MetaAssociation">
      <topicdata name="MetaAssociation" group="list" subgroup="Properties" typeTopicId="T:System.Data.Linq.Mapping.MetaAssociation" />
      <apidata name="MetaAssociation" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.DeleteRule" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.IsForeignKey" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.IsMany" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.IsNullable" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.IsUnique" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.OtherKey" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.OtherMember" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.OtherType" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.ThisKey" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey" />
        <element api="P:System.Data.Linq.Mapping.MetaAssociation.ThisMember" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAssociation" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaAssociation.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAssociation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull">
      <topicdata group="api" />
      <apidata name="DeleteOnNull" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DeleteOnNull" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAssociation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaAssociation.DeleteRule">
      <topicdata group="api" />
      <apidata name="DeleteRule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DeleteRule" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAssociation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaAssociation.IsForeignKey">
      <topicdata group="api" />
      <apidata name="IsForeignKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsForeignKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAssociation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaAssociation.IsMany">
      <topicdata group="api" />
      <apidata name="IsMany" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsMany" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAssociation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaAssociation.IsNullable">
      <topicdata group="api" />
      <apidata name="IsNullable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsNullable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAssociation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaAssociation.IsUnique">
      <topicdata group="api" />
      <apidata name="IsUnique" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsUnique" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAssociation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaAssociation.OtherKey">
      <topicdata group="api" />
      <apidata name="OtherKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_OtherKey" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAssociation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey">
      <topicdata group="api" />
      <apidata name="OtherKeyIsPrimaryKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_OtherKeyIsPrimaryKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAssociation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaAssociation.OtherMember">
      <topicdata group="api" />
      <apidata name="OtherMember" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_OtherMember" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAssociation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaAssociation.OtherType">
      <topicdata group="api" />
      <apidata name="OtherType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_OtherType" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAssociation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaAssociation.ThisKey">
      <topicdata group="api" />
      <apidata name="ThisKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ThisKey" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAssociation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey">
      <topicdata group="api" />
      <apidata name="ThisKeyIsPrimaryKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ThisKeyIsPrimaryKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAssociation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaAssociation.ThisMember">
      <topicdata group="api" />
      <apidata name="ThisMember" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ThisMember" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaAssociation" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.MetaDataMember">
      <topicdata group="api" />
      <apidata name="MetaDataMember" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.Linq.Mapping.MetaDataMember.#ctor" />
        <element api="M:System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.Association" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.AutoSync" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.CanBeNull" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.DbType" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.DeclaringType" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.Expression" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.IsAssociation" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.IsDeferred" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.IsPersistent" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.IsVersion" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.LoadMethod" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.MappedName" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.Member" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.MemberAccessor" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.Name" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.Ordinal" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.StorageAccessor" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.StorageMember" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.Type" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.MetaDataMember">
      <topicdata name="MetaDataMember" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.MetaDataMember" />
      <apidata name="MetaDataMember" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Linq.Mapping.MetaDataMember">
      <topicdata name="MetaDataMember" group="list" subgroup="Properties" typeTopicId="T:System.Data.Linq.Mapping.MetaDataMember" />
      <apidata name="MetaDataMember" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.Association" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.AutoSync" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.CanBeNull" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.DbType" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.DeclaringType" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.Expression" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.IsAssociation" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.IsDeferred" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.IsPersistent" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.IsVersion" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.LoadMethod" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.MappedName" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.Member" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.MemberAccessor" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.Name" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.Ordinal" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.StorageAccessor" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.StorageMember" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.Type" />
        <element api="P:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaDataMember.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.Association">
      <topicdata group="api" />
      <apidata name="Association" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Association" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaAssociation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.AutoSync">
      <topicdata group="api" />
      <apidata name="AutoSync" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_AutoSync" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.AutoSync" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.CanBeNull">
      <topicdata group="api" />
      <apidata name="CanBeNull" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanBeNull" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.DbType">
      <topicdata group="api" />
      <apidata name="DbType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DbType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.DeclaringType">
      <topicdata group="api" />
      <apidata name="DeclaringType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DeclaringType" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor">
      <topicdata group="api" />
      <apidata name="DeferredSourceAccessor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DeferredSourceAccessor" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaAccessor" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor">
      <topicdata group="api" />
      <apidata name="DeferredValueAccessor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DeferredValueAccessor" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaAccessor" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Expression" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.IsAssociation">
      <topicdata group="api" />
      <apidata name="IsAssociation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsAssociation" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated">
      <topicdata group="api" />
      <apidata name="IsDbGenerated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsDbGenerated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)">
      <topicdata group="api" />
      <apidata name="IsDeclaredBy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.IsDeferred">
      <topicdata group="api" />
      <apidata name="IsDeferred" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsDeferred" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator">
      <topicdata group="api" />
      <apidata name="IsDiscriminator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsDiscriminator" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.IsPersistent">
      <topicdata group="api" />
      <apidata name="IsPersistent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsPersistent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey">
      <topicdata group="api" />
      <apidata name="IsPrimaryKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsPrimaryKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.IsVersion">
      <topicdata group="api" />
      <apidata name="IsVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsVersion" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.LoadMethod">
      <topicdata group="api" />
      <apidata name="LoadMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_LoadMethod" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.MappedName">
      <topicdata group="api" />
      <apidata name="MappedName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_MappedName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.Member">
      <topicdata group="api" />
      <apidata name="Member" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Member" />
      <returns>
        <type api="T:System.Reflection.MemberInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.MemberAccessor">
      <topicdata group="api" />
      <apidata name="MemberAccessor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_MemberAccessor" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaAccessor" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.Ordinal">
      <topicdata group="api" />
      <apidata name="Ordinal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Ordinal" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.StorageAccessor">
      <topicdata group="api" />
      <apidata name="StorageAccessor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_StorageAccessor" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaAccessor" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.StorageMember">
      <topicdata group="api" />
      <apidata name="StorageMember" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_StorageMember" />
      <returns>
        <type api="T:System.Reflection.MemberInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck">
      <topicdata group="api" />
      <apidata name="UpdateCheck" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_UpdateCheck" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.UpdateCheck" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.MetaFunction">
      <topicdata group="api" />
      <apidata name="MetaFunction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.Linq.Mapping.MetaFunction.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Linq.Mapping.MetaFunction.HasMultipleResults" />
        <element api="P:System.Data.Linq.Mapping.MetaFunction.IsComposable" />
        <element api="P:System.Data.Linq.Mapping.MetaFunction.MappedName" />
        <element api="P:System.Data.Linq.Mapping.MetaFunction.Method" />
        <element api="P:System.Data.Linq.Mapping.MetaFunction.Model" />
        <element api="P:System.Data.Linq.Mapping.MetaFunction.Name" />
        <element api="P:System.Data.Linq.Mapping.MetaFunction.Parameters" />
        <element api="P:System.Data.Linq.Mapping.MetaFunction.ResultRowTypes" />
        <element api="P:System.Data.Linq.Mapping.MetaFunction.ReturnParameter" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.MetaFunction">
      <topicdata name="MetaFunction" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.MetaFunction" />
      <apidata name="MetaFunction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaFunction" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Linq.Mapping.MetaFunction">
      <topicdata name="MetaFunction" group="list" subgroup="Properties" typeTopicId="T:System.Data.Linq.Mapping.MetaFunction" />
      <apidata name="MetaFunction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Linq.Mapping.MetaFunction.HasMultipleResults" />
        <element api="P:System.Data.Linq.Mapping.MetaFunction.IsComposable" />
        <element api="P:System.Data.Linq.Mapping.MetaFunction.MappedName" />
        <element api="P:System.Data.Linq.Mapping.MetaFunction.Method" />
        <element api="P:System.Data.Linq.Mapping.MetaFunction.Model" />
        <element api="P:System.Data.Linq.Mapping.MetaFunction.Name" />
        <element api="P:System.Data.Linq.Mapping.MetaFunction.Parameters" />
        <element api="P:System.Data.Linq.Mapping.MetaFunction.ResultRowTypes" />
        <element api="P:System.Data.Linq.Mapping.MetaFunction.ReturnParameter" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaFunction" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaFunction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaFunction" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaFunction.HasMultipleResults">
      <topicdata group="api" />
      <apidata name="HasMultipleResults" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_HasMultipleResults" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaFunction" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaFunction.IsComposable">
      <topicdata group="api" />
      <apidata name="IsComposable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsComposable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaFunction" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaFunction.MappedName">
      <topicdata group="api" />
      <apidata name="MappedName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_MappedName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaFunction" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaFunction.Method">
      <topicdata group="api" />
      <apidata name="Method" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Method" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaFunction" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaFunction.Model">
      <topicdata group="api" />
      <apidata name="Model" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Model" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaModel" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaFunction" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaFunction.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaFunction" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaFunction.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Data.Linq.Mapping.MetaParameter" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaFunction" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaFunction.ResultRowTypes">
      <topicdata group="api" />
      <apidata name="ResultRowTypes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ResultRowTypes" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaFunction" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaFunction.ReturnParameter">
      <topicdata group="api" />
      <apidata name="ReturnParameter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ReturnParameter" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaParameter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaFunction" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.MetaModel">
      <topicdata group="api" />
      <apidata name="MetaModel" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.Linq.Mapping.MetaModel.#ctor" />
        <element api="M:System.Data.Linq.Mapping.MetaModel.GetFunction(System.Reflection.MethodInfo)" />
        <element api="M:System.Data.Linq.Mapping.MetaModel.GetFunctions" />
        <element api="M:System.Data.Linq.Mapping.MetaModel.GetMetaType(System.Type)" />
        <element api="M:System.Data.Linq.Mapping.MetaModel.GetTable(System.Type)" />
        <element api="M:System.Data.Linq.Mapping.MetaModel.GetTables" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Linq.Mapping.MetaModel.ContextType" />
        <element api="P:System.Data.Linq.Mapping.MetaModel.DatabaseName" />
        <element api="P:System.Data.Linq.Mapping.MetaModel.MappingSource" />
        <element api="P:System.Data.Linq.Mapping.MetaModel.ProviderType" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.MetaModel">
      <topicdata name="MetaModel" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.MetaModel" />
      <apidata name="MetaModel" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Linq.Mapping.MetaModel.GetFunction(System.Reflection.MethodInfo)" />
        <element api="M:System.Data.Linq.Mapping.MetaModel.GetFunctions" />
        <element api="M:System.Data.Linq.Mapping.MetaModel.GetMetaType(System.Type)" />
        <element api="M:System.Data.Linq.Mapping.MetaModel.GetTable(System.Type)" />
        <element api="M:System.Data.Linq.Mapping.MetaModel.GetTables" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaModel" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Linq.Mapping.MetaModel">
      <topicdata name="MetaModel" group="list" subgroup="Properties" typeTopicId="T:System.Data.Linq.Mapping.MetaModel" />
      <apidata name="MetaModel" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Linq.Mapping.MetaModel.ContextType" />
        <element api="P:System.Data.Linq.Mapping.MetaModel.DatabaseName" />
        <element api="P:System.Data.Linq.Mapping.MetaModel.MappingSource" />
        <element api="P:System.Data.Linq.Mapping.MetaModel.ProviderType" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaModel" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaModel.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaModel" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaModel.ContextType">
      <topicdata group="api" />
      <apidata name="ContextType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ContextType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaModel" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaModel.DatabaseName">
      <topicdata group="api" />
      <apidata name="DatabaseName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DatabaseName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaModel" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaModel.GetFunction(System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="GetFunction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaModel" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaModel.GetFunctions">
      <topicdata group="api" />
      <apidata name="GetFunctions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Data.Linq.Mapping.MetaFunction" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaModel" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaModel.GetMetaType(System.Type)">
      <topicdata group="api" />
      <apidata name="GetMetaType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaModel" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaModel.GetTable(System.Type)">
      <topicdata group="api" />
      <apidata name="GetTable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="rowType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaModel" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaModel.GetTables">
      <topicdata group="api" />
      <apidata name="GetTables" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Data.Linq.Mapping.MetaTable" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaModel" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaModel.MappingSource">
      <topicdata group="api" />
      <apidata name="MappingSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_MappingSource" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MappingSource" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaModel" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaModel.ProviderType">
      <topicdata group="api" />
      <apidata name="ProviderType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ProviderType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaModel" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.MetaParameter">
      <topicdata group="api" />
      <apidata name="MetaParameter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.Linq.Mapping.MetaParameter.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Linq.Mapping.MetaParameter.DbType" />
        <element api="P:System.Data.Linq.Mapping.MetaParameter.MappedName" />
        <element api="P:System.Data.Linq.Mapping.MetaParameter.Name" />
        <element api="P:System.Data.Linq.Mapping.MetaParameter.Parameter" />
        <element api="P:System.Data.Linq.Mapping.MetaParameter.ParameterType" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.MetaParameter">
      <topicdata name="MetaParameter" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.MetaParameter" />
      <apidata name="MetaParameter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaParameter" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Linq.Mapping.MetaParameter">
      <topicdata name="MetaParameter" group="list" subgroup="Properties" typeTopicId="T:System.Data.Linq.Mapping.MetaParameter" />
      <apidata name="MetaParameter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Linq.Mapping.MetaParameter.DbType" />
        <element api="P:System.Data.Linq.Mapping.MetaParameter.MappedName" />
        <element api="P:System.Data.Linq.Mapping.MetaParameter.Name" />
        <element api="P:System.Data.Linq.Mapping.MetaParameter.Parameter" />
        <element api="P:System.Data.Linq.Mapping.MetaParameter.ParameterType" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaParameter" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaParameter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaParameter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaParameter.DbType">
      <topicdata group="api" />
      <apidata name="DbType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DbType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaParameter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaParameter.MappedName">
      <topicdata group="api" />
      <apidata name="MappedName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_MappedName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaParameter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaParameter.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaParameter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaParameter.Parameter">
      <topicdata group="api" />
      <apidata name="Parameter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Parameter" />
      <returns>
        <type api="T:System.Reflection.ParameterInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaParameter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaParameter.ParameterType">
      <topicdata group="api" />
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ParameterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaParameter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.MetaTable">
      <topicdata group="api" />
      <apidata name="MetaTable" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.Linq.Mapping.MetaTable.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Linq.Mapping.MetaTable.DeleteMethod" />
        <element api="P:System.Data.Linq.Mapping.MetaTable.InsertMethod" />
        <element api="P:System.Data.Linq.Mapping.MetaTable.Model" />
        <element api="P:System.Data.Linq.Mapping.MetaTable.RowType" />
        <element api="P:System.Data.Linq.Mapping.MetaTable.TableName" />
        <element api="P:System.Data.Linq.Mapping.MetaTable.UpdateMethod" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.MetaTable">
      <topicdata name="MetaTable" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.MetaTable" />
      <apidata name="MetaTable" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaTable" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Linq.Mapping.MetaTable">
      <topicdata name="MetaTable" group="list" subgroup="Properties" typeTopicId="T:System.Data.Linq.Mapping.MetaTable" />
      <apidata name="MetaTable" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Linq.Mapping.MetaTable.DeleteMethod" />
        <element api="P:System.Data.Linq.Mapping.MetaTable.InsertMethod" />
        <element api="P:System.Data.Linq.Mapping.MetaTable.Model" />
        <element api="P:System.Data.Linq.Mapping.MetaTable.RowType" />
        <element api="P:System.Data.Linq.Mapping.MetaTable.TableName" />
        <element api="P:System.Data.Linq.Mapping.MetaTable.UpdateMethod" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaTable" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaTable.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaTable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaTable.DeleteMethod">
      <topicdata group="api" />
      <apidata name="DeleteMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DeleteMethod" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaTable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaTable.InsertMethod">
      <topicdata group="api" />
      <apidata name="InsertMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_InsertMethod" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaTable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaTable.Model">
      <topicdata group="api" />
      <apidata name="Model" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Model" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaModel" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaTable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaTable.RowType">
      <topicdata group="api" />
      <apidata name="RowType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RowType" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaTable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaTable.TableName">
      <topicdata group="api" />
      <apidata name="TableName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_TableName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaTable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaTable.UpdateMethod">
      <topicdata group="api" />
      <apidata name="UpdateMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_UpdateMethod" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaTable" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.MetaType">
      <topicdata group="api" />
      <apidata name="MetaType" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.Linq.Mapping.MetaType.#ctor" />
        <element api="M:System.Data.Linq.Mapping.MetaType.GetDataMember(System.Reflection.MemberInfo)" />
        <element api="M:System.Data.Linq.Mapping.MetaType.GetInheritanceType(System.Type)" />
        <element api="M:System.Data.Linq.Mapping.MetaType.GetTypeForInheritanceCode(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Linq.Mapping.MetaType.Associations" />
        <element api="P:System.Data.Linq.Mapping.MetaType.CanInstantiate" />
        <element api="P:System.Data.Linq.Mapping.MetaType.DataMembers" />
        <element api="P:System.Data.Linq.Mapping.MetaType.DBGeneratedIdentityMember" />
        <element api="P:System.Data.Linq.Mapping.MetaType.DerivedTypes" />
        <element api="P:System.Data.Linq.Mapping.MetaType.Discriminator" />
        <element api="P:System.Data.Linq.Mapping.MetaType.HasAnyLoadMethod" />
        <element api="P:System.Data.Linq.Mapping.MetaType.HasAnyValidateMethod" />
        <element api="P:System.Data.Linq.Mapping.MetaType.HasInheritance" />
        <element api="P:System.Data.Linq.Mapping.MetaType.HasInheritanceCode" />
        <element api="P:System.Data.Linq.Mapping.MetaType.HasUpdateCheck" />
        <element api="P:System.Data.Linq.Mapping.MetaType.IdentityMembers" />
        <element api="P:System.Data.Linq.Mapping.MetaType.InheritanceBase" />
        <element api="P:System.Data.Linq.Mapping.MetaType.InheritanceCode" />
        <element api="P:System.Data.Linq.Mapping.MetaType.InheritanceDefault" />
        <element api="P:System.Data.Linq.Mapping.MetaType.InheritanceRoot" />
        <element api="P:System.Data.Linq.Mapping.MetaType.InheritanceTypes" />
        <element api="P:System.Data.Linq.Mapping.MetaType.IsEntity" />
        <element api="P:System.Data.Linq.Mapping.MetaType.IsInheritanceDefault" />
        <element api="P:System.Data.Linq.Mapping.MetaType.Model" />
        <element api="P:System.Data.Linq.Mapping.MetaType.Name" />
        <element api="P:System.Data.Linq.Mapping.MetaType.OnLoadedMethod" />
        <element api="P:System.Data.Linq.Mapping.MetaType.OnValidateMethod" />
        <element api="P:System.Data.Linq.Mapping.MetaType.PersistentDataMembers" />
        <element api="P:System.Data.Linq.Mapping.MetaType.Table" />
        <element api="P:System.Data.Linq.Mapping.MetaType.Type" />
        <element api="P:System.Data.Linq.Mapping.MetaType.VersionMember" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.MetaType">
      <topicdata name="MetaType" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.MetaType" />
      <apidata name="MetaType" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Linq.Mapping.MetaType.GetDataMember(System.Reflection.MemberInfo)" />
        <element api="M:System.Data.Linq.Mapping.MetaType.GetInheritanceType(System.Type)" />
        <element api="M:System.Data.Linq.Mapping.MetaType.GetTypeForInheritanceCode(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Linq.Mapping.MetaType">
      <topicdata name="MetaType" group="list" subgroup="Properties" typeTopicId="T:System.Data.Linq.Mapping.MetaType" />
      <apidata name="MetaType" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Linq.Mapping.MetaType.Associations" />
        <element api="P:System.Data.Linq.Mapping.MetaType.CanInstantiate" />
        <element api="P:System.Data.Linq.Mapping.MetaType.DataMembers" />
        <element api="P:System.Data.Linq.Mapping.MetaType.DBGeneratedIdentityMember" />
        <element api="P:System.Data.Linq.Mapping.MetaType.DerivedTypes" />
        <element api="P:System.Data.Linq.Mapping.MetaType.Discriminator" />
        <element api="P:System.Data.Linq.Mapping.MetaType.HasAnyLoadMethod" />
        <element api="P:System.Data.Linq.Mapping.MetaType.HasAnyValidateMethod" />
        <element api="P:System.Data.Linq.Mapping.MetaType.HasInheritance" />
        <element api="P:System.Data.Linq.Mapping.MetaType.HasInheritanceCode" />
        <element api="P:System.Data.Linq.Mapping.MetaType.HasUpdateCheck" />
        <element api="P:System.Data.Linq.Mapping.MetaType.IdentityMembers" />
        <element api="P:System.Data.Linq.Mapping.MetaType.InheritanceBase" />
        <element api="P:System.Data.Linq.Mapping.MetaType.InheritanceCode" />
        <element api="P:System.Data.Linq.Mapping.MetaType.InheritanceDefault" />
        <element api="P:System.Data.Linq.Mapping.MetaType.InheritanceRoot" />
        <element api="P:System.Data.Linq.Mapping.MetaType.InheritanceTypes" />
        <element api="P:System.Data.Linq.Mapping.MetaType.IsEntity" />
        <element api="P:System.Data.Linq.Mapping.MetaType.IsInheritanceDefault" />
        <element api="P:System.Data.Linq.Mapping.MetaType.Model" />
        <element api="P:System.Data.Linq.Mapping.MetaType.Name" />
        <element api="P:System.Data.Linq.Mapping.MetaType.OnLoadedMethod" />
        <element api="P:System.Data.Linq.Mapping.MetaType.OnValidateMethod" />
        <element api="P:System.Data.Linq.Mapping.MetaType.PersistentDataMembers" />
        <element api="P:System.Data.Linq.Mapping.MetaType.Table" />
        <element api="P:System.Data.Linq.Mapping.MetaType.Type" />
        <element api="P:System.Data.Linq.Mapping.MetaType.VersionMember" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaType.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.Associations">
      <topicdata group="api" />
      <apidata name="Associations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Associations" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Data.Linq.Mapping.MetaAssociation" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.CanInstantiate">
      <topicdata group="api" />
      <apidata name="CanInstantiate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanInstantiate" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.DataMembers">
      <topicdata group="api" />
      <apidata name="DataMembers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DataMembers" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.DBGeneratedIdentityMember">
      <topicdata group="api" />
      <apidata name="DBGeneratedIdentityMember" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DBGeneratedIdentityMember" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.DerivedTypes">
      <topicdata group="api" />
      <apidata name="DerivedTypes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DerivedTypes" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.Discriminator">
      <topicdata group="api" />
      <apidata name="Discriminator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Discriminator" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaType.GetDataMember(System.Reflection.MemberInfo)">
      <topicdata group="api" />
      <apidata name="GetDataMember" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaType.GetInheritanceType(System.Type)">
      <topicdata group="api" />
      <apidata name="GetInheritanceType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.MetaType.GetTypeForInheritanceCode(System.Object)">
      <topicdata group="api" />
      <apidata name="GetTypeForInheritanceCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="code">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.HasAnyLoadMethod">
      <topicdata group="api" />
      <apidata name="HasAnyLoadMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_HasAnyLoadMethod" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.HasAnyValidateMethod">
      <topicdata group="api" />
      <apidata name="HasAnyValidateMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_HasAnyValidateMethod" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.HasInheritance">
      <topicdata group="api" />
      <apidata name="HasInheritance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_HasInheritance" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.HasInheritanceCode">
      <topicdata group="api" />
      <apidata name="HasInheritanceCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_HasInheritanceCode" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.HasUpdateCheck">
      <topicdata group="api" />
      <apidata name="HasUpdateCheck" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_HasUpdateCheck" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.IdentityMembers">
      <topicdata group="api" />
      <apidata name="IdentityMembers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IdentityMembers" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.InheritanceBase">
      <topicdata group="api" />
      <apidata name="InheritanceBase" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_InheritanceBase" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.InheritanceCode">
      <topicdata group="api" />
      <apidata name="InheritanceCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_InheritanceCode" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.InheritanceDefault">
      <topicdata group="api" />
      <apidata name="InheritanceDefault" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_InheritanceDefault" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.InheritanceRoot">
      <topicdata group="api" />
      <apidata name="InheritanceRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_InheritanceRoot" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.InheritanceTypes">
      <topicdata group="api" />
      <apidata name="InheritanceTypes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_InheritanceTypes" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.IsEntity">
      <topicdata group="api" />
      <apidata name="IsEntity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsEntity" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.IsInheritanceDefault">
      <topicdata group="api" />
      <apidata name="IsInheritanceDefault" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsInheritanceDefault" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.Model">
      <topicdata group="api" />
      <apidata name="Model" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Model" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaModel" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.OnLoadedMethod">
      <topicdata group="api" />
      <apidata name="OnLoadedMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_OnLoadedMethod" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.OnValidateMethod">
      <topicdata group="api" />
      <apidata name="OnValidateMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_OnValidateMethod" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.PersistentDataMembers">
      <topicdata group="api" />
      <apidata name="PersistentDataMembers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_PersistentDataMembers" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.Table">
      <topicdata group="api" />
      <apidata name="Table" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Table" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.MetaType.VersionMember">
      <topicdata group="api" />
      <apidata name="VersionMember" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_VersionMember" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.MetaDataMember" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.MetaType" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.ParameterAttribute">
      <topicdata group="api" />
      <apidata name="ParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.ParameterAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Data.Linq.Mapping.ParameterAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Linq.Mapping.ParameterAttribute.DbType" />
        <element api="P:System.Data.Linq.Mapping.ParameterAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Parameter" />
              <field name="ReturnValue" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.ParameterAttribute">
      <topicdata name="ParameterAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.ParameterAttribute" />
      <apidata name="ParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.ParameterAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ParameterAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Linq.Mapping.ParameterAttribute">
      <topicdata name="ParameterAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Linq.Mapping.ParameterAttribute" />
      <apidata name="ParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.ParameterAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Linq.Mapping.ParameterAttribute.DbType" />
        <element api="P:System.Data.Linq.Mapping.ParameterAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ParameterAttribute" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.ParameterAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ParameterAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.ParameterAttribute.DbType">
      <topicdata group="api" />
      <apidata name="DbType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DbType" />
      <setter name="set_DbType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ParameterAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.ParameterAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ParameterAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.ProviderAttribute">
      <topicdata group="api" />
      <apidata name="ProviderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.ProviderAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.Data.Linq.Mapping.ProviderAttribute.#ctor">
          <element api="M:System.Data.Linq.Mapping.ProviderAttribute.#ctor" />
          <element api="M:System.Data.Linq.Mapping.ProviderAttribute.#ctor(System.Type)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Linq.Mapping.ProviderAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.ProviderAttribute">
      <topicdata name="ProviderAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.ProviderAttribute" />
      <apidata name="ProviderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.ProviderAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ProviderAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Linq.Mapping.ProviderAttribute">
      <topicdata name="ProviderAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Linq.Mapping.ProviderAttribute" />
      <apidata name="ProviderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.ProviderAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Linq.Mapping.ProviderAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ProviderAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Data.Linq.Mapping.ProviderAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.Linq.Mapping.ProviderAttribute.#ctor" />
        <element api="M:System.Data.Linq.Mapping.ProviderAttribute.#ctor(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.ProviderAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.Linq.Mapping.ProviderAttribute.#ctor" />
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.ProviderAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.Linq.Mapping.ProviderAttribute.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.ProviderAttribute.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.ResultTypeAttribute">
      <topicdata group="api" />
      <apidata name="ResultTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Data.Linq.Mapping.ResultTypeAttribute.#ctor(System.Type)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Linq.Mapping.ResultTypeAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.ResultTypeAttribute">
      <topicdata name="ResultTypeAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.ResultTypeAttribute" />
      <apidata name="ResultTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ResultTypeAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Linq.Mapping.ResultTypeAttribute">
      <topicdata name="ResultTypeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Linq.Mapping.ResultTypeAttribute" />
      <apidata name="ResultTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Linq.Mapping.ResultTypeAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ResultTypeAttribute" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.ResultTypeAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ResultTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.ResultTypeAttribute.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.ResultTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.TableAttribute">
      <topicdata group="api" />
      <apidata name="TableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.TableAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Data.Linq.Mapping.TableAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Linq.Mapping.TableAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.TableAttribute">
      <topicdata name="TableAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.TableAttribute" />
      <apidata name="TableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.TableAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.TableAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Linq.Mapping.TableAttribute">
      <topicdata name="TableAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Linq.Mapping.TableAttribute" />
      <apidata name="TableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Linq.Mapping.TableAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Linq.Mapping.TableAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.TableAttribute" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.TableAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.TableAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Linq.Mapping.TableAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.TableAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.UpdateCheck">
      <topicdata group="api" />
      <apidata name="UpdateCheck" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.Linq.Mapping.UpdateCheck.Always" />
        <element api="F:System.Data.Linq.Mapping.UpdateCheck.Never" />
        <element api="F:System.Data.Linq.Mapping.UpdateCheck.WhenChanged" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
    </api>
    <api id="F:System.Data.Linq.Mapping.UpdateCheck.Always">
      <topicdata group="api" notopic="" />
      <apidata name="Always" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.UpdateCheck" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.UpdateCheck" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Linq.Mapping.UpdateCheck.Never">
      <topicdata group="api" notopic="" />
      <apidata name="Never" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.UpdateCheck" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.UpdateCheck" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Linq.Mapping.UpdateCheck.WhenChanged">
      <topicdata group="api" notopic="" />
      <apidata name="WhenChanged" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Linq.Mapping.UpdateCheck" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.UpdateCheck" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.Linq.Mapping.XmlMappingSource">
      <topicdata group="api" />
      <apidata name="XmlMappingSource" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.Linq.Mapping.MappingSource" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.Linq.Mapping.MappingSource.GetModel(System.Type)" />
        <element api="M:System.Data.Linq.Mapping.XmlMappingSource.FromReader(System.Xml.XmlReader)" />
        <element api="M:System.Data.Linq.Mapping.XmlMappingSource.FromStream(System.IO.Stream)" />
        <element api="M:System.Data.Linq.Mapping.XmlMappingSource.FromUrl(System.String)" />
        <element api="M:System.Data.Linq.Mapping.XmlMappingSource.FromXml(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Linq.Mapping.XmlMappingSource">
      <topicdata name="XmlMappingSource" group="list" subgroup="Methods" typeTopicId="T:System.Data.Linq.Mapping.XmlMappingSource" />
      <apidata name="XmlMappingSource" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Linq.Mapping.MappingSource.GetModel(System.Type)" />
        <element api="M:System.Data.Linq.Mapping.XmlMappingSource.FromReader(System.Xml.XmlReader)" />
        <element api="M:System.Data.Linq.Mapping.XmlMappingSource.FromStream(System.IO.Stream)" />
        <element api="M:System.Data.Linq.Mapping.XmlMappingSource.FromUrl(System.String)" />
        <element api="M:System.Data.Linq.Mapping.XmlMappingSource.FromXml(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.XmlMappingSource" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.XmlMappingSource.FromReader(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="FromReader" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Linq.Mapping.XmlMappingSource" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.XmlMappingSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.XmlMappingSource.FromStream(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="FromStream" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Linq.Mapping.XmlMappingSource" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.XmlMappingSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.XmlMappingSource.FromUrl(System.String)">
      <topicdata group="api" />
      <apidata name="FromUrl" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="url">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Linq.Mapping.XmlMappingSource" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.XmlMappingSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Linq.Mapping.XmlMappingSource.FromXml(System.String)">
      <topicdata group="api" />
      <apidata name="FromXml" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xml">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Linq.Mapping.XmlMappingSource" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Linq" module="System.Data.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Linq.Mapping" />
        <type api="T:System.Data.Linq.Mapping.XmlMappingSource" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>